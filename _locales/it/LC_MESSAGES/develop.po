# SOME DESCRIPTIVE TITLE.
# Copyright (C) The Plone Foundation
# This file is distributed under the same license as the Plone Documentation package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: plone-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-05-29 14:19+0200\n"
"PO-Revision-Date: 2014-05-29 13:28+0000\n"
"Last-Translator: Giacomo <giacomo.spettoli@gmail.com>\n"
"Language-Team: Italian (http://www.transifex.com/projects/p/plone-doc/language/it/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: it\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

# 60a61d3024fd4739b6556a5fee1a5f8c
#: ../develop/addons/ajax.rst:3
msgid "AJAX"
msgstr ""

# 833a19904cad49adb25c61b1101bde4e
# 76d25ed1b1ee413b980db3495089dc30
# 7984bf7976d44605a872d5fa48022ae3
# 3c6fd15424b344499436a9bb061d941b
# a46a770ae34547e78c66fbcf2f857541
# c25afc2bd8bf4d8a9b66e7ec9f5d98df
# a426a799f123400b9a4b26ca7d8369a5
# 4a81760180804b0c83de516d7f0dd169
# 2a7643b014a64737add06a606e4e71b7
# 86de27a8fafc4fd88f5564d3b158a005
# 088cc4bfa55d44028a8f5c8ab91334e5
# c071f420507646498e5caa36b0f70d90
# 03185676b406415194b05336b5420208
# 4fdcaa4476f5402591102057da4db970
# ff8051af7bae4f219fd1b2f333d87b84
# 540f11dedf4c414e9a9db58d4dbea3bc
# 81ccf27c937d4020a4ee331b97ef3411
# b3a112f4252940fc97971b62ae900ec1
# 1214b97efe2a4ee390efa4876563b719
# f2f50a2921e24e78ac490f5b724ed42c
# f572cc93c3e54022a46e5a1516cd275d
# ce5f19f2bb4b4094a250739a6ee2c0bd
# 4b9e8a34fca84129a75d430771aa975f
# 1c3f5f9f1e3c4181ac19fb8af25ebe97
# 8311248590d64b2b866ac488b07eb4f7
# 42790c91be504a02ab137a42810cb7c3
# 41dd39f1d07f4b63b9054be4d3209c92
# 890e135c411b4920831387c39ef80039
# c82b1de4c4d74d8fb0be566f8431e69f
# ee79e6b4a57a4f3183c692b93f99823d
# 0c677a550928462e863d4d91e28725b1
# b6b80d2a77924138bef4754401a4e900
# 080a94714e174b7784b8275e62d6d723
# 9e07c975d0b0401ca1aa18a4926fdffe
# 70afbf39f36f4be9b8db8c526e3a7b46
# e271c27fcaeb4b5692fa455e9a56d588
# adb557e3bc7c407cb03c55a87884718b
# cc05aa2cc0df463dae98a6d9ebf7fca0
# 797116d6276c46a3b8dd392195a82b22
# 4451465891844adc8520717c94a3372a
# 90b18561c03e44ec85149298c31257ac
# 5dc05a156803457d8e046b7b2910770f
# 2b49264c3b8d4299847d0ddf47a9970b
# a58db7977488495a9b6c7812c52707d9
# 03c21e2e0a454e139d1b8b7813133458
# d94d79af52fe45eda872b6104832522c
# 4f7bb05f485e4d748ac3f182bb9d0468
# 956d1033664c4df098498f5b2b5c2966
# 6ede404c70e644c4818622e1edbc9308
# 34426ede16654a0da491aec71d12e9b5
# a252ceed4a1843e9b05540aab3eae57a
# 50399b2b7652408192f4e9666bc9433d
# 92ab4bd23528469bb10e79d77427bd81
# 19e8a01b75354f70a971145fd6acacc7
# 9dbe9287185c4ada8292f7b54dc32a3c
# 03cf8ffed2584185aeae3e8eec1c2b04
# 2328ecfad9134ff6a4f4f24f4cdb1b08
# 42c1092e171a45f5bce75c806313c8fc
# bb17f757bc6e421ba89fe3b4ed2ecccf
# 4839960e08f34515bf00561762fae434
# 8c364419211941dab2e245dbc21e4e02
# 2ad03912cd524ecdbcc2d2b175465ea2
# 9c111691cf664e8b9d32e3d1995784f9
# 727d0f93469e465ea42cab8a3581f13e
# 983b418e891f4d15b75e85e8ddcfae89
# e35af51af2a74719bde9f7721aeb93a7
# f24f2855812545238548bc6472b1dc6b
# bbdfcecf2d35405d8f54e43fdc2d7ade
# 2623e24d260f45efabc50d3cec4b3f66
# 268d4e6a4f784930a830214f11555efe
# 7a73c59109bc43ca8926dd98e7e8df00
# 8e9d12ebe29d48aaae08953f17a53d78
# 772b898fcfc04c6f985fa81add346a41
# e6bb6b54c21e4d7c8c063d88536cdbf6
# e2fa51f02fb34047bb940cbd1097c05b
# 8552aea8ed4d4e058b37c3d3186194c8
# c11242d4b4ef4b2d9e9733d09269b6fc
# e8d184ed518f4896a83eb1758492c212
# af5b2d78dae14308a329b45da86f57db
# a4878e103c7b446bb4510ba6cd777315
# c34b2fc10fe84f9798d938df210b2d38
# ff7cd9c84bf740e6b4f128fda7782a54
# 72ce203cb2814642ba57a5a477689777
# cc9a724197f34d6c9b3db12d73427b2f
# 3d35726164594d9e9815cd8a12080894
# 0bc11534c2b04f1fa4e06162058ceec8
# b00972011b43444abcee992b072c231d
# 25ce1cc447de48ec9ccf91f65fcc927c
# 24d39238007f4402bdad60a25c48b2fc
# 38db1045fee348e0ae0b6956145943f1
# 45e347676e2d44819c6218710636cdf8
# 13ad72f7226c4644809d98ab3a9f9339
# 1b59747fe1ee4788aa971344de3d9985
# a82f4752154b45c2896d40b4768e0f2d
# 32fffe12916948968c466ae519165592
# 3c8c8114315b4bbdb5d60a5e83a864fe
# 95bb687bfe0b424b819ff9229d987b16
# 7ecec88c6bca4f4586c54c3222b93f24
# 02b712aad0884198a3da609266076db6
# 5e187ca088f549218c6b014fa5a2e82f
# a5afef6bd8c945328f2d11c5c35b3dde
# 28dcddaae3b44d649c7dd58c9bdf6df3
# 0c6d6e899fb941789389debb9a75b8a8
# e2fb750e0f58414a902897b2e4ec0aa7
# 73c2d20d4b1a4b58a457bd02f2d65b7f
# 305e008b4f234b1b91d091a90fd8e53a
# 0e4ef6d829c04b31a8fa5f47de8274b8
# 1439a62838704d7c944fcf86a65eb9e5
# 726374b072fa45c78f0a410045f3d9b3
#: ../develop/addons/ajax.rst:5 ../develop/addons/components/events.rst:5
#: ../develop/addons/components/genericsetup.rst:5
#: ../develop/addons/components/grok.rst:5
#: ../develop/addons/components/utilities.rst:5
#: ../develop/addons/components/zcml.rst:5
#: ../develop/addons/helloworld/environment/index.rst:5
#: ../develop/addons/helloworld/environment/plone.rst:5
#: ../develop/addons/helloworld/environment/python.rst:5
#: ../develop/addons/helloworld/environment/virtualenv.rst:5
#: ../develop/addons/helloworld/extend/addon.rst:5
#: ../develop/addons/helloworld/extend/content.rst:5
#: ../develop/addons/helloworld/extend/files.rst:5
#: ../develop/addons/helloworld/extend/form.rst:5
#: ../develop/addons/helloworld/extend/index.rst:5
#: ../develop/addons/helloworld/extend/view.rst:5
#: ../develop/addons/helloworld/index.rst:5
#: ../develop/addons/helloworld/intro.rst:5
#: ../develop/addons/helloworld/todo.rst:5 ../develop/addons/javascript.rst:5
#: ../develop/addons/javascript_standards.rst:5 ../develop/addons/paste.rst:5
#: ../develop/import/index.rst:5
#: ../develop/plone/content/archetypes/archetypes_references.rst:5
#: ../develop/plone/content/archetypes/converting-content-types.rst:5
#: ../develop/plone/content/archetypes/fields.rst:5
#: ../develop/plone/content/archetypes/files.rst:5
#: ../develop/plone/content/archetypes/references.rst:5
#: ../develop/plone/content/archetypes/templates.rst:5
#: ../develop/plone/content/creating.rst:5
#: ../develop/plone/content/deleting.rst:5
#: ../develop/plone/content/dexterity.rst:5
#: ../develop/plone/content/dynamic_views.rst:7
#: ../develop/plone/content/events.rst:5
#: ../develop/plone/content/importexport.rst:5
#: ../develop/plone/content/listing.rst:5
#: ../develop/plone/content/ownership.rst:7
#: ../develop/plone/content/rename.rst:5
#: ../develop/plone/content/timestamps.rst:5
#: ../develop/plone/content/types.rst:5 ../develop/plone/content/uid.rst:5
#: ../develop/plone/content/workflow.rst:5 ../develop/plone/forms/files.rst:5
#: ../develop/plone/forms/manual.rst:5
#: ../develop/plone/forms/ploneformgen.rst:5
#: ../develop/plone/forms/schemas.rst:5 ../develop/plone/forms/schemas.rst:164
#: ../develop/plone/forms/vocabularies.rst:5
#: ../develop/plone/forms/wysiwyg.rst:5 ../develop/plone/forms/z3c.form.rst:5
#: ../develop/plone/functionality/actions.rst:5
#: ../develop/plone/functionality/breadcrumbs.rst:5
#: ../develop/plone/functionality/collections.rst:5
#: ../develop/plone/functionality/controlpanel.rst:5
#: ../develop/plone/functionality/discussion.rst:5
#: ../develop/plone/functionality/expressions.rst:5
#: ../develop/plone/functionality/index.rst:5
#: ../develop/plone/functionality/portlets.rst:5
#: ../develop/plone/functionality/rss.rst:5
#: ../develop/plone/getstarted/debug_mode.rst:5
#: ../develop/plone/getstarted/python.rst:5 ../develop/plone/i18n/cache.rst:5
#: ../develop/plone/i18n/contribute_to_translations.rst:5
#: ../develop/plone/i18n/internationalisation.rst:5
#: ../develop/plone/i18n/language.rst:5
#: ../develop/plone/i18n/translating_content.rst:5
#: ../develop/plone/images/content.rst:5
#: ../develop/plone/images/templates.rst:5
#: ../develop/plone/members/member_basics.rst:5
#: ../develop/plone/members/member_profile.rst:7
#: ../develop/plone/members/membrane.rst:5
#: ../develop/plone/members/sharing_tab.rst:12
#: ../develop/plone/misc/annotations.rst:9
#: ../develop/plone/misc/asyncronoustasks.rst:6
#: ../develop/plone/misc/commandline.rst:5
#: ../develop/plone/misc/datetime.rst:5 ../develop/plone/misc/email.rst:5
#: ../develop/plone/misc/facebook.rst:5 ../develop/plone/misc/flowplayer.rst:5
#: ../develop/plone/misc/html.rst:5 ../develop/plone/misc/navigationtree.rst:7
#: ../develop/plone/misc/normalizing_ids.rst:5
#: ../develop/plone/misc/paster_templates.rst:5
#: ../develop/plone/misc/seo.rst:5 ../develop/plone/misc/slideshow.rst:5
#: ../develop/plone/misc/sql.rst:5 ../develop/plone/misc/upgrade.rst:5
#: ../develop/plone/persistency/database.rst:5
#: ../develop/plone/persistency/persistent.rst:5
#: ../develop/plone/persistency/storage.rst:5
#: ../develop/plone/searching_and_indexing/catalog.rst:5
#: ../develop/plone/searching_and_indexing/indexing.rst:5
#: ../develop/plone/searching_and_indexing/query.rst:5
#: ../develop/plone/searching_and_indexing/query.rst:119
#: ../develop/plone/security/local_roles.rst:5
#: ../develop/plone/security/permission_lists.rst:5
#: ../develop/plone/security/permissions.rst:5
#: ../develop/plone/security/sandboxing.rst:5
#: ../develop/plone/security/selinux.rst:5
#: ../develop/plone/serving/http_request_and_response.rst:5
#: ../develop/plone/serving/traversing.rst:5
#: ../develop/plone/serving/webdav.rst:5 ../develop/plone/serving/xmlrpc.rst:7
#: ../develop/plone/sessions/cookies.rst:5
#: ../develop/plone/sessions/login.rst:5
#: ../develop/plone/sessions/session_variables.rst:5
#: ../develop/plone/views/browserviews.rst:5
#: ../develop/plone/views/layers.rst:5 ../develop/plone/views/viewlets.rst:5
msgid "Description"
msgstr ""

# da3e81ee1d7a45b986b769af356b5d8f
#: ../develop/addons/ajax.rst:7
msgid "Creating AJAX programming logic in Plone."
msgstr ""

# e1f9b59cda454a67a27baa541d37fccd
# 1db0a2703a9341b1adeca01405ca2bb2
# eb1fd1629c934ddfab270ec644a6d4e6
# da9547d46dfd4ad8aa7fc233a5b8b906
# 7ad160ae9cbf4aeea87db36ee75bca4b
# d30469251d7c46ab928683f728c7bdcf
# 505b7e87ba5d42f7a3a5979a282df5a5
# 2809444ca7fe4d27b85d2bac20691d68
# d8a4cc7972d84451a4be8e6546f37c0e
# 796b8c19b47f40f0a0e7fd1283e11983
# 732c9b1094f545448572b758b8311b50
# fae18eb6e8124d8b8675898a3b7c4027
# a4e29c3eaf7b450d913272b320fc801b
# 74c2b105aec24fe888c5b38e0c9b43b0
# c8d1f1c69345444783cc6541d23f1b20
# 4ea15dd9778f4ef5bd8297af6a31f251
# cfd05f894c604dfc9eaab4165c985daf
# 152bc1218a9d4c25b4f96547318ef958
# 75dc75accc0a473899bbfdd399f0857f
# e8d43cb225ee4a639f97709921d7c622
# dc0810ec84f54e5cb2bbf37d870657b0
# 0c443fc2b01d4939b79ff6958ba172cd
# d02b19de66ec40b4ad266b4791ec17eb
# 78282b011d1843cb91cbdf493f1398c7
# 317fffad8d21434586a063936185bcd9
# 7e757bc6cd2d46c3ab18d290ff722e38
# 9eef9401110a4340aa3540c355e9adc1
# fa476542f9f44bccb06d0b1a744c16fe
# 9e6ec8b09fc94eb59479f49d5cb7bf5a
# a137c38804f9477488ce113873627b0e
# 14ca0fc2262646e6b3585f147665cd6a
# 3f4667d81b264f2a8920b7ac76bf385e
# 0a376c4c4cd34e85b8b954c0a8d85f3b
# 1b2af266e44740c0850219a0da4a96f5
# 6c6fc55538c949a1946e48f3ae0e4e21
# 0fbfd3902ee5419e8b808f511a459d34
# 1888b17f6454418794101631a270610a
# 87be304e7a984c7db55b1209394f3e57
# ab4f2da8c3c7441b95a96fea25a8eee1
# 8ae24836a4d8450a9e2189cf23e04f8b
# b1c1087e5ab145888d946e188c2312ac
# 65239123209c4bfaa0fcffeadc3e97ea
# c0d0ba3685f349a7b66700fb018cf688
# 047123871ff34e378b2428fbd9e98d8b
# 2fd9bf41e0a64acca02b3486f17cbf02
# 131f930e611e42968b7f4ddcc0b140cf
# a666dcbf40304f619404edd640269138
# 8d10f788216840f88c212178f0d57476
# 4451bfedb96a4089987402f12c635bfd
# d2ee25d409b64678a062c59a3e7d6283
# 8104bb6e632447fb8320d1776dc371e8
# d39517ecca444fb69d9af6e1ec993c0a
# 0a43930c9426460daeabb76277c6ac5e
# df8230a128654ddbb898a1bdf3fbcc0c
# 51b3a35800df498b8c873d2a3b75fc04
# 1f5033b5557f4bee90449b6117037791
# cefa73d94b07406688aa9af2d7f29fde
# 59545510c28443d0abc6eae72d3c492c
# 82e10f4110eb4e1c9efd5697f76a222a
# 2771a55f81be4b44ad32aedbdb0d511f
# 00a11ecbd82443dd918a186a63ba48b7
# 5c39dd1838154f4da31e961fe8d53230
# f9c33e3647124e58ba1ff9c0c8b6b441
# e178d70d999443dda0270f5b55aa7050
# ca76eac4680647cbac20629e8eabf82b
# 22cad4625dc640e48ae9201a48ad7d7a
# 94006dc25ee64420b3cccb6438570416
# 0caf3ba0b69e4a79ac1bffc72660aba5
# 9cabb75840cf4ba2a2a6f8ffca92afef
# 63e4e372dbf54d9a81ca4bb09e4b41f1
# 7aae408f6c91482d87ee8b37cc93562b
# e4c67d8705d446858b1c981ea2429fce
# 4cbd98890236472ea64a00d5bb0d1303
# 35cad7bc921b4069ab0f26a41f333c89
# a3a7f77e3918427a8aba73994d7b31ac
# 29196a15e02c4f6a9cf60b4fa0bbf9b3
# 43236e6fefdc41bd8df7190ba52cd377
# 929040e450c6406ea3a42dc6f1d3f91d
# 9e9efda66658407b84b3412191ac361d
# 29f7b3ec57b04d72a85de1ec667e216e
# 33613d7dde8d42d0965e3ac48419ac03
# 275510b6faab4cb39ff37aadffaaac70
# be538df53ede42b884797c25c7bbcdec
# 26700a6e2af04c6f826c6cb81be5f344
# 1d255a7e2e83495199974bfefdf301f4
# 14e45b768c9444eeabf341369302c687
# 3032e3ab909949dfa693c1c2af71675e
# e63ab768ee484e46a8a3af10ad66bc61
# 5f9de6c52b024813932d44259dffc157
# 359c0b7179854051a79f12ab5bfe913c
# 6983f25c5b414caba3b831b9004db636
# aef0c18c61ea447098736f9de8776780
# 15896e98a6ef48b1912be4c6239df7f5
# a8216c15c4e744c1948f2180ac6822b0
# c9745b1cbb8b4db487c42acafefda77d
# 91f2a88a582845249a9fc4f82b733291
# bbf764312cca4e208cce079866ed0e05
# f4a05dbff13c4ab5827f0692587d177d
# 52f7693ad20140dd8d19f5bbf0c28087
# 406b92fa060e4aa19a2d61c5ec3edca0
# 79af1296a0974b3f9a0d5a55eceb405b
# 604ba04f0a004e5991c40baf49e2eba3
# 0cdd5131af4a46c6bf4ce0532261f79c
# 47fdbc947c194ab48cb04cd62952621f
#: ../develop/addons/ajax.rst:12 ../develop/addons/components/adapters.rst:8
#: ../develop/addons/components/customizing_plone.rst:8
#: ../develop/addons/components/events.rst:13
#: ../develop/addons/components/genericsetup.rst:14
#: ../develop/addons/components/grok.rst:14
#: ../develop/addons/components/index.rst:6
#: ../develop/addons/components/interfaces.rst:8
#: ../develop/addons/components/utilities.rst:13
#: ../develop/addons/components/zcml.rst:12
#: ../develop/addons/helloworld/intro.rst:3
#: ../develop/addons/javascript.rst:12
#: ../develop/addons/javascript_standards.rst:12
#: ../develop/addons/paste.rst:13
#: ../develop/addons/schema-driven-forms/intro.rst:2
#: ../develop/import/index.rst:12 ../develop/plone-coredev/index.rst:8
#: ../develop/plone/content/archetypes/archetypes_references.rst:13
#: ../develop/plone/content/archetypes/fields.rst:12
#: ../develop/plone/content/archetypes/references.rst:14
#: ../develop/plone/content/archetypes/templates.rst:12
#: ../develop/plone/content/archetypes/validators.rst:8
#: ../develop/plone/content/deleting.rst:13
#: ../develop/plone/content/dexterity.rst:12
#: ../develop/plone/content/dynamic_views.rst:12
#: ../develop/plone/content/events.rst:12
#: ../develop/plone/content/history.rst:8
#: ../develop/plone/content/importexport.rst:12
#: ../develop/plone/content/listing.rst:12
#: ../develop/plone/content/manipulating.rst:8
#: ../develop/plone/content/ownership.rst:12
#: ../develop/plone/content/rename.rst:12
#: ../develop/plone/content/timestamps.rst:13
#: ../develop/plone/content/types.rst:12 ../develop/plone/content/uid.rst:13
#: ../develop/plone/content/workflow.rst:12
#: ../develop/plone/forms/files.rst:13 ../develop/plone/forms/manual.rst:10
#: ../develop/plone/forms/ploneformgen.rst:10
#: ../develop/plone/forms/schemas.rst:13
#: ../develop/plone/forms/vocabularies.rst:14
#: ../develop/plone/forms/wysiwyg.rst:12
#: ../develop/plone/forms/z3c.form.rst:14
#: ../develop/plone/forms/z3c.form.rst:2145
#: ../develop/plone/functionality/actions.rst:12
#: ../develop/plone/functionality/collections.rst:12
#: ../develop/plone/functionality/contactform.rst:8
#: ../develop/plone/functionality/controlpanel.rst:13
#: ../develop/plone/functionality/dashboard.rst:8
#: ../develop/plone/functionality/discussion.rst:13
#: ../develop/plone/functionality/expressions.rst:15
#: ../develop/plone/functionality/portlets.rst:12
#: ../develop/plone/functionality/rss.rst:12
#: ../develop/plone/functionality/sitemap.rst:8
#: ../develop/plone/getstarted/debug_mode.rst:13
#: ../develop/plone/getstarted/index.rst:10
#: ../develop/plone/getstarted/python.rst:10
#: ../develop/plone/i18n/cache.rst:12
#: ../develop/plone/i18n/contribute_to_translations.rst:12
#: ../develop/plone/i18n/internationalisation.rst:13
#: ../develop/plone/i18n/language.rst:12
#: ../develop/plone/i18n/translating_content.rst:13
#: ../develop/plone/images/content.rst:12
#: ../develop/plone/members/member_basics.rst:12
#: ../develop/plone/members/member_profile.rst:12
#: ../develop/plone/members/membrane.rst:16
#: ../develop/plone/members/sharing_tab.rst:19
#: ../develop/plone/misc/annotations.rst:17
#: ../develop/plone/misc/commandline.rst:13
#: ../develop/plone/misc/context.rst:8 ../develop/plone/misc/datetime.rst:12
#: ../develop/plone/misc/email.rst:12 ../develop/plone/misc/facebook.rst:12
#: ../develop/plone/misc/flowplayer.rst:12 ../develop/plone/misc/html.rst:12
#: ../develop/plone/misc/navigationtree.rst:13
#: ../develop/plone/misc/normalizing_ids.rst:12
#: ../develop/plone/misc/paster_templates.rst:11
#: ../develop/plone/misc/porg.rst:8
#: ../develop/plone/misc/portal_transforms.rst:8
#: ../develop/plone/misc/seo.rst:12 ../develop/plone/misc/slideshow.rst:14
#: ../develop/plone/misc/sql.rst:12
#: ../develop/plone/persistency/database.rst:14
#: ../develop/plone/persistency/persistent.rst:16
#: ../develop/plone/persistency/storage.rst:13
#: ../develop/plone/persistency/transactions.rst:8
#: ../develop/plone/searching_and_indexing/query.rst:12
#: ../develop/plone/security/dynamic_roles.rst:8
#: ../develop/plone/security/local_roles.rst:12
#: ../develop/plone/security/permissions.rst:12
#: ../develop/plone/security/sandboxing.rst:14
#: ../develop/plone/security/selinux.rst:12
#: ../develop/plone/serving/http_request_and_response.rst:12
#: ../develop/plone/serving/traversing.rst:15
#: ../develop/plone/serving/webdav.rst:13
#: ../develop/plone/serving/xmlrpc.rst:12
#: ../develop/plone/sessions/cookies.rst:12
#: ../develop/plone/sessions/login.rst:12
#: ../develop/plone/sessions/session_variables.rst:13
#: ../develop/plone/syndication.rst:8
#: ../develop/plone/views/browserviews.rst:12
#: ../develop/plone/views/layers.rst:13 ../develop/plone/views/viewlets.rst:13
msgid "Introduction"
msgstr ""

# f889e94ef2a44a078d1c95fe016c7ee4
#: ../develop/addons/ajax.rst:14
msgid ""
"´AJAX <http://en.wikipedia.org/wiki/Ajax_%28programming%29>`_ (an acronym "
"for Asynchronous JavaScript and XML) is a group of interrelated web "
"development techniques used on the client-side to create asynchronous web "
"applications."
msgstr ""

# 80aada99198a4f12958bb4cbbcb17987
#: ../develop/addons/ajax.rst:17
msgid "JSON views and loading data via AJAX"
msgstr ""

# 9aa7207fa09442a4935b211980aa780e
#: ../develop/addons/ajax.rst:19
msgid ""
"The best way to output JSON for AJAX call endpoints is to use Python's dict "
"structure and convert it to JSON using Python ``json.dumps()`` call."
msgstr ""

# e78b08b7560b438e82ba341dffd55ff4
#: ../develop/addons/ajax.rst:22
msgid ""
"You should pass the AJAX target URLs to your Javascript using the settings "
"passing pattern explained above."
msgstr ""

# 9585b0dd3dfe4864bff4a59b55b81a3a
# 3daf3b43c69d48a8bbca6fd61cf808ab
# 423d2bd197ce4016bab04f0cc3299968
# 703ae352be17425dabf87b9d87a6fdf5
# 73808eaf724a45eea01b2d0adeb12699
# 90ba2b0223bd4f018a21a4444210e1f5
# 5ed60b2edd6c454fbf57c1effbc4eec0
#: ../develop/addons/ajax.rst:24 ../develop/addons/components/zcml.rst:150
#: ../develop/plone/content/behaviors.rst:14
#: ../develop/plone/forms/z3c.form.rst:1567
#: ../develop/plone/misc/normalizing_ids.rst:35
#: ../develop/plone/misc/paster_templates.rst:97
#: ../develop/plone/misc/paster_templates.rst:272
msgid "Examples"
msgstr ""

# dde5d8e283b04742af6ae8f7585ba713
#: ../develop/addons/ajax.rst:26
msgid "Generator"
msgstr ""

# 0bc2cc54ed694358b392fae49d5c2d69
#: ../develop/addons/ajax.rst:28
msgid ""
"https://github.com/miohtama/silvuple/blob/master/silvuple/views.py#L342"
msgstr ""

# 40d10ee877db4110b0dc1d752b5a029c
#: ../develop/addons/ajax.rst:30
msgid "AJAX loader"
msgstr ""

# 1c87bca6a7ba44cbaf6f61c3acf9c19e
#: ../develop/addons/ajax.rst:32
msgid ""
"https://github.com/miohtama/silvuple/blob/master/silvuple/static/main.js#L247"
msgstr ""

# b07b2c0f13df43c7b998f3dd8b6887e1
#: ../develop/addons/ajax.rst:35
msgid "Cross-Origin Resource Sharing (CORS) proxy view"
msgstr ""

# 6d71707b9ae5469abea9f08428e91973
#: ../develop/addons/ajax.rst:37
msgid ""
"Old web browsers do not support `Allow-acces-origin HTTP header "
"<https://developer.mozilla.org/en/HTTP_access_control>`_ needed to do cross-"
"domain AJAX requests (IE6, IE7)."
msgstr ""

# 1ebe4cf32cf74bc484b81e1a27240ba1
#: ../develop/addons/ajax.rst:40
msgid ""
"Below is an example how to work around this for jQuery getJSON() calls by"
msgstr ""

# 9df65f3e4a1f4abda33d11d4e7e5e8ef
#: ../develop/addons/ajax.rst:42
msgid "Detecting browsers which do not support this using jQuery.support API"
msgstr ""

# be39f89cd15e4967abe592677262a724
#: ../develop/addons/ajax.rst:44
msgid ""
"Doing an alternative code path through a local website proxy view which uses"
" Python ``urllib`` to make server-to-server call and return it as it would "
"be a local call, thus working around cross-domain restriction"
msgstr ""

# 791f8efa60454e0c9c223b5626516424
#: ../develop/addons/ajax.rst:48
msgid ""
"This example is for Plone/Grok, but the code is easily port to other web "
"frameworks."
msgstr ""

# c79d90a0efa24f1d95b76b86c7199b33
#: ../develop/addons/ajax.rst:52
msgid ""
"This is not a full example code. Basic Python and Javascript skills are "
"needed to interpret and adapt the code for your use case."
msgstr ""

# 1bf2595ef56b4903a1aed060e8f464c7
#: ../develop/addons/ajax.rst:55
msgid "Javascript example"
msgstr ""

# 239a1fed5c6c47f2aae0285c16da2272
#: ../develop/addons/ajax.rst:108
msgid "The server-side view::"
msgstr ""

# 63d8331142454c08932f71bb119f964b
#: ../develop/addons/ajax.rst:215
msgid "Speeding up AJAX loaded content HTML"
msgstr ""

# fa2dd40c8ea84a85871b85dc8d3f72fa
#: ../develop/addons/ajax.rst:217
msgid ""
"By observing Plone's ``main_template.pt``, having a True value on the "
"``ajax_load`` request key means some parts of the page aren't displayed, "
"hence the speed:"
msgstr ""

# 50a2ae6488484fe29ed3045922f3b78b
#: ../develop/addons/ajax.rst:219
msgid "No CSS or Javascript from ``<head />`` tag is loaded"
msgstr ""

# 15fd0859fdfa4ba4bb5dec0f952e4a15
#: ../develop/addons/ajax.rst:221
msgid ""
"Nothing from the ``plone.portaltop`` ViewletManager, such as the personal "
"bar, searchbox, logo and main menu"
msgstr ""

# b4942801aeba485b9ce67d70041622b8
#: ../develop/addons/ajax.rst:223
msgid ""
"Nothing from the ``plone.portalfooter`` ViewletManager, which contains "
"footer and colophon information, site actions and the Analytics javascript "
"calls if you have that configured in your site"
msgstr ""

# b87a5829e96d4cee8e72aa4299e4ae36
#: ../develop/addons/ajax.rst:225
msgid ""
"Neither the left nor the right column, along with all the portlets there "
"assigned"
msgstr ""

# a4b7c06ab12a4b8e8641c236354b2c1e
# 92ec79e82b7f4f979c418aec890c53ef
#: ../develop/addons/components/adapters.rst:3
#: ../develop/addons/five-grok/core-components/adapters.rst:2
msgid "Adapters"
msgstr ""

# a224b928aa0e48e194b423245a251d35
#: ../develop/addons/components/adapters.rst:10
msgid ""
"Adapters make it possible to extend the behavior of a class without "
"modifying the class itself. This allows more modular, readable code in "
"complex systems where there might be hundreds of methods per class. Some "
"more advantages of this concept are:"
msgstr ""

# 4c8b0f98ce7b46ec8c069aea088d2e18
#: ../develop/addons/components/adapters.rst:15
msgid "The class interface itself is more readable (less visible clutter);"
msgstr ""

# edb9a986f4824d92b595b10b5e54e893
#: ../develop/addons/components/adapters.rst:16
msgid "class functionality can be extended outside the class source code;"
msgstr ""

# c3c984787f514fe3b6a6d7fa714c0ae1
#: ../develop/addons/components/adapters.rst:17
msgid ""
"add-on products may extend or override parts of the class functionality. "
"Frameworks use adapters extensively, because adapters provide easy "
"integration points.  External code can override adapters to retrofit/modify "
"functionality. For example: a theme product might want to override a "
"searchbox viewlet to have a search box with slightly different functionality"
" and theme-specific goodies."
msgstr ""

# d7fbd9ee8bcd416ca6e8d39f461ceb4b
#: ../develop/addons/components/adapters.rst:25
msgid ""
"The downside is that adapters cannot be found by \"exploring\" classes or "
"source code. They must be well documented in order to be discoverable."
msgstr ""

# 7829471a57ce43c896f1c2359382be63
#: ../develop/addons/components/adapters.rst:28
msgid ""
"Read more about adapters in the `zope.component README "
"<http://docs.zope.org/zope.component/narr.html#adapters>`_."
msgstr ""

# ce16f2ccd7c247adad2614f5a4e0685f
#: ../develop/addons/components/adapters.rst:31
msgid ""
"`Adapter ZCML <http://docs.zope.org/zope.component/zcml.html#adapter>`_."
msgstr ""

# 305e8720e4084bcc86b96ada0e25e0a7
#: ../develop/addons/components/adapters.rst:33
msgid "Adapters are matched by:"
msgstr ""

# 2d3d9ad06d4a454fb01116cfec42264b
#: ../develop/addons/components/adapters.rst:35
msgid "Provider interface (what functionality adapter provides)."
msgstr ""

# a809ade79f604ca5845ce3495520242d
#: ../develop/addons/components/adapters.rst:36
msgid "Parameter interfaces."
msgstr ""

# f1ea12db687343e9a4db57192de1a66a
#: ../develop/addons/components/adapters.rst:38
msgid "There are two kinds of adapters:"
msgstr ""

# f6db013885674a80a14ca291c375c40b
#: ../develop/addons/components/adapters.rst:40
msgid "Normal adapters that take only one parameter."
msgstr ""

# 22c7f7a368a041898ce4b682f6e04d4c
#: ../develop/addons/components/adapters.rst:41
msgid "Multi-adapters take many parameters in the form of a tuple."
msgstr ""

# ccb9371650ca4e3faaf1eb65fb7e4706
#: ../develop/addons/components/adapters.rst:44
msgid "Example adapters users"
msgstr ""

# 0413cd38b8254161b9d56c0a3233698c
#: ../develop/addons/components/adapters.rst:46
msgid ""
"http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/components/themespecific"
msgstr ""

# 68d32682d97e49c1bdf67c8f9a8035bd
#: ../develop/addons/components/adapters.rst:49
msgid "Registering an adapter"
msgstr ""

# 35bf21d6d8d34a019f4341d4b0644fa0
#: ../develop/addons/components/adapters.rst:52
msgid "Registering using ZCML"
msgstr ""

# 7b4b1915d1db4ff583b911d799965251
#: ../develop/addons/components/adapters.rst:54
msgid ""
"An adapter provides functionality to a class. This functionality becomes "
"available when the interface is queried from the instance of class."
msgstr ""

# cf0104c4bf984d1f9fd0e1970644400d
#: ../develop/addons/components/adapters.rst:57
msgid ""
"Below is an example how to make a custom \"image provider\". The image "
"provider provides a list of images for arbitrary content."
msgstr ""

# 29ec8f0601574076b1de7d6d5380b480
#: ../develop/addons/components/adapters.rst:60
msgid "This is the image provider interface::"
msgstr ""

# f032d9d01a734c7d9f5332df0bc5457b
#: ../develop/addons/components/adapters.rst:72
msgid "This is our content class::"
msgstr ""

# 29ad384276184cb5aea553596a89d517
#: ../develop/addons/components/adapters.rst:82
msgid "This is the adapter for the content class::"
msgstr ""

# 02e26a5c092f4e9e83de44cce823fe54
#: ../develop/addons/components/adapters.rst:113
msgid ""
"Register the adapter for your custom content type ``MyShoppableItemType`` in"
" the ``configure.zcml`` file of your product:"
msgstr ""

# fe8f3523f97e48e68e344ca0f20aeb09
#: ../develop/addons/components/adapters.rst:124
msgid "Then we can query the adapter and use it. Unit testing example::"
msgstr ""

# 7b7e74aa280348e4954cc0b632d8a06b
#: ../develop/addons/components/adapters.rst:138
msgid "Registering using Python"
msgstr ""

# aaf90c6d296546c784312528c500cfa3
#: ../develop/addons/components/adapters.rst:140
msgid "Register to *Global Site Manager* using ``registerAdapter()``."
msgstr ""

# 7d448523722f43798d952e64a214e88f
# 91539676675448b69730c5dd2244b6a9
# 35758aff70ab4bb399ab0043abd147b8
# b0ff4ce71d394909968bc8feb1037266
# fd569f7752c74637b82d2cceece38340
# 14073eb1df3741288e183f75fb14fe11
# b591dc11bb3444cd87b44d40849df8d4
# 0de04915bbe142bb8eb8dbd1c1f79caa
# 919c0ede4b4b4e19b012f42e54cb8553
# 6dd5048ce8e34f2a9d86664865611d88
# f0860aa31b7e4285a12e58974fea43f6
# 84bd994ad2db44c5a8005c46d58eb0d2
# 3bb5168203c046dfb33ec8cd240f34af
# eb3bb2fa86394a77a662d0192f7aad3f
# 33c6a6e1f3b14f729c3c45f371457dd8
# 4be207ae0970442cb695281a95106c11
# 95fe042b99df4413a23815fe64eee69d
# bce39c62b8514882b8f35097e9ee07c0
# f74114a81945435c89fe36d520d51b5b
# 8aab5ed31cd648999342d4693df2e6c6
# f625cc57bc5a4cac9255a1149e991f83
# 0407d58c1b9e4c809582cd259ff71eba
# d67692bbe29748dd82d1959b38714a82
# 66ffcd2a8361434497bd70b3335350ff
# aab158d0171b4f4a9f2e0de6af9c720d
# 5fd58bb43fb442b6875f0257de086a64
# 8ad8f9d915ab445c8269a753bcfcfb90
# 859ee0803c3945feb138f373a2344921
# c29886707a274d0bb5d812ca7f76a648
# df8ce59eb4b3474088989397b0c5d071
# 60f2332d3177433494e56713b0ed6c69
# db9de126fa344a0392daa4acdf727602
# 7ac4d95738814c879345b2e1f446c601
# 179a4dfefe7c4898b87bf72521ead9b1
# 5c63ec395c704e7fa834e1239acdef58
# 70f59b49555e40feafbd0fb22d3e1b7d
# 2a56e0fc7c78430aaf93f9da71c1595c
# fc1e9ddaa8794ec59db8d3267e46315d
# d49538b78afc46cfa04304307bbcc765
# a7a77206344d4a3787bf41dc9e8b4326
# 43c0eb6913db4d7db596ae58ad6140e5
# 8b2a4e4dcbad4c86bd51caf868b2e13d
# d60466c842df477aacec4e1a2860b6d0
# ba848f9c0290416eace7c848167dba25
# f1cd9b6a3cbd4966821f97e7e623a0b6
# fa6c7f3262a441a7abd44e797559acdc
# 54fe68b753e84d85a13cb36354d34881
# fbc6599ac5074faf9e034fd3ad23cbd6
# 9ff784e8cff8474a8c5b8146f55e404e
# b982460e51564a5c9f37c7e2fc964b5e
# d0f8b767240147d6ab93bae3cc86de73
# f9e01570afa641599337d0f4a27ca89e
# b4f6b68b0d9942859a493356379e3350
# 4487fae4c75f4f45a6c64de9f3dabe4c
# ef80100359e3498ea1335680dc42ee4b
# 40fe2314d4784c24bf694aa714985046
# 42ae9e289b89493c8737c191765b664d
# eaa4fdd34083436ca8d14eef11bd1346
# 413fe156f3d8498f8e5635bfeee7fab4
# c41ee6348ea14142afa2655ab5da7671
# 03e3f5463d1e4caf9674ca8e04ba007f
# 3cbc07f84ef34bf49c9af15c56ab0e01
# 1fc99e3bbbb5474ea2f2f29fbbe6a61e
# 7737be8f329e43398a870db953409b54
# 7c847b510f2241cbb7d81340ab0f075f
# f262f24ce1ab4d66849bbab243494cda
# 011785565574415b9ef8e8420ab88d36
# 8057f85ef51449abae2bfc6b90b4b103
# d4aaeceaec4340acbdbe29cf501f7c48
# 20358d746c8f436b9e9d76517390e5f2
# d90185630857409089fb8fb3dfa5b9f7
# 526a8fc6022e4e62b880557a986825f4
# 3510dccd2e9642088d2632ebe2615fff
# dacf639955614ae4b6eb7636ceafa39c
# 59d2a05514ac44f3b56d7e2a23a4579d
# 16defbb6c13f4ab6a7538d26560c1dea
# a238945fd6c14333aae6f259fa4c72f0
# 15f9239c0ddc42c5b9db6ab7b97e9a8d
# d862429da03d4ee6a281153ab70ef0f2
# 18f36d0a4da44e43bfc275533af0c2db
# dbf2d879b7f140c18a896bc3dc1b9266
# 46d2fcca0711449382461b78c36ca691
# 3bfc72d7fc91440b8e4961717f6b62a9
# 9004c121175f4925ba3f285b05922616
# fac3cdb14893432399ca67f78078858b
# 57e585ef4a574fb894898d389a28c2bb
# 8107ac788df14017a09cfd5ecf5429ee
# d66e092a52bd48fabd07637a2daca54b
# 8cb8add6aa524201ba9e23e0363b1b12
# 41aa28ce5a1b444594846d847f8dbc44
# f24d3183db16427981a9fbfbdad0a37e
# b3ee81ff7c414b04b5631c4f6fae6349
# 3e563f7d629942819e1a1f94185c85b0
# 057549e36e824f79b9593fee081ed2b7
# 23fc7feecbdc4335b3b9553af76bedf6
# c7f22eb2d75143caa45b701252227fc5
# 81b37d7f40ed4ecc858a05fe2fd7245d
# 93b6b8f5227c4595aa92173933b109b8
# b17e2f8daf21442dadbb2aa72f4387a4
# 68b4c0b02bb0450ea54979e2c304ec81
# cd1208d26be943df9e7b3f399ba66448
# 0fa474c4c5e343ec853adbfaf3dbd7f4
# 17be84f5767544da93530d465c336262
# b0a44cae72764b2f8d2b2d35a472f6e1
# 2ea96888c72c4cb7acd9318772965a41
# d7dfb537fb9b4eab823d7cf7fbfdf661
# 9ed69943d1294688b75bb0cf191840a5
# 020d82cc99c54ffbbbc2fdc4c5f5fd2c
# dbbd22007db149ceb414827d12fc6db8
# 151bdafc561b421a9f980109698ed08b
# 4a5718d6a4794a4185aa38f20aba521b
# cb0a792d700940c9ada3bc4e085a3a70
# ad7500a989774c0fa7ce717d6645cc4d
# 77702fff661640978714411e03664f30
# 7947fa72403a41d7a27753e3d399bcae
# 30cd2b7900644d458cc0c782e85e5226
# 090d9a6d61f94a4f9dc78118c3171c58
# 6f1ae334b0054a75a8d3d83fa38d2c9b
# 59c3a6e0134f4931b5f9a0a5f6afc976
# f26bde4eaf6f44e6aedd36e97b4a6d0e
# ea47e82a5b6641a7a6a3c10c2fe66e1f
# df9ab357655a4764ab4783718484c658
# 674caefa8f804eb9b1b8b97a530c1a83
# 607925ba14894265ad35c209c004530a
# eb4161498c9b4f9ba37768c623ee1115
# bffc88acefd9480bbde6a7285b902b15
# 44721c36919d4d28b07cc1801d64fa7b
# 7b975a31db8045899efaec55aff91b7c
# 6277d17505044c489d586ed1676cc972
# 62b79a4b6d0042929fef66c849a43120
# 32af1531c4a142b7ba0366e336f07413
# 46621bf6afb14dc1867c3c6731da3c3d
# 76cdb42b392f4e7896439ab5c5479d13
# 711b5c7e624347bcbbcd2ba7fab65e2a
# d35c7187e1b343039da913b84b33d9ee
# a22e8ce839424fb89d5a556cb14df5c8
# 48b5db8687114b62b2730a7f743b490a
# 7445260c095d4f01a129cd1eda285a48
# 7b05d1a7a2b84f96a6139131194e3fd5
# 33bb833f8f604297b23c79c238614b9b
# f88e131cefb8491e845444d0f4a0c03e
# 3488cc2d86574ded9773109281c87d3e
# 949dd18f362f405e97932bd1e81f4c7f
# 15c0007095994cdab5b69157cf871f6e
# e501e7e770f048869dc14d88b2f1e9ee
# 358ae541d41d4e948546f6f4015754d6
# 5ed168a812294e78b619c7cfdc65530a
# 169f03965e6b49d8bdd19ae0106ea045
#: ../develop/addons/components/adapters.rst:142
#: ../develop/addons/components/events.rst:175
#: ../develop/addons/components/genericsetup.rst:137
#: ../develop/addons/components/interfaces.rst:61
#: ../develop/addons/components/interfaces.rst:80
#: ../develop/addons/components/interfaces.rst:162
#: ../develop/addons/components/interfaces.rst:262
#: ../develop/addons/components/interfaces.rst:286
#: ../develop/addons/components/utilities.rst:150
#: ../develop/addons/components/utilities.rst:188
#: ../develop/addons/javascript.rst:152
#: ../develop/plone/content/archetypes/fields.rst:53
#: ../develop/plone/content/archetypes/fields.rst:105
#: ../develop/plone/content/archetypes/fields.rst:208
#: ../develop/plone/content/archetypes/fields.rst:607
#: ../develop/plone/content/archetypes/fields.rst:649
#: ../develop/plone/content/archetypes/references.rst:38
#: ../develop/plone/content/archetypes/storages.rst:37
#: ../develop/plone/content/creating.rst:21
#: ../develop/plone/content/creating.rst:37
#: ../develop/plone/content/creating.rst:252
#: ../develop/plone/content/creating.rst:426
#: ../develop/plone/content/deleting.rst:24
#: ../develop/plone/content/dexterity.rst:327
#: ../develop/plone/content/events.rst:100
#: ../develop/plone/content/history.rst:170
#: ../develop/plone/content/listing.rst:116
#: ../develop/plone/content/ownership.rst:23
#: ../develop/plone/content/ownership.rst:38
#: ../develop/plone/content/types.rst:215
#: ../develop/plone/content/types.rst:235
#: ../develop/plone/content/types.rst:256
#: ../develop/plone/content/types.rst:265
#: ../develop/plone/content/workflow.rst:145
#: ../develop/plone/content/workflow.rst:167
#: ../develop/plone/content/workflow.rst:293
#: ../develop/plone/forms/files.rst:195 ../develop/plone/forms/files.rst:409
#: ../develop/plone/forms/schemas.rst:92
#: ../develop/plone/forms/schemas.rst:127
#: ../develop/plone/forms/schemas.rst:199
#: ../develop/plone/forms/schemas.rst:269
#: ../develop/plone/forms/schemas.rst:366
#: ../develop/plone/forms/schemas.rst:492
#: ../develop/plone/forms/schemas.rst:541
#: ../develop/plone/forms/vocabularies.rst:74
#: ../develop/plone/forms/vocabularies.rst:143
#: ../develop/plone/forms/wysiwyg.rst:361
#: ../develop/plone/forms/z3c.form.rst:285
#: ../develop/plone/forms/z3c.form.rst:407
#: ../develop/plone/forms/z3c.form.rst:541
#: ../develop/plone/forms/z3c.form.rst:598
#: ../develop/plone/forms/z3c.form.rst:637
#: ../develop/plone/forms/z3c.form.rst:700
#: ../develop/plone/forms/z3c.form.rst:744
#: ../develop/plone/forms/z3c.form.rst:769
#: ../develop/plone/forms/z3c.form.rst:844
#: ../develop/plone/forms/z3c.form.rst:984
#: ../develop/plone/forms/z3c.form.rst:1304
#: ../develop/plone/forms/z3c.form.rst:1380
#: ../develop/plone/forms/z3c.form.rst:1393
#: ../develop/plone/forms/z3c.form.rst:1447
#: ../develop/plone/forms/z3c.form.rst:1678
#: ../develop/plone/forms/z3c.form.rst:1722
#: ../develop/plone/forms/z3c.form.rst:2170
#: ../develop/plone/forms/z3c.form.rst:2189
#: ../develop/plone/functionality/actions.rst:141
#: ../develop/plone/functionality/actions.rst:242
#: ../develop/plone/functionality/actions.rst:282
#: ../develop/plone/functionality/actions.rst:335
#: ../develop/plone/functionality/discussion.rst:37
#: ../develop/plone/functionality/expressions.rst:121
#: ../develop/plone/functionality/expressions.rst:130
#: ../develop/plone/functionality/expressions.rst:162
#: ../develop/plone/functionality/expressions.rst:270
#: ../develop/plone/functionality/expressions.rst:279
#: ../develop/plone/functionality/expressions.rst:287
#: ../develop/plone/functionality/expressions.rst:295
#: ../develop/plone/functionality/portlets.rst:369
#: ../develop/plone/i18n/cache.rst:23
#: ../develop/plone/i18n/translating_content.rst:47
#: ../develop/plone/i18n/translating_content.rst:84
#: ../develop/plone/i18n/translating_content.rst:126
#: ../develop/plone/members/member_basics.rst:133
#: ../develop/plone/members/member_basics.rst:178
#: ../develop/plone/members/member_basics.rst:195
#: ../develop/plone/members/member_basics.rst:211
#: ../develop/plone/members/member_basics.rst:259
#: ../develop/plone/members/member_basics.rst:268
#: ../develop/plone/members/member_basics.rst:290
#: ../develop/plone/members/member_profile.rst:91
#: ../develop/plone/members/member_profile.rst:104
#: ../develop/plone/members/membrane.rst:50
#: ../develop/plone/misc/commandline.rst:59
#: ../develop/plone/misc/commandline.rst:73
#: ../develop/plone/misc/context.rst:150 ../develop/plone/misc/context.rst:182
#: ../develop/plone/misc/datetime.rst:105
#: ../develop/plone/misc/paster_templates.rst:219
#: ../develop/plone/persistency/persistent.rst:145
#: ../develop/plone/persistency/transactions.rst:71
#: ../develop/plone/searching_and_indexing/catalog.rst:127
#: ../develop/plone/searching_and_indexing/indexing.rst:333
#: ../develop/plone/searching_and_indexing/query.rst:27
#: ../develop/plone/searching_and_indexing/query.rst:174
#: ../develop/plone/searching_and_indexing/query.rst:194
#: ../develop/plone/searching_and_indexing/query.rst:352
#: ../develop/plone/searching_and_indexing/query.rst:426
#: ../develop/plone/searching_and_indexing/query.rst:497
#: ../develop/plone/searching_and_indexing/query.rst:645
#: ../develop/plone/searching_and_indexing/query.rst:709
#: ../develop/plone/searching_and_indexing/query.rst:818
#: ../develop/plone/searching_and_indexing/query.rst:1004
#: ../develop/plone/searching_and_indexing/query.rst:1028
#: ../develop/plone/searching_and_indexing/query.rst:1050
#: ../develop/plone/security/local_roles.rst:81
#: ../develop/plone/security/local_roles.rst:94
#: ../develop/plone/security/permissions.rst:170
#: ../develop/plone/serving/http_request_and_response.rst:121
#: ../develop/plone/serving/http_request_and_response.rst:157
#: ../develop/plone/serving/http_request_and_response.rst:184
#: ../develop/plone/serving/http_request_and_response.rst:212
#: ../develop/plone/serving/http_request_and_response.rst:703
#: ../develop/plone/serving/traversing.rst:67
#: ../develop/plone/serving/traversing.rst:91
#: ../develop/plone/serving/traversing.rst:105
#: ../develop/plone/serving/traversing.rst:126
#: ../develop/plone/serving/traversing.rst:189
#: ../develop/plone/serving/traversing.rst:229
#: ../develop/plone/serving/traversing.rst:246
#: ../develop/plone/serving/traversing.rst:272
#: ../develop/plone/serving/traversing.rst:314
#: ../develop/plone/serving/traversing.rst:341
#: ../develop/plone/serving/traversing.rst:422
#: ../develop/plone/serving/traversing.rst:613
#: ../develop/plone/serving/xmlrpc.rst:16
#: ../develop/plone/sessions/cookies.rst:25
#: ../develop/plone/sessions/session_variables.rst:36
#: ../develop/plone/sessions/session_variables.rst:80
#: ../develop/plone/sessions/session_variables.rst:116
#: ../develop/plone/sessions/statusmessages.rst:20
#: ../develop/plone/views/browserviews.rst:356
#: ../develop/plone/views/browserviews.rst:374
#: ../develop/plone/views/browserviews.rst:854
#: ../develop/plone/views/browserviews.rst:876
#: ../develop/plone/views/layers.rst:218 ../develop/plone/views/layers.rst:273
#: ../develop/plone/views/layers.rst:288
msgid "Example::"
msgstr ""

# 24aafcd3020e46509f9813ee19391b93
# 9d576438860e42dbb81ed4061eb24543
# 713abb43800e4a90abab52a04edf97ba
# 26cfe9c80af44d76b38ea3f7252eeef2
# 93200f6493054c7987f30d2dadd343fd
# 277fd8b1360449c4aecc8b2ace6c605d
# 244c18d6ea5b452383fd9ce26032cf15
# 56a794c52f4940b087559e9a7c089bfb
# f3c452ea872e40f6bb8a22397f1ac229
# f6acc3beffba4eba8f1bf45910310993
# 2962666309c14844b36f2abfb89dec90
# 0a0acb332e5c4205a1d4f373776891d1
# 5671041d7be0443b99af3529b59d3313
# 8704235194be4176a9b83760f4b1a4da
# c0809f727fb347f0b8da82fb982d62a8
# a930d6be47a14e10a84383f2cee8d655
# 720a2da360f044208e7c428fb3455a37
# 3a132f48285243789d2262ef796efe12
# d20be51792844d81ac9902b65600f1e4
# bb90e378c14542d59d217da8df58947c
# 4f4eb1e211f143a787a5549a9685215c
# 3798148affb6469a8f75cffe7f1f723a
# ae3d6255fde94f0d878c0def40c2778f
# e814a256c98f491daf8222dc3e35c89b
# dbcdbb6e905948eb887d398216b7ef37
# b949a8dbecb549e28b145e70dd4db13a
# 494f9e004b904ee49cd9e149c6ee66e2
# 3e28ceb9de04498496518cf45d51cb65
# c8191ff7b89b4555bd56b878f0232b31
# 4ad7677a156347de80a69b2fa7610de9
# c636469e263d43b19ec53d64d9d18410
# 7724337a0a6c42c0a75d6874704d677a
# 8296ad60397943e7b59bf0cf67d2b453
# 32e7d5f3af4a4bc7bd3e48ca2492e0b0
# dc99d70093f5405ab688c1f6438e6b2e
# f967c406c86948109d5dcbfd9be733bf
# 63af10dc95ce47039d4372a613dcba2e
# c1a69056f9a545149ff9a749c06a88ae
# 6bd9e685a373416ea751705978e7dec6
#: ../develop/addons/components/adapters.rst:153
#: ../develop/addons/components/grok.rst:32
#: ../develop/addons/components/grok.rst:231
#: ../develop/addons/components/index.rst:33
#: ../develop/addons/javascript.rst:411 ../develop/addons/javascript.rst:721
#: ../develop/plone/content/archetypes/templates.rst:57
#: ../develop/plone/content/dynamic_views.rst:30
#: ../develop/plone/content/dynamic_views.rst:67
#: ../develop/plone/forms/schemas.rst:44 ../develop/plone/forms/wysiwyg.rst:39
#: ../develop/plone/forms/wysiwyg.rst:316
#: ../develop/plone/forms/z3c.form.rst:626
#: ../develop/plone/forms/z3c.form.rst:1438
#: ../develop/plone/forms/z3c.form.rst:2271
#: ../develop/plone/functionality/breadcrumbs.rst:144
#: ../develop/plone/functionality/discussion.rst:19
#: ../develop/plone/functionality/portlets.rst:497
#: ../develop/plone/functionality/portlets.rst:906
#: ../develop/plone/i18n/cache.rst:46
#: ../develop/plone/i18n/internationalisation.rst:653
#: ../develop/plone/misc/commandline.rst:170
#: ../develop/plone/misc/commandline.rst:297
#: ../develop/plone/misc/datetime.rst:52 ../develop/plone/misc/facebook.rst:58
#: ../develop/plone/misc/html.rst:89
#: ../develop/plone/persistency/database.rst:161
#: ../develop/plone/persistency/persistent.rst:81
#: ../develop/plone/persistency/persistent.rst:117
#: ../develop/plone/searching_and_indexing/query.rst:793
#: ../develop/plone/security/permissions.rst:51
#: ../develop/plone/serving/traversing.rst:412
#: ../develop/plone/sessions/login.rst:285
#: ../develop/plone/sessions/login.rst:310
#: ../develop/plone/views/browserviews.rst:345
#: ../develop/plone/views/viewlets.rst:43
#: ../develop/plone/views/viewlets.rst:153
#: ../develop/plone/views/viewlets.rst:186
#: ../develop/plone/views/viewlets.rst:305
msgid "More info"
msgstr ""

# 3bc932609e6c45b293b86f94af895731
#: ../develop/addons/components/adapters.rst:155
msgid "http://www.muthukadan.net/docs/zca.html#registration"
msgstr ""

# 7e3d7a1e94d14f43898b8941020751c4
#: ../develop/addons/components/adapters.rst:158
msgid "Generic adapter contexts"
msgstr ""

# bf80f28f2177449fb805bb9cc95f6095
#: ../develop/addons/components/adapters.rst:160
msgid "The following interfaces are useful when registering adapters:"
msgstr ""

# 3f1fb6986ac048e9a47d173cc4f6e79b
# be0b3e0fb6884aff89904127a2036c2b
#: ../develop/addons/components/adapters.rst:163
#: ../develop/addons/components/interfaces.rst:34
msgid "``zope.interface.Interface``"
msgstr ""

# b2522b40311d4591a7e6e0ff5063d2d3
#: ../develop/addons/components/adapters.rst:163
msgid "Adapts to any object"
msgstr ""

# 61bb0d7e6240481e92e66a00515ec6aa
# 843200ef97bd4dbd9b2e0873577d576f
# 9e4df6c1f4c742cfba688e1fa0fbe6c8
#: ../develop/addons/components/adapters.rst:166
#: ../develop/addons/components/interfaces.rst:41
#: ../develop/plone/functionality/expressions.rst:219
msgid "``Products.CMFCore.interfaces.IContentish``"
msgstr ""

# 8a7d8eabb7cf4cf3a62b8901c243137b
#: ../develop/addons/components/adapters.rst:166
msgid "Adapts to any Plone content object"
msgstr ""

# 3d8fa27cac19401ba7756794360765b1
#: ../develop/addons/components/adapters.rst:169
msgid "``zope.publisher.interfaces.IBrowserView``"
msgstr ""

# f4e01548bb364a2188a2741f57370951
#: ../develop/addons/components/adapters.rst:169
msgid "Adapts to any ``BrowserView(context, request)`` object"
msgstr ""

# 7a712cb25d7345dd836830f90446aebe
#: ../develop/addons/components/adapters.rst:172
msgid "Multi-adapter registration"
msgstr ""

# 93a9bbc411b644e9855948c1dac2eb7a
#: ../develop/addons/components/adapters.rst:174
msgid ""
"You can specify any number of interfaces in the ``<adapter for=\"\" />`` "
"attribute. Separate them with spaces or newlines."
msgstr ""

# 64f96903f0ed41cfb950df625490c3b8
#: ../develop/addons/components/adapters.rst:177
msgid "Below is a view-like example which registers against:"
msgstr ""

# 5f7886eaa8c54323a2f835879e17621e
#: ../develop/addons/components/adapters.rst:179
msgid "any context (``zope.interface.Interace``);"
msgstr ""

# 2ed484a65fc944728f813184c3db0b75
#: ../develop/addons/components/adapters.rst:180
msgid ""
"HTTP request objects "
"(``zope.publisher.interfaces.browser.IBrowserRequest``)."
msgstr ""

# ad2e38c105cf46579107525298211fc8
#: ../develop/addons/components/adapters.rst:182
msgid "Emulate view registration (context, request):"
msgstr ""

# da1da676056c4b0d9c41d7d95978062c
#: ../develop/addons/components/adapters.rst:194
msgid "Getting the adapter"
msgstr ""

# 7ec261d4cffc47669409ceadbd680589
#: ../develop/addons/components/adapters.rst:196
msgid "There are two functions that may be used to get an adapter:"
msgstr ""

# bafb38a4448c425aab759e3cdfcd131e
#: ../develop/addons/components/adapters.rst:198
msgid ""
"``zope.component.getAdapter`` will raise an exception if the adapter is not "
"found."
msgstr ""

# a982f06b7f95414b80235a4b93edf76e
#: ../develop/addons/components/adapters.rst:201
msgid ""
"``zope.component.queryAdapter`` will return ``None`` if the adapter is not "
"found."
msgstr ""

# 137b7e1049a8478bb42cf116ca69a9c9
#: ../develop/addons/components/adapters.rst:204
msgid "``getAdapter``/``queryAdapter`` arguments:"
msgstr ""

# 26b00df6d90b4fa98585d2d89a3527e5
#: ../develop/addons/components/adapters.rst:209
msgid "# Tuple consisting of: (*Object implementing the first interface*,"
msgstr ""

# c9ee9666290f4d5b877e82ba8d69a473
#: ../develop/addons/components/adapters.rst:207
msgid ""
"*object implementing the second interface*, ...) The interfaces are in the "
"order in which they were declared in the ``<adapter for=\"\">`` attribute."
msgstr ""

# d573c3fadb664169b13283c296d133b9
#: ../develop/addons/components/adapters.rst:211
msgid "# Adapter marker interface."
msgstr ""

# f742ab51f11447e0abfe6843f56bbc5f
#: ../develop/addons/components/adapters.rst:213
msgid "Example registration:"
msgstr ""

# 82d73d571159423cb40022dd53baaae1
#: ../develop/addons/components/adapters.rst:227
msgid ""
"Corresponding query code, to look up an adapter implementing the "
"interfaces::"
msgstr ""

# 30d120d3a06642a4a11f13f91bfe22d6
#: ../develop/addons/components/adapters.rst:247
msgid ""
"You cannot get adapters on module-level code during import, as the Zope "
"Component Architecture is not yet initialized."
msgstr ""

# f6c44efd4559487297fabed4db06637d
#: ../develop/addons/components/adapters.rst:252
msgid "Listing adapter registers"
msgstr ""

# a2d2d9b1f8304138a0d71bf5879c2049
#: ../develop/addons/components/adapters.rst:254
msgid ""
"The following code checks whether the ``IHeaderBehavior`` adapter is "
"registered correctly::"
msgstr ""

# 4c21afaabeb74cfabad695a1af5fd537
#: ../develop/addons/components/adapters.rst:265
msgid "Alternative listing adapters"
msgstr ""

# b3641a9289b14a35a53fdd532af6188f
#: ../develop/addons/components/adapters.rst:267
msgid "Getting all multi-adapters (context, request)::"
msgstr ""

# d59fce15538749f9b3ca0fe43b6ecfc8
#: ../develop/addons/components/adapters.rst:274
msgid "This does not list locally-registered adapters such as Zope views."
msgstr ""

# c2398a85d16a4d46bf2bf3e3679466db
#: ../develop/addons/components/adapters.rst:278
msgid "Local adapters"
msgstr ""

# 758366f1f81a478ab9e10744c521c275
#: ../develop/addons/components/adapters.rst:280
msgid ""
"Local adapters are effective only inside a certain container, such as a "
"folder.  They use ``five.localsitemanager`` to register themselves."
msgstr ""

# 35179a4c77664823a7a98fba0fd19a28
#: ../develop/addons/components/adapters.rst:283
msgid ""
"http://opkode.net/media/blog/schema-extending-an-object-only-inside-a"
"-specific-folder"
msgstr ""

# effcc406b868443caccbdf2944b59c38
#: ../develop/addons/components/customizing_plone.rst:3
msgid "Customizing Plone"
msgstr ""

# 048a415a22f541179cc137c7092fbeb5
#: ../develop/addons/components/customizing_plone.rst:10
msgid ""
"Plone can be customized in two different ways, depending on which kind of "
"component you are trying to change:"
msgstr ""

# e74a8d6370634ce0a73e2f5e6208c40d
#: ../develop/addons/components/customizing_plone.rst:13
msgid "Through-the-web."
msgstr ""

# 5f3e87f759084f22b2214cb350b10f71
#: ../develop/addons/components/customizing_plone.rst:15
msgid "By add-on products."
msgstr ""

# 4ea47e7702b9455ea03188ec9ed96c5f
#: ../develop/addons/components/customizing_plone.rst:17
msgid ""
"You should never edit files directly in an egg folder. Instead you usually "
"create a customized version of the item you wish to modify and then "
"configure Plone to use your customized version instead of the stock one."
msgstr ""

# e798261d9b424d5e984b0a0cadf3fcd6
#: ../develop/addons/components/customizing_plone.rst:23
msgid "Through-the-web changes"
msgstr ""

# 1ca5eb867ddf45b1b804fbee0987c951
#: ../develop/addons/components/customizing_plone.rst:25
msgid ""
"Minor configuration changes can be done through the web. These changes are "
"effective immediately and don't require you to write any code or restart "
"Zope application server. The downside is that since through-the-web changes "
"don't have a source code \"recipe\" for what you did, the changes are not "
"automatically repeatable. If you need to do the same changes for another "
"site again, or you need heavily modify your site, you need go through manual"
" steps to achieve the same customization."
msgstr ""

# 9a417fa609d546bea078beac9e776bf1
#: ../develop/addons/components/customizing_plone.rst:35
msgid "Possible through-the-web changes are:"
msgstr ""

# 0920775b84854dc7b00626bfd7890bb5
#: ../develop/addons/components/customizing_plone.rst:37
msgid ""
"Site settings: E.g. adding/removing `content rules "
"<http://plone.org/documentation/how-to/content-rules>`_"
msgstr ""

# 8e12b6a813dd4da9bc933bdbcaec2053
#: ../develop/addons/components/customizing_plone.rst:39
msgid ""
"Showing and hiding viewlets (parts of the page) using ``@@manage-viewlets``"
msgstr ""

# ffe32d9e122b4057bee0ebe84be2782a
#: ../develop/addons/components/customizing_plone.rst:41
msgid ""
"Exporting and importing parts of the site configuration in ``portal_setup``"
msgstr ""

# 51f8ea2a92b84cf794931750e1d14caf
#: ../develop/addons/components/customizing_plone.rst:43
msgid "Customizing viewlet templates in ``portal_view_customization``"
msgstr ""

# 8ad4034c970c4e39a4d688840a2e42a9
#: ../develop/addons/components/customizing_plone.rst:45
msgid "Customize ``portal_skins`` layer theme files in portal_skins"
msgstr ""

# 627079167c804d498efd9383ef173eca
#: ../develop/addons/components/customizing_plone.rst:47
msgid ""
"Uploading Javascript files, CSS files and images through Zope management "
"interface and registering using ``portal_css`` and ``portal_javascripts``"
msgstr ""

# 73897827ddf04dac963e31bcd6cc7529
#: ../develop/addons/components/customizing_plone.rst:51
msgid "Through the code changes"
msgstr ""

# 497d06f3bfb048a3878c58f48cb5cfca
#: ../develop/addons/components/customizing_plone.rst:53
msgid ""
"To expand Plone using Python, you have to create your own add-on product. "
"Add-on products are distributed as packaged Python modules called :doc:`eggs"
" </old-reference-manuals/buildout/index>`. The recommended way is to use the"
" :doc:`paster </develop/addons/paste>` command to generate an add-on product"
" skeleton which you can use as a starting point for your development. Paster"
" also contains useful subcommands, like ``addcontent``, which automate "
"various Plone add-on development tasks."
msgstr ""

# 6be9ce691ba148e3813e00968ff0c241
#: ../develop/addons/components/customizing_plone.rst:61
msgid "Another `paster tutorial <http://www.unc.edu/~jj/plone/>`_"
msgstr ""

# 1ac9301e15e44e298f8816c1f838fa01
# 5b9539a5891045caada2952aab8ab8eb
# 26e07f31195441c1aed489afdfed6685
#: ../develop/addons/components/events.rst:3
#: ../develop/addons/five-grok/core-components/events.rst:2
#: ../develop/plone/content/index.rst:16
msgid "Events"
msgstr ""

# 104633d2bfea4b0eb295b7f5d51bada2
#: ../develop/addons/components/events.rst:7
msgid ""
"How to add event hooks to your Plone code to perform actions when something "
"happens on a Plone site."
msgstr ""

# 23a89e583f9d488291c5d1e19eeab18e
#: ../develop/addons/components/events.rst:15
msgid ""
"This document briefly discusses event handling using the ``zope.event`` "
"module. The Zope Component Architecture's `zope.event package "
"<https://pypi.python.org/pypi/zope.event>`_ is used to manage subscribeable "
"events in Plone."
msgstr ""

# 7f4adcb2195c406e9863425fce180d12
#: ../develop/addons/components/events.rst:20
msgid "Some of the notable characteristics of the Plone event system are:"
msgstr ""

# 69fe8ef43aae43dc96f78c22e05ba1cd
#: ../develop/addons/components/events.rst:22
msgid "it is simple;"
msgstr ""

# 8b80417bae3047368de1b882440a8242
#: ../develop/addons/components/events.rst:23
msgid ""
"subscriber calling order is not modifiable |---| you cannot set the order in"
" which event handlers are called;"
msgstr ""

# 2324dc83f11c402e816449997311de3e
#: ../develop/addons/components/events.rst:25
msgid ""
"events cannot be cancelled |---| all handlers will always get the event;"
msgstr ""

# 57067e32e47f46a4ae44e9b98ee5561d
#: ../develop/addons/components/events.rst:26
msgid "event handlers cannot have return values;"
msgstr ""

# f051cbca781740408537dfb1ea2b37fe
#: ../develop/addons/components/events.rst:27
msgid ""
"exceptions raised in an event handler will interrupt the request processing."
msgstr ""

# 6f52cea787dc4454a6fa2422bb3f7c07
# c6b432bfcb124706921c6d0e313f04a2
# 8fa7a3b8722241889e400181874b09ec
# 6fbb077d9a5d4f0d9c01b9e502792ff0
# 67a4d5ed890c4fff86ba623903f31f86
# 78a1a2baf03a41c4b74d6ca8b42310b5
# 45c28828f8674165a2c25227dcbd69be
#: ../develop/addons/components/events.rst:30
#: ../develop/addons/components/events.rst:122
#: ../develop/plone/i18n/translating_content.rst:61
#: ../develop/plone/members/member_basics.rst:186
#: ../develop/plone/serving/http_request_and_response.rst:148
#: ../develop/plone/serving/http_request_and_response.rst:456
#: ../develop/plone/serving/http_request_and_response.rst:541
msgid "For more information, see:"
msgstr ""

# 14fc549480344137a0138aa1b21bbe7d
# a68230f4ac314dafbf2220aee13f4a15
#: ../develop/addons/components/events.rst:32
#: ../develop/addons/components/events.rst:126
msgid ""
"http://plone.org/products/dexterity/documentation/manual/five.grok/core-"
"components/events"
msgstr ""

# 2058f529840243da89a0a9a5775a854a
#: ../develop/addons/components/events.rst:35
msgid "Registering an event handler"
msgstr ""

# bd7e4da8f93a4d9e9dc693f49c1ebfa0
#: ../develop/addons/components/events.rst:37
msgid "Plone events can be scoped:"
msgstr ""

# 7b803bf7f25a4d99bb4f5b823bfb2afe
#: ../develop/addons/components/events.rst:39
msgid "*globally* (no scope)"
msgstr ""

# 3fafa262ce7547b9afc1acbe61e2ddb4
#: ../develop/addons/components/events.rst:40
msgid "per *content type*"
msgstr ""

# 009e30b78fb5466ea0af61a59db720dd
#: ../develop/addons/components/events.rst:44
msgid "Example: Register an event-handler on your contenttype's creation"
msgstr ""

# 55a3ad100c9b4c1f8b4c4a78b9517318
#: ../develop/addons/components/events.rst:47
msgid "In your.product/your/product/configure.zcml insert::"
msgstr ""

# 7b57c7c0c8364dbb88b7557aea4c7fcc
#: ../develop/addons/components/events.rst:56
msgid ""
"The first line defines to which interface you want to bind the execution of "
"your code, which means here, that the code will only be executed if the "
"object is one of your contenttype's. If you want this to be interface-"
"agnostic, insert an asterix as a wildcard instead."
msgstr ""

# 8a433732cf7e466383a7530068b286c0
#: ../develop/addons/components/events.rst:60
msgid ""
"The second line defines the event on which this should happen, which is here"
" 'IObjectInitializedEvent'. For more available possible events to be used as"
" a trigger, see :doc:`event handler documentation "
"</external/plone.app.dexterity/docs/advanced/event-handlers>`"
msgstr ""

# 458a4b4746df49779f46fef932645ecf
#: ../develop/addons/components/events.rst:63
msgid ""
"The third line gives the path to the script that is supposed to be executed."
msgstr ""

# 9ef5aa97b50047e3bf3aa51ae740588e
#: ../develop/addons/components/events.rst:65
msgid "Create your.product/your/product/your_python_file.py and insert::"
msgstr ""

# 5c9c3a2b38bd4300a37c175f32526dc8
#: ../develop/addons/components/events.rst:74
msgid "For Dexterity-contenttype's and additional ZOPE-Illumination see also:"
msgstr ""

# 7876ec3f1f534f14aebea0b8e6c14169
#: ../develop/addons/components/events.rst:72
msgid ""
":doc:`event handler documentation "
"</external/plone.app.dexterity/docs/advanced/event-handlers>`"
msgstr ""

# 46ab508ebece49e3ae4cd147e730b0ea
#: ../develop/addons/components/events.rst:77
msgid "Subscribing using the ``grok`` API"
msgstr ""

# 1604d5e690914a0484978d94f4d8d3ce
#: ../develop/addons/components/events.rst:81
msgid "Since the release of Plone 4, this (grok) method is simpler."
msgstr ""

# 4693fa6030b34ebeb9f507e48d1f5525
#: ../develop/addons/components/events.rst:83
msgid ""
"Example subscription which subscribes a content type to add and edit "
"events::"
msgstr ""

# 5857a4c74a754aee818b586f7ab018c6
#: ../develop/addons/components/events.rst:107
msgid "Example subscription which subscribes events without context::"
msgstr ""

# b85d9369ba7f405e85850af6beeff354
#: ../develop/addons/components/events.rst:124
msgid ":doc:`Using Grok </develop/addons/components/grok>`"
msgstr ""

# 92bdb90ce96b4ff5936c32b466d129ad
#: ../develop/addons/components/events.rst:129
msgid "Subscribing using ZCML"
msgstr ""

# c85e1ef770ba4036bc98e9ef9720511d
#: ../develop/addons/components/events.rst:131
msgid "Subscribing to a global event using :term:`ZCML`."
msgstr ""

# 4e5dc98690db43778d677440d7fa106a
#: ../develop/addons/components/events.rst:140
msgid "For this event, the Python code in ``smartcard.py`` would be::"
msgstr ""

# 30599dbff6ce4e77b58c627c03892598
#: ../develop/addons/components/events.rst:148
msgid ""
"Custom event example subscribing to all ``IMyEvents`` when fired by "
"``IMyObject``::"
msgstr ""

# ad7b04d042184cad8047f3e881771f14
#: ../develop/addons/components/events.rst:157
msgid "Life cycle events example::"
msgstr ""

# 77ffd57748bf45a29dec5986ff873c66
#: ../develop/addons/components/events.rst:168
msgid "Subscribing using Python"
msgstr ""

# 9a201706472142eba84d24bbdb8b6a65
#: ../develop/addons/components/events.rst:170
msgid ""
"The following subscription is valid through the process life cycle. In unit "
"tests, it is important to clear test event handlers between the test steps."
msgstr ""

# f2e236ebb03b46a785b3bdcaa56b2868
#: ../develop/addons/components/events.rst:192
msgid "Firing an event"
msgstr ""

# 814b7b4bdd98464298afc627992d00c6
#: ../develop/addons/components/events.rst:194
msgid ""
"Use ``zope.event.notify()`` to fire event objects to their subscribers."
msgstr ""

# 86417af53a3944d3bdb7bcda591ff4e4
#: ../develop/addons/components/events.rst:196
msgid "Example of how to fire an event in unit tests::"
msgstr ""

# 2a6e5fd050b94116ae23cab49fdf5581
#: ../develop/addons/components/events.rst:206
msgid "Event types"
msgstr ""

# cfd6d4167a384fbfb40fcdbdc9cb2415
#: ../develop/addons/components/events.rst:209
msgid "*Creation* events"
msgstr ""

# 30d09aa48fd44ed2b6e82d3087176bc3
#: ../develop/addons/components/events.rst:213
msgid "``Products.Archetypes.interfaces.IObjectInitializedEvent``"
msgstr ""

# 070ee585cbab4c35a59a4631fef31121
#: ../develop/addons/components/events.rst:212
msgid ""
"is fired for an Archetypes-based object when it's being initialised; i.e.  "
"when it's being populated for the first time."
msgstr ""

# 0f4de4dbbbcb42e59ffcf9660873650c
#: ../develop/addons/components/events.rst:217
msgid "``Products.Archetypes.interfaces.IWebDAVObjectInitializedEvent``"
msgstr ""

# 03dad1ee30e54619bcf2136b43250531
#: ../develop/addons/components/events.rst:216
msgid ""
"is fired for an Archetypes-based object when it's being initialised via "
"WebDAV."
msgstr ""

# 8796323392e54ab7817e4c65db967753
#: ../develop/addons/components/events.rst:221
msgid "``zope.lifecycleevent.IObjectCreatedEvent``"
msgstr ""

# 5dee535f7e2a45c2a503a7be07cf94e2
#: ../develop/addons/components/events.rst:220
msgid ""
"is fired for all Zopeish objects when they are being created (they don't "
"necessarily need to be content objects)."
msgstr ""

# 6c3a7b1fcd9140f8887bf8bb88722c3a
#: ../develop/addons/components/events.rst:225
msgid ""
"Archetypes and Zope 3 events might not be compatible with each other. Please"
" see links below."
msgstr ""

# 7c84a5735597406c8fc16f9dee92d5ca
#: ../develop/addons/components/events.rst:228
msgid "Other resources:"
msgstr ""

# 64107700b95f4205b96198c21ad7ae62
#: ../develop/addons/components/events.rst:230
msgid ""
"http://plone.org/documentation/manual/developer-manual/archetypes/other-"
"useful-archetypes-features/how-to-use-events-to-hook-the-archetypes-"
"creation-process"
msgstr ""

# 6d6113e6ad69476290e902c852568844
#: ../develop/addons/components/events.rst:232
msgid "http://n2.nabble.com/IObjectInitializedEvent-tp4784897p4784897.html"
msgstr ""

# 83a0dc20524f4d7eb52acef3d229a525
#: ../develop/addons/components/events.rst:236
msgid "*Modified* events"
msgstr ""

# a4b7559d5b3847729e863d593009a2ba
#: ../develop/addons/components/events.rst:238
msgid ""
"Two different content event types are available and might work differently "
"depending on your scenario:"
msgstr ""

# 6f0163c7739a4d76945b4accf9cde5cf
#: ../develop/addons/components/events.rst:243
msgid "``Products.Archetypes.interfaces.IObjectEditedEvent``"
msgstr ""

# 132de8494bff4277bdb45de9a1215781
#: ../develop/addons/components/events.rst:242
msgid ""
"called for Archetypes-based objects that are not in the creation stage any "
"more."
msgstr ""

# 9a9d218de7fd44da9209b67e5239d1b1
#: ../develop/addons/components/events.rst:247
msgid ""
"``Products.Archetypes.interfaces.IObjectEditedEvent`` is fired after "
"``reindexObject()`` is called. If you manipulate your content object in a "
"handler for this event, you need to manually reindex new values, or the "
"changes will not be reflected in the ``portal_catalog``."
msgstr ""

# 4213dc6a8c704f6c8d0207919c83e3ba
#: ../develop/addons/components/events.rst:253
msgid "``zope.lifecycleevent.IObjectModifiedEvent``"
msgstr ""

# 12706c00a71f4a9dbd78ffd1cec94f29
#: ../develop/addons/components/events.rst:253
msgid ""
"called for creation-stage events as well, unlike the previous event type."
msgstr ""

# d1dfc16276824bb3b7effc3f26bb1795
#: ../develop/addons/components/events.rst:256
msgid "``Products.Archetypes.interfaces.IWebDAVObjectEditedEvent``"
msgstr ""

# 3d037fe2e6594cbba3706726bf892009
#: ../develop/addons/components/events.rst:256
msgid ""
"called for Archetypes-based objects when they are being edited via WebDAV."
msgstr ""

# 1e4d42e2c32442ba8dc61b798f2a1089
#: ../develop/addons/components/events.rst:259
msgid "``Products.Archetypes.interfaces.IEditBegunEvent``"
msgstr ""

# cb46d69fd7854991a2b9f72cb05db28f
#: ../develop/addons/components/events.rst:259
msgid "called for Archetypes-based objects when an edit operation is begun."
msgstr ""

# 06114b4cdd3e4493aeb2722f167a3e06
#: ../develop/addons/components/events.rst:263
msgid "``Products.Archetypes.interfaces.IEditCancelledEvent``"
msgstr ""

# 9438c3eaa25c478d92b1c061b94f0a58
#: ../develop/addons/components/events.rst:262
msgid ""
"called for Archetypes-based objects when an edit operation is canceled."
msgstr ""

# 77355a13a3ab44a9a6db9710da074feb
#: ../develop/addons/components/events.rst:266
msgid "*Delete* events"
msgstr ""

# dd1ab9993fcd425780900d3e2dcbd75b
#: ../develop/addons/components/events.rst:268
msgid ""
"Delete events can be fired several times for the same object. Some delete "
"event transactions are rolled back."
msgstr ""

# 3a42415e7dbd4642887a965743d0c63f
#: ../develop/addons/components/events.rst:271
msgid ""
"Read more about Delete events in `this discussion "
"<http://plone.293351.n2.nabble.com/Event-on-object-deletion-"
"td3670562.html>`_."
msgstr ""

# 65181904d1a6444cacd1dffbdc741300
#: ../develop/addons/components/events.rst:274
msgid "*Copy* events"
msgstr ""

# 1c897582d8864782adfcf11b65617835
#: ../develop/addons/components/events.rst:277
msgid "``zope.lifecycleevent.IObjectCopiedEvent``"
msgstr ""

# 3e203be24e93415fa95669372ca23be9
#: ../develop/addons/components/events.rst:277
msgid "is triggered when an object is copied."
msgstr ""

# 35acfb7adf7a431bb7037a85e02f3a9f
#: ../develop/addons/components/events.rst:280
msgid "*Workflow* events"
msgstr ""

# 3a4167ca6e114e9483c168966841d1c5
#: ../develop/addons/components/events.rst:283
msgid "``Products.DCWorkflow.interfaces.IBeforeTransitionEvent``"
msgstr ""

# fc6410baff144f7b81216105d0e7780c
#: ../develop/addons/components/events.rst:283
msgid "is triggered before a workflow transition is executed."
msgstr ""

# 154ff26704ba45b5b551d89eefcc735a
#: ../develop/addons/components/events.rst:286
msgid "``Products.DCWorkflow.interfaces.IAfterTransitionEvent``"
msgstr ""

# 41056c8083be43bd98f955f9c388e277
#: ../develop/addons/components/events.rst:286
msgid "is triggered after a workflow transition has been executed."
msgstr ""

# a2d09b883a1046b394dc454e0cf0b52d
#: ../develop/addons/components/events.rst:288
msgid ""
"The DCWorkflow events are low-level events that can tell you a lot about the"
" previous and current states."
msgstr ""

# 77492b384a3f4f789fbc937887550025
#: ../develop/addons/components/events.rst:294
msgid "``Products.CMFCore.interfaces.IActionSucceededEvent``"
msgstr ""

# a45952f11211418cb1354e3382a258ca
#: ../develop/addons/components/events.rst:292
msgid ""
"this is a higher level event that is more commonly used to react after a "
"workflow action has completed."
msgstr ""

# 71a6f380cd7d45deb42e9529f83f52b5
#: ../develop/addons/components/events.rst:297
msgid "*Zope startup* events"
msgstr ""

# df6fba5e478243d5ac534a033269e078
#: ../develop/addons/components/events.rst:301
msgid "``zope.processlifetime.IProcessStarting``"
msgstr ""

# 51f84449ebbe41b6864ddc3759e4d487
#: ../develop/addons/components/events.rst:300
msgid ""
"is triggered after component registry has been loaded and Zope is starting "
"up."
msgstr ""

# 2f45991529774f8c8b6f493da715149e
#: ../develop/addons/components/events.rst:305
msgid "``zope.processlifetime.IDatabaseOpened``"
msgstr ""

# 83cb83e918ba45ecbc94ba602eb9edda
#: ../develop/addons/components/events.rst:304
msgid "is triggered after the main ZODB database has been opened."
msgstr ""

# c23891ee369b4636b782c456e468a0a1
#: ../develop/addons/components/events.rst:308
msgid "Asynchronous event handling"
msgstr ""

# 6083c3a767b2423f8fdc39e599c2df2f
#: ../develop/addons/components/events.rst:310
msgid ""
"http://stackoverflow.com/questions/15875088/running-plone-subscriber-events-"
"asynchronously"
msgstr ""

# 798ead9f2dc8404cbbbf9440d7b662c7
# b70f3f17cc834fc6ad565c86589f52f9
# 826412f115f944a994b8499463c8b78a
# 225a1d0a716744c39bb4ffdb1d5dd714
# 270877f1610c497697312399163b6631
# 99f1f660f9224ecf8364ebbf788aca04
# e42b2907fc5d4447830e640e944989c0
# 4ecf567708c54ecdacb26baebf02776e
# 3f9b7a5c39d14e9498c5968e076ffb99
# 30781e41067e47c6b371f5ce6b9973bb
#: ../develop/addons/components/events.rst:313
#: ../develop/addons/components/interfaces.rst:110
#: ../develop/plone/content/archetypes/fields.rst:590
#: ../develop/plone/content/history.rst:15
#: ../develop/plone/forms/files.rst:461
#: ../develop/plone/misc/commandline.rst:46
#: ../develop/plone/persistency/persistent.rst:131
#: ../develop/plone/persistency/persistent.rst:236
#: ../develop/plone/serving/http_request_and_response.rst:293
#: ../develop/plone/sessions/login.rst:124
msgid "See also"
msgstr ""

# 11a6be11335349a79641b8c5ccccc1b0
#: ../develop/addons/components/events.rst:315
msgid "https://pypi.python.org/pypi/zope.event/3.4.1"
msgstr ""

# 142733873c24469bbc5469733e714284
#: ../develop/addons/components/events.rst:317
msgid ""
"http://apidoc.zope.org/++apidoc++/ZCML/http_co__sl__sl_namespaces.zope.org_sl_zope/subscriber/index.html"
msgstr ""

# da9d0bb9803d48238783c0e39a6bff28
#: ../develop/addons/components/events.rst:319
msgid "``zope.component.registry``"
msgstr ""

# e215ecc10321455b94754b157f8d1cb0
#: ../develop/addons/components/genericsetup.rst:3
msgid "Add-on installation and export framework: GenericSetup"
msgstr ""

# 62e2ae26c1404c93b4ab6a41130134e6
#: ../develop/addons/components/genericsetup.rst:7
msgid ""
"GenericSetup is a framework to modify the Plone site during add-on product "
"installation and uninstallation. It provides XML-based rules to change the "
"site settings easily."
msgstr ""

# caff8c2b4b194d8aad75c74ab0f15d90
#: ../develop/addons/components/genericsetup.rst:16
msgid ""
"GenericSetup is an XML-based way to import and export Plone site "
"configurations."
msgstr ""

# 04af6edf184d440ba91f358b3203e6a0
#: ../develop/addons/components/genericsetup.rst:18
msgid "It is mainly used to prepare the Plone site for add-on products, by:"
msgstr ""

# 79269d8a4040494a8249ceff8c8b8988
#: ../develop/addons/components/genericsetup.rst:20
msgid "registering CSS files,"
msgstr ""

# 714d1fefa9dc4352bf92cdc45eb73348
#: ../develop/addons/components/genericsetup.rst:21
msgid "registering Javascript files,"
msgstr ""

# fa2f0f268d4c4a6aa36e1bb2c3032d36
#: ../develop/addons/components/genericsetup.rst:22
msgid "setting various properties,"
msgstr ""

# 0e8fd4303b8746aeba013c6589fd2894
#: ../develop/addons/components/genericsetup.rst:23
msgid "registering portlets,"
msgstr ""

# c5dfa16efff344dfb57aff6eed0eb8b4
#: ../develop/addons/components/genericsetup.rst:24
msgid "registering portal_catalog search query indexes,"
msgstr ""

# b050ce43051d4a499d1d3a5bfdfcc25a
#: ../develop/addons/components/genericsetup.rst:25
msgid "...and so on..."
msgstr ""

# bb9b2d821ed0423fa8f9eae05a10bc1e
#: ../develop/addons/components/genericsetup.rst:27
msgid ""
"GenericSetup is mostly used to apply add-on-specific changes to the site "
"configuration, and to enable add-on-specific behavior when the add-on "
"installer is run."
msgstr ""

# cbe742357dab4fd1a4f3a5cadec47e61
#: ../develop/addons/components/genericsetup.rst:31
msgid ""
"GenericSetup XML files are usually in a ``profiles/default`` folder inside "
"the add-on product."
msgstr ""

# eef8b1d1ce3646a6ab3fd5f34132b2fa
#: ../develop/addons/components/genericsetup.rst:34
msgid ""
"All run-time configurable items, like viewlets order through ``/@@manage-"
"viewlets`` page, are made repeatable using GenericSetup profile files."
msgstr ""

# 3be1588cb03149ffb640ae100260acf3
#: ../develop/addons/components/genericsetup.rst:38
msgid ""
"You do not need to hand-edit GenericSetup profile files. You can always "
"change the configuration options through Plone or using the Zope Management "
"Interface. Then you can export the resulting profile as an XML file, using "
"the *Export* tab in the ``portal_setup`` ZMI tool."
msgstr ""

# d986ce762c514254953d1be931844ff2
#: ../develop/addons/components/genericsetup.rst:44
msgid ""
"Directly editing XML profile files does not change anything on the site, "
"even after Zope restart. This is because run-time configurable items are "
"stored in the database. If you edit profile files, you need reimport edited "
"files using the ``portal_setup`` tool or rerun the add-on product installer "
"in Plone control panel. This import will read XML files and change Plone "
"database accordingly."
msgstr ""

# 97763d16771e48f68fbc3874e1eb2f37
#: ../develop/addons/components/genericsetup.rst:55
msgid "Difference between ZCML and GenericSetup"
msgstr ""

# 803def3d7e5f471fa22bf513d3b6b63b
#: ../develop/addons/components/genericsetup.rst:57
msgid ""
"ZCML changes affect loaded Python code in **all** sites inside Zope whereas "
"GenericSetup XML files affect only one Plone site and its database. "
"GenericSetup XML files are always database changes."
msgstr ""

# b6f1655009d54c12b5003810927ec4fd
#: ../develop/addons/components/genericsetup.rst:62
msgid ""
"Relationship between ZCML and site-specific behavior is usually done using "
":doc:`layers </develop/plone/views/layers>`. ZCML directives, like viewlets "
"and views, are registered to be active on a certain layer only using "
"``layer`` attribute. When GenericSetup XML is imported through "
"``portal_setup``, or the product add-on installer is run for a Plone site, "
"the layer is activated for the particular site only, enabling all views "
"registered for this layer."
msgstr ""

# baa34e2c39ad415b9887f4b9815bd724
#: ../develop/addons/components/genericsetup.rst:74
msgid ""
"The ``metadata.xml`` file (add-on dependency and version information) is "
"read during Plone start-up. If this file has problems your add-on might not "
"appear in the installer control panel."
msgstr ""

# 817b9de8fd8045ca907a13202beeca20
#: ../develop/addons/components/genericsetup.rst:78
msgid ""
"`GenericSetup tutorial "
"<http://plone.org/documentation/tutorial/genericsetup>`_"
msgstr ""

# 3d49338ce94142bfbfbfa28b2942becb
#: ../develop/addons/components/genericsetup.rst:80
msgid ""
"`GenericSetup product page "
"<https://pypi.python.org/pypi/Products.GenericSetup/1.4.5>`_."
msgstr ""

# cd4aef235ceb4eaebff599c7211955cd
#: ../develop/addons/components/genericsetup.rst:82
msgid ""
"`Source code "
"<http://svn.zope.org/Products.GenericSetup/trunk/Products/GenericSetup/README.txt?rev=87436&view=auto>`_."
msgstr ""

# e5b7b524f5f44766b588802287aff85c
# e1cb91b6c75e4609998b78a45cd15400
# 93aa48f8f78249389b1c902e034ebafd
# 489f93b1d3484bfd8e66e7ecb1254f40
# fa8f259874d344f49230c61db0942d84
# 393f7b08033f42cf9d09edc9be26e712
# f757eb8b63e04e699fb4ee9ff57a2641
# 454c3da1148047f39e42f9dc0b42c49e
# e0a3b31f36ad4bc487c8c3f144af93eb
# 4b125d8198dd49f4a9e4bed5cece6c51
# d8366c553ecd4026995b1dd7b9f26bc8
# ee746e0f665341aea70edeba2decb883
# 67586a600e964b1fb33ea641b5e92396
# cd62f90631d542b3bb692837fc32a367
# 29cc3bcba95647c6bd0989e5ed645cec
# 08e4354de47d4e58b67a71895cb3d4fa
# 82fc1bb601d44f47bedaa51a6d45f868
# 5f60802941fd4d438df99664ec247893
#: ../develop/addons/components/genericsetup.rst:0
#: ../develop/plone/content/archetypes/archetypes_references.rst:0
#: ../develop/plone/content/archetypes/converting-content-types.rst:0
#: ../develop/plone/content/dynamic_views.rst:0
#: ../develop/plone/forms/z3c.form.rst:0
#: ../develop/plone/functionality/expressions.rst:0
#: ../develop/plone/i18n/translating_content.rst:0
#: ../develop/plone/members/member_profile.rst:0
#: ../develop/plone/members/member_profile.rst:0
#: ../develop/plone/misc/asyncronoustasks.rst:0
#: ../develop/plone/searching_and_indexing/query.rst:0
#: ../develop/plone/searching_and_indexing/query.rst:0
#: ../develop/plone/searching_and_indexing/query.rst:0
#: ../develop/plone/serving/http_request_and_response.rst:0
#: ../develop/plone/serving/http_request_and_response.rst:0
#: ../develop/plone/serving/http_request_and_response.rst:0
#: ../develop/plone/serving/traversing.rst:0
#: ../develop/plone/sessions/login.rst:0
msgid "Todo"
msgstr ""

# d3192375373742048daff7eb4de79b07
#: ../develop/addons/components/genericsetup.rst:84
msgid "should the link be specifically to rev=87436?"
msgstr ""

# daea8b03eb4641f89ca036dd0b7b295e
#: ../develop/addons/components/genericsetup.rst:88
msgid "Creating a profile"
msgstr ""

# e3b24946f2b34c3ca68867f0678855fa
#: ../develop/addons/components/genericsetup.rst:90
msgid ""
"You use ``<genericsetup>`` directive in your add-on product's "
"``configure.zcml``. The name for the default profile executed by the Plone "
"add-on installer is \"default\". If you need different profiles for e.g. "
"unit testing you can declare them here."
msgstr ""

# 7f92dc561ad54c559fb3b36450cec7ba
#: ../develop/addons/components/genericsetup.rst:95
msgid ""
"Profile XML files go in the ``profiles/default`` folder inside your add-on "
"product."
msgstr ""

# 62f27f6dbe76464dab5d1c46098d72c0
#: ../develop/addons/components/genericsetup.rst:118
msgid "Add-on-specific issues"
msgstr ""

# df65b0ddd52b463fa7921b66afaf9221
#: ../develop/addons/components/genericsetup.rst:120
msgid "Add-on products may contain:"
msgstr ""

# b17cb20478a34714a59c8c5c36fb4143
#: ../develop/addons/components/genericsetup.rst:122
msgid ""
"A default GenericSetup XML profile which is automatically run when the "
"product is installed using the quick-installer. The profile name is "
"\"default\"."
msgstr ""

# 4c8cdb2ba0ff48beace5b55bf32fda0e
#: ../develop/addons/components/genericsetup.rst:126
msgid ""
"Other profiles which the user may install using the ``portal_setup`` "
"*Import* tab, or which can be manually enabled for unit tests."
msgstr ""

# 33aa7ab6563e4ae2a6c88b18d27ff58f
#: ../develop/addons/components/genericsetup.rst:128
msgid ""
"An \"Import various\" step, which runs Python code every time the "
"GenericSetup XML profile is installed."
msgstr ""

# 7fdd8da9398b4896b3df8745d8e55f49
#: ../develop/addons/components/genericsetup.rst:130
msgid "For more information about custom import steps, see:"
msgstr ""

# 1ee4575b461f47babdff376abb36c423
#: ../develop/addons/components/genericsetup.rst:132
msgid ""
"http://n2.nabble.com/indexing-of-content-created-by-Generic-Setup-"
"tp4454703p4454703.html"
msgstr ""

# d8ea7538d7f444be97ac24f7c5ad541d
#: ../develop/addons/components/genericsetup.rst:135
msgid "Listing available profiles"
msgstr ""

# 96e8c720b05d4b4db31019767e33b928
#: ../develop/addons/components/genericsetup.rst:146
msgid "Results::"
msgstr ""

# f04e5c96cc0540a2a9ae471ba01bd7ba
#: ../develop/addons/components/genericsetup.rst:155
msgid "Installing a profile"
msgstr ""

# 670ad34ff6c64f9aa962267d6370f369
#: ../develop/addons/components/genericsetup.rst:157
msgid ""
"This is usually unit test specific question how to enable certain add-ons "
"for unit testing."
msgstr ""

# 8ea35812fea64a99809675ae56aff779
#: ../develop/addons/components/genericsetup.rst:160
msgid "PloneTestCase.setupPloneSite"
msgstr ""

# 4b75b7c7054c45b48ebd15cdebc18581
#: ../develop/addons/components/genericsetup.rst:162
msgid ""
"See *Running add-on installers and extensions profiles for unit tests*."
msgstr ""

# 99f24a7e31794547b6461cc3bc2e0b11
#: ../develop/addons/components/genericsetup.rst:165
msgid "Manually"
msgstr ""

# f22aa912b16f4173892d018b702b95aa
#: ../develop/addons/components/genericsetup.rst:167
msgid ""
"You might want to install profiles manually if they need to be enabled only "
"for certain tests."
msgstr ""

# 82d87371f89d4d40856b02a170d474af
#: ../develop/addons/components/genericsetup.rst:169
msgid ""
"The profile name is in the format ``profile-${product name}:${profile id}``"
msgstr ""

# d14f2113ae4048c58289620e11f961ef
# 2d7c3a2328014ebc9d473583a454722f
#: ../develop/addons/components/genericsetup.rst:171
#: ../develop/plone/content/rename.rst:79
msgid "Unit testing example::"
msgstr ""

# af73eda7643443b2a7d2f753bfec1438
# f85309e82fa04657bc4730add9b65e9d
#: ../develop/addons/components/genericsetup.rst:177
#: ../develop/addons/components/genericsetup.rst:358
msgid "Upgrade steps"
msgstr ""

# 0e5518642e4040d4b1030cd8106898c7
#: ../develop/addons/components/genericsetup.rst:179
msgid "If you need to migrate data or settings on new add-on versions"
msgstr ""

# 7ec9b78e57a84200b1e210c42c921d41
#: ../develop/addons/components/genericsetup.rst:181
msgid ""
"http://stackoverflow.com/questions/15316583/how-to-define-a-procedure-to-"
"upgrade-an-add-on"
msgstr ""

# e551f17e23c44f43b659b6cae91949bc
#: ../develop/addons/components/genericsetup.rst:184
msgid "Uninstall profile"
msgstr ""

# 3a0b6b2c3fa54a52be0165c5bc0cf0e7
#: ../develop/addons/components/genericsetup.rst:186
msgid ""
"For the theory, see: `<http://plone.org/documentation/kb/genericsetup"
"/creating-an-uninstall-profile>`_"
msgstr ""

# d19e9ecbb8204cdf8c06d1649fdee1f3
#: ../develop/addons/components/genericsetup.rst:189
msgid ""
"For an example, see the `collective.pdfpeek source code "
"<http://svn.plone.org/svn/collective/collective.pdfpeek/trunk/collective/pdfpeek/profiles/>`_."
msgstr ""

# 9b24c3d6c209469c9f93daa8cb8f75d1
# 8148f72ebe0c4dd1b043521ac09224ea
#: ../develop/addons/components/genericsetup.rst:193
#: ../develop/plone-coredev/intro.rst:10
msgid "Dependencies"
msgstr ""

# fa93aafb83204163962ea154e207fdf5
#: ../develop/addons/components/genericsetup.rst:195
msgid ""
"GenericSetup profile can contain dependencies to other add-on product "
"installers and profiles."
msgstr ""

# e252a996d0f642f58bab1c9a637a2c8a
#: ../develop/addons/components/genericsetup.rst:197
msgid ""
"`More information about GenericSetup dependencies "
"<http://plone.org/products/plone/roadmap/195/>`_."
msgstr ""

# 7a80116612d041b4b367f864b3b2d672
#: ../develop/addons/components/genericsetup.rst:199
msgid ""
"For example, if you want to declare dependency to *collective.basket* add-on"
" product, so that it is automatically installed when your add-on installed "
"you can use the declaration below. This way, you can be sure that all "
"layers, portlets, etc. features which require database changes are usable "
"from *collective.basket* add-on products when your add-on product is run."
msgstr ""

# 164f3c18d1904c8bbd35677795a36135
#: ../develop/addons/components/genericsetup.rst:204
msgid "``metadata.xml``:"
msgstr ""

# 0896258c57b848b0a4d2e6cbd8a79efc
#: ../develop/addons/components/genericsetup.rst:216
msgid "*collective.basket* declares the profile in its configure.zcml:"
msgstr ""

# a902895adfd64e648ae0375aeeff3cd2
#: ../develop/addons/components/genericsetup.rst:231
msgid ""
"Unlike other GenericSetup XML files, ``metadata.xml`` is read on the start-"
"up and this read is cached. Always restart Plone after editing "
"``metadata.xml``. If your ``metadata.xml`` file contains syntax errors or "
"dependencies to a missing or non-existent product (e.g. due to a typo in a "
"name) your add-on will disappear from the installation control panel."
msgstr ""

# b35ff87fe40647a6bc8ec9e09fd9174c
#: ../develop/addons/components/genericsetup.rst:241
msgid ""
"The ``Products.*`` Python namespace needs to declare generic setup "
"dependencies specially: You actually do not mention ``Products.xxx`` space."
msgstr ""

# 4af399404dc946c0b33f8a778fc43144
#: ../develop/addons/components/genericsetup.rst:245
msgid "To declare dependency to ``Products.Carousel``:"
msgstr ""

# 172c7e5e5ace45dea891bbc2e4902336
#: ../develop/addons/components/genericsetup.rst:260
msgid "Custom installer code (``setuphandlers.py``)"
msgstr ""

# 91e9f5cedc064bc9bd42c6cded8cfb22
#: ../develop/addons/components/genericsetup.rst:262
msgid ""
"Besides out-of-the-box XML steps which easily provide both install and "
"uninstall, GenericSetup provides a way to run a custom Python code when your"
" add-on product is installed and uninstalled. This is not very "
"straightforward process, though."
msgstr ""

# e6fc7da03c9e446eaab6ef238116ccd5
#: ../develop/addons/components/genericsetup.rst:267
msgid ""
"The best practice is to create a ``setuphandlers.py`` file which contains "
"function ``setupVarious()`` which runs required Python code to make changes "
"to Plone site object. This function is registerd as a custom "
"``genericsetup:importStep`` in XML."
msgstr ""

# 45395dbeaa8c40ec918a65c0125e35c6
#: ../develop/addons/components/genericsetup.rst:275
msgid ""
"When you do custom ``importStep``\\s, remember to write uninstallation code "
"as well."
msgstr ""

# 2eab4fb8bb5641eeabb9c583e26f95ab
#: ../develop/addons/components/genericsetup.rst:278
msgid ""
"However, the trick is that all GenericSetup import steps, including your "
"custom step, are run for *every* add-on product when they are installed. "
"Thus, if your need to run code which is specific **during your add-on "
"install only** you need to use a marker text file which is checked by "
"GenericSetup context."
msgstr ""

# 6c83a3e0c6d14faba96cede445985ac9
#: ../develop/addons/components/genericsetup.rst:285
msgid ""
"Also you need to register this custom import step in ``configure.zcml``"
msgstr ""

# 3a6eed1a0965495fb10afb4abb945dad
#: ../develop/addons/components/genericsetup.rst:303
msgid "``setuphandlers.py`` example"
msgstr ""

# c43be8f5d0864c40a16d113442d72b34
#: ../develop/addons/components/genericsetup.rst:330
msgid ""
"And add a dummy text file "
"``your.package/your/package/profiles/default/your.package.marker.txt``::"
msgstr ""

# 98efe1a975e54e4d9fb271e1abbedb78
# 6d7a99340fe74583ac36fe0d6a76d975
# 31bb072391024718bdcb310c753713e7
# 2407c744b400446aa8d8d432bc561a83
# 6cfce014f2da4df79a8751ae2ad5891e
# bc8c47ed84514f24a2370a672a3ff5d2
# fdeb86fe01f54616ae2c4b40366feca2
# e08d10c0a2cb4c709e1bddb1e2cf2d31
# 467d73e5e92c434a9948df0716845528
# b0d17c66963d430f911245f84e43d29d
# 6ce113eb762d43b895825c2085f53786
# b0000279205244b1b63d021bf0a4f7c8
# a8148396c4234790957f3ccfbd6b7088
# d47bf726e9a24293b0c17a3ef9de7144
# 4ce3b125167f4627a015d07c55836de9
# ee024f87cf204b3c9b67190c7843c2fd
# 32f6b8f13f484066a0067fa765414bf2
# e7e3605bd7dc43a1947349ea01b97437
# 56ddd19ead9e451cb14b4a4ba5ea43d3
# 908c523309fb498eb18938009221b881
# a865bd7e71a445a58a58c9c27491d347
# 2992e6fe026c472a930b5dd3bc639db8
# 4b5acedd6df24f779fa737f60905f710
# 58820cb6927a40e39eb81654c6c430cb
# f6d6c3f516c34d3fad6326b90701b9c5
#: ../develop/addons/components/genericsetup.rst:335
#: ../develop/addons/components/genericsetup.rst:346
#: ../develop/addons/components/genericsetup.rst:544
#: ../develop/plone/content/importexport.rst:205
#: ../develop/plone/forms/manual.rst:110
#: ../develop/plone/forms/z3c.form.rst:1761
#: ../develop/plone/functionality/portlets.rst:89
#: ../develop/plone/i18n/internationalisation.rst:446
#: ../develop/plone/i18n/internationalisation.rst:604
#: ../develop/plone/i18n/language.rst:208
#: ../develop/plone/misc/paster_templates.rst:25
#: ../develop/plone/misc/paster_templates.rst:81
#: ../develop/plone/misc/paster_templates.rst:111
#: ../develop/plone/misc/paster_templates.rst:160
#: ../develop/plone/misc/paster_templates.rst:175
#: ../develop/plone/misc/paster_templates.rst:206
#: ../develop/plone/misc/paster_templates.rst:256
#: ../develop/plone/persistency/persistent.rst:103
#: ../develop/plone/searching_and_indexing/query.rst:454
#: ../develop/plone/searching_and_indexing/query.rst:862
#: ../develop/plone/serving/http_request_and_response.rst:561
#: ../develop/plone/serving/xmlrpc.rst:107
#: ../develop/plone/views/browserviews.rst:60
#: ../develop/plone/views/browserviews.rst:738
#: ../develop/plone/views/layers.rst:183
msgid "More information"
msgstr ""

# 26fd82b4929e4756a823684cc9a753f1
#: ../develop/addons/components/genericsetup.rst:337
msgid "http://keeshink.blogspot.com/2009/02/creating-portal-content-in.html"
msgstr ""

# 7ec27530b22440d9b05810d9e198818f
#: ../develop/addons/components/genericsetup.rst:339
msgid ""
"http://maurits.vanrees.org/weblog/archive/2009/12/catalog (unrelated, but "
"contains pointers)"
msgstr ""

# 9221430369ae4b60bfd9e876f440dac7
#: ../develop/addons/components/genericsetup.rst:342
msgid "Overriding import step order"
msgstr ""

# d0add8d2b4ed4c28b08e4099cff57317
#: ../develop/addons/components/genericsetup.rst:344
msgid "You need ``import_steps.xml``."
msgstr ""

# 22d35e3e75be49dc936fa19ddd911e38
#: ../develop/addons/components/genericsetup.rst:348
msgid ""
"http://plone.293351.n2.nabble.com/Overriding-import-step-order-"
"td2189638.html"
msgstr ""

# 7ceaa2d87b1f4f6a97529f68047220a3
#: ../develop/addons/components/genericsetup.rst:350
msgid ""
"http://dev.communesplone.org/trac/browser/communesplone/urban/trunk/profiles/default/import_steps.xml?rev=5652"
msgstr ""

# e8fae8ade12a41c192ac47c05b2c4ac9
#: ../develop/addons/components/genericsetup.rst:353
msgid "Controlling the import step execution order"
msgstr ""

# f8f3375593b049efb51a55e03ee3d63f
#: ../develop/addons/components/genericsetup.rst:355
msgid ""
"http://plone.293351.n2.nabble.com/indexing-of-content-created-by-Generic-"
"Setup-td4454703.html"
msgstr ""

# c78f0434f7084298b7ab3e83aa6eeea6
#: ../develop/addons/components/genericsetup.rst:360
msgid ""
"You can define upgrade steps to run code only when someone upgrades your "
"product from version *x* to *y*."
msgstr ""

# 1233824e9cd44f0696bc419a0ddcad07
#: ../develop/addons/components/genericsetup.rst:363
msgid ""
"As an example, let's say that the new version of YOUR.PRODUCT defines a "
"*price* field on a content type *MyType* to be a string, but previously "
"(version 1.1.  and earlier) it was a float. Code that uses this field and "
"assumes it to be a float will break after the upgrade, so you'd like to "
"automatically convert existing values for the field to string."
msgstr ""

# 33eb70266dbc4fe7a0706eba0d1d6595
#: ../develop/addons/components/genericsetup.rst:369
msgid ""
"(Obviously, you could do this very quickly in a simple script, but having a "
"GenericSetup upgrade step means non-technical people can do it as well. As "
"it turns out, once you have the script, it's easy to put its code in an "
"upgrade step.)"
msgstr ""

# 3efbf875d9ab4f1da52fbab277ae101d
#: ../develop/addons/components/genericsetup.rst:375
msgid "Increment profile version"
msgstr ""

# 6911eb0e89284cbf9c43b38a9a5b2013
#: ../develop/addons/components/genericsetup.rst:377
msgid ""
"First increase the number of the version in the "
"``profiles/default/metadata.xml``. This version number should be an integer."
" Package version are different because they add sens like the status of the "
"addon: is it stable, is it in dev, in beta, which branch it is. A profile "
"version indicate only that you have to migrate data in the database."
msgstr ""

# 3f9687adb6b345d8b3e73c747b902002
#: ../develop/addons/components/genericsetup.rst:384
msgid "Add upgrade step"
msgstr ""

# 21f1fc99c5a042169c12ec904506d8e7
#: ../develop/addons/components/genericsetup.rst:386
msgid "Next we add an upgrade step:"
msgstr ""

# 67565608644a439faa78c6124b0feb8c
#: ../develop/addons/components/genericsetup.rst:408
msgid ""
"You can use a wildcard character for *source* to indicate an upgrade for any"
" previous version. To run the upgrade step only when upgrading from a "
"specific version, use that version's number."
msgstr ""

# 8463bf6b8731458f84087f42a6f5d52c
#: ../develop/addons/components/genericsetup.rst:412
msgid ""
"A *sortkey* can be used to indicate the order in which upgrade steps are "
"run."
msgstr ""

# a650c0fe13254dd7b985f96070dea75f
#: ../develop/addons/components/genericsetup.rst:416
msgid "Add upgrade code"
msgstr ""

# a1b9f3d02cea4e18aa5fdd6eee57f46f
#: ../develop/addons/components/genericsetup.rst:418
msgid ""
"The code for the upgrade method itself is best placed in a *upgrades.py* "
"module::"
msgstr ""

# c2f2002239c7406bbd149df415f90414
#: ../develop/addons/components/genericsetup.rst:459
msgid "Other examples of using generic setup to run import steps are below"
msgstr ""

# 38c3dc7b1fa74967bdb0da3e3665108b
#: ../develop/addons/components/genericsetup.rst:461
msgid "If you want to call types.xml use typeinfo::"
msgstr ""

# 84ffa54743324ac8ae47bd6f342067a5
#: ../develop/addons/components/genericsetup.rst:465
msgid "If you want to call workflow.xml use workflow::"
msgstr ""

# 4e62ec6d055d4238969e96622f9e08dd
#: ../develop/addons/components/genericsetup.rst:469
msgid ""
"The ids of the various default import steps are defined in the "
"import_steps.xml of CMFDefault. visit it at "
"http://svn.zope.org/CMF/branches/2.1/CMFDefault/profiles/default/import_steps.xml?logsort=date&rev=78624&view=markup"
msgstr ""

# 0b6653aa95634d41a3e95d32c33076a3
#: ../develop/addons/components/genericsetup.rst:472
msgid "XXX Fix the link above"
msgstr ""

# 3afa521714f54bc59aa145f3e514d752
#: ../develop/addons/components/genericsetup.rst:474
msgid ""
"After restarting Zope, your upgrade step should be visible in the ZMI: The "
"*portal_setup* tool has a tab *Upgrades*. Select your product profile to see"
" which upgrade steps Zope knows about for your product."
msgstr ""

# 51132ed0b2794c2d9ea13944e7fbea54
#: ../develop/addons/components/genericsetup.rst:478
msgid ""
"You can create many upgrade steps under one migration. This is useful when "
"you want to have the ability to re-run some parts of the migration and make "
"your code more re-useable (for example cook css resource of your theme)."
msgstr ""

# a237f5f1edc54c7e9a7a806c0006831b
#: ../develop/addons/components/genericsetup.rst:482
msgid ""
"Here is an example of many upgrade steps you can have to achieve on a site "
"policy:"
msgstr ""

# 156d7aac27314ecfb36fb4b77ce3987d
#: ../develop/addons/components/genericsetup.rst:538
msgid "Add-on product appears twice in the installer list"
msgstr ""

# e43b3dbfdeb4437e86eee96224a77165
#: ../develop/addons/components/genericsetup.rst:540
msgid ""
"This happens if you are developing your own add-on and keep changing things."
" You have an error in your add-on product ZCML code which causes "
"portal_quickinstaller to have two entries."
msgstr ""

# 19bda15e9c9e4acb94bfc8451ac25f3e
#: ../develop/addons/components/genericsetup.rst:546
msgid ""
"http://plone.293351.n2.nabble.com/Product-twice-in-quickinstaller-"
"td5345492.html#a5345492"
msgstr ""

# 987771fae91a49988742e75af2c41110
#: ../develop/addons/components/genericsetup.rst:549
msgid "Preventing uninstall"
msgstr ""

# 304b333aa5ee449fb353119c44131c4a
#: ../develop/addons/components/genericsetup.rst:551
msgid ""
"You might want to prevent your add-on product uninstall for some reason."
msgstr ""

# 902d61917ed049f9b7eb416628620fc6
# cf1577ffefed4379bdafbaeb1a5dfb2a
# dc18e33f4dd7469bb56fa9a4f4718545
# 0255ea54e0914be2827bc71e965f6247
# b139875c16264abf9d77dac74429eef7
# 69e97ac6bc764320a61bc77891b91cf2
# 84f557ab6af14c52af62a27c9cea90c6
# d816f6ff7559414b9dbc0906b59cb953
# 049ff576e3aa4396a9c022adc81d1257
#: ../develop/addons/components/genericsetup.rst:553
#: ../develop/addons/javascript.rst:734
#: ../develop/plone/functionality/expressions.rst:249
#: ../develop/plone/i18n/internationalisation.rst:454
#: ../develop/plone/i18n/internationalisation.rst:467
#: ../develop/plone/misc/annotations.rst:76
#: ../develop/plone/misc/paster_templates.rst:138
#: ../develop/plone/security/permissions.rst:264
#: ../develop/plone/syndication.rst:42
msgid "Example:"
msgstr ""

# 6c9a0c514ea24de798b9f3e8f85382d4
#: ../develop/addons/components/genericsetup.rst:566
msgid ""
"This example if for Extensions/install.py, old Plone 2 way of writing "
"installers"
msgstr ""

# f071fbb048724e97a81cff1aba5748f8
#: ../develop/addons/components/genericsetup.rst:571
msgid "Plone GenericSetup Reference"
msgstr ""

# 439bbede22684613bcb9294936099675
#: ../develop/addons/components/genericsetup.rst:574
msgid "portlets.xml"
msgstr ""

# 86003735829847d6abbb3c139cebd89d
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.portlets-2.4.5-py2.7.egg/plone/app/portlets/exportimport/portlets.pydocstring
#: of plone.app.portlets.exportimport.portlets:1
msgid ""
"When creating custom portlet managers, you will need to extend existing "
"portlets to be addable to that manager: ::"
msgstr ""

# 06d027b24b4b449bb4140659aeaf444d
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.portlets-2.4.5-py2.7.egg/plone/app/portlets/exportimport/portlets.pydocstring
#: of plone.app.portlets.exportimport.portlets:8
msgid ""
"You can also change the title and description of the portlet with the extend"
" attribute: ::"
msgstr ""

# 132d1acc2da54cc3a8223acd8fd40624
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.portlets-2.4.5-py2.7.egg/plone/app/portlets/exportimport/portlets.pydocstring
#: of plone.app.portlets.exportimport.portlets:17
msgid ""
"Remove a portlet definition using the 'remove' attribute so that it can no "
"longer be added via @@manage-portlets. This does not remove any assignments:"
" ::"
msgstr ""

# 5444fd5e526e4ec68ea27ae9375bb221
#: ../develop/addons/components/genericsetup.rst:579
msgid "viewlets.xml"
msgstr ""

# 7edf5c14219c4256b9e3073d04ba6060
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.viewletmanager-2.0.4-py2.7.egg/plone/app/viewletmanager/exportimport/storage.pydocstring
#: of plone.app.viewletmanager.exportimport.storage:1
msgid "The following examples would all be added into the viewlets.xml file."
msgstr ""

# f2f10d74ae75451997ac11f7e7aac0d7
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.viewletmanager-2.0.4-py2.7.egg/plone/app/viewletmanager/exportimport/storage.pydocstring
#: of plone.app.viewletmanager.exportimport.storage:3
msgid "Re-order viewlets::"
msgstr ""

# 747060790e9544b18bb49da0ad67ebed
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.viewletmanager-2.0.4-py2.7.egg/plone/app/viewletmanager/exportimport/storage.pydocstring
#: of plone.app.viewletmanager.exportimport.storage:11
msgid ""
"Move a viewlet using insert-before and insert-after (this will only affect "
"the skinname that is specified, in this case 'My Custom Theme')::"
msgstr ""

# e64a3567be3846dfb307bc0fcfba9ac0
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.viewletmanager-2.0.4-py2.7.egg/plone/app/viewletmanager/exportimport/storage.pydocstring
#: of plone.app.viewletmanager.exportimport.storage:20
msgid "Hide a viewlet (here we hide the colophon for 'My Custom Theme')::"
msgstr ""

# 495cad3155e249a6bebe100e9d46ac20
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.viewletmanager-2.0.4-py2.7.egg/plone/app/viewletmanager/exportimport/storage.pydocstring
#: of plone.app.viewletmanager.exportimport.storage:27
msgid "Unhide a specific viewlet using the remove attribute::"
msgstr ""

# 22c62043cd864d98ab956795f8a67c42
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.viewletmanager-2.0.4-py2.7.egg/plone/app/viewletmanager/exportimport/storage.pydocstring
#: of plone.app.viewletmanager.exportimport.storage:34
msgid "Unhide all viewlets for a given manager using the purge attribute::"
msgstr ""

# 74fac89cb8e94fb7bb8afc36f5f1b910
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.viewletmanager-2.0.4-py2.7.egg/plone/app/viewletmanager/exportimport/storage.pydocstring
#: of plone.app.viewletmanager.exportimport.storage:39
msgid "Hide a viewlet for all skins::"
msgstr ""

# 2d1f1f50f4f843efa6c426c338140c83
#: ../../../../../buildout-cache/python2.7/eggs/plone.app.viewletmanager-2.0.4-py2.7.egg/plone/app/viewletmanager/exportimport/storage.pydocstring
#: of plone.app.viewletmanager.exportimport.storage:45
msgid ""
"Pro Tip: Using skinname=\"*\" currently only works if the manager has "
"already been registered in each skin (see Plone Trac ticket #7166)"
msgstr ""

# f3172a2f6ada45cb9dfd618c448058e0
#: ../develop/addons/components/genericsetup.rst:584
msgid "cssregistry.xml"
msgstr ""

# 721d688c4c2b44bf8656d4f8173b6bb7
# fae0b092f32945c8ae77016b8fa4bb57
# 69b053ddb8ab497ba9b5faad95734df1
#: ../develop/addons/components/genericsetup.rst:586
#: ../develop/addons/components/genericsetup.rst:591
#: ../develop/addons/components/genericsetup.rst:596
msgid "see :ref:`resourceregistries`"
msgstr ""

# 511e8d7647de4f7f8f17cad333ed7ece
#: ../develop/addons/components/genericsetup.rst:589
msgid "jsregistry.xml"
msgstr ""

# 5aa35d43493745cca04bea1f2195ada5
#: ../develop/addons/components/genericsetup.rst:594
msgid "kssregistry.xml"
msgstr ""

# 19d69460dc4543569d189f7399f36646
#: ../develop/addons/components/genericsetup.rst:601
msgid "Resource Registries"
msgstr ""

# bb505e84e30d46f4a0d477731aa15ded
#: ../develop/addons/components/genericsetup.rst:607
msgid "Content Generation"
msgstr ""

# ee746cf9de544a05aef4a5959fba9926
#: ../../../../../buildout-cache/python2.7/eggs/Products.GenericSetup-1.7.4-py2.7.egg/Products/GenericSetup/content.pydocstring
#: of Products.GenericSetup.content:1
msgid "Filesystem exporter / importer adapters."
msgstr ""

# 1e22eb07c2f4495080cab1df9d0adbda
#: ../../../../../buildout-cache/python2.7/eggs/Products.GenericSetup-1.7.4-py2.7.egg/Products/GenericSetup/content.pydocstring
#: of Products.GenericSetup.content.FolderishExporterImporter:1
msgid "Tree-walking exporter / importer for \"folderish\" types."
msgstr ""

# 28d4cb6d0f494ee1a8652213bfd93fd6
#: ../../../../../buildout-cache/python2.7/eggs/Products.GenericSetup-1.7.4-py2.7.egg/Products/GenericSetup/content.pydocstring
#: of Products.GenericSetup.content.FolderishExporterImporter:3
msgid ""
"Folderish instances are mapped to directories within the 'structure' portion"
" of the profile, where the folder's relative path within the site "
"corresponds to the path of its directory under 'structure'."
msgstr ""

# b333de88bc32493cb07a6938ce787369
#: ../../../../../buildout-cache/python2.7/eggs/Products.GenericSetup-1.7.4-py2.7.egg/Products/GenericSetup/content.pydocstring
#: of Products.GenericSetup.content.FolderishExporterImporter:7
msgid ""
"The subobjects of a folderish instance are enumerated in the '.objects' file"
" in the corresponding directory.  This file is a CSV file, with one row per "
"subobject, with the following wtructure::"
msgstr ""

# 65c3e2691f4b439fba296608079f380c
#: ../../../../../buildout-cache/python2.7/eggs/Products.GenericSetup-1.7.4-py2.7.egg/Products/GenericSetup/content.pydocstring
#: of Products.GenericSetup.content.FolderishExporterImporter:13
msgid ""
"Subobjects themselves are represented as individual files or subdirectories "
"within the parent's directory."
msgstr ""

# e89d953fddc64154a3e662618dcc0541
# cd9f4814d4c649d8b175715a093610a6
#: ../../../../../buildout-cache/python2.7/eggs/Products.GenericSetup-1.7.4-py2.7.egg/Products/GenericSetup/content.pydocstring
#: of Products.GenericSetup.content.FolderishExporterImporter.export:1
#: ../../../../../buildout-cache/python2.7/eggs/Products.GenericSetup-1.7.4-py2.7.egg/Products/GenericSetup/content.pydocstring
#: of
#: Products.GenericSetup.content.FolderishExporterImporter.listExportableItems:1
msgid "See IFilesystemExporter."
msgstr ""

# b43469b341b244a89611cbd7a627b647
#: ../../../../../buildout-cache/python2.7/eggs/Products.GenericSetup-1.7.4-py2.7.egg/Products/GenericSetup/content.pydocstring
#: of Products.GenericSetup.content.FolderishExporterImporter.import_:1
msgid "See IFilesystemImporter."
msgstr ""

# 5ba08d7347644935abe3b1853cf713ed
#: ../develop/addons/components/genericsetup.rst:614
msgid "Generic Setup files"
msgstr ""

# ae81669086e7493798d0bb53e88f9254
#: ../develop/addons/components/genericsetup.rst:617
msgid "sharing.xml"
msgstr ""

# 32b3ce89330240fd9c7af7a8818098bd
#: ../develop/addons/components/genericsetup.rst:619
msgid ""
"The sharing.xml file let you add custom roles to the sharing tab. For "
"reference, visit: :doc:`Local Roles </develop/plone/security/local_roles>`."
msgstr ""

# 1e06a84e5773440da2dc22f94573b9da
#: ../develop/addons/components/genericsetup.rst:623
msgid "tinymce.xml"
msgstr ""

# 35bc6ab3f5504eceb5aa3d1515618b43
#: ../develop/addons/components/genericsetup.rst:626
msgid "propertiestool.xml"
msgstr ""

# f4025a52c094443d8309926b0376a332
#: ../develop/addons/components/genericsetup.rst:627
msgid ""
"In the propertiestool.xml you can change all values of the "
"portal_properties."
msgstr ""

# fc3565161885401bbcb7470fd9469054
#: ../develop/addons/components/genericsetup.rst:629
msgid ""
"take a look at: http://plone.org/documentation/manual/developer-manual"
"/generic-setup/reference/properties-ref"
msgstr ""

# a6ba753268db46c9a5e07848880f0ec3
#: ../develop/addons/components/genericsetup.rst:632
msgid "metadata.xml"
msgstr ""

# fe65d8fced5941039cee6cb33e86e25b
#: ../develop/addons/components/genericsetup.rst:635
msgid "actions.xml"
msgstr ""

# ae6ed8793e4f4d9682ab35addd110386
#: ../develop/addons/components/genericsetup.rst:638
msgid "skins.xml"
msgstr ""

# e4fd7b459769471e94325cf865d75ca6
#: ../develop/addons/components/genericsetup.rst:641
msgid "workflows.xml"
msgstr ""

# e69bee5b4bfb47daafc4b46df579c828
#: ../../../../../buildout-cache/python2.7/eggs/Products.DCWorkflow-2.2.4-py2.7.egg/Products/DCWorkflow/exportimport.pydocstring
#: of Products.DCWorkflow.exportimport:1
msgid "DCWorkflow export / import support."
msgstr ""

# 09a0dfac81794431b49cef23bb646eb6
#: ../../../../../buildout-cache/python2.7/eggs/Products.DCWorkflow-2.2.4-py2.7.egg/Products/DCWorkflow/exportimport.pydocstring
#: of Products.DCWorkflow.exportimport:3
msgid "$Id: exportimport.py 121521 2011-05-03 13:13:36Z erico_andrei $"
msgstr ""

# aad3e7666b7d49c48233564453577d28
#: ../develop/addons/components/genericsetup.rst:646
msgid "repositorytool.xml"
msgstr ""

# 57a8b065b8ce4e3bb246a73f230d07a3
#: ../../../../../buildout-cache/python2.7/eggs/Products.CMFEditions-2.2.8-py2.7.egg/Products/CMFEditions/exportimport/repository.pydocstring
#: of Products.CMFEditions.exportimport.repository.RepositoryToolXMLAdapter:1
msgid "Mode in- and exporter for RepositoryTool."
msgstr ""

# 4e6f25e8d8c94a2abb8979e6d412ad4d
#: ../develop/addons/components/genericsetup.rst:652
msgid "contentrules.xml"
msgstr ""

# 9b8bfa2700374b7c85e9171c7982aa79
#: ../develop/addons/components/genericsetup.rst:658
msgid "pluginregistry.xml"
msgstr ""

# e86fec3edae2429a9d780f68161dcccc
#: ../develop/addons/components/genericsetup.rst:660
msgid ""
"This configures PAS plugin orderings and active plugins. It isn't part of "
"Plone itself, it is used by other frameworks and can be used in Plone with a"
" little extra configuration."
msgstr ""

# c7bf685fe374431f988d51326bcd92e0
#: ../develop/addons/components/genericsetup.rst:664
msgid ""
"First, you need a monkey patch in your ``__init__.py``` to point the "
"importer at where Plone keeps its PAS plugins."
msgstr ""

# 845f34a72e404c05953b853af79682b7
#: ../develop/addons/components/genericsetup.rst:675
msgid ""
"Secondly, code to handle the import step needs to be activated in Plone:"
msgstr ""

# e77f8ab731e248998ae2c99f9293552e
#: ../develop/addons/components/genericsetup.rst:686
msgid "Now you can use ``pluginregistry.xml`` in your generic setup profiles:"
msgstr ""

# 0c56c81a573b44218400b5be8ca390bc
#: ../develop/addons/components/genericsetup.rst:733
msgid "Best Practices"
msgstr ""

# 4785b91cef904f5cb3dade400d59978b
#: ../develop/addons/components/genericsetup.rst:735
msgid ""
"When importing items such as property sheets, make sure not to override "
"other profile settings by setting the purge attribute to False. This will "
"add the items listed to the property instead of resetting the property. "
"Example:"
msgstr ""

# bb10f0b00da74625bb2b304300272485
#: ../develop/addons/components/genericsetup.rst:747
msgid ""
"Only use the configuration that you need. When you export your site's "
"configuration, it will include things that you don't need. For example, if "
"you needed to change only the 'Allow anonymous to view about' property, this"
" is what your propertiestool.xml would look like:"
msgstr ""

# c281551cfd86400697ee6c5838bdd571
#: ../develop/addons/components/grok.rst:3
msgid "Grok framework"
msgstr ""

# c3c8005bae0e4655bffac0a6dbd165bb
#: ../develop/addons/components/grok.rst:7
msgid ""
"Using Grok framework in Plone programming. Grok provides  Dont-Repeat-"
"Yourself API to create Zope 3 components easier."
msgstr ""

# 9f3b0cd912444f3cad51cb1bc327e3c8
#: ../develop/addons/components/grok.rst:16
msgid ""
"Grok is a project to give sane, easy to use, API to Zope 3 systems. It "
"exists as standalone, but Plone compatible port five.grok is available for "
"Plone 3.3 and onwards."
msgstr ""

# e8380179dff745f592c68c1582867dd9
#: ../develop/addons/components/grok.rst:19
msgid "Benefits over using pure Zope 3 APIs"
msgstr ""

# a2f5a54aabba42b782d82df061ce859a
#: ../develop/addons/components/grok.rst:21
msgid ""
"No ZCML files or XML sit-ups needed (except bootstrapping one configure.zcml"
" file)"
msgstr ""

# 47d1e98a803e4c63829ebb4690695458
#: ../develop/addons/components/grok.rst:23
msgid ""
"More things are automatic and less explicit hand-written code needed. E.g. "
"template file and view class are automatically matched."
msgstr ""

# b4bb6fd7446343ec950fd0cacad6ab1c
#: ../develop/addons/components/grok.rst:25
msgid "Less code generation"
msgstr ""

# aa6d516dc7274b6d8eafa58a79e79de9
#: ../develop/addons/components/grok.rst:27
msgid ""
"Grok will automatically scan all .py files in your product and run "
"registration code in them. This way you can use Python decorators and "
"magical classes to perform tasks which before needed to have hand written "
"registration code."
msgstr ""

# 6c4c4481696842fc9ba05f22186aef32
#: ../develop/addons/components/grok.rst:34
msgid "http://grok.zope.org/"
msgstr ""

# 4e62d6162a944bcb95412f71508fb5f3
#: ../develop/addons/components/grok.rst:36
msgid "https://pypi.python.org/pypi/five.grok"
msgstr ""

# 89a99c91abb54b009fe61e7e1433b6aa
# fd263bf4b2d746f5a9fc13b0ef684230
#: ../develop/addons/components/grok.rst:39
#: ../develop/plone/functionality/dashboard.rst:13
msgid "Tutorial"
msgstr ""

# 83c736fe1a284c67a9ad942b5203749d
#: ../develop/addons/components/grok.rst:41
msgid "http://plone.org/products/dexterity/documentation/manual/five.grok"
msgstr ""

# 400b77a11fe247aeae635a254d3b6f87
#: ../develop/addons/components/grok.rst:43
msgid "http://www.martinaspeli.net/articles/using-grok-techniques-in-plone"
msgstr ""

# 1b6b88c14c5f40aba77bcc30da002ee1
#: ../develop/addons/components/grok.rst:46
msgid "Using Grok in your package"
msgstr ""

# 6c033056b1914d97bf3f59510127f224
#: ../develop/addons/components/grok.rst:49
msgid "configure.zcml - register your package for grokking"
msgstr ""

# 3eff8bbc8cd24d1a9b43d14d1701ef20
#: ../develop/addons/components/grok.rst:51
msgid "To enable grok'ing for your package:"
msgstr ""

# c6794144c38a410fa108cf14f8ffdd24
#: ../develop/addons/components/grok.rst:53
msgid ""
"The top-level ``configure.zcml`` must include the ``grok`` namespace and the"
" ``grok:grok`` directive. You do not need to put this directive subpackages."
" This directive scans your package source tree recursively for grok'ed "
"files."
msgstr ""

# 50ffa20fb064454ba88cab1fd10fbe4a
#: ../develop/addons/components/grok.rst:58
msgid ""
"The package must be loaded using ``setup.py`` auto-include, NOT using a "
"``zcml =`` section in ``buildout.cfg``. Otherwise templates are not loaded."
msgstr ""

# 177434394cfd4e0eab3d99f03d7b95fb
#: ../develop/addons/components/grok.rst:62
msgid ""
"Optionally, add ``templates`` and ``static`` folders to your package root."
msgstr ""

# f8bf0a6764494ef190feb8dc159fac2b
#: ../develop/addons/components/grok.rst:64
msgid ""
"You still need to include subpackages for old-fashioned :term:`ZCML` "
"configurations."
msgstr ""

# cffcf514fa454e88b5d4b72e0ccc44f0
# c07ae4a4c9c04a92820ef5e378088dd5
# 53ea7010dfa84b98a56bfce282296a65
# 1aa52f2fca154ce3b4c28df959bbfbdb
# bda38ebbd00446ab8a260bf736cf018e
# d846c34c96fa4338bfe0c9bd802e696d
# f89f32a6463e49e59f56f3edbb2eb557
#: ../develop/addons/components/grok.rst:67
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:36
#: ../develop/plone/content/archetypes/fields.rst:233
#: ../develop/plone/functionality/contactform.rst:50
#: ../develop/plone/functionality/sitemap.rst:24
#: ../develop/plone/i18n/language.rst:224
#: ../develop/plone/misc/paster_templates.rst:228
msgid "Example"
msgstr ""

# a20f6408c98b46dfb5b1a38d1bbb2bf8
#: ../develop/addons/components/grok.rst:90
msgid ""
"If you are using components from other packages you might also want to add"
msgstr ""

# 31d671d25ec64b57b1714e72f70122a0
#: ../develop/addons/components/grok.rst:96
msgid ""
"This makes the ``configure.zcml`` and thus Python code of all modules listed"
" in ``setup.py`` *install_requires* section is loaded before your module is "
"being processed."
msgstr ""

# d0e914cb70644fe8b4f4f977838aa479
#: ../develop/addons/components/grok.rst:101
msgid "setup.py - include five.grok package dependency for download"
msgstr ""

# aa23f54f6a164c658db4bcb617d28422
#: ../develop/addons/components/grok.rst:103
msgid "You still need to get ``five.grok`` package to your buildout."
msgstr ""

# a8b6e43f1f1044e5923a6968fe0928e1
#: ../develop/addons/components/grok.rst:105
msgid ""
"Edit your Python egg ``setup.py`` file and list ``five.grok`` as "
"dependency::"
msgstr ""

# 3ed3cd0e6a5745528a00581edd46a3b7
#: ../develop/addons/components/grok.rst:109
msgid ""
"Re-run buildout. Now buildout should download ``five.grok`` for PyPi and "
"activate it for you."
msgstr ""

# 603316e41b4d4e8783f1b7230aedbf71
#: ../develop/addons/components/grok.rst:111
msgid ""
"If you are using Plone 4.1 or older you also need `Dexterity extends = line "
"pindowns in your buildout <http://plone.org/products/dexterity/documentation"
"/how-to/install>`_. Otherwise you may get *Version Conflict* errors when "
"running buildout."
msgstr ""

# f93e1ec5f58042d8af5b03381ff528b6
#: ../develop/addons/components/grok.rst:115
msgid "Plone 4.3 migration and five.grok dependency"
msgstr ""

# e8c2df73d57844e4960ed04350811930
#: ../develop/addons/components/grok.rst:117
msgid ""
"Please see `Plone 4.2 -> 4.3 Dexterity upgrade guide "
"<http://plone.org/documentation/manual/upgrade-guide/version/upgrading-"
"plone-4.2-to-4.3/dexterity-optional-extras>`_ first."
msgstr ""

# e0f62fb1c7424405bb0c5cb47fef5f83
#: ../develop/addons/components/grok.rst:120
msgid "Migrating Dexterity and z3c.forms to Plone 4.3"
msgstr ""

# 292aced43ee7401d9047150c371ec4b6
#: ../develop/addons/components/grok.rst:122
msgid ""
"Plone 4.3 ships with Dexterity. ``five.grok`` is a huge dependency with a "
"lot of code of which maintenance cannot be guaranteed in the future (`See "
"grok.zope.org <http://grok.zope.org>`_, `discussion "
"<http://plone.293351.n2.nabble.com/The-grokless-madness-and-unable-to-"
"create-a-simple-form-tp7564179p7564184.html>`_). Because Plone community "
"cannot commit to maintain this code, but we still want to use the best "
"goodies of grok based development, some compromises was made for Plone 4.3 "
"regarding grok style forms and directives."
msgstr ""

# a58044abecc643e59be52fc573b9654d
#: ../develop/addons/components/grok.rst:128
msgid ""
"You can include ``five.grok`` as a dependency, as you have done this far, "
"but it is not going to be in Plone default installation in foreseeable "
"future. Please see migration notes."
msgstr ""

# 04bc996927344e1ca607e90f77dc2990
#: ../develop/addons/components/grok.rst:131
msgid ""
"``grok()`` declarations, like ``grok.name()`` in classes are not supported "
"by Plone 4.3 out of the box"
msgstr ""

# 2a15db8bacd346889e953f604297efa3
#: ../develop/addons/components/grok.rst:133
msgid ""
"``plone.directives.form`` goodies distributed to two supported packages: "
"``plone.supermodel`` and ``plone.autoform``"
msgstr ""

# 9c1de49a7b34405c9fe291a7239093ac
#: ../develop/addons/components/grok.rst:136
msgid ""
"To make your code Plone 4.3 compatible, grokless way do imports as "
"following::"
msgstr ""

# 6697c0b008544c5a8c9392f88a43b264
#: ../develop/addons/components/grok.rst:144
msgid "And you can use them like::"
msgstr ""

# 5d87916ee359420aa135de0653483718
#: ../develop/addons/components/grok.rst:163
msgid "Migrating views from five.grok to plain Plone"
msgstr ""

# acfa25fab9264811bbb5ee6de33743d0
#: ../develop/addons/components/grok.rst:165
msgid ""
"If you further want to break the dependency with ``five.grok`` and get rid "
"of ``grok.xxx()`` directives in your classes here are further dependency."
msgstr ""

# 398473ce1f2c4d6caa97105822ad9d3f
#: ../develop/addons/components/grok.rst:169
msgid ""
"Remove ``five.grok`` from the dependency list of your egg and remove "
"``<grok:grok>`` ZCML directive in ``configure.zcml``."
msgstr ""

# 269b1443131642e68c16d035b963925e
#: ../develop/addons/components/grok.rst:171
msgid "Remove ``from five import grok`` in all of your package modules."
msgstr ""

# 9c780066bae54effaefaea146e40a637
#: ../develop/addons/components/grok.rst:173
msgid ""
"Manually :doc:`register static media folder of your egg </adapt-and-"
"extend/theming/templates_css/resourcefolders>`"
msgstr ""

# 4b23b2c36d974cc0ba12b3de8367a7b8
#: ../develop/addons/components/grok.rst:175
msgid ""
"Declare views and forms using :doc:`configure.zcml "
"</develop/plone/views/browserviews.html#creating-a-view-using-zcml>`"
msgstr ""

# ccc752eb831f4bbf9ff5b1a9633e3524
#: ../develop/addons/components/grok.rst:177
msgid ""
"Remove ``grok.templatedir()`` and map view classes to templates using "
"``<browser:page>`` ZCML directive."
msgstr ""

# 42c5835c9f54443fa966354239161231
#: ../develop/addons/components/grok.rst:179
msgid "Grok migration source example::"
msgstr ""

# 50fd3c886ce24dc0b1540b0ac485e852
#: ../develop/addons/components/grok.rst:194
msgid "ZCML migration ``configuration.zcml`` target example::"
msgstr ""

# b7b544b4447c4cf7bfaae272be1d4196
#: ../develop/addons/components/grok.rst:216
msgid ""
"Forms handle ``update()`` themselves - this concerns only non-form views"
msgstr ""

# 83727c774bf148baa2de75bf00e7ceed
#: ../develop/addons/components/grok.rst:218
msgid ""
"If your view has ``update()`` method you need to call it manually in "
"``__call__()`` because ``BrowserView`` base class doesn't do this."
msgstr ""

# 762bc99a153f4af69f53dccbf50455e7
#: ../develop/addons/components/grok.rst:221
msgid "class MyView(BrowserView):"
msgstr ""

# 8a29e3b294714ff88d4a453c375f8dc6
#: ../develop/addons/components/grok.rst:224
msgid "def update(self):"
msgstr ""

# 9e71f04a14ee42d4b526e9afb3feafef
#: ../develop/addons/components/grok.rst:224
msgid "..."
msgstr ""

# 2571610e9729414ab9b847e641dd869a
#: ../develop/addons/components/grok.rst:228
msgid "def __call__(self):"
msgstr ""

# 074f533a5bd84833a291cc13307b20ea
#: ../develop/addons/components/grok.rst:227
msgid ""
"self.update() return self.index()  # Or self.render() for grok.CodeView"
msgstr ""

# fbc167a50a4c4eed92812b8408ea3736
# cde3ed835fb245fb86b0fb39845ea830
#: ../develop/addons/components/grok.rst:233 ../develop/index.rst:91
msgid "Tutorials"
msgstr ""

# f184d1def878418293f6a8c3b8dff324
#: ../develop/addons/components/grok.rst:235
msgid ""
"http://plone.org/products/dexterity/documentation/manual/five.grok/background"
"/adding-five.grok-as-a-dependency"
msgstr ""

# 11810017f2774e92b113984ea1bc9049
#: ../develop/addons/components/grok.rst:237
msgid "Steps:"
msgstr ""

# 69cdd4699aef417abf9754181c58cd52
#: ../develop/addons/components/grok.rst:239
msgid "Add dependencies to your ``setup.py``."
msgstr ""

# 086be9007a97446fbd256e3894131676
#: ../develop/addons/components/grok.rst:241
msgid "Edit ``buildout.cfg`` to include the good known version set."
msgstr ""

# d5dd32aea8e044cab0098c28344a9ddd
#: ../develop/addons/components/grok.rst:243
msgid "Add the ``grok`` :term:`ZCML` directive to ``configure.zcml``."
msgstr ""

# 151718b086b143aeb99ab9ea80b4ec74
#: ../develop/addons/components/index.rst:3
msgid "Component architecture"
msgstr ""

# 47baa29ebf994843a8ac648f25f8f7b2
#: ../develop/addons/components/index.rst:8
msgid ""
"Plone logic is wired together by Zope 3 component architecture. It provides "
"\"enterprise business logic\" engine for Plone."
msgstr ""

# 1f316b4722fd448b97e724b5620c562a
#: ../develop/addons/components/index.rst:11
msgid ""
"The architecture provides pluggable system :doc:`interfaces "
"</develop/addons/components/interfaces>`, adapters, utilities and "
"registries. The wiring of components is done on XML based language called "
":doc:`ZCML </develop/addons/components/zcml>`."
msgstr ""

# ce540bfcbe9e40d491f4ed786a574ed7
#: ../develop/addons/components/index.rst:17
msgid "Grok - wrapper around Z3"
msgstr ""

# 863a5563089f4d8e94bd3fd36a1456db
#: ../develop/addons/components/index.rst:19
msgid ""
"On Z3 component layer there exist higher level framework called :doc:`Grok "
"</develop/addons/components/grok>` which gives you a way to automatic scan "
"Python modules for decorators and directives without the need off manually "
"writing ZCML code or Python to register your business logic."
msgstr ""

# b1374310a34c4b7ca3b3886a21bec82c
#: ../develop/addons/components/index.rst:24
msgid "Database drops using Generic setup"
msgstr ""

# 61b4e6eb97a048b5bfda2291051391ad
#: ../develop/addons/components/index.rst:26
msgid ""
"Zope 3 components act on Python codebase level which is shared by all sites "
"in the same Zope application server process. When you install new add-ons to"
" Plone site, the add-ons modify the site database using :doc:`GenericSetup "
"</develop/addons/components/genericsetup>` framework. GenericSetup is mostly"
" visible as */profiles/default* folder and its XML files in your add-on."
msgstr ""

# c0b5fbdd55b94bc1805fcb1102ba2550
#: ../develop/addons/components/index.rst:35
msgid "http://www.muthukadan.net/docs/zca.html"
msgstr ""

# 4888d99019a94fc7ac60ac25d11e1b9f
# c0f0861039054552a1f7f232f2abdd99
#: ../develop/addons/components/interfaces.rst:3
#: ../develop/addons/five-grok/core-components/interfaces.rst:2
msgid "Interfaces"
msgstr ""

# 69b1a2f0883c4ce0be44c28d9b1d6a88
#: ../develop/addons/components/interfaces.rst:10
msgid ""
"Interfaces define what methods an object provides. Plone extensively uses "
"interfaces to define APIs between different subsystems. They provide a more "
"consistent and declarative way to define bridges between two different "
"things, when duck-typing is not enough."
msgstr ""

# 5639a16c23b04a9abbb8d3f383c2f9d9
#: ../develop/addons/components/interfaces.rst:16
msgid ""
"An interface defines the shape of a hole where different pieces fit. The "
"shape of the piece is defined by the interface, but the implementation "
"details like color, material, etc. can vary."
msgstr ""

# 762b0732b28e49238f443b6cf09ceab9
#: ../develop/addons/components/interfaces.rst:20
msgid ""
"See `zope.interface package README "
"<https://pypi.python.org/pypi/zope.interface>`_."
msgstr ""

# 0c6a40f94dba4b8693c5aab5d43a27ac
#: ../develop/addons/components/interfaces.rst:23
msgid "Common interfaces"
msgstr ""

# 51aecf3d437f425d95a9defa5c2b33d9
#: ../develop/addons/components/interfaces.rst:25
msgid "Some interfaces are commonly used throughout Plone."
msgstr ""

# a19b1444e64b404eb5fc97a14771eb7b
#: ../develop/addons/components/interfaces.rst:27
msgid ""
"The usual use case is that a :doc:`context directive for a view "
"</develop/plone/views/browserviews>` is provided, specifying where the view "
"is available (e.g. for which content types)."
msgstr ""

# 1621d1d8c153451fb1079c32bee13429
#: ../develop/addons/components/interfaces.rst:33
msgid ""
"Base class of all interfaces. Also used as a ``*`` wildcard when registering"
" views, meaning that the view applies on every object."
msgstr ""

# 95a5edb111e34b6aa76a539322e74569
#: ../develop/addons/components/interfaces.rst:37
msgid ""
"All *content* items on the site. In the site root, this interface excludes "
"Zope objects like ``acl_users`` (the user folder) and ``portal_skins`` which"
" might otherwise appear in the item listing when you iterate through the "
"root content."
msgstr ""

# c4871d74aa8f49018211ad41b966fd64
#: ../develop/addons/components/interfaces.rst:44
msgid "``Products.CMFCore.interfaces.IFolderish``"
msgstr ""

# 6a475292094340fbaac009a4b95f0c81
#: ../develop/addons/components/interfaces.rst:44
msgid "All *folders* in the site."
msgstr ""

# b9c7f7a57920457dab36b4cc44ea324d
#: ../develop/addons/components/interfaces.rst:47
msgid "``Products.CMFCore.interfaces.ISiteRoot``"
msgstr ""

# f295d0efd42644639676cf733603ddb2
#: ../develop/addons/components/interfaces.rst:47
msgid "The Plone site root object."
msgstr ""

# b1a1e790dc53487597d900dc94a0f46c
#: ../develop/addons/components/interfaces.rst:53
msgid "``plone.app.layout.navigation.interfaces import INavigationRoot``"
msgstr ""

# 806c02bba5324946a8a42e9ca4b7a65c
#: ../develop/addons/components/interfaces.rst:50
msgid ""
"Navigation top object - where the breadcrumbs are anchored. On multilingual "
"sites, this is the top-level folder for the current language."
msgstr ""

# 244daae249b74b739477cef4e9ce5663
#: ../develop/addons/components/interfaces.rst:56
msgid "Implementing one or multiple interfaces"
msgstr ""

# d564aad90dfc4017a1d4f15c50347652
#: ../develop/addons/components/interfaces.rst:58
msgid ""
"Use ``zope.interface.implements()`` in your class body. Multiple interfaces "
"can be provided as arguments."
msgstr ""

# e0a02a7644b4481bb6031ede9b96b862
#: ../develop/addons/components/interfaces.rst:73
msgid "Removing parent class interface implementations"
msgstr ""

# ba55d0db1ed644e092efd2c8d89b46c0
#: ../develop/addons/components/interfaces.rst:75
msgid ""
"``implementsOnly()`` redeclares all inherited interface implementations. "
"This is useful if you, for example, want to make :doc:`z3c.form "
"</develop/plone/forms/z3c.form>` widget bindings more accurate."
msgstr ""

# 0ef5fbdb51a64b809e96895942a750e3
#: ../develop/addons/components/interfaces.rst:85
msgid "Checking whether object provides an interface"
msgstr ""

# e30484e42ff945668c166f734f30de7b
#: ../develop/addons/components/interfaces.rst:88
msgid "``providedBy``"
msgstr ""

# bf084c219b114084b10211fcd8c7107e
#: ../develop/addons/components/interfaces.rst:90
msgid "In Python you can use code::"
msgstr ""

# 8e3c93903b144c4a8033560e7147c927
#: ../develop/addons/components/interfaces.rst:100
msgid "``plone_interface_info``"
msgstr ""

# 63968cf31d904b55a06b8582f99c102c
#: ../develop/addons/components/interfaces.rst:102
msgid "In page templates you can use ``plone_interface_info`` helper view::"
msgstr ""

# 1b8cf4a637be40f5996cf76f7bdad384
#: ../develop/addons/components/interfaces.rst:112
msgid ""
"https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/globals/interface.py"
msgstr ""

# 7e9de82537374f7e966b9685e9d413b2
#: ../develop/addons/components/interfaces.rst:116
msgid "Interface resolution order"
msgstr ""

# 1c1d4c8044574eefb0689dad2a4401ec
#: ../develop/addons/components/interfaces.rst:118
msgid ""
"Interface resolution order (IRO) is the list of interfaces provided by the "
"object (directly, or implemented by a class), sorted by priority."
msgstr ""

# 2bfae0a4ebcc473ba8b74842d23f0c06
#: ../develop/addons/components/interfaces.rst:121
msgid ""
"Interfaces are evaluated from zero index (highest priority) to the last "
"index (lowest priority)."
msgstr ""

# ffeeadc462214b1aa05b9ea30ca1ab65
#: ../develop/addons/components/interfaces.rst:124
msgid ""
"You can access this information for the object for debugging purposes using "
"a magical attribute::"
msgstr ""

# a993b805915c4d0383ef55d78e45a44e
#: ../develop/addons/components/interfaces.rst:131
msgid ""
"Since adapter factories are *dynamic* (adapter interfaces not hardcoded on "
"the object), the object can still adapt to interfaces which are not listed "
"in ``__iro__``."
msgstr ""

# 04d2c0e40e9144a9acc439a82dd82d2c
#: ../develop/addons/components/interfaces.rst:137
msgid "Getting interface string id"
msgstr ""

# 476d3196cfd844a4890f1dbed192cf22
#: ../develop/addons/components/interfaces.rst:139
msgid "The interface id is stored in the ``__identifier__`` attribute."
msgstr ""

# 560bc05f855747c2afbd2db398fba152
#: ../develop/addons/components/interfaces.rst:141
msgid "Example file ``yourpackage/interfaces.py``::"
msgstr ""

# ef6db528de894d7a88b5ad902f8d818d
#: ../develop/addons/components/interfaces.rst:152
msgid "Note that this attribute does not respect import aliasing."
msgstr ""

# 5fa36e4e25934b98a184ae93cbf9062d
#: ../develop/addons/components/interfaces.rst:154
msgid ""
"Example: ``Products.ATContentTypes.interfaces.IATDocument.__identifier__`` "
"is ``Products.ATContentTypes.interfaces.document.IATDocument``."
msgstr ""

# 3f5d5d33b22940449c1b86efa64a782b
#: ../develop/addons/components/interfaces.rst:158
msgid "Getting interface class by its string id"
msgstr ""

# 90472f2d37f7477899be70c5eed03f06
#: ../develop/addons/components/interfaces.rst:160
msgid "Use the `zope.dottedname`_ package."
msgstr ""

# 16a29d07f608439490a93c0b0f3748e3
#: ../develop/addons/components/interfaces.rst:176
msgid "Applying interfaces for several content types"
msgstr ""

# a25adccfb9754bf9bb33983d161a93a0
#: ../develop/addons/components/interfaces.rst:178
msgid "You can apply marker interfaces to content types at any time."
msgstr ""

# e11faf310ac74c2d9c92ecd272ddd222
#: ../develop/addons/components/interfaces.rst:180
msgid "Example use cases:"
msgstr ""

# a3aafb0a18fb418fa3e89cee4af769a4
#: ../develop/addons/components/interfaces.rst:182
msgid "You want to assign a viewlet to a set of particular content types."
msgstr ""

# fea04b1a2aef415fa6c82ec3bcb0a37d
#: ../develop/addons/components/interfaces.rst:184
msgid "You want to enable certain behavior on certain content types."
msgstr ""

# 74bd18a5ea1e4712a96a2eb64c6b15ec
#: ../develop/addons/components/interfaces.rst:188
msgid ""
"A marker interface is needed only when you need to create a common nominator"
" for several otherwise unrelated classes. You can use one existing class or "
"interface as a context without explicitly creating a marker interface. "
"Places accepting ``zope.interface.Interface`` as a context usually accept a "
"normal Python class as well (``isinstance`` behavior)."
msgstr ""

# 117db404525640b48b71c6475cc3ea90
#: ../develop/addons/components/interfaces.rst:195
msgid ""
"You can assign the marker interface for several classes in ZCML using a "
"``<class>`` declaration. Here we're assigning ``ILastModifiedSupport`` to "
"documents, events and news items:"
msgstr ""

# 8d76b69973b8443fb97c3d7e3e921280
#: ../develop/addons/components/interfaces.rst:215
msgid ""
"Then we can have a viewlet for these content types only using the following "
"(grok example)::"
msgstr ""

# 4521c7e3954e4bbf855d598149139010
#: ../develop/addons/components/interfaces.rst:232
msgid "Related:"
msgstr ""

# 5e26a13dfd714fc18b05713862b6d28f
#: ../develop/addons/components/interfaces.rst:234
msgid ""
"`zope.dottedname`_ allows you to resolve dotted names to Python objects "
"manually"
msgstr ""

# 9a30b9c447e44309afb5962c0fae4e02
#: ../develop/addons/components/interfaces.rst:238
msgid "Dynamic marker interfaces"
msgstr ""

# 2c2f2aeaf5ff4354aab2dc6ff7724612
#: ../develop/addons/components/interfaces.rst:240
msgid ""
"Zope allows to you to dynamically turn on and off interfaces on any content "
"objects through the :term:`ZMI`. Browse to any object and visit the "
":guilabel:`Interfaces` tab."
msgstr ""

# 8c23f9b415c04637aa903cc37a99ce8f
#: ../develop/addons/components/interfaces.rst:244
msgid ""
"Marker interfaces might need to be explicitly declared using the "
":term:`ZCML` ``<interface>`` directive, so that Zope can find them:"
msgstr ""

# 1a84ebda46024691aea8a1f8a2dd01f4
#: ../develop/addons/components/interfaces.rst:254
msgid ""
"The interface dotted name must refer directly to the interface class and not"
" to an import from other module, like ``__init__.py``."
msgstr ""

# 070cb0c604ed4a5ca6dd88b613e500c5
#: ../develop/addons/components/interfaces.rst:258
msgid "Setting dynamic marker interfaces programmatically"
msgstr ""

# e843eecfa0d84a61bb3be8f58505dd3e
#: ../develop/addons/components/interfaces.rst:260
msgid "Use the ``mark()`` function from `Products.Five`_."
msgstr ""

# caec7f1d85894e7597ecd83364ac21df
#: ../develop/addons/components/interfaces.rst:270
msgid "This marking persists with the object: it is not temporary."
msgstr ""

# a11e6d1700b244d3b2c717c98e3114cc
#: ../develop/addons/components/interfaces.rst:272
msgid ""
"Under the hood: ``mark()`` delegates to "
"``zope.interface.directlyProvides()`` |---| with the result that a "
"persistent object (e.g. content item) has a reference to the interface class"
" you mark it with in its ``__provides__`` attribute; this attribute is "
"serialized and loaded by ZODB like any other reference to a class, and "
"`zope.interface`_ uses object specification descriptor magic (just like it "
"does for any other object, persistent or not) to resolve provided "
"interfaces."
msgstr ""

# 07613c62d2094a2d990041a6ca75282c
#: ../develop/addons/components/interfaces.rst:283
msgid ""
"To remove a marker interface from an object, use the ``erase()`` function "
"from `Products.Five`_."
msgstr ""

# d3aad2626fab440a850c6134aac9f2ce
#: ../develop/addons/components/interfaces.rst:294
msgid "Tagged values"
msgstr ""

# 45834c19ba5c4b2b94c04ed7dfd65f91
#: ../develop/addons/components/interfaces.rst:296
msgid ""
"Tagged values are arbitrary metadata you can stick on "
"``zope.interface.Interface`` subclasses. For example, the `plone.autoform`_ "
"package uses them to set form widget hints for `zope.schema`_ data model "
"declarations."
msgstr ""

# 023a3cd1183846c2a3920b19aec4a195
# 9ac4ac32618f46f8abdd2f82dab1f287
#: ../develop/addons/components/utilities.rst:3
#: ../develop/addons/five-grok/core-components/utilities.rst:2
msgid "Utilities"
msgstr ""

# d521efd96f7b49c5951b42a2b3ffb806
#: ../develop/addons/components/utilities.rst:7
msgid ""
"Utility design pattern in Zope 3 allows easily overridable singleton class "
"instances for your code."
msgstr ""

# 525954d5b17a4cd4a470422aa2a491b7
#: ../develop/addons/components/utilities.rst:15
msgid "Utility classes provide site-wide utility functions."
msgstr ""

# d1b9976266fc459d84ba17f153fcadef
#: ../develop/addons/components/utilities.rst:17
msgid "They are registered by marker interfaces."
msgstr ""

# 5b373e9b2024462784e327122ecdf8c8
#: ../develop/addons/components/utilities.rst:19
msgid ""
"Site customization logic or add-on products can override utilities for "
"enhanced or modified functionality"
msgstr ""

# bbd3f24b315d4e9481f73b3a57289e08
#: ../develop/addons/components/utilities.rst:22
msgid "Utilities can be looked up by name or interface"
msgstr ""

# cc2dbeefcc9e44c3be1a598a47fbd643
#: ../develop/addons/components/utilities.rst:24
msgid ""
"Compared to \"plain Python functions\", utilities provide the advantage of "
"being plug-in points without need of :doc:`monkey-patching "
"</develop/plone/misc/monkeypatch>`."
msgstr ""

# 63a1680103274cd6b9bac2f3bd30ba54
#: ../develop/addons/components/utilities.rst:28
msgid "Read more in"
msgstr ""

# 45c5f040a6c047eaaf470c15e0fe84f0
#: ../develop/addons/components/utilities.rst:30
msgid ""
"http://plone.org/products/dexterity/documentation/manual/five.grok/core-"
"components/utilities"
msgstr ""

# 130a5ea1b75c470488c2c5aa34485474
#: ../develop/addons/components/utilities.rst:32
msgid ""
"`zope.component documentation <http://docs.zope.org/zope.component/>`_."
msgstr ""

# f4f96a2bed974be3b0fd66a529b0a169
#: ../develop/addons/components/utilities.rst:35
msgid "Local and global utilities"
msgstr ""

# 12c7cc3c82774006adbac1f17493920a
#: ../develop/addons/components/utilities.rst:37
msgid "Utilities can be"
msgstr ""

# 6657fe11d93d4e1781079b8e8e057081
#: ../develop/addons/components/utilities.rst:39
msgid "*global* - registered during Zope start-up"
msgstr ""

# b78539d58b814d9f97fa9fb22c698871
#: ../develop/addons/components/utilities.rst:41
msgid ""
"*local* - registered during add-on installer for a certain site/content item"
msgstr ""

# 80a65cd85ab14bf88b7dff3582ad6f36
#: ../develop/addons/components/utilities.rst:43
msgid ""
"Local utilities are registered to persistent objects. The context of local "
"utilities is stored in a thread-local variable which is set during "
"traversal. Thus, when you ask for local utilities, they usually come from a "
"persistent registry set up in the Plone site root object."
msgstr ""

# 9a8e8095797d452885d8b7eed0afc86a
#: ../develop/addons/components/utilities.rst:48
msgid ""
"Global utilities are registered in ZCML and affect all Zope application "
"server and Plone site instances."
msgstr ""

# 3fb2bf07d3714feea3350d9622b14935
#: ../develop/addons/components/utilities.rst:51
msgid "Some hints::"
msgstr ""

# 995e58d9d29d41c89a9b6394cf2c9e47
#: ../develop/addons/components/utilities.rst:57
msgid "Registering a global utility"
msgstr ""

# 42304148ce59451c9430a001ef4bd631
#: ../develop/addons/components/utilities.rst:59
msgid ""
"A utility is constructed when Plone is started and ZCML is read. Utilities "
"take no constructor parameters. If you need to use parameters like context "
"or request, consider using views or adapters instead. Utilities may or may "
"not have a name."
msgstr ""

# 89861ceb17cb4f92a5e371f5d16d0f67
#: ../develop/addons/components/utilities.rst:64
msgid ""
"A utility can be provided by a function: the function is called and it "
"returns the utility object."
msgstr ""

# 43dd74b2bef24cbba1aa53343d336430
#: ../develop/addons/components/utilities.rst:67
msgid ""
"A utility can be provided by a class: the class ``__call__()`` method itself"
" acts as an factory and returns a new class instance."
msgstr ""

# 67f953881dc148348e2d5c43cedec0d0
#: ../develop/addons/components/utilities.rst:70
msgid "ZCML example:"
msgstr ""

# e65dc7f3600c4a9d907d317b2b636be9
#: ../develop/addons/components/utilities.rst:81
msgid "Python example (named utility)::"
msgstr ""

# fdd99176c7414af6a03ffdfd80b3fc29
#: ../develop/addons/components/utilities.rst:91
msgid ""
"The utility class \"factory\" is in its simplest form a class which "
"implements the interface::"
msgstr ""

# 63b670247421442e9ac3aea0ff058614
#: ../develop/addons/components/utilities.rst:104
msgid "Class is constructed / factory is run during the ZCML initialization."
msgstr ""

# 8e7b9d1fd7954ab1b7c569e586527021
#: ../develop/addons/components/utilities.rst:106
msgid "To use this class::"
msgstr ""

# db3e154d73444cd384847dad6050a11d
#: ../develop/addons/components/utilities.rst:115
msgid "Registering a local utility"
msgstr ""

# b4ae857315ad450db102b70bfc303df5
#: ../develop/addons/components/utilities.rst:117
msgid ""
"http://plone.org/documentation/manual/developer-manual/generic-"
"setup/reference/component-registry"
msgstr ""

# b8c8a7a3e58541cdb1026f19d8d79f8b
#: ../develop/addons/components/utilities.rst:119
msgid ""
"http://davisagli.com/blog/registering-add-on-specific-components-using-"
"z3c.baseregistry"
msgstr ""

# c68430f11a9d4dd583b5712d427cbc17
#: ../develop/addons/components/utilities.rst:121
msgid "https://pypi.python.org/pypi/z3c.baseregistry"
msgstr ""

# 79925e7af9724b75b3cca10451ca6158
#: ../develop/addons/components/utilities.rst:125
msgid ""
"Local utilities may be destroyed when the add-on product that provides them "
"is reinstalled. Do not use them to store any data."
msgstr ""

# 7ba6b4fc7156439eb20904aa581cba4c
#: ../develop/addons/components/utilities.rst:129
msgid "http://markmail.org/thread/twuhyldgyje7p723"
msgstr ""

# 1be784a9b1b14ecfbb08f340820f912b
#: ../develop/addons/components/utilities.rst:132
msgid "Overriding utility"
msgstr ""

# 7ad9a85fd34c45819826d5856451c58c
#: ../develop/addons/components/utilities.rst:134
msgid ""
"If you want to override any existing utility you can re-register the utility"
" in the ``overrides.zcml`` file in your product."
msgstr ""

# 2f13f84e97f54c1da99fa3a03d69e338
#: ../develop/addons/components/utilities.rst:138
msgid "Getting a utility"
msgstr ""

# 0cf2696824554006880472b9f49faac2
#: ../develop/addons/components/utilities.rst:140
msgid "There are two functions:"
msgstr ""

# 4488500b38a9457995c8e2269ee52db7
#: ../develop/addons/components/utilities.rst:143
msgid "``zope.component.getUtility``"
msgstr ""

# f46e187b8c7642c5bf77e4a392ca466c
#: ../develop/addons/components/utilities.rst:143
msgid "will raise an exception if the utility is not found."
msgstr ""

# a78794806c4d4529b5be7c3b900c8ca2
#: ../develop/addons/components/utilities.rst:146
msgid "``zope.component.queryUtility``"
msgstr ""

# c07b22c8f253422186b5b3f249136a78
#: ../develop/addons/components/utilities.rst:146
msgid "will return ``None`` if the utility is not found."
msgstr ""

# 221616c0e0fd4c9eb0c7d43ab6f35b20
#: ../develop/addons/components/utilities.rst:148
msgid "Utility query parameters are passed to the utility class constructor."
msgstr ""

# f2daa4800c6e44d9a3132d6bf2fe0575
#: ../develop/addons/components/utilities.rst:160
msgid ""
"You cannot use ``getUtility()`` on Python module level code during import, "
"as the Zope Component Architecture is not yet initialized at that time. "
"Always call ``getUtility()`` from an HTTP request end point or after Zope "
"has been started."
msgstr ""

# 809a4c07a1734516b06de4b760b0f403
#: ../develop/addons/components/utilities.rst:166
msgid "Query local + global utilities:"
msgstr ""

# 10c1e4da46d44b18b884359f0360134b
#: ../develop/addons/components/utilities.rst:168
msgid ""
"``zope.component.queryUtility()`` for local utilities, with global fallback."
msgstr ""

# 9373b41e280049189d675916b5cc7f3e
#: ../develop/addons/components/utilities.rst:170
msgid "Query only global utilities::"
msgstr ""

# 5b365f9b25d64404a94f94265df597d4
#: ../develop/addons/components/utilities.rst:178
msgid ""
"Due to Zope component architecture initialization order, you cannot call "
"``getUtility()`` in module-level Python code. Module-level Python code is "
"run when the module is being imported, and Zope components are not yet set "
"up at this point."
msgstr ""

# 243496387a2b4512ae9e7289f826b6d2
#: ../develop/addons/components/utilities.rst:184
msgid "Getting all named utilities of one interface"
msgstr ""

# 4cf668b8ba944e7997ed65455153155d
#: ../develop/addons/components/utilities.rst:186
msgid "Use ``zope.component.getUtilitiesFor()``."
msgstr ""

# f100359157e3486bbed531e40b11beee
#: ../develop/addons/components/utilities.rst:205
msgid "Unregistering utilities"
msgstr ""

# 4a85814265924a1087d92d0cf922ba97
#: ../develop/addons/components/utilities.rst:207
msgid "http://www.muthukadan.net/docs/zca.html#unregisterutility"
msgstr ""

# 94932244fa7143f18088947b19a86fbc
#: ../develop/addons/components/utilities.rst:210
msgid "Removing persistent local utilities"
msgstr ""

# b4c75771684d4b55909c8c57e68d6c1b
#: ../develop/addons/components/utilities.rst:212
msgid ""
"http://plone.org/documentation/kb/manually-removing-local-persistent-"
"utilities"
msgstr ""

# 2273fcb0b6884389937409fb043b97a6
#: ../develop/addons/components/utilities.rst:213
msgid "http://blog.fourdigits.nl/removing-a-persistent-local-utility"
msgstr ""

# ea3262622f694955bcc4fb10d419c0de
#: ../develop/addons/components/utilities.rst:214
msgid "http://blog.fourdigits.nl/removing-a-persistent-local-utility-part-ii"
msgstr ""

# c93e500922eb475cb9ca9f53336bea8a
# 817412189c8243538a7282fb45722f89
#: ../develop/addons/components/zcml.rst:3
#: ../develop/plone/misc/slideshow.rst:395
msgid "ZCML"
msgstr ""

# 0191dc17cb5741a8b4c15c64758d0152
#: ../develop/addons/components/zcml.rst:7
msgid "What Plone programmers should know about ZCML."
msgstr ""

# a8b18eddcd6543b79dd67e079cfbf838
#: ../develop/addons/components/zcml.rst:14
msgid ""
":term:`ZCML` stands for the *Zope Configuration Mark-up Language*.  It is an"
" XML-based language used to extend and plug into systems based on the Zope "
"Component Architecture (:term:`ZCA`)."
msgstr ""

# eba12be310a544b2a53291d301cdf55b
#: ../develop/addons/components/zcml.rst:18
msgid "It provides:"
msgstr ""

# 50a4edcf81f14757af9c81d6f01f1b1c
#: ../develop/addons/components/zcml.rst:20
msgid "conflict resolution (e.g. two plug-ins cannot overlap);"
msgstr ""

# dae1989837c444649285bf2f2114552c
#: ../develop/addons/components/zcml.rst:21
msgid "extensible syntax based on namespaces."
msgstr ""

# b64071f8ad6347be86a1e8158e4a6d54
#: ../develop/addons/components/zcml.rst:23
msgid "Downsides of ZCML are:"
msgstr ""

# 95f3d2921b3646d49cbb7df692200e39
#: ../develop/addons/components/zcml.rst:25
msgid "it is cumbersome to write by hand;"
msgstr ""

# 17cb950d127d4828bebd4f2e1cc0c65d
#: ../develop/addons/components/zcml.rst:26
msgid "lack of end-user documentation."
msgstr ""

# fd3e1a2c46274dbcb3f3a3e16bd29244
#: ../develop/addons/components/zcml.rst:28
msgid "Plone uses ZCML to:"
msgstr ""

# d65c002df3f248a4bc66304b1c448772
#: ../develop/addons/components/zcml.rst:30
msgid ""
"register components with various places in the system, both core and add-"
"ons."
msgstr ""

# ca369afdc38b4075a129616645a2b424
#: ../develop/addons/components/zcml.rst:35
msgid "Everything you can do in ZCML can also be done in Python code."
msgstr ""

# d5ed90b5a12f4640ba8d5bd69b4668fb
#: ../develop/addons/components/zcml.rst:37
msgid ""
"After developers found ZCML cumbersome, the :doc:`Grok framework "
"</develop/addons/components/grok>` was created. Grok makes it possible use "
"the ZCA without writing XML by enabling Python directives and function "
"decorators to be used instead."
msgstr ""

# 6645bb3f558e42dd9a61a057571e7045
# 31a72b0c96a748c2a3e7a869e75bf7c9
# 3d7681959c4c47a3926ced098da60272
# 1f82ec94cd0b4632a30cbedaa8be0d1e
# 7266f361898f4fd8a95672d3c018e38e
# 3fa93428ef904820a295887f17ba65ed
# 946d04d7309242d293577dd016dd93a9
# 2a52fdffb27744d69859cd8d3dba574a
# ae2e3db4642543c4ac6ffe70eda33626
# 7e9b70be32364db4979bd4be8ba15ce1
# 0b9c9fad190d43e283e4b56f4763a047
# f0d077f702d141bba5a1e94378826850
#: ../develop/addons/components/zcml.rst:42
#: ../develop/plone/content/creating.rst:495
#: ../develop/plone/content/events.rst:126 ../develop/plone/content/uid.rst:79
#: ../develop/plone/functionality/portlets.rst:525
#: ../develop/plone/images/content.rst:85
#: ../develop/plone/searching_and_indexing/query.rst:1074
#: ../develop/plone/security/permission_lists.rst:93
#: ../develop/plone/serving/traversing.rst:451
#: ../develop/plone/views/browserviews.rst:169
#: ../develop/plone/views/browserviews.rst:367
#: ../develop/plone/views/browserviews.rst:982
msgid "More info:"
msgstr ""

# 70cac48a9c6a4a2cadd311f5cbdee64a
#: ../develop/addons/components/zcml.rst:44
msgid ""
"`ZCML reference <http://docs.zope.org/zope3/ZCML/@@staticmenu.html>`_ (does "
"not include Plone specific directives)"
msgstr ""

# e423a074a73f42938e4f2bdc1ba8c533
#: ../develop/addons/components/zcml.rst:46
msgid "http://docs.zope.org/zopetoolkit/codingstyle/zcml-style.html"
msgstr ""

# 809f06302f7f481283503878d77bfe8a
#: ../develop/addons/components/zcml.rst:49
msgid "ZCML workflow"
msgstr ""

# 0e7715177fac4aa6bff776e36378b7f6
#: ../develop/addons/components/zcml.rst:51
msgid ""
"Each Plone component (core, add-on) has a base ``configure.zcml`` in the "
"package root.  This :term:`ZCML` file can include additional nested "
"configuration files using the ``<include>`` directive."
msgstr ""

# 92d7dd7650934d1994f6d8bce43dd463
#: ../develop/addons/components/zcml.rst:55
msgid "ZCML is always interpreted during Plone start-up."
msgstr ""

# 5aaa8d98850442eeafe922df35523151
#: ../develop/addons/components/zcml.rst:57
msgid ""
"Your :doc:`unit test "
"</manage/deploying/testing_tuning/testing_and_debugging/unit_testing>` may "
"need to manually include ZCML."
msgstr ""

# 0d1e309e43b9421e83a9bd1af37a27c6
#: ../develop/addons/components/zcml.rst:60
msgid ""
":doc:`Funny exception error messages occur if Plone is started in the "
"production mode and ZCML was not properly read for all the packages "
"</manage/troubleshooting/exceptions>`"
msgstr ""

# b864b1c868fe41929409640b899692a1
#: ../develop/addons/components/zcml.rst:64
msgid "When Plone is started all ZCML files are read."
msgstr ""

# 0f0bb5b6cb4e433e821c936f696bc39b
#: ../develop/addons/components/zcml.rst:66
msgid ""
"New way: Python egg ``setup.py`` file contains a `autoinclude "
"<http://plone.org/products/plone/roadmap/247>`_ hint and is picked up "
"automatically when all the packages are scanned."
msgstr ""

# 0a0b8712f8a04ff29f3d4d485fc319bf
#: ../develop/addons/components/zcml.rst:70
msgid ""
"Old way: ZCML reference must be manually added to the ``zcml = section`` in "
"``buildout.cfg``"
msgstr ""

# fdff577eaac1493097137d06320303a0
#: ../develop/addons/components/zcml.rst:73
msgid ""
"If ZCML contains errors :doc:`Plone does not start up in the foreground "
"</manage/troubleshooting/basic>`"
msgstr ""

# ed82b6dcbd9142f5ba363d03709fd259
#: ../develop/addons/components/zcml.rst:77
msgid "Overrides"
msgstr ""

# eecf27826a9443c1887963d13c416bdc
#: ../develop/addons/components/zcml.rst:79
msgid ""
"Besides layer overrides, ZCML provides more hardcore ways to override things"
" in buildout. These overrides can also override utilities etc. and overrides"
" take effect during ZCML parsing, not when site is run."
msgstr ""

# 5e6a1321ba784fdf9ccef0aeec5e83ac
#: ../develop/addons/components/zcml.rst:84
msgid ""
"Create ``overrides.zcml`` file in your egg to the same folder as "
"``configure.zcml``"
msgstr ""

# 171c1de20eae45c6bccd05c86256fb39
#: ../develop/addons/components/zcml.rst:86
msgid "Syntax is 100% same as in ``configure.zcml``"
msgstr ""

# 321e710ed9914c1fa559a2df39b3e0fb
#: ../develop/addons/components/zcml.rst:88
msgid "Restart Plone."
msgstr ""

# 0bb36290b4844dddb41eb41e91da1bc4
#: ../develop/addons/components/zcml.rst:92
msgid ""
"Before Plone 3.3, ZCML directives could not be automatically picked up from "
"eggs. To make Plone pick up the directions in ``overrides.zcml``, you'd have"
" to add this line in ``buildout.cfg``::"
msgstr ""

# bd138f98ea824f47980ac966f7de0d0d
#: ../develop/addons/components/zcml.rst:100
msgid ""
"Since Plone 3.3, the ``z3c.autoinclude`` plugin can do this "
"(http://plone.org/products/plone/roadmap/247/)."
msgstr ""

# c0d777deec44448795f06ea3d3b7658e
#: ../develop/addons/components/zcml.rst:105
msgid "Specify files and code from another package"
msgstr ""

# 1f7dbfa200044d2e81ebcabe0f49b9d9
#: ../develop/addons/components/zcml.rst:107
msgid ""
"If you ever find yourself needing to use a template from another package, "
"you can do so with using the configure tag which will then run the block of "
":term:`ZCML` in the context of that package."
msgstr ""

# 1cabcaeb1ce94ef4ac8da88dcb8226ed
#: ../develop/addons/components/zcml.rst:112
msgid ""
"Here is an example of defining portlet manager to be defined in another "
"manager::"
msgstr ""

# d71f9889ef004042a011543fce0703ec
#: ../develop/addons/components/zcml.rst:136
msgid "Conditionally run :term:`ZCML`"
msgstr ""

# 8701f83a4b364276a9ba3afab999a057
#: ../develop/addons/components/zcml.rst:138
msgid ""
"You can conditionally run :term:`ZCML` if a certain package or feature is "
"installed."
msgstr ""

# a2ca6eef9ede4a84b9ef5cb866723fb6
#: ../develop/addons/components/zcml.rst:141
msgid "First, include the namespace at the top of the :term:`ZCML` file::"
msgstr ""

# 6c74dc6164984ae2ad9cea85954c912b
#: ../develop/addons/components/zcml.rst:152
msgid "conditionally run for package::"
msgstr ""

# 71e93a43cfa54b1794faf6bd8612646b
#: ../develop/addons/components/zcml.rst:157
msgid "conditionally run for feature::"
msgstr ""

# a1cbe5c4e4c04d4bace412671252e033
#: ../develop/addons/dexterity.rst:3
msgid "Creating a Dexterity project"
msgstr ""

# b20bfd0eccce4740a629ff1199db84da
#: ../develop/addons/dexterity.rst:5
msgid ""
"How to create a dexterity project. This how-to explains how to setup a "
"Dexterity-based project with minimum effort."
msgstr ""

# 809ed16024144c879f3487ebba48ca49
#: ../develop/addons/dexterity.rst:8
msgid ""
"There are a few bumps when creating a Dexterity-based project from scratch "
"using zopeskel.dexterity. This getting started document explains how to work"
" around the bugs."
msgstr ""

# 212c4a7dbff04271a19a70570aae5600
#: ../develop/addons/dexterity.rst:12
msgid "Prerequisites"
msgstr ""

# ce532953105a4b39aad27b07f7e90145
#: ../develop/addons/dexterity.rst:14
msgid "Python 2.6 or 2.7"
msgstr ""

# 59c9e9d59e79473797aca2b1ab7bf46e
#: ../develop/addons/dexterity.rst:15
msgid "virtualenv"
msgstr ""

# 41db7250cd4d4a45a152b674ddded9dd
#: ../develop/addons/dexterity.rst:18
msgid "Creating a virtual environment"
msgstr ""

# eddac9d965dc428f980c9c0d138a261a
#: ../develop/addons/dexterity.rst:20
msgid ""
"We'll be using paster to create a Dexterity project. First a virtual "
"environment is created, followed by the Python eggs that are needed for "
"Paster."
msgstr ""

# 855f0db123fc46daae486a6a66c95304
#: ../develop/addons/dexterity.rst:0
msgid "Templer or Paster"
msgstr ""

# 3c986c73e83e49e7bb41ff6b7eeaac50
#: ../develop/addons/dexterity.rst:32
msgid ""
"Templer is the replacement of ZopeSkel/Paster, because of a bug in "
"zopeskel.dexterity it isn't possible to use it with Templer. Instead "
"ZopeSkel is pinned on version 2.12.2."
msgstr ""

# be5ee439391849c181ad1b600083c323
#: ../develop/addons/dexterity.rst:36
msgid "Create a dexterity product"
msgstr ""

# ccfd4ef6d770439799a02118c03aa7f0
#: ../develop/addons/dexterity.rst:37
msgid ""
"Use zopeskel to create a Python egg which contains a Dexterity-based "
"product. (Note: just select default options - press Enter - for all "
"questions during installation, except for project name which must be "
"collective.example)"
msgstr ""

# 9db7eee343e9495692ac90c881af292a
#: ../develop/addons/dexterity.rst:61
msgid "Fix content generation in zopeskel.dexterity"
msgstr ""

# 2af8fb16d1424cbe8be5d4c82080397c
#: ../develop/addons/dexterity.rst:63
msgid ""
"Because of a `bug "
"<https://github.com/collective/zopeskel.dexterity/issues/1>`_ in "
"zopeskel.dexterity paster content generation doesn't work without the fix "
"below."
msgstr ""

# ae087be1a74b4b90bf51eacbaf8b8189
#: ../develop/addons/dexterity.rst:66
msgid ""
"Fix collective.example/setup.py by commenting plone.app.dexterity and "
"plone.namedfile [blobs]:"
msgstr ""

# 560584d73d4b43529c1e739899ae1174
#: ../develop/addons/dexterity.rst:77
msgid "Run the command below to apply the changes made above:"
msgstr ""

# 8a6475bc88f54ffeb576420f9856e5a6
#: ../develop/addons/dexterity.rst:84
msgid "Add content using paster"
msgstr ""

# 208305d56cca435d9d1c14348c2b56fc
#: ../develop/addons/dexterity.rst:86
msgid ""
"Using the following command the local paster command for adding content are "
"shown:"
msgstr ""

# 072cad6c62d041bcb6825f1623135cd5
#: ../develop/addons/dexterity.rst:95
msgid "Add a content-type:"
msgstr ""

# 9f82b88da7624014bdb1a28bebeab1b3
#: ../develop/addons/dexterity.rst:105
msgid "Fix buildout"
msgstr ""

# 822b5ffef7dd4b30bf78ea19564df1d4
#: ../develop/addons/dexterity.rst:107
msgid ""
"Again the buildout.cfg & plone.cfg contains errors, fix the errors before "
"running buildout."
msgstr ""

# 90c440d236eb48938607d874835e7e7a
#: ../develop/addons/dexterity.rst:109
msgid "Add the following line to [buildout] part:"
msgstr ""

# b7871a690dc941a0838a9e87f3fc5789
#: ../develop/addons/dexterity.rst:115
msgid "Remove the following line from the [instance] part:"
msgstr ""

# 6ee3e684deb84a56b2dce82a543a08e4
#: ../develop/addons/dexterity.rst:121
msgid ""
"Not a bug, but when editing the buildout update Plone to the latest version:"
msgstr ""

# 11c6e82967a846b9a22e0eb74810ab35
#: ../develop/addons/dexterity.rst:128
msgid "Running buildout"
msgstr ""

# 3fc17beb67434149b520487703ba6c38
#: ../develop/addons/dexterity.rst:130
msgid "Finally run buildout:"
msgstr ""

# d82994dc97c14cb09b47df3f5e020787
#: ../develop/addons/dexterity.rst:138
msgid "And start the Plone instance to add the Dexterity content type"
msgstr ""

# dfeec9c5e1c54c5ea0773c6cb3924c1e
#: ../develop/addons/five-grok/background/adding-five-grok-as-a-dependency.rst:2
msgid "Adding five.grok as a dependency"
msgstr ""

# 32e318a58ab245b3921c64d7bede4cf4
#: ../develop/addons/five-grok/background/adding-five-grok-as-a-dependency.rst:4
msgid "**How to install the five.grok package safely**"
msgstr ""

# 567091eb1f9744f387f5d86c18daed53
#: ../develop/addons/five-grok/background/adding-five-grok-as-a-dependency.rst:6
msgid ""
"Assuming you already have a suitable package and a :doc:`buildout </old-"
"reference-manuals/buildout/index>`, using *five.grok* should be as simple as"
" depending on it in your *setup.py* file:"
msgstr ""

# 3a455e3211014520a4853c52499af4b9
#: ../develop/addons/five-grok/background/adding-five-grok-as-a-dependency.rst:17
msgid ""
"As shown on the previous page, you probably also want this as a minimum in "
"your *configure.zcml*:"
msgstr ""

# 1e8c55531e8e488c84b1de09bf42b6d3
#: ../develop/addons/five-grok/background/adding-five-grok-as-a-dependency.rst:31
msgid ""
"However, if you are using Zope 2.10, you may also need to pin certain eggs "
"in your *buildout.cfg*. If you are using Dexterity, there are already part "
"of the “known good set” of packages. Otherwise, see the `five.grok "
"installation instructions`_ for details."
msgstr ""

# 543bad0ba1154244a4a5ccc7f72b451e
#: ../develop/addons/five-grok/background/adding-five-grok-as-a-dependency.rst:36
msgid ""
"Naturally, you will need to re-run buildout after editing *setup.py* and/or "
"*buildout.cfg*."
msgstr ""

# c0637da2111d4fa9aef08b6e935620c2
# 423fa0e5599b46deac39a457096eba4c
#: ../develop/addons/five-grok/background/index.rst:2
#: ../develop/plone/serving/webdav.rst:103
msgid "Background"
msgstr ""

# 379f9eae19804a14a8b63fea280fa71f
#: ../develop/addons/five-grok/background/index.rst:4
msgid "**What is five.grok all about?**"
msgstr ""

# 6a5129e236e3466f9e8ec02c8d28614c
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:2
msgid "The Zope Component Architecture"
msgstr ""

# 423a49a6cb764a498a8194cad5136c5b
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:4
msgid ""
"**A high level overview of the basic concepts of the Zope Component "
"Architecture**"
msgstr ""

# 4f586920493c4561b8dc415253a03df6
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:7
msgid ""
"The Zope Component Architecture underpins much of the advanced functionality"
" in Zope and Plone. By mastering a few core concepts, you will be able to "
"understand, extend and customise a wide range of Zope technologies. These "
"concepts include:"
msgstr ""

# 11723565ccca46f1b4e1b2709b49cdab
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:12
msgid ""
"Using interfaces formalise a contract for and document a given component"
msgstr ""

# 4c001a6a7d19419b80ab445538b8700b
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:14
msgid "Implementing the singleton pattern with unnamed utilities"
msgstr ""

# 734e96274d19442680b2012add34761f
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:15
msgid "Using named utilities to build a registry of homogenous objects"
msgstr ""

# f47fd644557d4a67b51a989b2af43354
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:16
msgid ""
"Using adapters to implement generic functionality that can work with "
"heterogeneous objects"
msgstr ""

# c594d604e68e4ff8b5d93b4f37169a29
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:18
msgid ""
"Customising behaviour with the concept of a more-specific adapter or multi-"
"adapter"
msgstr ""

# 649adee9529d43c69fc63bbf27d193e6
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:20
msgid "Event subscribers and event notification"
msgstr ""

# b4db6285590a44d5a9446010854a445c
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:21
msgid ""
"Display components, including browser views, viewlets and resource "
"directories"
msgstr ""

# be7839f3f05c4886b46b2ae4e5aa3059
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:24
msgid ""
"This tutorial will explain these concepts using simple examples, and "
"illustrate how to use convention-over-configuration with the *five.grok* "
"package to quickly and easily employ adapters, utilities, event subscribers "
"and browser components in your own code."
msgstr ""

# b7f6266bd2454d11adaa9fac822e0292
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:30
msgid "Conventions used in this manual"
msgstr ""

# a44aee1f06144c6fa2f000c23fcac9c5
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:32
msgid ""
"The examples in this manual are sometimes shortened for readability, and you"
" may find that certain details of implementation are not shown to keep the "
"examples short and focused."
msgstr ""

# 3a0617dacc2e4608a707bc0c74f79ceb
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:36
msgid ""
"You will find two kinds of code listings here. A code block illustrating "
"code you may write in your own files is shown verbatim like this:"
msgstr ""

# 9ce11dd794c746ae871d4b7c8dad536a
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:49
msgid "Note:"
msgstr ""

# a2915f4b135c44268145965a507e95b0
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:51
msgid ""
"Code snippets may refer to code defined earlier on the same page. In this "
"case, import statements for this code are not shown."
msgstr ""

# cf64510a61964f39930d150aa044e60a
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:53
msgid "An ellipsis is sometimes used to abbreviate code listings."
msgstr ""

# 160c92b8b8b445e98cab672b740d1a75
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:55
msgid ""
"Sometimes, we will also show how a component or function can be used in "
"client code. Here, “client code” means any code that is making use of the "
"features implemented with the components illustrated. These are shown using "
"Python interpreter (aka doctest) conventions, like this:"
msgstr ""

# 52b57ee5f38c415b805144ee300186b3
#: ../develop/addons/five-grok/background/the-zope-component-architecture.rst:68
msgid ""
"Lines starting with *>>>* indicate executable Python code, be that in a "
"test, in the interactive interpreter, or in the body of a function or method"
" somewhere. Return values and output are shown underneath without the three-"
"chevron prefix."
msgstr ""

# 9d7ec38e825f464394a7c48cf5f06412
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:2
msgid "What is Grok and five.grok?"
msgstr ""

# 23228330f5d74a838764cad0d4221b2a
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:4
msgid "**Heritage and anthropology**"
msgstr ""

# aa18b2727d2246b4b4e7194474938fc0
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:6
msgid ""
"This manual is about using *five.grok* to configure components in the Zope "
"Component Architecture. But what is *five.grok*?"
msgstr ""

# 3990d2f3c657488182aaf44f80412aab
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:9
msgid ""
"`Grok`_ is a web development framework built on top of Zope 3 (aka Zope "
"Toolkit, or ZTK). One of the main aims of the Grok project is to make it "
"easier to get started with Zope development by employing “convention-over-"
"configuration” techniques. Whereas in a “plain Zope” a developer would "
"typically write a component in Python code and then register it in ZCML (an "
"XML syntax, normally found in a file called *configure.zcml)*, a Grok "
"developer uses base classes and inline code directives to achieve the same "
"thing. The advantage is that the “wiring” of a component is maintained right"
" next to its code, making it easier to understand what registrations are in "
"effect, and reducing the need for context-switching between different files "
"and syntaxes."
msgstr ""

# e75d4370b9694409a614d5e80643965d
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:21
msgid ""
"It is important to realise that, for the purposes of this manual at least, "
"the Grok concepts are just an alternate way to configure the Zope Component "
"Archiecture. Everything that can be done with Grok configuration can also be"
" done with “plain Zope” and ZCML. The grok syntax is merely a more "
"convenient, compact and opinionated way to achieve the same thing."
msgstr ""

# 0d212d6ca0f14ea78fd916347352f6d9
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:28
msgid ""
"Opinionated? That’s right. In part, the design of the various Grok "
"directives and base classes aims to steer developers towards good practice, "
"well-organised code and shared standards. That’s not to say you can’t go "
"your own way if you really need to, but it is usually best to follow the "
"conventions and standards used by everybody else, unless you have good "
"reason to do otherwise."
msgstr ""

# d7ae6914d3d44f47b058ba1a3ba9e8ba
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:38
msgid ""
"Let’s take a look at an example. Here is a simple adapter registration in "
"vanilla Zope. First, the adapter factory, a Python class:"
msgstr ""

# c412b115ad0d415c95f820506a83a949
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:62
msgid "Then, the registration in *configure.zcml*:"
msgstr ""

# 07f8865dc0e64e1298d51a3cfee63fb1
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:76
msgid ""
"(note: in this case we could omit the *for* and *provides* lines, but this "
"is the full syntax)"
msgstr ""

# 9b8393b75cf54b108b471185fb761a1b
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:79
msgid ""
"With Grok convention-over-configuration, you can do it all in one file, like"
" this:"
msgstr ""

# 53e5eb8bec2a449dbf843d5e19307dc8
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:99
msgid ""
"For this to work, the package needs to be “grokked”. This is done with a "
"single statement in *configure.zcml*, which then grokks all modules in the "
"package:"
msgstr ""

# 9ce13a74a3df4dd0a819d3a0e5937423
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:113
msgid ""
"The *<include />* statement ensures that the grok directive is available. "
"Once these two lines are in *configure.zcml*, we should not need to add any "
"more registrations to this file, no matter how many grokked components we "
"added to modules inside this package."
msgstr ""

# 995c32852c5049fb87d54c7ea89bcf0a
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:118
msgid ""
"When the configuration is loaded (at “grok time”), various “grokkers” will "
"analyse the code in the package, typically looking for special base classes "
"(like *grok.Adapter* above), *directives*(like the *grok.provides()* and "
"*grok.implements()* lines above), module-level function calls, directories "
"and files (e.g. page templates), and configure components based on these "
"conventions."
msgstr ""

# 3aaa737ba47a44cf871432c31737ba97
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:126
msgid "Grok vs. five.grok vs. grokcore"
msgstr ""

# 689c97f97a33420a98e8f4fac90e2976
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:128
msgid ""
"Grok started life as a monolithic framework, but the nice cavemen of the "
"Grok project decided to factor out the various grokkers into multiple "
"smaller packages. Thus, we have packages like `martian`_, the toolkit used "
"to write grokkers, `grokcore.component`_, which contains grokkers for basic "
"component architecture primitives such as adapters and utilities, "
"`grokcore.security`_, which provides for permissions and security "
"declarations, `grokcore.view`_, which provides support for browser views, "
"`grokcore.viewlet`_, which provides support for viewlets, and so on."
msgstr ""

# 080487f4396d4a598c4af7b75d2017cf
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:138
msgid ""
"`five.grok`_ is an integration package for Zope 2 which brings these "
"directives to Zope 2 applications such as Plone. In most Grok documentation,"
" you will see a line like this:"
msgstr ""

# 04d36c61376848ecb5bd10f2782174ac
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:146
msgid ""
"This is using the standalone Grok framework. The *five.grok* equivalent is:"
msgstr ""

# 9f6ffc415f6c4090903ae323a7e0274c
#: ../develop/addons/five-grok/background/what-is-grok-and-five-grok.rst:153
msgid ""
"As far as possible, the *five.grok* project aims to make the conventions and"
" syntax used in standalone Grok work identically in Zope 2. If you come "
"across a piece of Grok documentation, chances are you can get it to work in "
"Zope 2 by switching the \"*import grok*\" line to \"*from five import "
"grok*\", although there are situations where this is not the case. In "
"particular, we tend to use Plone content types instead of Grok ”models\" and"
" standard add/edit forms instead of the formlib-based forms from Grok."
msgstr ""

# 6dbcdceda2104f6fae5a222df267c31a
#: ../develop/addons/five-grok/browser-components/index.rst:2
msgid "Browser components"
msgstr ""

# 02c91a0b9f4d4a3e92560d56aed98ce0
#: ../develop/addons/five-grok/browser-components/index.rst:4
msgid "**Using five.grok to create views, viewlets and resource directories**"
msgstr ""

# 56976bb175c9473aa0548d2396bb6c14
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:2
msgid "Resource directories"
msgstr ""

# e5d0e15aefe24e58b36f13a0ddb41d35
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:4
msgid "**Exposing static resources such as CSS, JavaScript and image files.**"
msgstr ""

# 29e5e57e195f46deb875d06a4e373ec1
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:6
msgid ""
"So far, we have seen how to create views and viewlets. Using views with a "
"custom *render()* method that sets the *Content-Type* header, we were able "
"to create files on the fly. We could even use this for binary data."
msgstr ""

# 7c40d20ee49745d5a25e67499f9511ca
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:10
msgid ""
"In may cases, however, we simply want to expose some static files, such as "
"CSS and JavaScript files, or images and use them in our dynamic views. "
"Luckily, *five.grok* makes this easy."
msgstr ""

# 12e586ef0a9e42388b696e2c88cc3f80
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:14
msgid ""
"When a package is grokked, a grokker will look for a directory inside the "
"package with the name *static*. This is then available under the prefix "
"*++resource++<packagename>*, where *<packagename>* is the dotted name to the"
" package in which the *static* directory is located."
msgstr ""

# 7f7110c99c7d48028dc193df5022a7cf
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:19
msgid ""
"For example, let’s say we had a package called *example.messaging*. The "
"*static*directory would then be found in *example/messaging/static*, "
"alongside the Python modules and sub-packages in this package. If this "
"directory in turn contained a file called *messaging.css*, it would be "
"accessible on a URL like "
"*http://example.org/site/++resource++example.messaging/messaging.css.*"
msgstr ""

# c50077bbe9cc45f39af1f565eaee64f7
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:27
msgid ""
"If you need to register additional directories, you can do so using the "
"*<browser:resourceDirectory />* ZCML directive in *configure.zcml*. This "
"requires two attributes: *name* is the name that appears after the "
"*++resource++***namespace; *directory* is a relative path to the directory "
"containing resources."
msgstr ""

# 3eaa3316428347d08a0c6feee10d7c3a
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:34
msgid "Importing CSS and JavaScript files in templates"
msgstr ""

# fea44e71d0c74561b3e5abb3de90f11a
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:36
msgid ""
"One common use of static resources is to add a static CSS or JavaScript file"
" to a specific template. We can do this by filling the *style\\_slot* or "
"*javascript\\_slot* in Plone’s *main\\_template* in our own view template "
"and using an appropriate resource link."
msgstr ""

# bcfa830cb3e34573aef1e8f0e3a3e689
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:41
msgid ""
"For example, we could add the following in a view using *main\\_template*. "
"Note that this would go outside the block filling the *master* macro."
msgstr ""

# 8e081d10e9584c029b58acb06b11f20b
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:65
msgid ""
"Always create the resource URL relative to the navigation root as shown "
"here, so that the URL is the same for all content objects using this view. "
"This allows for efficient resource caching."
msgstr ""

# 36ce399456634d59b62a8341d839d077
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:69
msgid ""
"Of course, we could use the same technique anywhere else in any other page "
"template, but the head slots are a good place for CSS and JavaScript "
"resources."
msgstr ""

# e7f45969d89449a1993bb644a98ef400
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:74
msgid "Registering resources with Plone’s resource registries"
msgstr ""

# 9b7bfb5281b24ed09d2695c13d395d90
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:76
msgid ""
"Sometimes it is more appropriate to register a stylesheet with Plone’s "
"*portal\\_css* registry (or a JavaScript file with *portal\\_javascripts*), "
"rather than add the registration on a per-template basis. This ensures that "
"the resource is available site-wide."
msgstr ""

# a110cb40842f44b08d3e6b2e68d6d3d0
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:83
msgid ""
"It may seem wasteful to include a resource that is not be used on all pages "
"in the global registry. Remember, however, that *portal\\_css* and "
"*portal\\_javascripts* will merge and compress resources, and set caching "
"headers such that browsers and caching proxies can cache resources well. It "
"is often more effective to have one slightly larger file that caches well, "
"than to have a variable number of files that may need to be loaded at "
"different times."
msgstr ""

# 14ae30bdf88a4f24936f183275239275
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:91
msgid ""
"To add a static resource file, you can use the GenericSetup "
"*cssregistry.xml* or *jsregistry.xml* import steps in the *profiles/default*"
" directory. For example, an import step to add the *conference.css* file "
"site-wide may involve a *cssregistry.xml* file that looks like this:"
msgstr ""

# fe69db5cf4b14493b6fafe3ef5aa9ea8
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:107
msgid ""
"Similarly, a JavaScript resource could be imported with a *jsregistry.xml* "
"like:"
msgstr ""

# 6ae5ac6fa8e5435c9bec9d2b1e0ad891
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:120
msgid "Image resources"
msgstr ""

# 0ae8f081424340ba859fa568b9f9a3ec
#: ../develop/addons/five-grok/browser-components/resource-directories.rst:122
msgid ""
"Images can be added to resource directories just like any other type of "
"resource. To use the image in a view, you can construct an *<img />* tag "
"like this:"
msgstr ""

# a74fc435cafc4050bfcb9c2a7f315a38
# cca3fc30ea9441019f2809e003650bc5
#: ../develop/addons/five-grok/browser-components/viewlets.rst:2
#: ../develop/plone/views/viewlets.rst:3
msgid "Viewlets"
msgstr ""

# 4dd8374c637140938d0c66c6a59c8bf1
#: ../develop/addons/five-grok/browser-components/viewlets.rst:4
msgid "**Dynamic snippets with viewlets**"
msgstr ""

# 9706495fd88d4ec6b36165a875e2ae4c
#: ../develop/addons/five-grok/browser-components/viewlets.rst:6
msgid ""
"Viewlets, as their name suggests, are “little views” - snippets of HTML that"
" are rendered at defined location in a view. Behind the scenes, a viewlet is"
" a named browser component that is registered for a context and a request "
"(like a view), as well as for a view and a viewlet manager."
msgstr ""

# e83721b905dc42d4b460325ae9f9f6e8
#: ../develop/addons/five-grok/browser-components/viewlets.rst:12
msgid "In a page template, you may see something this:"
msgstr ""

# e167bf7e91054eaab215c905feb191b3
#: ../develop/addons/five-grok/browser-components/viewlets.rst:18
msgid ""
"This tells Zope to look up and render the *content provider* with the name "
"*plone.belowtitle*. The most common type of content provider is a *viewlet "
"manager*. When the viewlet manager is rendered, it will look up any viewlets"
" which are registered for that viewlet manager, and which are applicable to "
"the current context (content object), request (browser layer), and view (the"
" same provider expression can be used in multiple templates, but sometimes "
"we only want a viewlet to show up for a particular view). These are then "
"rendered into the page template."
msgstr ""

# 9dca3cf4964d4864824e7c99c0b0257b
#: ../develop/addons/five-grok/browser-components/viewlets.rst:27
msgid ""
"Plone comes with a number of standard viewlet managers, covering various "
"areas of the page which you may want to plug viewlets into. The standard "
"viewlet managers are all defined in the package *plone.app.layout.viewlets*."
" In its *configure.zcml*, you will see a number of sections like this:"
msgstr ""

# 592a7cff9d1449a99688e531ceb5c7a3
#: ../develop/addons/five-grok/browser-components/viewlets.rst:42
msgid ""
"This shows that we have a viewlet manager with the name *plone.htmlhead*, "
"identifiable via the interface "
"*plone.app.layout.viewlets.interfaces.IHtmlHead*."
msgstr ""

# 9da99b6a883748ceb0dc52e1249a3a22
#: ../develop/addons/five-grok/browser-components/viewlets.rst:46
msgid ""
"Another way to find viewlet managers is to use the *@@manage-viewlets* view:"
" simply append */@@manage-viewlets* to the end of the URL of a content item "
"in Plone, and you will see the viewlet managers and viewlets that make up "
"various parts of the page. You can find the various viewlet manager names "
"and interfaces on this screen as well."
msgstr ""

# 7977e9c23ca24a1eaa3f002f5306f5de
#: ../develop/addons/five-grok/browser-components/viewlets.rst:53
msgid "Registering a viewlet"
msgstr ""

# 3460548f5d0c4ceab1a479307dd5da0a
#: ../develop/addons/five-grok/browser-components/viewlets.rst:55
msgid ""
"With five.grok, we can register a viewlet using the *grok.Viewlet* base "
"class:"
msgstr ""

# dfc9b76736b24d20bf71bc974c0edf85
# 49a73f04699544d79b78ffb48f65d8f4
# b840485876594c448421c85e02eca2c0
# e72fe8b9bd2f41a892f207134bb7151e
# 0b5052012c454657a4d50cd0450e3e97
# ba2cc281595d4cc9b3bb4c391f9994cf
# 4b03963097ee49859df03905bc4f4b41
# d9f6b25f2f984b208bbef7af089f4345
# ca975af48a1a4464aca1af01a2c60548
# e1ee335f45fd466fbc012f9a7e97363e
# a2efdbf0bdae40368607ea735cae6fd6
# 20fd46df0d624180b264a18153abf1fb
# d5febbd4c6954d1cb8e637295536835e
# ac1b2b22fd2349f9b64a2bfe24751739
# f0958c57056940dcb766cfcb61acded7
# 8d11a800757a4c60b42541ddad18cebc
#: ../develop/addons/five-grok/browser-components/viewlets.rst:77
#: ../develop/addons/five-grok/browser-components/viewlets.rst:115
#: ../develop/addons/five-grok/browser-components/viewlets.rst:187
#: ../develop/addons/five-grok/browser-components/views.rst:117
#: ../develop/addons/five-grok/browser-components/views.rst:219
#: ../develop/addons/five-grok/browser-components/views.rst:337
#: ../develop/addons/five-grok/browser-components/views.rst:432
#: ../develop/addons/five-grok/browser-components/views.rst:488
#: ../develop/addons/five-grok/core-components/adapters.rst:173
#: ../develop/addons/five-grok/core-components/adapters.rst:400
#: ../develop/addons/five-grok/core-components/annotations.rst:30
#: ../develop/addons/five-grok/core-components/events.rst:91
#: ../develop/addons/five-grok/core-components/events.rst:174
#: ../develop/addons/five-grok/core-components/utilities.rst:87
#: ../develop/addons/five-grok/core-components/utilities.rst:124
#: ../develop/addons/five-grok/core-components/utilities.rst:156
msgid "Notes:"
msgstr ""

# 51493512297341349549bd4a8b224087
#: ../develop/addons/five-grok/browser-components/viewlets.rst:79
msgid ""
"We use *grok.name()* to give the viewlet a name. If this were omitted, the "
"name would be taken from the class name, in all lowercase. The name is "
"primarily useful for overriding the viewlet for a more specific context or "
"layer later, but it must be unique, so it is a good idea to use a dotted "
"name based on the package name."
msgstr ""

# bdc8bbe870374ebdaf0254c07eae703c
#: ../develop/addons/five-grok/browser-components/viewlets.rst:84
msgid ""
"We use *grok.context()* to limit this viewlet to a particular content type, "
"described by the *IDocument* interface from earlier examples (not shown). We"
" could omit this, in which case the viewlet would be shown for any type of "
"context where the viewlet manager is rendered."
msgstr ""

# 35eb4033e6af4f3da24ab0bbd35140b0
#: ../develop/addons/five-grok/browser-components/viewlets.rst:88
msgid ""
"As with a view, we have to specify a permission required to see the viewlet,"
" using *grok.require()*. If the user does not have the required permission, "
"the viewlet will simply be omitted."
msgstr ""

# e8f834aec4134b83b1501fd56a3f2dc3
#: ../develop/addons/five-grok/browser-components/viewlets.rst:91
msgid ""
"We override the *update()* method to prepare some data for the template, "
"much like we did for the view in the previous section. We could also define "
"additional properties or methods on the viewlet class."
msgstr ""

# a083042217bc4499bd1fe58724dbe4a9
#: ../develop/addons/five-grok/browser-components/viewlets.rst:95
msgid "We specify the viewlet manager using *grok.viewletmanager()*."
msgstr ""

# 62d0019d5c4345b789c35f50691e6bed
#: ../develop/addons/five-grok/browser-components/viewlets.rst:96
msgid ""
"As with a view, the context is available as *self.context* and the request "
"as *self.request*. In addition, there is *self.view*, the current view, and "
"*self.viewletmanager*, the viewlet manager."
msgstr ""

# 9fb0ce17ffdc4582bb3e4e153a0f6d9a
#: ../develop/addons/five-grok/browser-components/viewlets.rst:100
msgid ""
"To render the viewlet, we could either override the *render()* method and "
"return a string, or use a page template. A page template will be "
"automatically associated using the rules that apply views. Thus, if the "
"viewlet was defined in *browser.py*, the template would be found in "
"*browser\\_templates/messageviewlet.pt*. In the template, the variable "
"*view* refers to the current view, and the variable *viewlet* refers to an "
"instance of the viewlet class. For example:"
msgstr ""

# 67ad35fbb92741a197c17ea96315250f
#: ../develop/addons/five-grok/browser-components/viewlets.rst:117
msgid ""
"Viewlet templates tend to be short, and never include the full *<html />* "
"wrapper."
msgstr ""

# 53e724cda1664a0380a389e8146891aa
#: ../develop/addons/five-grok/browser-components/viewlets.rst:119
msgid ""
"For the page template to be valid, there must be exactly one root node, a "
"*<div />* in this case."
msgstr ""

# bfa57b52934546fea943a24baf4325cf
#: ../develop/addons/five-grok/browser-components/viewlets.rst:121
msgid ""
"It is a good idea to apply a CSS class to the outer element of the viewlet, "
"so that it can be styled easily."
msgstr ""

# ca1b5a3373b2410cb562138028b24e01
#: ../develop/addons/five-grok/browser-components/viewlets.rst:123
msgid ""
"The *viewlet*variable refers to an instance of the viewlet class. There is "
"also *view*, the current view; *context*, the context content object; and "
"*request*, the current request."
msgstr ""

# 8a63ec082cf041cd9ffeb4a9fe8432f2
#: ../develop/addons/five-grok/browser-components/viewlets.rst:128
msgid "Viewlet ordering"
msgstr ""

# bc8fe3ff800442699573e0b1a12597fd
#: ../develop/addons/five-grok/browser-components/viewlets.rst:130
msgid ""
"By default, the order of viewlets in a viewlet manager is arbitrary. Plone’s"
" viewlet managers, however, add ordering support, as well as the ability to "
"temporarily hide particular viewlets. You can control the order through-the-"
"web using the *@@manage-viewlets* view described above."
msgstr ""

# 595fca2bbe9549b1b6afc1e61356cd28
#: ../develop/addons/five-grok/browser-components/viewlets.rst:136
msgid ""
"A more robust and repeatable option, however, is to configure ordering at "
"product installation time using Generic Setup, by adding a *viewlets.xml* to"
" your *profiles/default* directory."
msgstr ""

# cf13ce03169644bda526201bba9c13bd
#: ../develop/addons/five-grok/browser-components/viewlets.rst:140
msgid ""
"For example, to ensure that our new viewlet appeared first in the "
"*plone.abovecontent* manager, we could use a *viewlets.xml* file like this:"
msgstr ""

# b9886b507a5f4a53acbf60b50b94a767
#: ../develop/addons/five-grok/browser-components/viewlets.rst:154
msgid ""
"See `this tutorial <http://plone.org/documentation/kb/customizing-main-"
"template-viewlets>`_ for more detail about the syntax of this file."
msgstr ""

# dc4ac8ff9ee941bda78ea3478b58adb3
#: ../develop/addons/five-grok/browser-components/viewlets.rst:157
msgid "Overriding an existing viewlet"
msgstr ""

# ec53fd3b4fac4da7b4649cb26f573885
#: ../develop/addons/five-grok/browser-components/viewlets.rst:159
msgid ""
"Just like a view, a viewlet with a particular name can be overridden based "
"on the type of context, using the *grok.context()* directive, or a browser "
"layer, using the *grok.layer()* directive."
msgstr ""

# 92baf81681d14885a6c675e1e1b349e5
#: ../develop/addons/five-grok/browser-components/viewlets.rst:163
msgid "Here is an example using a more-specific context override:"
msgstr ""

# 2a08fd51bb1e4c598a257a22d9d36fa0
#: ../develop/addons/five-grok/browser-components/viewlets.rst:189
msgid ""
"The viewlet name and manager are the same as those used in the original "
"registration, allowing this viewlet to act as an override for the one "
"defined previously."
msgstr ""

# dbf7032f2ad04f529e6b582f0625163a
#: ../develop/addons/five-grok/browser-components/viewlets.rst:192
msgid ""
"Here, the viewlet is registered for a more-specific context, using "
"*grok.context()*."
msgstr ""

# 335c2ef7d3e04e0cb4d85b9d1117e34e
#: ../develop/addons/five-grok/browser-components/viewlets.rst:194
msgid ""
"In this case, there is no page template. Instead, we return an empty string "
"from *render()*. This has the effect of hiding the viewlet for documents "
"providing *IImpotantDocument*(from the examples earlier in the manual, this "
"is a marker interface that can be applied to *IDocument* instances). We "
"could of course have used a template as well, as shown above."
msgstr ""

# 3a248898253741cda3598bac15f3dff2
#: ../develop/addons/five-grok/browser-components/viewlets.rst:202
msgid "Restricting a viewlet to the canonical view"
msgstr ""

# 7ba4aca9005649e2a489b94b86a501e3
#: ../develop/addons/five-grok/browser-components/viewlets.rst:204
msgid ""
"A viewlet may be registered to appear only when a particular type of view is"
" being rendered, using the *grok.view()* directive. You can pass either the "
"view class itself, or an interface it implements, to this directive. One "
"common example of this is the *IViewView* marker interface, which Plone "
"applies to the canonical view (i.e. the one you get when clicking the *View*"
" tab) of a content object."
msgstr ""

# c5d9cb8aedd1442a80ca7f40aa435119
#: ../develop/addons/five-grok/browser-components/viewlets.rst:211
msgid ""
"Here is a refined version of our original viewlet, applied to the canonical "
"view only (template not shown again):"
msgstr ""

# 05e9e4e9477244afb85be7fc65a8d36d
#: ../develop/addons/five-grok/browser-components/viewlets.rst:219
msgid ""
"this will cause an error if the viewlet manager is not available for the "
"current context and view."
msgstr ""

# e6002ce8d7e542fc9ba0371e24a48120
#: ../develop/addons/five-grok/browser-components/viewlets.rst:222
msgid ""
"We need to register some viewlets before this would actually display "
"anything. Previously, we used an interface provided by the viewlet manager "
"to register a viewlet for that manager. We could define such an interface "
"and use *grok.implements()* on the viewlet manager class to associate it "
"with the manager class. However, we can also use the viewlet manager class "
"directly:"
msgstr ""

# 804ea3bed5e64f49b910bc2b1daff50b
#: ../develop/addons/five-grok/browser-components/viewlets.rst:239
msgid ""
"It would of course be better to use a page template, but this would be "
"enough for a quick test."
msgstr ""

# f194dd9bc3274563826413310bed0caa
# 6578975e83c44c5fad60f2e548aa1aa4
#: ../develop/addons/five-grok/browser-components/views.rst:2
#: ../develop/plone/views/browserviews.rst:3
msgid "Views"
msgstr ""

# 3ac27ac44ad54ebf80e81a92ba5599fb
#: ../develop/addons/five-grok/browser-components/views.rst:4
msgid "**Browser views with and without templates**"
msgstr ""

# 52adba850c804f11aedf8492f505aff3
#: ../develop/addons/five-grok/browser-components/views.rst:7
msgid ""
"Browser views (or just “views”) are the most common form of display "
"technology in Zope. When you view a web page in Plone, chances are it was "
"rendered by a view\\ :sup:`[1]`\\ ."
msgstr ""

# 9433f192308a409f94a49f1c685e8128
#: ../develop/addons/five-grok/browser-components/views.rst:11
msgid ""
"At the most basic level, a view is a component (in fact, a named multi-"
"adapter) that is looked up during traversal (i.e. when Zope interpreters a "
"URL) and then called by the Zope publisher to obtain a string of HTML to "
"return to the browser. That normally involves a page template, although it "
"is possible to construct the response in code as well. Sometimes, the view "
"may not return anything. One reason may be that it results in a redirect. "
"Furthermore, some views are not designed to be invoked from URL traversal, "
"instead containing utility methods which are looked up from other views or "
"components."
msgstr ""

# 933128f4bf1842e19d220ba9e072ab21
#: ../develop/addons/five-grok/browser-components/views.rst:22
msgid "Views with templates"
msgstr ""

# 80ea52439f1f410197037fdb0e5ce4b3
#: ../develop/addons/five-grok/browser-components/views.rst:24
msgid ""
"The most common type of view involves a Python class and an associated page "
"template. The Python class is used to register the view. An instance of the "
"class is also available in the template, under the name *view*. This "
"provides a natural home for “display logic” - calculations or preparation of"
" data intended only for the view."
msgstr ""

# d83f05a7ea8a4e8c9c70bd986c8846b1
#: ../develop/addons/five-grok/browser-components/views.rst:31
msgid ""
"As a rule of thumb, try to keep the page template free from complex "
"expressions. Python code is much easier to debug and test."
msgstr ""

# 98b6e462b83443569b543d5345517002
#: ../develop/addons/five-grok/browser-components/views.rst:34
msgid ""
"Here is an example of a view class which registers a view and provides some "
"helper methods and attributes. It also prepares some variables for the view "
"in the *update()* method, which is called just before the view is rendered. "
"Obviously, we could have omitted these things if they were not necessary, in"
" which case the Python class would serve only as a place to hang the view’s "
"registration."
msgstr ""

# 2e2473eab13642149fb8af8b8c1fd5b6
#: ../develop/addons/five-grok/browser-components/views.rst:41
msgid ""
"This class could go in any Python module. For generic views, *browser.py* is"
" a good choice."
msgstr ""

# 0b947cb14cc64e78be7779d5063367d8
#: ../develop/addons/five-grok/browser-components/views.rst:64
msgid ""
"The automatically associated template is shown below. If the Python module "
"was *browser.py*, this would be found in a directory "
"*browser\\_templates/asmessage.pt* in the same package. The directory name "
"is taken from the module name (with *\\_templates* appended); the filename "
"is taken from the class name (in all lowercase, with a *.pt* extension)."
msgstr ""

# 41432f33c0854179a4ff6d89d0282639
#: ../develop/addons/five-grok/browser-components/views.rst:111
msgid ""
"If we now had a content object providing *IDocument* reachable at "
"*http://example.org/my-document*, we would be able to invoke this view using"
" a URL like *http://example.org/my-document/@@as-message*. See the "
":doc:`Dexterity Developer Manual </external/plone.app.dexterity/docs/index>`"
" for more information about how to register default and alternative views "
"for content items."
msgstr ""

# b8a2a962c8a54c53b9baf21c7b1d2297
#: ../develop/addons/five-grok/browser-components/views.rst:119
msgid ""
"The class will grokked as a view because it derives from *grok.View*. This "
"in turn defines a constructor which saves the context content object as "
"*self.context* and the request as *self.request*."
msgstr ""

# 578d1e2e17274acab8fe39cc953d2ecf
#: ../develop/addons/five-grok/browser-components/views.rst:122
msgid ""
"We register the view for a specific type of content object using "
"*grok.context()*, which we have already seen in the context of adapters. "
"Here, we have used the *IDocument* interface from earlier in this manual. If"
" there is a module-level context, this can be omitted."
msgstr ""

# a25c4ef018cd49069585101397980357
#: ../develop/addons/five-grok/browser-components/views.rst:127
msgid ""
"We give the view a name using *grok.name()*. This corresponds to the path "
"segment in the URL. This directive is optional. The default view name is the"
" name of the class in all lowercase, e.g. *“asmessage”* in this case."
msgstr ""

# d4a59925393f402aa7727bc252fe1620
#: ../develop/addons/five-grok/browser-components/views.rst:131
msgid ""
"We specify a permission required to access the view using *grok.require()*. "
"This directive is required. You can pass *“zope2.Public”* to indicate that "
"the view does not require any permissions at all. Other common permissions "
"include *zope2.View*, *cmf.ModifyPortalContent* and *cmf.ManagePortal*. See "
"the :doc:`Dexterity Developer Manual "
"</external/plone.app.dexterity/docs/index>` for more information about "
"permissions and workflow."
msgstr ""

# f5cda8b39692448b95f33c13a20773ac
#: ../develop/addons/five-grok/browser-components/views.rst:138
msgid ""
"We override the *update()* method, which is called by the base class before "
"the view is rendered. This is a good place to pre-calculate values used in "
"the template and process any request variables (see the section on forms "
"below). Since views are transient objects instantiated on the fly, we can "
"safely store values on the view object itself. Here, we have looked up an "
"*IMessage*adapter (from the adapter examples earlier in this manual) and "
"stored it in *self.message*. This is available in the template as "
"*view/message*."
msgstr ""

# f186dc2770d74d558acd35162e430a4d
#: ../develop/addons/five-grok/browser-components/views.rst:146
msgid ""
"In the *update()* method, we use the *aq\\_inner()* function on "
"*self.context* to avoid possible problems with the view being part of the "
"acquisition chain of *self.context*. If that didn’t make any sense, better "
"not to worry about why this is necessary. Nine times of out ten, you won’t "
"have a problem if you just use *self.context* directly, but since the tenth "
"time is quite hard to debug, it’s a good habit to get into."
msgstr ""

# 0e40bd7895e84a19832238d00774d5ca
#: ../develop/addons/five-grok/browser-components/views.rst:153
msgid ""
"We have also defined a custom method, which we use in the template via a TAL"
" expression."
msgstr ""

# 6e2f8aa28bbd44afa03f2ff39862e63a
#: ../develop/addons/five-grok/browser-components/views.rst:155
msgid ""
"In the template, we use the *master* macro of Plone’s *main\\_template* to "
"get the standard Plone look-and-feel, and include a number of standard "
"viewlet managers (see the section on viewlets later in this manual) to "
"provide standard UI elements."
msgstr ""

# b94038927e4e4c7fbf5802ba5c8a115a
#: ../develop/addons/five-grok/browser-components/views.rst:159
msgid ""
"We use a number of TAL expressions to render information from the context "
"(the *IDocument* object) and the view instance (in particular, the "
"*view.message* object we set in the *update()* method). See the `ZPT "
"reference`_ for more details on the TAL syntax."
msgstr ""

# 15a9eb951c4b4579bf1abb03c66623fe
#: ../develop/addons/five-grok/browser-components/views.rst:165
msgid "Views without templates"
msgstr ""

# 639ebabd8a224258b721228f11d42989
#: ../develop/addons/five-grok/browser-components/views.rst:167
msgid ""
"Sometimes, we do not need a template. In this case, we can override the "
"*render()* method of the *grok.View* base class to return a string, which is"
" then returned to the browser as the response body."
msgstr ""

# 05e104ff5d45486e9a7763612faaf851
#: ../develop/addons/five-grok/browser-components/views.rst:171
msgid ""
"Below is an example that builds a CSV file of the recipients of the message "
"representation of the context. By setting appropriate response headers, this"
" view ensures that the browser will attempt to download that generated file,"
" rather than display a plain text response."
msgstr ""

# 1e45fbd45ed04cb1866d42f7f88bc219
#: ../develop/addons/five-grok/browser-components/views.rst:221
msgid "We use the Python *csv* module to build the output string."
msgstr ""

# edb4fd26106146a2aad0ea87e038b7dc
#: ../develop/addons/five-grok/browser-components/views.rst:222
msgid "We return a string, which represents the response body."
msgstr ""

# d37101b8a5764664a4243744500a08ed
#: ../develop/addons/five-grok/browser-components/views.rst:223
msgid ""
"We set the *Content-Type* repsonse header to indicate to the browser that "
"the return value should be opened as a spreadsheet."
msgstr ""

# 49fe6e6458d74b898b80fe0550a17d29
#: ../develop/addons/five-grok/browser-components/views.rst:225
msgid ""
"We set the *Content-Disposition* response header to indicate that the return"
" value should be treated as a separate file rather than opened in the "
"browser, and suggest a filename for the download."
msgstr ""

# 40906835c37d40e5ba0f7db5c3873e2d
#: ../develop/addons/five-grok/browser-components/views.rst:230
msgid "Implementing simple forms"
msgstr ""

# e7e8913780134c82b9a8c79822d73673
#: ../develop/addons/five-grok/browser-components/views.rst:232
msgid ""
"Dexterity uses the powerful `z3c.form`_ library to provide forms based on "
"schemata defined in Python or through-the-web, including validation and "
"standardised widgets. Sometimes, though, we just want a simple HTML form and"
" a bit of logic to process request parameters. One common way to implement "
"this is with a view that defines a form, which submits back to itself. The "
"form is processed in the *update()* method of the view class."
msgstr ""

# ff911ee91769475b9786bcd6c4ca1bed
#: ../develop/addons/five-grok/browser-components/views.rst:240
msgid ""
"The example below shows a simple form which allows users to subscribe to a "
"content object with an email address. The list of subscribers is stored in "
"an annotation (as described earlier in this manual)."
msgstr ""

# 32f2f3822eeb4daaa391ca3b3ca72088
#: ../develop/addons/five-grok/browser-components/views.rst:283
msgid ""
"Here is the form template. Assuming the view was put in a module "
"*subscription.py*, the template would be in "
"*subscription\\_templates/subscribe.pt*."
msgstr ""

# dba00141d5a14cd4b375bb4cf89bfacb
#: ../develop/addons/five-grok/browser-components/views.rst:330
msgid ""
"To make the example more realistic, we would obviously also need to write "
"some code to help manage the list of subscribers, allowing users to un-"
"subscribe and so on, as well as some functionality to actually use the list."
" These could potentially be created as other views in the same module. Their"
" templates would then also go in the *subscription\\_templates* directory."
msgstr ""

# 77d4ea289e424217a9b250d6515a8262
#: ../develop/addons/five-grok/browser-components/views.rst:339
msgid ""
"We’ve omitted the *grok.name()* directive, so the view name will be "
"*@@subscribe*."
msgstr ""

# bb37ffae02d74b2ebb4314dbba08d8e3
#: ../develop/addons/five-grok/browser-components/views.rst:341
msgid ""
"We register the form for a generic interface so that it can be used on any "
"annotatable context."
msgstr ""

# d28c85db804849809baac0bbcec3279f
#: ../develop/addons/five-grok/browser-components/views.rst:343
msgid ""
"We use a redirect if the form is successfully submitted. The *grok.View* "
"base class is smart enough to avoid invoking any associated template or "
"overridden *render()* method if a redirect takes place."
msgstr ""

# 9fb3586c046a4a6a9b9b5064059a824d
#: ../develop/addons/five-grok/browser-components/views.rst:347
msgid ""
"We use *self.request.form* to inspect the submitted form. This dictionary "
"contains form values submitted via a POST request. For a GET request, use "
"*self.request.get()* to obtain parameters."
msgstr ""

# b3fd284c0fc04fce989fa3d35bf8f8be
#: ../develop/addons/five-grok/browser-components/views.rst:350
msgid ""
"We use an *OOSet* as an efficient persistent storage of subscription email "
"addresses."
msgstr ""

# c412ff570da34053b775ef8349476838
#: ../develop/addons/five-grok/browser-components/views.rst:354
msgid "Utility views"
msgstr ""

# fcd5cc3d60c24f0fa725026e73650e45
#: ../develop/addons/five-grok/browser-components/views.rst:356
msgid ""
"Not all views are meant to be rendered. Sometimes, a view provides utility "
"methods that may be used from other views. Plone has a few such views in the"
" *plone.app.layout.globals* package:"
msgstr ""

# 490782286c6546078b4a9279285a924f
#: ../develop/addons/five-grok/browser-components/views.rst:360
msgid ""
"*plone\\_portal\\_state*, which gives access to site-wide information, such "
"as the URL of the navigation root."
msgstr ""

# 3b60272a02764739881b12be8a24e9e6
#: ../develop/addons/five-grok/browser-components/views.rst:362
msgid ""
"*plone\\_context\\_state*, which gives access to context-specific "
"information, such as an item’s URL or title."
msgstr ""

# ea8363ac09fa4ad080c1c78ec45574d1
#: ../develop/addons/five-grok/browser-components/views.rst:364
msgid ""
"*plone\\_tools*, which gives access to common tools, such as "
"*portal\\_membership* or *portal\\_catalog*."
msgstr ""

# f5c89e3b414440d8a5cadb48574672fd
#: ../develop/addons/five-grok/browser-components/views.rst:367
msgid ""
"See the *interfaces.py* module in *plone.app.layout.globals* for details. In"
" a template, we would look up these with a TAL expression like:"
msgstr ""

# 97913d0f39c84f758c24f378bf4b1e82
#: ../develop/addons/five-grok/browser-components/views.rst:378
msgid ""
"In code, we could perform the same lookup like so (note that we need a "
"context object and the request; in a view, we’d normally get these from "
"*self.context* and *self.request*):"
msgstr ""

# 089e566744c44cd19bf636693a6c9ce5
#: ../develop/addons/five-grok/browser-components/views.rst:388
msgid ""
"A utility view is registered like any other view. If you are using "
"*grok.View* to register one, you should return an empty string from the "
"*render()* method. You also should not use *update()*, since it may not be "
"called for you. Instead, define methods and attributes that can be accessed "
"independently. Here is an example:"
msgstr ""

# 28c96b80a9234d4ebc7f6f1ebde9c616
#: ../develop/addons/five-grok/browser-components/views.rst:434
msgid "We have implemented an empty *render()* method to satisfy *grok.View*."
msgstr ""

# 0ae7f1f5a787409b98d7c81c51b15c2e
#: ../develop/addons/five-grok/browser-components/views.rst:436
msgid ""
"We have used `plone.memoize`_ to lazily cache variables. The *@view.memoize*"
" decorator will cache each value for the duration of the request. See "
"*plone.memoize*’s *interfaces.py* for more details."
msgstr ""

# 6b66803eff354f13b7fef34d05b3cc14
#: ../develop/addons/five-grok/browser-components/views.rst:439
msgid ""
"We’re being defensive and returning *None* in the cases where the *IMessage*"
" adapter cannot be looked up."
msgstr ""

# 0a19682a00794412a743e367ff715966
#: ../develop/addons/five-grok/browser-components/views.rst:443
msgid "Overriding views"
msgstr ""

# 942e640724414b58b113baf7f1beacdd
#: ../develop/addons/five-grok/browser-components/views.rst:445
msgid ""
"Recall that views are implemented behind the scenes as named multi-adapters."
" One consequence if this is that it is possible to override a view with a "
"given name by using the more-specific adapter concept. You can:"
msgstr ""

# 2bca8aa72a9744f8a1971a1b8062aa36
#: ../develop/addons/five-grok/browser-components/views.rst:450
msgid ""
"Register a view with the same name as an existing view, specifying a more "
"specific context interface with *grok.context()*"
msgstr ""

# 14f57de5d0804c1da7e2b4192eea589f
#: ../develop/addons/five-grok/browser-components/views.rst:452
msgid ""
"Register a view with the same name as an existing view, specifying a more "
"specific type of request with *grok.layer()*."
msgstr ""

# 0d1a439f034444a0a318c503d3f5b103
#: ../develop/addons/five-grok/browser-components/views.rst:455
msgid ""
"The term “layer” here relates to the concept of a “browser layer”. Upon "
"traversal, the request may be marked with one or more marker interfaces. In "
"Plone, this normally happens in one of two ways:"
msgstr ""

# c7963ea81bfe49f4ba9ec3f491db6336
#: ../develop/addons/five-grok/browser-components/views.rst:459
msgid ""
"A browser layer can be automatically associated with the currently active "
"Plone theme. This magic is performed using the `plone.theme`_ package."
msgstr ""

# f04e75fda3cb4c87ac2cfb303736759f
#: ../develop/addons/five-grok/browser-components/views.rst:462
msgid ""
"One or more browser layers can be activated when a particular product is "
"installed in a Plone site. The `plone.browserlayer`_ package supports this "
"via the *browserlayer.xml* GenericSetup syntax. See the :doc:`Dexterity "
"Developer Manual </external/plone.app.dexterity/docs/index>` for more "
"information about creating a GenericSetup profile."
msgstr ""

# 3bffd2298eb846c0a0f03afaf8e9a459
#: ../develop/addons/five-grok/browser-components/views.rst:468
msgid ""
"For example, the following class (view implementation and template not "
"shown) could be used to override a view for a specific layer:"
msgstr ""

# 4ea41f6029ed453ebe5b0ac22eb2b5b5
#: ../develop/addons/five-grok/browser-components/views.rst:490
msgid ""
"The *grok.layer()* directive takes an interface as its only argument. This "
"should be a layer marker interface. In this case, we have assumed that we "
"have an *IMessageOverrides* layer."
msgstr ""

# 153e647e47454176a79716f42937d23c
#: ../develop/addons/five-grok/browser-components/views.rst:493
msgid ""
"We’ve used the same name and context as the default implementation of the "
"view."
msgstr ""

# e371401dc6e742bbb3ac15efcce710ea
#: ../develop/addons/five-grok/browser-components/views.rst:495
msgid ""
"We’ve also used the same permission. It is possible to change the "
"permission, but in most cases this would just be confusing."
msgstr ""

# aab6f03af4e14234a9dd3168bb23a804
#: ../develop/addons/five-grok/browser-components/views.rst:497
msgid ""
"We will also sometimes use layers not to override an existing view, but to "
"ensure that the view is not available until a package has been installed "
"into a Plone site (in the case of a layer registered with "
"*browserlayer.xml*) or a given theme is active (in the case of a theme-"
"specific layer)."
msgstr ""

# 06a777fc9d9148d0b585828dc6217c7a
#: ../develop/addons/five-grok/browser-components/views.rst:504
msgid ""
"You can use five.grok to override any browser view, not just those "
"registered with five.grok. For a simpler way to override templates (but not "
"Python logic), you may also want to look into `z3c.jbot`_."
msgstr ""

# 49e18ba83501466aa48a54eb8e14f353
#: ../develop/addons/five-grok/browser-components/views.rst:510
msgid ""
"[1] As of Plone 3, that’s not entirely true: an older technology known as "
"skin layer templates are used for many of the standard pages, but the "
"principles behind them are the same."
msgstr ""

# 204caedf88e04e2f95b1fc2ea0350a16
#: ../develop/addons/five-grok/core-components/adapters.rst:4
msgid ""
"**Adapting from one interface to another with simple adapters and multi-"
"adapters**"
msgstr ""

# f72e774775ba4f7084ea06b86160eaf0
#: ../develop/addons/five-grok/core-components/adapters.rst:7
msgid ""
"Adapters are one of the most powerful concepts of the Zope Component "
"Architecture. They underpin a huge amount of the functionality - and "
"“pluggability” - of Zope and Plone. You will often see documentation (or "
"interfaces) that describe how a customisation can be applied by writing an "
"adapter."
msgstr ""

# 202f344f8d6940f9a17d9ce6a9adc98c
#: ../develop/addons/five-grok/core-components/adapters.rst:13
msgid ""
"As the name suggests, adapters implement the “adapter” software design "
"pattern. In the simplest terms, an adapter is a component that knows how to "
"use an object providing one interface to implement another interface."
msgstr ""

# 7b5e705657f74478bd9873cd96e4afee
#: ../develop/addons/five-grok/core-components/adapters.rst:17
msgid ""
"The usual analogy is that of international power plugs: a European plug has "
"two prongs and a UK plug has three, but for the most part they do the same "
"job and use the same (or nearly the same) voltage. If you have a UK "
"appliance and you are in a country that has European sockets, you can "
"(re-)use your appliance (and avoid buying a new one) by employing an adapter"
" that makes the UK plug fit into the European socket. (If you’ve ever lived "
"in the UK, you’ll understand why “European” is not a superset of “UK” in the"
" preceding paragraph)."
msgstr ""

# f81d17094cf142c0a78e645bcc163546
#: ../develop/addons/five-grok/core-components/adapters.rst:27
msgid ""
"If you prefer duck metaphors, there is an awesome talk by Brandon Craig "
"Rhodes about the concept of an adapter for your viewing pleasure `here "
"<http://plone.org/events/conferences/2008-washington-dc/agenda/using-grok-"
"to-walk-like-a-duck>`_. It even has sound effects."
msgstr ""

# d65bf274cc1a43c293527bf77d2a0685
#: ../develop/addons/five-grok/core-components/adapters.rst:32
msgid ""
"In software terms, it is much the same. Let’s say that we were writing a "
"Twitter-to-email gateway (because Gmail has lots of storage space and it’s "
"important to know when some man in Kuala Lumpur got out of bed). Suppose we "
"have a function that can send an email, expecting an *IMessage* object. "
"Unfortunately, our input is a tweet, conforming to the *ITweet* interface:"
msgstr ""

# e4ffa9e8ba1146999def2d6d0542c87f
#: ../develop/addons/five-grok/core-components/adapters.rst:65
msgid "What we need is a way to *adapt* our *ITweet* object to an *IMessage*."
msgstr ""

# 55e8259435c944efa2d12e01cd41076e
#: ../develop/addons/five-grok/core-components/adapters.rst:67
msgid ""
"The basic approach is to write a class that *implements* the attributes and "
"methods of *IMessage* by delegating to an *adapted* context object that "
"*provides* the *ITweet* interface. And a simple adapter would be just that: "
"a class that we instantiated directly, being passing a tweet in its "
"constructor, and then behaving like an *IMessage*."
msgstr ""

# 5c848e4435624e7fbf13bbc0424350e3
#: ../develop/addons/five-grok/core-components/adapters.rst:73
msgid ""
"Doing this, however, would tie us down to a specific implementation of the "
"adapter. The ZCA gives us a more powerful alternative by maintaining a "
"registry of adapters. We simply ask for an adapter *from* the object we "
"have, *to* the interface we want, and the ZCA searches the registry for the "
"most appropriate one. In code, it looks like this:"
msgstr ""

# 7b55dbbde7b1484098b5e6bdc1e9745a
#: ../develop/addons/five-grok/core-components/adapters.rst:88
msgid "We could call this function with a tweet like this:"
msgstr ""

# 0d00579efbca4c50aa9108da49438ed0
#: ../develop/addons/five-grok/core-components/adapters.rst:95
msgid ""
"Here, we have assumed that the incoming object is an *ITweet*, but in "
"reality it could be anything that was *adaptable* to *IMessage.* Suddenly, "
"our *sendAsEmail()* function can be used for Identi.ca messages and those "
"really irritating Facebook status updates as well. All we have to do is "
"register an appropriate adapter from the source type to *IMessage*, and "
"we’re done."
msgstr ""

# 59a92d53b4da4697a08e603fb356de0a
#: ../develop/addons/five-grok/core-components/adapters.rst:103
msgid ""
"As you may imagine, this technique is very useful in a content management "
"scenario where you may have any number of different content types and you "
"want to implement some common functionality that works across a number of "
"objects."
msgstr ""

# 1940c264e94545f6a7f18acabbeee3de
#: ../develop/addons/five-grok/core-components/adapters.rst:108
msgid ""
"The syntax we used here is to “call” the interface. This is the most "
"convenient way to look up a simple (unnamed, non-multi) adapter. If no "
"adapter can be found, the ZCA will raise a *TypeError*. That normally "
"indicates a programming error, so we don’t mind, but if you are unsure "
"whether the adapter has been registered, you can fall back to a default "
"value (e.g. *None*) like this:"
msgstr ""

# 683e3e5fa97c46d6974c459065e43c8f
#: ../develop/addons/five-grok/core-components/adapters.rst:120
msgid "Registering classes as adapter factories"
msgstr ""

# c341ceece1544dd5a362b0af16b4d171
#: ../develop/addons/five-grok/core-components/adapters.rst:122
msgid ""
"Now that we have seen what adapters do and how to look them up, let’s "
"actually write and register one."
msgstr ""

# e8a97e66f58447cb905e5b7ea7a5662f
#: ../develop/addons/five-grok/core-components/adapters.rst:125
msgid ""
"When we register adapters, we are actually registering an "
"**adapter****factory.** This is a callable that takes as an argument the "
"object being adapted, and returns an object providing the desired interface."
" Each time an adapter is looked up, the ZCA calls the adapter factory to "
"obtain a new adapter instance. (Compare this to utilities, which are "
"instantiated once and shared.)"
msgstr ""

# fb382de44db947639359bab2d1e6a5eb
#: ../develop/addons/five-grok/core-components/adapters.rst:132
msgid ""
"In most cases, adapter factories are classes implementing a given interface "
"and taking a single parameter in their constructor. (A Python class object "
"is a callable which takes the arguments of the class’ *\\_\\_init\\_\\_()* "
"method and returns an instance of the class). The *grok.Adapter* base class "
"relies on this convention. It even defines the constructor (although you can"
" override it) and stores the adapted object in the variable *self.context*, "
"as is the convention."
msgstr ""

# 4b3e0a32c17f4fc9925899abb8e33e1a
#: ../develop/addons/five-grok/core-components/adapters.rst:140
msgid ""
"An adapter factory for adapting *ITweet* s to *IMessage* s could thus look "
"like this:"
msgstr ""

# 993f268af82d43f88d365d2e8f896413
#: ../develop/addons/five-grok/core-components/adapters.rst:170
msgid ""
"Assuming the package is being grokked, this is all it takes to register an "
"adapter with *five.grok*."
msgstr ""

# 29c33080873546a1bb4c0d3b73812df6
#: ../develop/addons/five-grok/core-components/adapters.rst:175
msgid ""
"The adapted object is available as *self.context* when using the default "
"constructor."
msgstr ""

# 0df61de9cdaf448a8e8d1b431b084bdc
#: ../develop/addons/five-grok/core-components/adapters.rst:177
msgid ""
"If you are writing your own constructor, use a signature like *\"**def "
"\\_\\_init\\_\\_(self, context):*\"** and store the *context* argument as "
"*self.context*. This is not strictly necessary, but it is an almost "
"universal convention. Since the constructor is called when the adapter is "
"looked up, it is best to avoid any resource-intensive operations there. If "
"an error is raised in the constructor, the adaptation will fail with a "
"“could not adapt” *TypeError*."
msgstr ""

# 166b5c453e9b4e108e9ea16848de61df
#: ../develop/addons/five-grok/core-components/adapters.rst:184
msgid ""
"The *grok.provides()* directive indicates the interface that will be "
"provided by the adapter. If the adapter factory implements a single "
"interface (via *grok.implements()* or inherited from a base class), this is "
"optional."
msgstr ""

# bd11adc3d18b40d3894e80267bd86f37
#: ../develop/addons/five-grok/core-components/adapters.rst:188
msgid ""
"The *grok.context()* directive indicates what is being adapted. This is "
"usually an interface, but it can also be a class, in which case the adapter "
"is specific to instances of that class (or a subclass). This directive can "
"sometimes be omitted if there is an unambiguous module-level context. This "
"is an instance providing the *IContext* interface from "
"*grokcore.component.interfaces*, and will typically be something like a "
"content object. If in doubt, it is always safest to provide an explicit "
"context using the *grok.context()* directive."
msgstr ""

# c7456598ffce47e490a092486f6d3464
#: ../develop/addons/five-grok/core-components/adapters.rst:198
msgid "Modelling aspects as adapters"
msgstr ""

# 5c883b3e0b524910991a7272a1ac56e4
#: ../develop/addons/five-grok/core-components/adapters.rst:200
msgid ""
"In the example above, we used an adapter to make an object providing one "
"interface conform to another. In this case, the objects were similar in "
"purpose, they just happened to have incompatible interfaces. However, "
"adapters are also frequently used in situations where we are trying to model"
" different aspects of an object as independent components, without having to"
" support every possible feature in a single class."
msgstr ""

# bd9aeff6517244d6946bfd062f769673
#: ../develop/addons/five-grok/core-components/adapters.rst:207
msgid ""
"Consider our message interface again. Let’s say that we wanted to be able to"
" email any content object as a message. Is our content object a message? Not"
" at all, but we can provide an adapter to the *IMessage* interface which "
"models the “messaging” aspect of the content object."
msgstr ""

# 14d379a1e93f4242a5d3477daf2369fb
#: ../develop/addons/five-grok/core-components/adapters.rst:212
msgid ""
"Such an adapter may look something like this (*IDocument*and implementation "
"not shown, but assume it supports the properties *title*and *text*):"
msgstr ""

# ec0d6bd18fe941f9b3bf29147bf6b718
#: ../develop/addons/five-grok/core-components/adapters.rst:239
msgid ""
"This is relatively straightforward, and we could imagine having a number of "
"such adapters to represent any number of different content types as "
"messages."
msgstr ""

# 2efb30dd65384980bd795a22d748d34d
#: ../develop/addons/five-grok/core-components/adapters.rst:243
msgid "Now consider the alternatives:"
msgstr ""

# 6bbf91e0194c42fc9f0c9128b4a7c821
#: ../develop/addons/five-grok/core-components/adapters.rst:245
msgid ""
"we could write a bespoke email-sending function for each type of content and"
" use if-statements or lookup tables to find the correct one; or"
msgstr ""

# f4c671e2c8d240a39e4aaa4d472a7f5d
#: ../develop/addons/five-grok/core-components/adapters.rst:248
msgid ""
"we could demand that every content type that supported being sent as an "
"email inherited from a mix-in class that provided the required properties."
msgstr ""

# b38340c5e0144675864bdf64ebb13949
#: ../develop/addons/five-grok/core-components/adapters.rst:252
msgid ""
"The latter is the usual approach in the world of object oriented "
"programming, and is fine for small, closed systems. In an open-ended system "
"such as Plone, however, we don’t always have the option of mixing new "
"functionality into old code, and classes with “fat” interfaces can become "
"unwieldy and difficult to work with."
msgstr ""

# 5e63061f9eac44a2b06762f6310eceb1
#: ../develop/addons/five-grok/core-components/adapters.rst:259
msgid "Customisation with more-specific adapters"
msgstr ""

# 07fdb2da6bfc41fcbaa22f66c1043746
#: ../develop/addons/five-grok/core-components/adapters.rst:261
msgid ""
"So far, we have limited ourselves to having only one adapter per type of "
"context. The ZCA allows us to have multiple possible adapters, leaving it to"
" pick the most appropriate one. Here, “most appropriate” really means “most "
"specific”, according to the following rules:"
msgstr ""

# 6e4b2434f38b4471a0876e100ade75ba
#: ../develop/addons/five-grok/core-components/adapters.rst:266
msgid ""
"An adapter registered for a class is more specific than an adapter "
"registered for an interface"
msgstr ""

# 55f99551a4b34807bfc66d891a853c29
#: ../develop/addons/five-grok/core-components/adapters.rst:268
msgid ""
"An adapter registered for an interface directly provided by an instance is "
"more specific than an adapter registered for an interface implemented by "
"that object’s class"
msgstr ""

# abd55bac06fb407c89f6025ac3b08650
#: ../develop/addons/five-grok/core-components/adapters.rst:271
msgid ""
"An adapter registered for an interface listed earlier in the *implements()* "
"directive is more specific than an adapter registered for an interface "
"listed later"
msgstr ""

# 08c7ac65159942c98fc42d32ae33c7a5
#: ../develop/addons/five-grok/core-components/adapters.rst:274
msgid ""
"An adapter registered for an interface implemented by a given class is more "
"specific than an adapter registered for an interface implemented by a base "
"class"
msgstr ""

# c2f08b823f9e46b3a8eb84cd20865cdd
#: ../develop/addons/five-grok/core-components/adapters.rst:277
msgid ""
"An adapter registered for a given interface provided by an object is more "
"specific than an adapter registered for a base-interface of that interface"
msgstr ""

# f3150d999a3642ac89583d8b73dea264
#: ../develop/addons/five-grok/core-components/adapters.rst:280
msgid ""
"In the case of a multi-adapter (see below), the specificity of the adapter "
"to the first adapted object is more important than the specificity to "
"subsequent adapted objects"
msgstr ""

# ac363925393f491baafc78cc15abb752
#: ../develop/addons/five-grok/core-components/adapters.rst:284
msgid ""
"These rules are known as “interface resolution order” and are basically "
"equivalent to the “method resolution order” used to determine which method "
"takes precedence in the case of multiple inheritance. Most of the time, this"
" works as you would expect, so you do not need to worry too much about the "
"detail of the rules."
msgstr ""

# 5c7029492f3e4345a0db76f838a41a78
#: ../develop/addons/five-grok/core-components/adapters.rst:290
msgid ""
"The power of the “more-specific adapter” concept is that we can create a "
"generic adapter for a generic interface, and then provide an override for a "
"more specific interface. Let’s say that we had the following hierarchy of "
"interfaces, implemented by different types of content objects (not shown):"
msgstr ""

# d529999bf1af41349deaedb20497f3d6
#: ../develop/addons/five-grok/core-components/adapters.rst:319
msgid ""
"We could now register a generic adapter from *IContent* to *IMessage*, which"
" would be usable for any content item providing this interface, including "
"file content, or some future type of content we haven’t even thought of yet."
" Then, we could register a *more specific* adapter for IDocument, like the "
"one we saw above, to provide more specific behaviour for the document type."
msgstr ""

# c511b7ea48d840d381ec3ce0b02d7ad5
#: ../develop/addons/five-grok/core-components/adapters.rst:326
msgid ""
"But why stop there? Perhaps we want to be able to mark certain documents as "
"important and have the message subject change? One way to do that is with a "
"marker interface on the instance:"
msgstr ""

# 2c7711bb8bfa4a7986a7df86a0f5a7d0
#: ../develop/addons/five-grok/core-components/adapters.rst:336
msgid ""
"We would apply this selectively to instances using *alsoProvides()* (perhaps"
" in an event handler):"
msgstr ""

# b06b11583acc433b9f8e8c84bd2a1e86
#: ../develop/addons/five-grok/core-components/adapters.rst:344
msgid ""
"We could then register an adapter for this. We can even re-use our previous "
"adapter factory by subclassing it and overriding only the properties or "
"methods we care about:"
msgstr ""

# bd72d285eb8d4f7994b530d8524703c1
#: ../develop/addons/five-grok/core-components/adapters.rst:358
msgid ""
"Note: This factory class is grokked as an adapter because it derives from "
"*DocumentMessage* which in turn derives from *grok.Adapter*."
msgstr ""

# 14a6ffe4d105419eb52e651585c8bddb
#: ../develop/addons/five-grok/core-components/adapters.rst:362
msgid ""
"If you have a class that derives from one of the special Grok base classes "
"(like *grok.Adapter* or *grok.GlobalUtility*), but you do not want it to be "
"grokked, e.g. because it is used only as a base class for other classes, you"
" can use the *grok.baseclass()* directive with no arguments to disable "
"grokking."
msgstr ""

# 4595651e21a544dd99bfaa1dc523e860
#: ../develop/addons/five-grok/core-components/adapters.rst:369
msgid "Using a function as an adapter factory"
msgstr ""

# 2e12db86d61f496f99e17b0f1346ddc7
#: ../develop/addons/five-grok/core-components/adapters.rst:371
msgid ""
"Remember we said that an adapter factory is a “callable” that returns an "
"object providing the appropriate interface? Classes are one type of "
"callable, but the most common callable, of course, is a function. It can be "
"useful to register a function as an adapter factory in situations when you "
"are not actually (or always) instantiating a class to provide the adapter."
msgstr ""

# 43d76e19dc6f45809bf1ecc08500016d
#: ../develop/addons/five-grok/core-components/adapters.rst:378
msgid ""
"As an example, let’s say that we wanted to keep a cache of the adapter "
"instances, perhaps because they are resource intensive. In this case, we may"
" either create a new adapter object, or re-use an existing one (in general, "
"we wouldn’t do this of course, due to thread safety and state management "
"issues, but it’s a useful example). We can’t do that in the "
"*\\_\\_init\\_\\_()* method of a class, because that is not called until "
"after the class has been instantiated. Instead, we could use a function as "
"the adapter factory:"
msgstr ""

# a756212ad59640279712c43d953597e5
#: ../develop/addons/five-grok/core-components/adapters.rst:402
msgid ""
"The *@implementer* decorator specifies the interface(s) which will be "
"provided by the returned objects. In the case of an adapter factory, you "
"should pass a single interface, although the decorator can take multiple "
"arguments."
msgstr ""

# 85ad760dc4e64caabe7ac17491249d3b
#: ../develop/addons/five-grok/core-components/adapters.rst:406
msgid ""
"The *@adapter* decorator actually registers the adapter. For a single "
"adapter, pass a single interface. For a multi-adapter (see below), you can "
"pass multiple arguments. For a named adapter (see below) you can pass a "
"*name=u“name”* keyword argument."
msgstr ""

# e93430d9ec524ee9ae5cbb3d92054cfa
#: ../develop/addons/five-grok/core-components/adapters.rst:412
msgid "Using an instance as an adapter factory"
msgstr ""

# e65c5fb1ddf94b8c92b9850537e6c818
#: ../develop/addons/five-grok/core-components/adapters.rst:414
msgid ""
"In addition to classes and functions, an instance of a class that has a "
"*\\_\\_call\\_\\_()* method may be used as an adapter factory callable. To "
"register such an object as an adapter factory, we can’t use the "
"*grok.Adapter* base class (since that would register the *class* as the "
"adapter factory and we want to register the *object)* or the *@adapter* "
"decorator. Instead, we use the *global\\_adapter()* function."
msgstr ""

# a86c00f5f4a34cc0b6c9057781fcfb03
#: ../develop/addons/five-grok/core-components/adapters.rst:421
msgid ""
"This is much less common, but can be useful in certain circumstances. Here "
"is an example from the `z3c.form`_ library:"
msgstr ""

# 68545093ebdd4925a21ee81b687772e6
#: ../develop/addons/five-grok/core-components/adapters.rst:440
msgid ""
"The *StaticWidgetAttribute()* function returns a callable object that is "
"intended to be registered as an adapter factory. The *global\\_adapter()* "
"function takes care of this for us at “grok time”. In this case, we have "
"passed the instance and a name (see named adapters, below) because the "
"object provides a single interface and has an “adapts” declaration. If this "
"was not the case, we could use the full syntax:"
msgstr ""

# 850e9c96fcaa49a9a84e95e6b1c3a274
#: ../develop/addons/five-grok/core-components/adapters.rst:451
msgid ""
"Note: The adapted interfaces are passed as a tuple to support multi-adapters"
" (see below)."
msgstr ""

# 0ce2d292ed514a178ceb3a939b64c29f
#: ../develop/addons/five-grok/core-components/adapters.rst:455
msgid "Named adapters"
msgstr ""

# bc07edea1d944b0fa8afdd5bb7b2edb8
#: ../develop/addons/five-grok/core-components/adapters.rst:457
msgid ""
"As we have seen above, adapters - like utilities - can be registered with a "
"name:"
msgstr ""

# dc2097481fb4437c95296046771a4a69
#: ../develop/addons/five-grok/core-components/adapters.rst:460
msgid ""
"By using the *grok.name()* directive in the class body of an adapter factory"
" deriving from *grok.Adapter*."
msgstr ""

# 826fd304598a4e569ffa358bb9f2e95e
#: ../develop/addons/five-grok/core-components/adapters.rst:462
msgid ""
"By using the *name*keyword argument to the *@adapter* function decorator"
msgstr ""

# 6d19626a94ee499380f6f5eb66ee0f17
#: ../develop/addons/five-grok/core-components/adapters.rst:464
msgid "By using the *name*argument to the *global\\_adapter()* function"
msgstr ""

# ee1adf7985a4420d9605ccf248564002
#: ../develop/addons/five-grok/core-components/adapters.rst:466
msgid ""
"Named adapters are a lot less common than named utilities, but can be useful"
" in a few circumstances:"
msgstr ""

# b20c8c41195143e4a3bbaf86baee01bb
#: ../develop/addons/five-grok/core-components/adapters.rst:469
msgid ""
"You want the user to choose among a number of different implementations at "
"runtime. In this case, you could translate the user’s input (or some other "
"external runtime state) to the name of an adapter."
msgstr ""

# 88a2ffc30beb4f3996eedc62e5ea5278
#: ../develop/addons/five-grok/core-components/adapters.rst:473
msgid ""
"You want to allow third-party packages to plug in any number of adapters, "
"which you will iterate over and use as appropriate, but you also want to "
"allow an individual named adapter to be overridden for a more specific "
"interface (see also subscription adapters below)."
msgstr ""

# 5cd8196f9d6c415b8ee62a8516dd7320
#: ../develop/addons/five-grok/core-components/adapters.rst:477
msgid ""
"Most browser components (views, viewlets, resource directories) are in fact "
"implemented as named (multi-)adapters. For a view, the name is the path "
"segment that appears in the URL."
msgstr ""

# 190ce2143af74adaa7c267acabbad949
#: ../develop/addons/five-grok/core-components/adapters.rst:481
msgid ""
"If you want to get a simple (non-multi) adapter by name, use the "
"*getAdapter()* function:"
msgstr ""

# f2203c1f52604492980eb3815c91bcf0
#: ../develop/addons/five-grok/core-components/adapters.rst:489
msgid ""
"This will raise a *ComponentLookupError* if no adapter can be found. There "
"is also a *queryAdapter()* function which returns *None* as a fallback "
"instead."
msgstr ""

# fc69367e7d4d4e2ba41f017864e2273b
#: ../develop/addons/five-grok/core-components/adapters.rst:493
msgid ""
"If you want to iterate over all the named adapters that provide a given "
"interface, you can do:"
msgstr ""

# 42093aca482f428390c655322ff362b7
#: ../develop/addons/five-grok/core-components/adapters.rst:502
msgid ""
"Note that this function takes a tuple of objects as the context, because it "
"is also used for multi-adapters."
msgstr ""

# 83a8263371364426b3c6be3520088956
#: ../develop/addons/five-grok/core-components/adapters.rst:506
msgid "Multi-adapters"
msgstr ""

# 4b9f5e6adeba4cdaa2e787a702b0de2e
#: ../develop/addons/five-grok/core-components/adapters.rst:508
msgid ""
"So far, our adapters have all adapted a single context. A multi-adapter is "
"an adapter that adapts more than one thing. There are a few reasons to want "
"to do this:"
msgstr ""

# e9b1ccc719724cd08f7fa3c2e8994fa4
#: ../develop/addons/five-grok/core-components/adapters.rst:512
msgid ""
"If you have written an adapter and you find that you need to pass an object "
"to (almost) every one of its methods, you could use a multi-adapter to allow"
" the adapter to be initialised with more than one object."
msgstr ""

# 5890052083134397abfc43fcc7a1c0f2
#: ../develop/addons/five-grok/core-components/adapters.rst:516
msgid ""
"The rules of “more specific” adapters applies to each adapted context of "
"multi-adapters. Thus, if you want to allow a component to be swapped out "
"(customised) along multiple dimensions, you could look it up as a multi-"
"adapter."
msgstr ""

# ecfc1a9636524d118edbb6708a54aae1
#: ../develop/addons/five-grok/core-components/adapters.rst:521
msgid ""
"Multi-adapters are frequently used in browser components (such as views and "
"viewlets), which adapt a context object and the request. This allows "
"multiple views to be registered with the same name, with different "
"implementations based on the type of context (i.e. the \"*index*\" view for "
"an *IDocument* is different to the view of an *IFile*) or the type of "
"request (i.e. an HTTP request results in a different response to an XML-RPC "
"request). Furthermore, the request may be marked with marker interfaces "
"(known as “browser layers”) upon traversal, allowing you to register a "
"different view depending on which layer is in effect."
msgstr ""

# db881b302e9346a9a006b2b3198a4951
#: ../develop/addons/five-grok/core-components/adapters.rst:531
msgid ""
"Browser components are registered using specific grokkers which also take "
"care of things like security and template binding. We will cover those "
"later. For a simple example, however, consider the following:"
msgstr ""

# f0072f6a550b46c2bcf2d048a19c2326
#: ../develop/addons/five-grok/core-components/adapters.rst:561
msgid "We could imagine looking up a multi-adapter like this:"
msgstr ""

# 5a117222f9804802bb3a468669c0803b
#: ../develop/addons/five-grok/core-components/adapters.rst:570
msgid ""
"This will raise a *ComponentLookupError* if no suitable adapter can be "
"found. There is also *queryMultiAdapter()*, which will return *None* as a "
"fallback."
msgstr ""

# 6ab51788c5384ea390d542bc15fb1b43
#: ../develop/addons/five-grok/core-components/adapters.rst:574
msgid ""
"Like other adapters, a multi-adapter is registered with a callable that acts"
" as the adapter factory. The callable must take one argument for each "
"adapted object (two, in this case). We can register multi-adapters with the "
"*@adapter* function decorator or the *grok.global\\_adapter()* function, as "
"indicated above. More commonly, however, we will use the *grok.MultiAdapter*"
" base class, like this:"
msgstr ""

# 1d1c5cf3895a449dbe84665c3c1b0899
#: ../develop/addons/five-grok/core-components/adapters.rst:609
msgid ""
"Here, we have registered two multi-adapters, the second more specific than "
"the first. Notice how we have to define a constructor: the base class can’t "
"do it for us, since it doesn’t know how many things we will adapt or what we"
" may want to call the variables where they are stored."
msgstr ""

# aa1a1772ccda4f649076f8fee1513e10
#: ../develop/addons/five-grok/core-components/adapters.rst:615
msgid "Subscription adapters"
msgstr ""

# 81b5475e1b26474c9b2709c9b4e27965
#: ../develop/addons/five-grok/core-components/adapters.rst:617
msgid ""
"There is one final type of adapter known as a *subscription adapter*. These "
"can be used when you always want to look up and iterate over *all* available"
" adapters to a specific interface, as opposed to finding the most specific "
"one. However, it is not possible to override or disable a subscription "
"adapter without removing its registration directly, so most people prefer to"
" use named adapters instead, which allow an adapter with a given name to be "
"overridden for a more specific interface. Like event handlers (which are in "
"fact implemented using subscription adapters), subscription adapters are "
"registered with the *<subscriber />* ZCML directive. There is currently no "
"way to register one using Grok conventions."
msgstr ""

# e6914e6c23fa41e1afb41c05007a97ff
# f84ae4df0e7d4b059a3cc4afa8f1de62
#: ../develop/addons/five-grok/core-components/annotations.rst:2
#: ../develop/plone/misc/annotations.rst:7
msgid "Annotations"
msgstr ""

# 2040444058cb4fc0bc80af86c86cb3ab
#: ../develop/addons/five-grok/core-components/annotations.rst:4
msgid "**Using the zope.annotation package**"
msgstr ""

# 60b4ae512654453291a98fadb7cd3a48
#: ../develop/addons/five-grok/core-components/annotations.rst:7
msgid ""
"Annotations are a convenient feature used throughout Zope and Plone. They "
"also serve as a useful real-world example of adapters."
msgstr ""

# e31f6e09c662438394654bcf44c2f38b
#: ../develop/addons/five-grok/core-components/annotations.rst:10
msgid ""
"The `zope.annotation`_ package defines an interface *IAnnotations*. By "
"adapting an object (often a content item) to this interface, you can get and"
" set values using a dict-like API. These values are then persisted against "
"the context object."
msgstr ""

# 247654ce8179419f80eecb72e4a99466
#: ../develop/addons/five-grok/core-components/annotations.rst:15
msgid ""
"Remember that we often use adapters to model different aspects of an object."
" A content object may have a basic schema - its content data model - but "
"there may be any number of adapters providing functionality which in turn "
"may need to persist other information. The annotations API provides a simple"
" and consistent storage abstraction for such information."
msgstr ""

# 14f5baa6259e475696393158904e5907
#: ../develop/addons/five-grok/core-components/annotations.rst:22
msgid "The basic syntax for using an annotation is:"
msgstr ""

# 380b60fbc1c34aacb3fb4b3fff3e622d
#: ../develop/addons/five-grok/core-components/annotations.rst:32
msgid ""
"Since annotations can be used by any number of packages, we tend to use "
"dotted names as keys, to reduce the risk of colissions when two packages are"
" writing annotations onto the same object."
msgstr ""

# 16c5f98d9f084c31aef885109ac42bce
#: ../develop/addons/five-grok/core-components/annotations.rst:35
msgid ""
"The values stored in annotation must be persitable. Primitives are fine, as "
"are objects deriving from *persistence.Persistent*."
msgstr ""

# d7abf9e8cbfc40a5bc40b94bfd1747fe
#: ../develop/addons/five-grok/core-components/annotations.rst:37
msgid ""
"The *IAnnotations*interface promises all the usual methods of a Python "
"dictionary. For example, you can use *setdefault()* to set a default value "
"if you are not sure that it has been created yet."
msgstr ""

# c3fde74cf4fa4c7daacb2cd736027b19
#: ../develop/addons/five-grok/core-components/annotations.rst:41
msgid ""
"But where are annotations stored? As users of the *IAnnotations* interface "
"we don’t care: that logic is implemented by the *IAnnotations* adapter. We "
"could implement our own such adapter, but we normally don’t: the "
"*zope.annotation* package comes with an adapter providing *IAnnotations* and"
" adapting a marker interface *IAttributeAnnotations*. This stores the values"
" in an efficient, persistent *BTree* structure. (That BTree happens to be "
"stored as an attribute of the content object called "
"*\\_\\_annotations\\_\\_*, although we don’t ever access that directly.)"
msgstr ""

# 1f386c3f76d349ad8929d515ab044ada
#: ../develop/addons/five-grok/core-components/annotations.rst:51
msgid ""
"Most content objects and the request object in Zope and Plone provide this "
"marker interface, making them “annotatable”. If you are working on a simpler"
" object, you can declare support for *IAttributeAnnotations* with a "
"directive like:"
msgstr ""

# ba12c4e5b1664f2b81e68877713e419f
#: ../develop/addons/five-grok/core-components/annotations.rst:67
msgid ""
"Let’s now show a more complete example of using annotations. Recall the "
"following interface, which we used to implement a multi-adapter in the "
"previous section:"
msgstr ""

# 9a0c1e6f44a64de287543fe45220cf5e
#: ../develop/addons/five-grok/core-components/annotations.rst:81
msgid ""
"Let’s say that we wanted to count the number of messages sent against each "
"each content object. Here is an implementation of the multi-adapter that "
"uses annotations to do that:"
msgstr ""

# 38fe82f65dff47f995032650d33b2f74
#: ../develop/addons/five-grok/core-components/annotations.rst:113
msgid ""
"This code is defensive in that we gracefully handle the case where the "
"context is not annotatable. When it is, we get the current counter (if set),"
" increment it, and then save it back again, before printing the value."
msgstr ""

# 3208629da5da4eb1a5885af7264583c6
#: ../develop/addons/five-grok/core-components/events.rst:4
msgid "**Registering event handlers and sending events**"
msgstr ""

# c72f1889c6b24448ada118b072c32f7b
#: ../develop/addons/five-grok/core-components/events.rst:6
msgid ""
"Zope provides an events system. Various components (e.g the standard add and"
" edit forms) *notify* any number of *event subscribers* (also known as "
"*event handlers*) of a particular event. The subscribers are then executed."
msgstr ""

# 928281cb079943059707c4837a42161a
#: ../develop/addons/five-grok/core-components/events.rst:11
msgid "Note that:"
msgstr ""

# c2b1befb95a942c8b205e6086bd9a0dd
#: ../develop/addons/five-grok/core-components/events.rst:13
msgid "Event subscribers are executed in arbitrary order"
msgstr ""

# 6313a5a9e48a4db6b49b17ef60a98d00
#: ../develop/addons/five-grok/core-components/events.rst:14
msgid ""
"Events are executed *synchronously*: The code which notifies of the event "
"will block until all event handlers have returned"
msgstr ""

# 9e04ce9830d943debb78e2b2783fc6f3
#: ../develop/addons/five-grok/core-components/events.rst:18
msgid ""
"Each type of event is described by an interface. The implementation of this "
"interface will typically carry some information about the event, which may "
"be useful to event subscribers."
msgstr ""

# bbf2ba58b1fb4f7988843fa6539fe0ae
#: ../develop/addons/five-grok/core-components/events.rst:22
msgid ""
"Some events are known as **object events**. These have an *object* "
"attribute, giving access to the (content) object that the event relates to. "
"Object events allow event handlers to be registered for a specific type of "
"object as well as a specific type of event."
msgstr ""

# e3067d245d3d4f1fb2072b4195cbb98a
#: ../develop/addons/five-grok/core-components/events.rst:27
msgid ""
"Some of the most commonly used event types in Plone are shown below. They "
"are all object events (i.e. they derive from "
"*zope.component.interfaces.IObjectEvent)*."
msgstr ""

# 1a36c5d5f6f7465c8a056c7307214b48
#: ../develop/addons/five-grok/core-components/events.rst:31
msgid ""
"*zope.lifecycleevent.interfaces.IObjectCreatedEvent*, fired by the standard "
"add form just after an object has been created, but before it has been added"
" on the container. Note that it is often easier to write a handler for "
"*IObjectAddedEvent* (see below), because at this point the object has a "
"proper acquisition context. This makes it possible to look up tools using "
"*getToolByName()*, for example."
msgstr ""

# f106f5bab2d149b48bebc4810011834d
#: ../develop/addons/five-grok/core-components/events.rst:37
msgid ""
"*zope.lifecycleevent.interfaces.IObjectModifiedEvent*, fired by the standard"
" edit form when an object has been modified"
msgstr ""

# 82a24fbe373b4d67a7bdd41f0b75bae3
#: ../develop/addons/five-grok/core-components/events.rst:39
msgid ""
"*zope.lifecycleevent.interfaces.IObjectAddedEvent*, fired when an object has"
" been added to its container. The container is available as the *newParent* "
"attribute, and the name the new item holds in the container is available as "
"*newName*."
msgstr ""

# f4aee12b39844c3fa59c851ee1c5ab34
#: ../develop/addons/five-grok/core-components/events.rst:43
msgid ""
"*zope.lifecycleevent.interfaces.IObjectRemovedEvent*, fired when an object "
"has been removed from its container. The container is available as the "
"*oldParent* attribute, and the name the item held in the container is "
"available as *oldName*."
msgstr ""

# 0dc315b3db34483595f95da6858311e8
#: ../develop/addons/five-grok/core-components/events.rst:47
msgid ""
"*zope.lifecycleevent.interfaces.IObjectMovedEvent*, fired when an object is "
"added to, removed from, renamed in, or moved between containers. This event "
"is a super-type of *IObjectAddedEvent* and*IObjectRemovedEvent*, shown "
"above, so an event handler registered for this interface will be invoked for"
" the ‘added’ and ‘removed’ cases as well. When an object is moved or "
"renamed, all of *oldParent*, *newParent*, *oldName* and *newName* will be "
"set."
msgstr ""

# f33afd4cd5ce472787072ee3f28bd9b5
#: ../develop/addons/five-grok/core-components/events.rst:54
msgid ""
"*Products.CMFCore.interfaces.IActionSucceededEvent*, fired when a workflow "
"event has completed. The *workflow* attribute holds the workflow instance "
"involved, and the *action* attribute holds the action (transition) invoked."
msgstr ""

# 39fee980a48c48e88250217d7bd90b83
#: ../develop/addons/five-grok/core-components/events.rst:59
msgid ""
"Of course, you can create your own event types as well. However, for "
"standard CRUD type operations (create, read, update, delete), it is best to "
"use the standard event types with a custom object type rather than creating "
"an object-specific event type."
msgstr ""

# 05729dff914a48ceba49af8b8e522b51
#: ../develop/addons/five-grok/core-components/events.rst:65
msgid "Registering an event subscriber"
msgstr ""

# e658ddf7576341dc99d234e83615f483
#: ../develop/addons/five-grok/core-components/events.rst:67
msgid ""
"Event subscribers can be registered using the *subscribe()* decorator. This "
"takes at least one argument: the type (interface) of event to subscribe to. "
"For object events, it can take two parameters: the type of object, and the "
"type of event. This allows us to limit an event handler to a particular type"
" of context object."
msgstr ""

# 1dda386909704446a489e9804925ebeb
#: ../develop/addons/five-grok/core-components/events.rst:73
msgid ""
"Here is an example, printing a message every time a CMF content object is "
"added to a folder:"
msgstr ""

# 50203c289d54424888607cdaf5ef0aab
#: ../develop/addons/five-grok/core-components/events.rst:87
msgid ""
"Provided the module is grokked, this is all we have to do to register a new "
"event subscriber. Although this example is trivial, there is no limit to "
"what you can do within an event handler."
msgstr ""

# 348a2c8f078f49b79961f8e41e922502
#: ../develop/addons/five-grok/core-components/events.rst:93
msgid ""
"The two arguments to the function correspond to the two arguments to the "
"*subscribe()* decorator. For object events, the first is the object that the"
" event relates to (which will be the same as *event.object* in most cases). "
"The second is the event instance."
msgstr ""

# 16bb2365727d4d3cbc7b4b2c893d7041
#: ../develop/addons/five-grok/core-components/events.rst:97
msgid ""
"Obviously, we could use a more specific content type interface if we wanted "
"to be more specific."
msgstr ""

# 7ddbe1f62ddc4828b8573ff8ffc2f7b7
#: ../develop/addons/five-grok/core-components/events.rst:99
msgid ""
"Unlike adapters, you cannot override an event subscriber by using a more "
"specific interface. Each and every applicable event subscriber will be "
"executed when an event is fired."
msgstr ""

# e9e90b5328674470809a3a726be89105
#: ../develop/addons/five-grok/core-components/events.rst:104
msgid "Creating a custom event type"
msgstr ""

# 18fca20504554691a11c3dcd0a63e6ef
#: ../develop/addons/five-grok/core-components/events.rst:106
msgid ""
"Creating a new type of event is not much more difficult. Here is an example "
"that involves the sample message broadcasting service we saw in the previous"
" sections:"
msgstr ""

# 0d9b226972a84902ad8e94341da3214b
#: ../develop/addons/five-grok/core-components/events.rst:110
msgid ""
"First, we define an object event type. This would typically be in an "
"*interfaces.py* module:"
msgstr ""

# 0ee32980c568475399e0c274e77810e2
#: ../develop/addons/five-grok/core-components/events.rst:123
msgid ""
"The event implementation itself is simple too. The *object* attribute is "
"mandated by the *IObjectEvent* interface."
msgstr ""

# e923ec96e3764b66ac25bb141dafe890
#: ../develop/addons/five-grok/core-components/events.rst:139
msgid ""
"Here is another implementation of the messaging service, this time "
"broadcasting an event:"
msgstr ""

# d4bc3ae1e6954ad3a2ff004acca43671
#: ../develop/addons/five-grok/core-components/events.rst:176
msgid ""
"We use the *notify()* function from the *zope.event* package to broadcast "
"the event."
msgstr ""

# 8a614febdb1b4bd493e4b9ad7ca583c0
#: ../develop/addons/five-grok/core-components/events.rst:178
msgid ""
"The call to *notify()* will not return until every event subscriber has been"
" executed."
msgstr ""

# d0fde705b02d4046826843019225416c
#: ../develop/addons/five-grok/core-components/events.rst:181
msgid ""
"As before, we could now register an event subscriber for this event. Since "
"it is an object event, we can use the two-argument version of the "
"*subscribe* decorator as shown above. However, we could also have a more "
"general event handler that executes for any type of object. Here is one that"
" simply logs that a message has been sent:"
msgstr ""

# 83af74c3894b41c0b546c9327cb33fd0
#: ../develop/addons/five-grok/core-components/further-details.rst:2
msgid "Further details"
msgstr ""

# f5116e2a83454a1db5785e2f67239b40
#: ../develop/addons/five-grok/core-components/further-details.rst:4
msgid "**Where to find more information about the core components**"
msgstr ""

# ac1b0d6e38f44da0aed4dfde929ac68a
#: ../develop/addons/five-grok/core-components/further-details.rst:6
msgid ""
"In this section, we have described how to use *five.grok* to configure "
"standard Zope Component Architecture components. In fact, the functionality "
"for this can be found in the `grokcore.component`_ package, and does not "
"strictly require the use of *five.grok*: you could use *grokcore.component* "
"directly. This may be useful if you are trying to create a package that "
"should work with other frameworks using the Zope Toolkit / Zope 3, such as "
"Grok itself."
msgstr ""

# 361f174752a949b08e00cd2508b9f805
#: ../develop/addons/five-grok/core-components/further-details.rst:14
msgid ""
"grokcore.component contains a few other grokkers and helper functions which "
"we have not described here. You are encouraged to read its `documentation`_ "
"for details."
msgstr ""

# c2f392748ef24518a82311ef383c980e
#: ../develop/addons/five-grok/core-components/further-details.rst:18
msgid ""
"If you need to introspect the interfaces of your components, you should also"
" take a look at the *zope.interface* API, which for example provides "
"functions for enumerating the interfaces implemented by a class or provided "
"by an object."
msgstr ""

# 31c57498641a44e39f28beca33dd8e78
#: ../develop/addons/five-grok/core-components/further-details.rst:23
msgid ""
"If you need to introspect the component architecture itself, look up the "
"*zope.component* API, where you will find methods for enumerating, querying,"
" registering and removing adapters, utilities and event subscribers."
msgstr ""

# 9338b78c7999451f948cb453563618eb
#: ../develop/addons/five-grok/core-components/further-details.rst:28
msgid ""
"Both of these packages have interfaces containing copious internal "
"documentation."
msgstr ""

# 572571af04124587ac22577f92696de3
#: ../develop/addons/five-grok/core-components/index.rst:2
msgid "Core components"
msgstr ""

# f841551b1bda477ebe571d91c8d8f3e5
#: ../develop/addons/five-grok/core-components/index.rst:4
msgid ""
"**Using five.grok to configure adapters, utilities and event subscribers**"
msgstr ""

# 021eadd4ee454dcba68178ea08db888a
#: ../develop/addons/five-grok/core-components/interfaces.rst:4
msgid "**Describing functionality with interfaces**"
msgstr ""

# b0d76ab5bce84ec392d16cf24d6ae273
#: ../develop/addons/five-grok/core-components/interfaces.rst:6
msgid ""
"There is nothing Grok-specific about interfaces, but they are important "
"because they used in various directives for describing or registering "
"components."
msgstr ""

# 15783d1827324265bc1a60f9e90cfdda
#: ../develop/addons/five-grok/core-components/interfaces.rst:10
msgid ""
"Zope interfaces are implemented in the *zope.interface* package. In "
"addition, *zope.schema* contains various classes that can be used to "
"describe the type of attributes on an interface (the :doc:`Dexterity "
"developer manual </external/plone.app.dexterity/docs/index>` contains a "
"reference)."
msgstr ""

# bfa1281a2c8b468faa26c768f33a0899
#: ../develop/addons/five-grok/core-components/interfaces.rst:12
msgid ""
"Interfaces are typically found in an *interfaces.py* module, although you "
"will sometimes see schema interfaces kept in the same module as other code "
"(e.g. content classes, event handlers) related to the content type described"
" by that schema."
msgstr ""

# 128d3ef97c4441fd8a7d97964bd8ea2d
#: ../develop/addons/five-grok/core-components/interfaces.rst:17
msgid ""
"The simplest interface is a **marker** interface. This is used as a flag "
"which can either be applied or not to a particular object. A marker "
"interface may look like this:"
msgstr ""

# cbb2a71691d248eda10d9003a2d57845
#: ../develop/addons/five-grok/core-components/interfaces.rst:29
msgid ""
"Notice how we have a docstring on the interface. Interfaces are useful as "
"documentation, and you should endeavour to describe their purpose and "
"behaviour in docstrings on the interface and on any attributes or methods "
"(see below)."
msgstr ""

# 1497405f27874aab91821c89bcf26405
#: ../develop/addons/five-grok/core-components/interfaces.rst:34
msgid ""
"Also note that although an interface is created using the *class*keyword, "
"they are in fact instances of type *InterfaceClass*. For the most part, you "
"don’t need to worry about this."
msgstr ""

# e5216173e1a74097b3573d671a4e14bb
#: ../develop/addons/five-grok/core-components/interfaces.rst:38
msgid ""
"Interfaces are said to be **implemented** by classes, in which case "
"instances of that class is said to **provide** the interface."
msgstr ""

# cc78911635284c9e8260c8d5ee52ddf2
#: ../develop/addons/five-grok/core-components/interfaces.rst:50
msgid ""
"Note: The *grok.implements()* directive is just a convenience alias for the "
"*implements()* directive from *zope.interface*."
msgstr ""

# 7c5df96a4e58402499ce414215921e78
#: ../develop/addons/five-grok/core-components/interfaces.rst:53
msgid "Adherence to a given interface can be tested like this:"
msgstr ""

# a55b7c56055947dbbd5ff9ff0b1deaa8
#: ../develop/addons/five-grok/core-components/interfaces.rst:63
msgid ""
"Again, note that we perform an “implements” check against the class and a "
"“provides” check against an instance."
msgstr ""

# e29f5b6626c646b8b2afd3db5a843a8e
#: ../develop/addons/five-grok/core-components/interfaces.rst:66
msgid ""
"It is also possible to apply an interface directly to an instance. This is "
"mostly relevant to marker interfaces, since other interfaces promise "
"attributes and methods that you usually cannot guarantee that the object "
"will provide."
msgstr ""

# 4d57a0f04ac041b9b269d3a31e694843
#: ../develop/addons/five-grok/core-components/interfaces.rst:76
msgid ""
"Let’s now take a look at a non-marker interface. This one promises several "
"attributes and methods. Typing and constraints for attributes are described "
"by *zope.schema* fields."
msgstr ""

# 8252250abd9b430592acaf9103a660df
#: ../develop/addons/five-grok/core-components/interfaces.rst:99
msgid ""
"Again notice the use of docstrings for methods and titles and descriptions "
"for fields. Also notice how the method does not take the *self* parameter. "
"If the implementation is a class (as it is likely to be), its methods will "
"of course take the *self* parameter, but as far as the user of the interface"
" is concerned, this is an implementation detail, and so does not belong in "
"the interface."
msgstr ""

# 1b46c90384e349f9bf5425292a10281c
#: ../develop/addons/five-grok/core-components/interfaces.rst:106
msgid "Here is a class implementing this interface:"
msgstr ""

# 1c74ffd2c55f467989be079ce11fcc87
#: ../develop/addons/five-grok/core-components/interfaces.rst:120
msgid ""
"Like classes, interfaces may inherit one another. The derived interface "
"inherits all the attributes and methods of the parent interface. Objects "
"providing the derived interface must provide all attributes and methods of "
"both interfaces."
msgstr ""

# b1a03b2536f24966b98dd8432b3b7262
#: ../develop/addons/five-grok/core-components/interfaces.rst:145
msgid ""
"A class may implement more than one interface. In addition, a class "
"automatically implements all interfaces from its base classes (unless you "
"use the *implementsOnly()* directive from *zope.interface*)."
msgstr ""

# 0e281c870f9a43e9a88fd277f5197a8e
#: ../develop/addons/five-grok/core-components/interfaces.rst:162
msgid ""
"Here, we have implemented *text* as a property delegating to the *body* "
"field from the *IMessage* interface. We inherited the implementation of "
"*body* from the *Message*base class, from which we have also indicated the "
"*implements()* specification for the *IMessage* interface:"
msgstr ""

# e1a392c6eddc4a5bb616649415c299a4
#: ../develop/addons/five-grok/core-components/interfaces.rst:181
msgid ""
"There are a few other things you can do with interfaces, such as specifying "
"interfaces provided by modules (used to specify an API for that module) or "
"classes (e.g. in the case of class objects acting as factories), looping "
"through the interfaces provided by an instance, or adding or removing marker"
" interfaces. None of these is terribly common. See the documentation for "
"`zope.interface`_ (including its interfaces) for details."
msgstr ""

# e1f3853024c749599326e3faa4be6e0c
#: ../develop/addons/five-grok/core-components/utilities.rst:4
msgid "**Singletons and registries with utilities**"
msgstr ""

# 6600e519808d495c9bb9e905386bf2b5
#: ../develop/addons/five-grok/core-components/utilities.rst:6
msgid ""
"Utilities are simple components which may be looked up by interface and "
"optionally name. They are used for two purposes:"
msgstr ""

# 6d5af593d3a44da0854bb4c1d2544b24
#: ../develop/addons/five-grok/core-components/utilities.rst:9
msgid ""
"To implement a “singleton” - an object which is created in memory once and "
"shared by all clients."
msgstr ""

# d1c1e6684f2e4909b8a9d4c935614548
#: ../develop/addons/five-grok/core-components/utilities.rst:11
msgid ""
"To implement a registry of objects all providing the same interface. In this"
" case, each object is a named utility."
msgstr ""

# 86909d8a839c42f8b576f12d9c92f399
#: ../develop/addons/five-grok/core-components/utilities.rst:14
msgid ""
"As with all components, utilities can be local or global. A local utility is"
" installed as a persistent object in a “local component site” (such as a "
"Plone site). Sometimes, we use local utilities as singletons storing "
"persistent objects, although there are better solutions (such as "
"`plone.app.registry`_ / `plone.registry`_) for that. More commonly, a local "
"utility is simply used to override a global utility with of same interface "
"(and optionally name)."
msgstr ""

# 1f15499173044433a32afd0201a561ed
#: ../develop/addons/five-grok/core-components/utilities.rst:22
msgid ""
"In Plone, local components can be installed using the "
"*componentregistry.xml* GenericSetup import step. See the :doc:`GenericSetup"
" documentation </develop/addons/components/genericsetup>` for more details. "
"The techniques mentioned in this manual pertain to global utilities only."
msgstr ""

# 83d8b28d36104588b9a34a015049a291
#: ../develop/addons/five-grok/core-components/utilities.rst:27
msgid ""
"Global utilities can be registered in one of two ways using *five.grok*:"
msgstr ""

# affa7811fa0743d4bf734c5e61efa060
#: ../develop/addons/five-grok/core-components/utilities.rst:29
msgid ""
"By writing a class deriving from *GlobalUtility*. The class will be used as "
"a utility factory. It will be instantiated once (its constructor must be "
"callable with no arguments), on startup, and registered according to the "
"directives used on the class."
msgstr ""

# cac65986b34a4076b613b486ab2ea049
#: ../develop/addons/five-grok/core-components/utilities.rst:33
msgid ""
"By calling the *global\\_utility()* function on an already-instantiated "
"object. This allows you to configure the instance in code before registering"
" it."
msgstr ""

# be59fc08bc7049e3adeba292bc59ee4b
#: ../develop/addons/five-grok/core-components/utilities.rst:37
msgid "To illustate both of these techniques, we will create two interfaces:"
msgstr ""

# a26707a82c9a4fe1a523fe92392e06c9
#: ../develop/addons/five-grok/core-components/utilities.rst:65
msgid ""
"Before we implement these utilities, let’s consider how we may use these two"
" interfaces from client code which does not care about their implementation."
msgstr ""

# 76a24698b4ff47a784d0a8ea63dff77a
#: ../develop/addons/five-grok/core-components/utilities.rst:69
msgid "To look up the currently preferred language, we could do:"
msgstr ""

# e0d941cb909b4e929cb729f08ba4b6c3
#: ../develop/addons/five-grok/core-components/utilities.rst:79
msgid ""
"Languages are looked up as named utilities. Thus, we could get a language "
"like this:"
msgstr ""

# 3806f0faf8b34c68a3654ec5f06e23d1
#: ../develop/addons/five-grok/core-components/utilities.rst:89
msgid ""
"*getUtility()* will return the default utility for the given interface if no"
" name is passed (in fact, the default utility has a name of *u“”*, i.e. an "
"empty string)."
msgstr ""

# a5a93047fc434d46887030f163e98821
#: ../develop/addons/five-grok/core-components/utilities.rst:92
msgid "If no utility can be found, a *ComponentLookupError* will be raised."
msgstr ""

# c5f24a315712470983efc5578e7937a5
#: ../develop/addons/five-grok/core-components/utilities.rst:93
msgid ""
"We can use *queryUtility()* instead to fall back on another value (*None*, "
"by default) instead of raising an error if the utility is not found."
msgstr ""

# 39553004f0344ff6aa8059c2fcc8bae6
#: ../develop/addons/five-grok/core-components/utilities.rst:96
msgid ""
"Each time we call *getUtility()* with the same arguments, we get the same "
"object back. This may lead to thread-safety issues in multi-threaded "
"environments (such as Zope), so be careful if your utility can be modified "
"after startup."
msgstr ""

# 7f6507af094c49d9a82b466d0a71407a
#: ../develop/addons/five-grok/core-components/utilities.rst:101
msgid ""
"Let’s now show how these utilities could be registered. First, we will "
"create a class to encapsulate languages, instantiate a objects of this "
"class, and register each as a named utility providing the *ILanguage* "
"interface:"
msgstr ""

# f87615fc1bcb4d789eacb3fcf3af48f0
#: ../develop/addons/five-grok/core-components/utilities.rst:126
msgid ""
"The *provides* argument can be omitted if (as is the case here) the object "
"provides exactly one interface. Otherwise, it is required."
msgstr ""

# 38c1f5083d6743dd858399c2a266dee8
#: ../develop/addons/five-grok/core-components/utilities.rst:128
msgid ""
"Name *name*parameter defaults to *u“”* and so can be omitted if you are "
"registered an unnamed utility."
msgstr ""

# b78f69525ad1447ba82922af12522847
#: ../develop/addons/five-grok/core-components/utilities.rst:130
msgid ""
"The *direct=True* argument indicates that the utility instance is being "
"passed as the first argument. The argument should be *False* if a class or "
"factory is being passed."
msgstr ""

# 54f44e1ce9c44a8fa9042cf6534f991c
#: ../develop/addons/five-grok/core-components/utilities.rst:134
msgid ""
"Next, we will define the preferred language utility. This time, we will "
"create a utility class and ask *five.grok* to register an instance of it for"
" us."
msgstr ""

# 0bf1bbc6d40a42f4a45b1d0b9f75acf6
#: ../develop/addons/five-grok/core-components/utilities.rst:158
msgid ""
"The class is recognised as a factory for a global utility from its base "
"class."
msgstr ""

# f4f1b39c854049abb31f7c47aef4536a
#: ../develop/addons/five-grok/core-components/utilities.rst:160
msgid ""
"The class does not have a constructor. If it did, it would need to be "
"callable with no arguments."
msgstr ""

# 8be02168a25242a5b2904ed6282d18a4
#: ../develop/addons/five-grok/core-components/utilities.rst:162
msgid ""
"The utility’s interface is given with the *grok.provides()* directive. We "
"could also have used *grok.implements()*, but bear in mind that the class "
"can implement multiple interfaces whilst a utility can provide only one. "
"*grok.provides()* can only be used once per class and can only be passed a "
"single interface."
msgstr ""

# e72939d7869e4773a7e2a54d4a6244b1
#: ../develop/addons/five-grok/core-components/utilities.rst:167
msgid ""
"Here, we are registering an unnamed utility. We could have used the "
"*grok.name()* directive to give the utility a name."
msgstr ""

# 819af1a359a244f8abc81ce147d5625f
#: ../develop/addons/five-grok/core-components/utilities.rst:170
msgid ""
"Provided the package is grokked, this is all it takes to register one "
"unnamed and three named global utilities with *five.grok*."
msgstr ""

# 3c08e19633864a6eae48a2d2e73da612
#: ../develop/addons/five-grok/index.rst:2
msgid "Zope Component Architecture basics with five.grok"
msgstr ""

# 0cedf813e2434037bf2c69cf8209426e
#: ../develop/addons/five-grok/index.rst:4
msgid ""
"**This manual describes the basics of the Zope Component Architecture using "
"five.grok, which brings convention-over-configuration to Zope 2 and Plone.**"
msgstr ""

# a577875622da4f509667ff5a155ce902
#: ../develop/addons/five-grok/index.rst:7
msgid ""
"It will be useful to developers who want to learn how to configure Zope "
"components using grok-style configuration instead of ZCML."
msgstr ""

# 2153017f96354d65ab461483654ac79b
#: ../develop/addons/five-grok/other-functionality.rst:2
msgid "Other five.grok functionality"
msgstr ""

# 6023de065ac6402f8e6dd977ae8bfaa6
#: ../develop/addons/five-grok/other-functionality.rst:4
msgid "**What we haven't covered**"
msgstr ""

# 9bcf6686825b49e294b12de5ca58d7df
#: ../develop/addons/five-grok/other-functionality.rst:6
msgid ""
"Grok and *five.grok* provide some functionality we deliberately haven’t "
"discussed in this manual. This includes:"
msgstr ""

# c46c6024f1474a90ba277c343fcc0d04
#: ../develop/addons/five-grok/other-functionality.rst:9
msgid ""
"Annotation factories. Annotations are very useful, but the pattern of using "
"a persistent object as the adapter implementation instead of just using the "
"*IAnnotations* from *zope.annotation* and its dict-like API to store "
"primitives can lead to problems when code is moved or uninstalled. See "
"`grokcore.annotation`_ for an example of this functionality."
msgstr ""

# d9f6cca8194c4c9ca0bce9e1327d8dbe
#: ../develop/addons/five-grok/other-functionality.rst:15
msgid ""
"Defining permissions with *grok.Permission*. We prefer to define permissions"
" in configuration files, rather than code. See `grokcore.security`_ if you "
"hate XML so much that you don’t mind using Python as a configuration "
"language. See the :doc:`Dexterity developer manual "
"</external/plone.app.dexterity/docs/index>` for more details on creating "
"custom permissions."
msgstr ""

# 016e0b114b744a51b265c7f4df59de3a
#: ../develop/addons/five-grok/other-functionality.rst:20
msgid ""
"Defining resource directories (other than the implicit *static* directory) "
"using *grok.DirectoryResource* instead of the *<browser:resourceDirectory "
"/>* directive, for the same reasons. See `grokcore.view`_."
msgstr ""

# 7086aa2a395c42ebab9816ce746d3261
#: ../develop/addons/five-grok/other-functionality.rst:24
msgid ""
"Defining local component sites and local utilities using `grokcore.site`_. "
"In Plone, we use the *componentregistry.xml* GenericSetup import step for "
"this purpose."
msgstr ""

# 6549c9a20b05420c8abdc4ce0b0fc877
#: ../develop/addons/five-grok/other-functionality.rst:27
msgid ""
"Creating browser layers with the *grok.skin()* directive. In Plone, we use "
"the *browserlayer.xml* GenericSetup import step and/or the `plone.theme`_ "
"package for this purpose."
msgstr ""

# 09dd6631973b462498c250ff4fbac636
#: ../develop/addons/five-grok/other-functionality.rst:30
msgid ""
"Forms using `grokcore.formlib`_. For Dexterity development, we use "
"`z3c.form`_ instead."
msgstr ""

# 0cfb49090b194718bb46fa5cd6c87733
#: ../develop/addons/five-grok/other-functionality.rst:32
msgid ""
"Model objects using *grok.Model*. We use Dexterity content objects instead."
msgstr ""

# 0cfd19d7fe8f40fa869e1c83476e5d54
#: ../develop/addons/five-grok/other-functionality.rst:34
msgid ""
"The *grok.order()* directive, used to order viewlets based on an integer "
"weighting. We use the base class for *plone.app.viewletmanager* instead, "
"which supports explicit ordering as part of a theme. See `grokcore.viewlet`_"
" for details on how *grok.order()* works."
msgstr ""

# d523e35b645341e198673829e076da7c
#: ../develop/addons/five-grok/other-functionality.rst:39
msgid ""
"The *view/static* variable. This allows access to static resources in the "
"*static* directory using TAL expressions like *tal:attributes=“href "
"view/static/stylesheet.css”*. Unfortunately, the link this results in will "
"always be relative to the context, rather than relative to the site "
"navigation root, which means that it will not cache well. Therefore, we "
"construct the URL manually instead. See `grokcore.view`_ for more details."
msgstr ""

# 8343cf1f74704455bb659d2fc82ed7e8
#: ../develop/addons/five-grok/other-functionality.rst:47
msgid ""
"Some of this reflects the Dexterity developers’ preferences and views. You "
"are allowed to disagree."
msgstr ""

# a1f9755f77e74905b59ef16ac7dabdce
#: ../develop/addons/helloworld/environment/index.rst:3
msgid "Build development environment"
msgstr ""

# 2ca6e1dc1c194060aa7e50dcbea44a07
# 8e686f86417f4d8e947a9e60399fcf1d
# 3ec1754c6b3f49fab0d8ab60e2ee052d
# c87564a1a8d245c98535ecd656698cf9
# dd58c6e9de41449992b58d4951ad875c
# fbf3deed81d845cbb92e001f1e2c6e29
# 1c509e8e4f004a42812b6cf2baf3d1c2
# 87de21f1ff7a4413a84ef60cf5c831f3
# 83409ce150374e95abf940acddee4e57
# d468d049516b43e4a919ee1899158891
# b00297f4d3e64a6fbb0e8172b1f23c2d
# 4f3df25f27f240fdabaf97ff61c2edeb
# 1cd81c5750f442feb8a3bf64530e5696
#: ../develop/addons/helloworld/environment/index.rst:7
#: ../develop/addons/helloworld/environment/plone.rst:7
#: ../develop/addons/helloworld/environment/python.rst:7
#: ../develop/addons/helloworld/environment/virtualenv.rst:7
#: ../develop/addons/helloworld/extend/addon.rst:7
#: ../develop/addons/helloworld/extend/content.rst:7
#: ../develop/addons/helloworld/extend/files.rst:7
#: ../develop/addons/helloworld/extend/form.rst:7
#: ../develop/addons/helloworld/extend/index.rst:7
#: ../develop/addons/helloworld/extend/view.rst:7
#: ../develop/addons/helloworld/index.rst:7
#: ../develop/addons/helloworld/intro.rst:7
#: ../develop/addons/helloworld/todo.rst:7
msgid "A simple tutorial introducing the basics of Plone development."
msgstr ""

# e7bc39c2b3ee414a910d090a797ba0d1
#: ../develop/addons/helloworld/environment/index.rst:16
msgid ""
"In this tutorial, we build a Python development environment suitable for "
"Plone. The environment should also be useful for any other Python "
"development projects you have."
msgstr ""

# 5bc54dff93c448649af75fa6e8fe6521
#: ../develop/addons/helloworld/environment/index.rst:18
msgid ""
"In these examples, the **python_dev** directory contains our entire "
"development environment. This makes the examples easier, but may not work "
"for everyone. You may need to adapt these examples to fit your situation."
msgstr ""

# 0fb565fded9a4166847f863b3c41e9da
#: ../develop/addons/helloworld/environment/index.rst:20
msgid ""
"There are 3 main steps in building our development environment; build Python"
" 2.7, create a virtual_env, and install Plone. These correspond to 3 "
"directories in our development environment:"
msgstr ""

# dd3abf517e034ffebb21bcc984d15b35
#: ../develop/addons/helloworld/environment/index.rst:22
msgid ""
"**buildout.python** sits inside *python_dev*. It contains our build of "
"Python 2.7"
msgstr ""

# 7309314adabd4c08a4167628e9290ae4
#: ../develop/addons/helloworld/environment/index.rst:23
msgid "**env-27** sits inside *python_dev*. It is our virtual_env."
msgstr ""

# 9eb7eba439cf4575a8bffe60f0f7ab8a
#: ../develop/addons/helloworld/environment/index.rst:24
msgid "**hello_world** is our Plone installation. It sits inside *env-27*."
msgstr ""

# a46c4d856ab54a3282eb1c4398313706
#: ../develop/addons/helloworld/environment/index.rst:26
msgid ""
"The *python_dev* directory can sit anywhere on your filesystem that makes "
"sense."
msgstr ""

# dbf5326de124471382fc00cdf275f8c8
#: ../develop/addons/helloworld/environment/plone.rst:3
msgid "Install Plone"
msgstr ""

# ecc2ade9b9664c36b533987260bd581b
#: ../develop/addons/helloworld/environment/plone.rst:11
msgid ""
"Now that we have a virtual_env, we can move on the to third step of our "
"process; installing Plone. First, we need to install ZopeSkel."
msgstr ""

# cb643b461b564154a3ada247c524575b
# aab57ca4d1d84698bc99e76dc5bb623d
#: ../develop/addons/helloworld/environment/plone.rst:14
#: ../develop/plone/content/types.rst:91
msgid "Install ZopeSkel"
msgstr ""

# e2c6c47ef767418aac6ae24cb0ad00c4
#: ../develop/addons/helloworld/environment/plone.rst:16
msgid "ZopeSkel simplifies the process of setting up Plone development."
msgstr ""

# bb3e8f794b5e424b8322f34248c4aa2f
#: ../develop/addons/helloworld/environment/plone.rst:18
msgid ""
"The Plone community is transitioning between ZopeSkel 2.21.2 and a major "
"rewrite currently at 3.0b3. Currently, the Plone installers use version "
"2.21.2. (August 2012) For more information about ZopeSkel see the "
":doc:`Bootstrapping Plone add-on development </develop/addons/paste>` "
"section of this manual."
msgstr ""

# 7acd2770af04418d8202b7283954c312
#: ../develop/addons/helloworld/environment/plone.rst:20
msgid ""
"We will install ZopeSkel 2.21.2 in our virtual_env and and use it to install"
" Plone."
msgstr ""

# ebea12c7a2be4d33a73e70a46d46d581
#: ../develop/addons/helloworld/environment/plone.rst:22
msgid "Install ZopeSkel 2.21.2.::"
msgstr ""

# 89bc4d9e513c4fc19b548d396f3ef958
#: ../develop/addons/helloworld/environment/plone.rst:28
msgid "This adds some files to the bin directory, including **zopeskel**.::"
msgstr ""

# b6db63d72f194221876968ae38f24d1b
#: ../develop/addons/helloworld/environment/plone.rst:50
msgid "Install Plone using ZopeSkel"
msgstr ""

# dd2f425e2a2e4020aca673f5751fef84
#: ../develop/addons/helloworld/environment/plone.rst:52
msgid ""
"ZopeSkel uses templates to build structure for Python, Zope and Plone "
"projects. Here, we use the **plone4_buildout** template to create a Plone 4 "
"buildout in the **hello_world** directory."
msgstr ""

# 6e11f59ccf8243dabe8382bef4f755cd
#: ../develop/addons/helloworld/environment/plone.rst:54
msgid "Create the Plone 4 buildout with zopeskel.::"
msgstr ""

# e43480fcb0b648f581479fa14aebf884
#: ../develop/addons/helloworld/environment/plone.rst:58
msgid ""
"ZopeSkel displays some information and then asks what version of Plone we "
"want to install. We want 4.2.::"
msgstr ""

# 872513643e114d3683af7881fd0f1237
#: ../develop/addons/helloworld/environment/plone.rst:62
msgid ""
"The tutorial sometimes refers to the hello_world directory as the **buildout"
" directory**. It contains the **buildout.cfg** file.::"
msgstr ""

# aa33cf3a8c204cb79c3cc90bfba93910
#: ../develop/addons/helloworld/environment/plone.rst:79
msgid "Bootstrap the system with the Python included in our virtual_env.::"
msgstr ""

# d9def037a03842939d0547cd75a79bff
#: ../develop/addons/helloworld/environment/plone.rst:85
msgid ""
"The bootstrap process creates some directories and adds a buildout script to"
" the bin directory.::"
msgstr ""

# 2d8534984b284c7c997ef3faaa17c4fd
#: ../develop/addons/helloworld/environment/plone.rst:102
msgid "Run buildout to install Plone. This can take a while.::"
msgstr ""

# 5ba05a64ac524793a18a3c5bbac5a127
#: ../develop/addons/helloworld/environment/plone.rst:106
msgid ""
"Buildout uses **recipes** that tell it what to install. These recipes can "
"specify the versions of modules they need. Buildout picks a version when one"
" is not specified. It keeps track of these **picked versions** and displays "
"them when it is finished. You can add these to the [versions] section of "
"buildout.cfg to pin them. This gives you a known good set you can work from,"
" allowing you to rerun buildout in the future or on a different machine, and"
" know you have the same environment.::"
msgstr ""

# e0878094ace04daba7acbd2626061116
#: ../develop/addons/helloworld/environment/plone.rst:123
msgid ""
"Notice that the Plone buildout installed ZopeSkel 3.0b3 for us. It is "
"installed in the bin directory. We now have access to both versions of "
"ZopeSkel; 2.21.2 in our virtual_env, and 3.0b3 in our Plone installation.::"
msgstr ""

# 370849e523b546cc841a37ce1d854e56
#: ../develop/addons/helloworld/environment/plone.rst:136
msgid ""
"Also notice the script named **instance**. Use this script to start, stop "
"and restart Plone.::"
msgstr ""

# dbace6540bd244b9a5316636ce90b340
#: ../develop/addons/helloworld/environment/plone.rst:142
msgid ""
"You can also start Plone in foreground mode. This prints log messages to "
"your terminal which is nice during development.::"
msgstr ""

# cdec7c9e06e149efbf4c7041dc51f643
#: ../develop/addons/helloworld/environment/plone.rst:146
msgid ""
"You can always look at the event log directly. It should be located at "
"*var/log/instance.log*. You can watch it using the tail command.::"
msgstr ""

# a46bca70dcdd407db5977d0eba6421a9
#: ../develop/addons/helloworld/environment/plone.rst:150
msgid "You can access the Plone site in your browser at::"
msgstr ""

# fe5df2d10c5d4000b5f6296b201ee028
#: ../develop/addons/helloworld/environment/plone.rst:154
msgid ""
"The first time you access the site, you will need to click on the *Create a "
"new Plone site* button to perform some initialization."
msgstr ""

# 83e745677d554b7094db7efb7f27af04
#: ../develop/addons/helloworld/environment/plone.rst:158
msgid ""
"You'll be presented with a form titled **Create a Plone site**. Keep the "
"defaults for now, and click on the *Create Plone Site* button at the bottom."
" After a few moments, you should see the Home page of your site."
msgstr ""

# d07f6f2fd5b847bebc3d3c076498a008
#: ../develop/addons/helloworld/environment/plone.rst:165
msgid "Quick Review"
msgstr ""

# c705e597092d47a5a991c773e4d8ddbd
#: ../develop/addons/helloworld/environment/plone.rst:167
msgid ""
"Before moving on, lets review what our directory structure lools like. "
"Inside the *python_dev* directory we have *buildout.python* and *env-27*."
msgstr ""

# 48d6d3fc7c194d5185169772adf01f4e
#: ../develop/addons/helloworld/environment/plone.rst:169
msgid ""
"Inside *env-27* we have the **hello_world** directory, our Plone "
"installation. Called the **buildout_directory**, it has the **buildout.cfg**"
" file, and a script in the bin directory named **instance** used to start "
"and stop Plone."
msgstr ""

# e5001a8e0347499398ab18e80d0bcd7a
# 27e9cb3d42c4472b990d69f46e951ca2
#: ../develop/addons/helloworld/environment/plone.rst:176
#: ../develop/addons/helloworld/environment/virtualenv.rst:55
msgid ""
"Now that we have our virtual_env, we won't use *buildout.python* again for "
"these examples. However, you can return there later to create new virtual "
"environments for other Python projects.::"
msgstr ""

# be015f2536d84471abafe8b6d2108a7a
# 03dca81fd9fd4e459b241e205b3c0d0d
#: ../develop/addons/helloworld/environment/plone.rst:181
#: ../develop/addons/helloworld/environment/virtualenv.rst:60
msgid ""
"You can also build the versions of Python that we skipped in the Build "
"Python section above, and then use them to build new Python virtual_envs.::"
msgstr ""

# f962a354a2944417b6e3f3e783a604c1
#: ../develop/addons/helloworld/environment/python.rst:3
msgid "Build Python"
msgstr ""

# c93beb13ee5f4246a782837305d5fb4a
#: ../develop/addons/helloworld/environment/python.rst:12
msgid "The first thing we need to do is build Python."
msgstr ""

# b369f5a4a4dd450eb61228de1419e351
#: ../develop/addons/helloworld/environment/python.rst:14
msgid ""
"**Buildout** is a tool to manage a software build. It uses configurations so"
" you can always reproduce the same environment. In these examples, we use it"
" to manage both our Python and Plone builds."
msgstr ""

# 4ab4fdeab13a45999041bfc4bd8b3cee
#: ../develop/addons/helloworld/environment/python.rst:16
msgid ""
"For our buildout configuration, we will use **buildout.python**. It is a "
"project on github that maintains configurations for building different "
"versions of Python. We will use it to build Python 2.7."
msgstr ""

# a702d74495884c3bb2d827a0460db18c
#: ../develop/addons/helloworld/environment/python.rst:18
msgid ""
"Create a directory for your development environment if you don't already "
"have one, and make it your working directory.::"
msgstr ""

# 2e281618644a4ec5a9751c09cd48916e
#: ../develop/addons/helloworld/environment/python.rst:23
msgid "Get buildout.python from github."
msgstr ""

# 3fcc2eae4f3a48ce9437adbc517fcc11
#: ../develop/addons/helloworld/environment/python.rst:25
msgid "If you have git, you can clone the buildout.python repository.::"
msgstr ""

# 216597f358544da38719a117dc7534d9
#: ../develop/addons/helloworld/environment/python.rst:29
msgid ""
"You can also download buildout.python from their web interface. Open "
"https://github.com/collective/buildout.python in your browser, and click on "
"the **Downloads** link on the right hand side."
msgstr ""

# 46048bc38bcf41b28a203a2963496414
#: ../develop/addons/helloworld/environment/python.rst:33
msgid ""
"On the next page, click on **Download as zip** or **Download as tar.gz** to "
"download the buildout files. When the download is complete, uncompress the "
"file and rename the resulting directory to **buildout.python**."
msgstr ""

# 196ba7cc8bdc4789a69170999fc8b728
#: ../develop/addons/helloworld/environment/python.rst:35
msgid ""
"Whether you cloned with git or downloaded from the webiste, you should end "
"up with a directory named **buildout.python** that contains these items.::"
msgstr ""

# 344da8d388404fc4848d1a59f039fac8
#: ../develop/addons/helloworld/environment/python.rst:47
msgid "Bootstrap buildout.python with your system Python.::"
msgstr ""

# ce96b8524f7e47e4aace62c9e32f0063
#: ../develop/addons/helloworld/environment/python.rst:53
msgid ""
"This creates the *bin*, *parts*, *eggs*, and *develop-eggs* directories and "
"adds the *buildout* binary to the bin directory.::"
msgstr ""

# 15aca960a8a2455f8b303aa2bf9678b6
#: ../develop/addons/helloworld/environment/python.rst:72
msgid ""
"The current version of buildout.python builds Python 2.4, 2.5, 2.6, 2.7, 3.2"
" and 3.3. This can take a long time. We only need Python 2.7."
msgstr ""

# dba743c9f850416bae5a8b7cc5659d86
#: ../develop/addons/helloworld/environment/python.rst:74
msgid ""
"We can keep buildout from building the other versions by commenting them out"
" in the buildout.cfg file. We do this by adding a **#** to the beginning of "
"a line we want buildout to ignore."
msgstr ""

# fa1f0c885ecf46bcad9da09dc114941a
#: ../develop/addons/helloworld/environment/python.rst:76
msgid ""
"To only build Python 2.7, open the **buildout.cfg** file in a text editor,  "
"comment out the other versions in both extends and parts sections, and save "
"your changes.::"
msgstr ""

# e7a7770d93454b129e4c726ace1fd414
#: ../develop/addons/helloworld/environment/python.rst:104
msgid "Run buildout to build Python.::"
msgstr ""

# 50cb00389db84b14b20a971148ad6953
#: ../develop/addons/helloworld/environment/python.rst:108
msgid ""
"This creates a new python-2.7 directory containing it's own binaries, "
"libraries and include files.::"
msgstr ""

# 4b1cc27f173d4bf7a762dacf51858e0c
#: ../develop/addons/helloworld/environment/python.rst:150
msgid ""
"Buildout also creates the **virtualenv-2.7** script in the bin directory. We"
" will use the *virtualenv-2.7* script in the next tutorial.::"
msgstr ""

# b572e0113a5748538c43a82825824dfd
#: ../develop/addons/helloworld/environment/python.rst:161
msgid ""
"You can build any of the other versions of Python by uncommenting their "
"lines in the *buidout.cfg* file,::"
msgstr ""

# d25974fb3dd7444c861270b50d25edd4
#: ../develop/addons/helloworld/environment/python.rst:188
msgid "and rerunning buildout.::"
msgstr ""

# 395c93dcb374479387eb87c2d04f9097
#: ../develop/addons/helloworld/environment/python.rst:192
msgid "It just takes a while."
msgstr ""

# 67480d747ff24a11819551e0598ccc75
#: ../develop/addons/helloworld/environment/python.rst:197
msgid ""
"If you have trouble running buildout, you may need to run the bootstrap step"
" above with the 1.4.4 version.::"
msgstr ""

# edffad6275904235986ec7bb7425dd29
#: ../develop/addons/helloworld/environment/virtualenv.rst:3
msgid "Create a virtual_env"
msgstr ""

# 0a5eece5c1d24f29a6c37095a449aee4
#: ../develop/addons/helloworld/environment/virtualenv.rst:11
msgid ""
"Now that we have a clean install of Python 2.7 we can move on to the second "
"step in our process, creating the virtual_env."
msgstr ""

# 27ec4cbd36d4451199886c49c53edf7f
#: ../develop/addons/helloworld/environment/virtualenv.rst:13
msgid ""
"Use the virtualenv script from the Build Python section above, create our "
"virtual_env directory.::"
msgstr ""

# b7fe0b8efd6e45bb898ab23412330a3a
#: ../develop/addons/helloworld/environment/virtualenv.rst:19
msgid "This creates the env-27 directory.::"
msgstr ""

# b83c99ab669e4ccaae0a1a9edaf9cfd0
#: ../develop/addons/helloworld/environment/virtualenv.rst:26
msgid "The virtual_env has its own Python bin, include and lib directories.::"
msgstr ""

# d1a5b17aa13444f8a47c8fd9bcb0ac39
#: ../develop/addons/helloworld/environment/virtualenv.rst:34
msgid ""
"In the bin directory, the virtual_env has 2 copies of Python 2.7; **python**"
" and **python2.7**. It also has easy_install and pip, to install Python "
"packages.::"
msgstr ""

# 919cf4abab3e484fa69f13c2b418a9bb
#: ../develop/addons/helloworld/environment/virtualenv.rst:51
msgid ""
"The bin directory also has an **activate** script you can use to isolate "
"your commands within your virtual_env. It modifies your $PATH so its first "
"entry is the virtualenv's bin/ directory"
msgstr ""

# f333883ae59a48c4ad0c309b8a13103e
#: ../develop/addons/helloworld/environment/virtualenv.rst:65
msgid ""
"For more information about virtualenv, see the `virtualenv documentation "
"<http://www.virtualenv.org/en/latest/index.html>`_ ."
msgstr ""

# ba5fbf6a33e54fa780308e4ecdfc6e59
#: ../develop/addons/helloworld/extend/addon.rst:3
msgid "Create an add-on package"
msgstr ""

# d18a972a9cca4b7a974eec7129d380bb
#: ../develop/addons/helloworld/extend/addon.rst:11
msgid ""
"Before extending Plone, we need to create an add-on package to hold our "
"changes. It's possible you would have more than one add-on package. One "
"popular approach is to have a theme product and a product containing your "
"business logic."
msgstr ""

# 71280f6d01bb42bebe99a8c7bc4767f2
#: ../develop/addons/helloworld/extend/addon.rst:13
msgid ""
"We will use ZopeSkel to create a skeleton template for the project. For more"
" information on ZopeSkel, see the section on :doc:`Bootstrapping Plone add-"
"on development </develop/addons/paste>`."
msgstr ""

# 4d303a5e1c0b45c48fbc29844dc79791
#: ../develop/addons/helloworld/extend/addon.rst:15
msgid "Put your projects in the src directory of your buildout directory."
msgstr ""

# 204f73c087e54522b6cc58aaedb2e497
#: ../develop/addons/helloworld/extend/addon.rst:17
msgid "Change your working directory to the src directory of your buildout.::"
msgstr ""

# e8c3fa547194416abf602289dbb18ca8
#: ../develop/addons/helloworld/extend/addon.rst:23
msgid ""
"Create a project using ZopeSkel 2.21.2 from our virtual_env. Here, we create"
" an archetypes based project in a directory named example.helloworld.::"
msgstr ""

# 65c8323cc19d4ee1aff3465b140f0d5a
#: ../develop/addons/helloworld/extend/addon.rst:27
msgid ""
"ZopeSkel will ask you a series of questions. For now, you can use the "
"defaults for Expert Mode and Version. Use *Hello World* for the Project "
"Title. We will reference it in another step below.::"
msgstr ""

# a0885142bdcb44fba4d165abc4eb0a89
#: ../develop/addons/helloworld/extend/addon.rst:34
msgid ""
"The zopeskel command creates a directory in the src directory named "
"**example.helloworld**.::"
msgstr ""

# df177c2c7cb94871a44b62d6544eab66
#: ../develop/addons/helloworld/extend/addon.rst:41
msgid ""
"Before we move one, lets examine our directory structure. We have "
"**env-27**, our virtual_env. It contains **hello_world**, our Plone "
"installation. We also call this the **buildout directory**. The *buildout "
"directory* contains the **buildout.cfg** file. It also contains the **src** "
"directory, which contains our project **example.helloworld**."
msgstr ""

# ea6b70dae9e94174b24ac7a2a1b32407
#: ../develop/addons/helloworld/extend/addon.rst:46
msgid ""
"Looking further into *example.helloworld*, we have the **example** directory"
" which contains the **helloworld** directory."
msgstr ""

# d714a0fa746042e58dfbee5cec2643b7
#: ../develop/addons/helloworld/extend/addon.rst:48
msgid ""
"In the examples below, we sometimes refer to the *helloworld* directory as "
"the **product directory**. It contains the **browser** directory. Most of "
"the changes we make take place in the *browser* directory."
msgstr ""

# 42c940d5059045348e85d1e8291e6cf3
#: ../develop/addons/helloworld/extend/addon.rst:50
msgid "Here it is from the command-line.::"
msgstr ""

# 7262d73f12334c2e8812d0a8414f627b
#: ../develop/addons/helloworld/extend/addon.rst:88
msgid ""
"To use the code in your project, you'll need to reference it in your "
"buildout.cfg file."
msgstr ""

# bf78cc5dc9314aac82da65e82c101364
#: ../develop/addons/helloworld/extend/addon.rst:90
msgid "Edit the *buildout.cfg* file."
msgstr ""

# e0202b9e3cd1495b911e8d2bdb848e37
#: ../develop/addons/helloworld/extend/addon.rst:92
msgid "Add *example.helloworld* to the *eggs* section.::"
msgstr ""

# 2f72c2fd14b141f3b782f18afd0164b7
#: ../develop/addons/helloworld/extend/addon.rst:99
msgid "Add *src/example.helloworld* to the *develop* section.::"
msgstr ""

# f595423fb548442589f652a7ff64a37a
#: ../develop/addons/helloworld/extend/addon.rst:104
msgid "Then save your changes."
msgstr ""

# d507964bc04548bdaa2e063dd5ce241e
#: ../develop/addons/helloworld/extend/addon.rst:106
msgid "You need to rerun buildout for the changes to take effect.::"
msgstr ""

# 9539f30c41e242fb85101261f21d82b1
#: ../develop/addons/helloworld/extend/addon.rst:111
msgid "Then start or restart your Plone instance.::"
msgstr ""

# 1d94aa9e598b42d9a2fb0880f6122156
#: ../develop/addons/helloworld/extend/addon.rst:118
msgid "Note::"
msgstr ""

# b3cbd862d3664d50ba4dea2a2e218741
#: ../develop/addons/helloworld/extend/addon.rst:124
msgid ""
"Now you can install your product from the **Add-ons** are of **Site Setup**."
" You can access Site Setup from the **admin** menu in the top right corner "
"of your Plone site."
msgstr ""

# d55b6853571f4cee8012198da4805c88
#: ../develop/addons/helloworld/extend/addon.rst:128
msgid "You can also access Site Setup using an url like"
msgstr ""

# 74542382fedf42efa57f01e27e63b058
#: ../develop/addons/helloworld/extend/addon.rst:130
msgid "*http://localhost:8080/Plone/plone_control_panel*"
msgstr ""

# cb10e6c6bd1b4fe38cce0c264ab50e46
#: ../develop/addons/helloworld/extend/addon.rst:132
msgid ""
"Select *Add-ons* from the *Site Setup* page. On the Add-ons page, select the"
" *Hello World* add-on and click on *Activate*."
msgstr ""

# 9ed640557e654d82a1ed55a70827eaf6
#: ../develop/addons/helloworld/extend/addon.rst:136
msgid ""
"Now that you created and installed an add-on package, you can use it to "
"extend Plone."
msgstr ""

# de8c3b1898944fe6bcfd1065c45f6fcd
#: ../develop/addons/helloworld/extend/content.rst:3
msgid "Add a content-type"
msgstr ""

# acc0419fabee4936856160aa70d5be8e
#: ../develop/addons/helloworld/extend/content.rst:11
msgid "In this tutorial we add a custom content-type."
msgstr ""

# 655595a930ae4df88cfd1d25099fa83f
#: ../develop/addons/helloworld/extend/content.rst:13
msgid ""
"Plone comes with built-in content-types like Collection, Event, File, "
"Folder, Image, Link, News Item, and Page. If you need a custom content-type,"
" you can extend an existing content-type, or create your own from scratch. "
"In this example, we'll create a simple archetypes based content-type from "
"scratch."
msgstr ""

# 2b66ab7147a44d139b29a32b64a5329d
#: ../develop/addons/helloworld/extend/content.rst:17
msgid "Install code template with ZopeSkel"
msgstr ""

# 1064ad5bd68e42d4baa00aa333839053
#: ../develop/addons/helloworld/extend/content.rst:19
msgid ""
"First, we'll change our working directory to the project we created above.::"
msgstr ""

# cf45b7dd225e45b5834d84aed0cf031d
#: ../develop/addons/helloworld/extend/content.rst:24
msgid ""
"Use paster to create a content-type skeleton. Paster is included with "
"ZopeSkel.::"
msgstr ""

# d0f2d47c89ad44f88c01fffa46e5e468
#: ../develop/addons/helloworld/extend/content.rst:28
msgid ""
"Again, you'll be asked a series of questions. Use *Person* for the "
"contenttype_name.::"
msgstr ""

# 1f45142a13b14376b5e47c2ffcd72adc
#: ../develop/addons/helloworld/extend/content.rst:36
msgid ""
"This creates a few files, and edits some others. For our purposes, the most "
"important one is **person.py** contained in the "
"**src/example.helloworld/example/helloworld/content/** directory. Open this "
"file in your text editor."
msgstr ""

# 9c555bfddd544373911d31ff0aeebc65
#: ../develop/addons/helloworld/extend/content.rst:40
msgid "Build the content-type"
msgstr ""

# c7f2eab4cf9441678e5346a97480685a
#: ../develop/addons/helloworld/extend/content.rst:42
msgid "Edit PersonSchema inside *person.py* so it looks like this.::"
msgstr ""

# 9d432911a38943379c0a2f2a056eae8b
#: ../develop/addons/helloworld/extend/content.rst:60
msgid ""
"This adds a new field to our schema named **hello_name**. It is a string "
"filed, and is required. It is visible on both the view and edit pages."
msgstr ""

# 7a6c97686c8d456081d7ff7015c8a619
#: ../develop/addons/helloworld/extend/content.rst:62
msgid "Restart your instance to have access to the new content-type.::"
msgstr ""

# b7e3ed5459184ac7b6d27e50473d904c
#: ../develop/addons/helloworld/extend/content.rst:69
msgid "Add content to the site"
msgstr ""

# 2e3561ec01be4bff9e70da2ae3636d9b
#: ../develop/addons/helloworld/extend/content.rst:71
msgid ""
"To create a new object using the new content-type, select *Person* from the "
"*Add new...* menu of your Plone site. This brings up the *edit* view."
msgstr ""

# d1126f95518340f0addb4f85c4243ce8
#: ../develop/addons/helloworld/extend/content.rst:75
msgid "Fill in the fields and click *Save*. This brings up the *view* view."
msgstr ""

# b7198c426787496f8da8df0935a01388
#: ../develop/addons/helloworld/extend/content.rst:79
msgid ""
"You should see an *info* message telling you your changes were saved, and a "
"new tab in the navigation bar with the title of your object."
msgstr ""

# 5335c047957e437fb678399027d57a6f
#: ../develop/addons/helloworld/extend/content.rst:81
msgid ""
"Notice the **State** menu on the right hand side of the green bar. It tells "
"you your content is **Private**, meaning only you can see it. You need to "
"select **Publish** from the *State* menu."
msgstr ""

# 6a420b76bba146d6a78f52fba3fe353b
#: ../develop/addons/helloworld/extend/content.rst:83
msgid ""
"Also notice the url of the page. It is based on the Title of the object, "
"with two main differences. The letters are all lower case, and spaces are "
"turned into dashes.::"
msgstr ""

# 6ba0121d5986406f8719b1eaae918ce2
#: ../develop/addons/helloworld/extend/content.rst:87
msgid ""
"For more information about content in Plone, see the :doc:`Content "
"management </develop/plone/content/index>` section of this manual. For more "
"information about content types, see :doc:`Content Types "
"</develop/plone/content/types>`."
msgstr ""

# 8dfbb72401a4487ba6c3808e7a1cf98a
#: ../develop/addons/helloworld/extend/files.rst:3
msgid "Files and Directories"
msgstr ""

# 91a1c862621b4658b88d6992c0b05b09
#: ../develop/addons/helloworld/extend/files.rst:11
msgid ""
"Before we start writing code, I want to review some important files and "
"directories. In the examples above, we created the **hello_world** directory"
" that contains our Plone installation. We sometimes refer to it as the "
"**buildout** directory. It contains the **buildout.cfg** file."
msgstr ""

# e4ef755471144e68a64f843ddf3c32e9
#: ../develop/addons/helloworld/extend/files.rst:13
msgid ""
"We also created an add-on package named **example.helloworld**. It contains "
"the **example** directory which contains the **helloworld** directory. We "
"also call the *helloworld* directory the **product directory**. Among other "
"things, the *product directory* contains the **browser** directory. Many of "
"the changes in our examples happen in the *browser* directory."
msgstr ""

# 8eb98962ec7e42e180ba098d9512702f
#: ../develop/addons/helloworld/extend/form.rst:3
msgid "Add a simple form"
msgstr ""

# 1d30cbb2ab6c40a4a1125095b795322f
#: ../develop/addons/helloworld/extend/form.rst:11
msgid "In this tutorial we add a simple form."
msgstr ""

# b900328d744b45e5b02c1a3fddb7123e
#: ../develop/addons/helloworld/extend/form.rst:13
msgid ""
"There are many ways to add a form to Plone. In this tutorial, we use "
"z3c.form."
msgstr ""

# b5b7aed526fe440397d9e112a6224b38
#: ../develop/addons/helloworld/extend/form.rst:15
msgid ""
"There are two steps to building a simple z3c.form form; registering the form"
" in **configure.zcml**, and writing the Python code to handle the form."
msgstr ""

# 7f33ee4413884056875719dd5379f619
#: ../develop/addons/helloworld/extend/form.rst:19
msgid "Register the form"
msgstr ""

# 8db7f1a80b8142ba9aa0f4f43a33ab04
#: ../develop/addons/helloworld/extend/form.rst:21
msgid "To register our form, we need to add an entry in configure.zcml."
msgstr ""

# e33d2406bdbc4c92aea3c2f78a9cd24f
# 6dde7144c4ad47c9a3dd63b4912bc795
#: ../develop/addons/helloworld/extend/form.rst:23
#: ../develop/addons/helloworld/extend/view.rst:21
msgid ""
"Edit the **configure.zcml** file in the **browser** directory. Open "
"*configure.zcml* in your editor and add this just before the closing "
"</configure> tag.::"
msgstr ""

# 3099caab1f8349b1adbb8b73b136b41b
#: ../develop/addons/helloworld/extend/form.rst:34
msgid "We use the **name** attribute to access the form."
msgstr ""

# a3d2abdd501c4051b75a06852b87ee37
# 4777b40d9295458aaff9f24ffeb1b371
#: ../develop/addons/helloworld/extend/form.rst:35
#: ../develop/addons/helloworld/extend/view.rst:33
msgid ""
"The **for** attribute allows us to limit context to a particular interface. "
"With the asterisk, we are not limiting access."
msgstr ""

# b3210e17eb4543be9fab4881dcc16e15
# c0cb83de22de4152baf72366f0ea0cad
#: ../develop/addons/helloworld/extend/form.rst:36
#: ../develop/addons/helloworld/extend/view.rst:34
msgid ""
"The **permission** attribute allows us to limit access with a permission. In"
" this case, we have a wide open permission."
msgstr ""

# 61a6c5c0b4614b3d85173386c9b7e873
#: ../develop/addons/helloworld/extend/form.rst:37
msgid ""
"The **class** attribute points to our Python class. Here, we have a "
"**HelloWorldFormView** class in a file named **hello_world_form.py**."
msgstr ""

# 7bba48b3b64e41bab20e99dfcc9ec885
#: ../develop/addons/helloworld/extend/form.rst:40
msgid ""
"Our entry uses the **browser** prefix, so we need to define it in "
"configure.zcml before we can use it."
msgstr ""

# 9175f076ecdc413ea178bbe4835bacbb
#: ../develop/addons/helloworld/extend/form.rst:42
msgid ""
"Add **xmlns:browser=\"http://namespaces.zope.org/browser\"** at the top of "
"configure.zcml so it looks something like::"
msgstr ""

# 7449d4018b9f41a3a549d775d7ee2094
#: ../develop/addons/helloworld/extend/form.rst:49
msgid "When we are done, configure.zcml should look something like this.::"
msgstr ""

# 1b296455f5a84b9684631282aad6d900
# cbcb3ec5793c47518ce77cd98adc6988
#: ../develop/addons/helloworld/extend/form.rst:71
#: ../develop/plone/views/layers.rst:60
msgid "Python code"
msgstr ""

# adcf8ac232aa4104b18d955c49fd5de1
#: ../develop/addons/helloworld/extend/form.rst:73
msgid "Now we need to create the code to handle our form."
msgstr ""

# be77c1266bc845718bff91d79850a765
#: ../develop/addons/helloworld/extend/form.rst:75
msgid "create the file *hello_world_form.py* in the *browser* directory.::"
msgstr ""

# a94c3902e2364fc89001880c97da5c06
#: ../develop/addons/helloworld/extend/form.rst:79
msgid ""
"Open the *hello_world_form.py* file in your editor and add the following "
"code."
msgstr ""

# f75e9f1076194bb8834c0d7a97160036
#: ../develop/addons/helloworld/extend/form.rst:81
msgid "Define our form field in an interface."
msgstr ""

# 12e4c46257f748f4ad2c1d7aebe4f1d0
# d0c820c461ec43a7823c44b5d15fbc22
#: ../develop/addons/helloworld/extend/form.rst:83
#: ../develop/addons/helloworld/extend/form.rst:105
msgid "The imports::"
msgstr ""

# 1f93f0db04bb4aafaded6daee94fcfc1
#: ../develop/addons/helloworld/extend/form.rst:90
msgid "The interface::"
msgstr ""

# 5e513ec1bfd74b938a5f54fcae7d53a7
#: ../develop/addons/helloworld/extend/form.rst:100
msgid ""
"This defines a TextLine field with an id of **hello_world_name**. The title "
"and description will show up on the form. It is not a required field."
msgstr ""

# 3bf5081f99ec44188c3d17442fd79686
#: ../develop/addons/helloworld/extend/form.rst:103
msgid "Create a class for our logic. This is used when our view is accessed."
msgstr ""

# c919a0054ef8423ca4adc2a9ad01f806
#: ../develop/addons/helloworld/extend/form.rst:111
msgid "The class::"
msgstr ""

# 2f7bf802e2ee4e6cb82c971630bbf33f
#: ../develop/addons/helloworld/extend/form.rst:148
msgid "We first import the field from our interface above."
msgstr ""

# 4d1ac03a319b49d7b2ef0e1a8043d013
#: ../develop/addons/helloworld/extend/form.rst:149
msgid ""
"The **ignoreContext** directive means this form is not meant to be called in"
" the context of an object."
msgstr ""

# 0193377908f54b89bec0da51cfd42e9e
#: ../develop/addons/helloworld/extend/form.rst:150
msgid ""
"We define **updateWidgets** to the same method belonging to our parent."
msgstr ""

# f083505a87094a839303fdb6f922fc98
#: ../develop/addons/helloworld/extend/form.rst:151
msgid "We create 2 button handlers."
msgstr ""

# c4dc5fbaca834f6e87fa5c3a3835feb5
#: ../develop/addons/helloworld/extend/form.rst:153
msgid ""
"The fun parts here are the two button handlers; **handleSave** and "
"**handleCancel**."
msgstr ""

# b4afd932672040549f833d3d566383fe
#: ../develop/addons/helloworld/extend/form.rst:155
msgid ""
"At the bottom of *hello_world_form.py* we need to use **wrap_form** on our "
"class. This wraps our form in the standard Plone layout, placing our form in"
" the content area. This also creates the view **HelloWorldFormView** "
"referenced in *configure.zcml*.::"
msgstr ""

# 4e55aec59dc743039330f3659885833a
#: ../develop/addons/helloworld/extend/form.rst:162
msgid "Access the form"
msgstr ""

# 709bd57deb134be9840db10acf77e75c
#: ../develop/addons/helloworld/extend/form.rst:164
msgid "You can access the form with an url like::"
msgstr ""

# aab8ff4dc69e4fbbb16db57da5acf316
#: ../develop/addons/helloworld/extend/form.rst:174
msgid "Type in a name and click *Save*, or just click *Cancel*."
msgstr ""

# ec37ed8d0c9b4a4ca1143f3064b6ee0e
#: ../develop/addons/helloworld/extend/index.rst:3
msgid "Extend Plone"
msgstr ""

# 786abb6c394546358bf813dedb16ab50
#: ../develop/addons/helloworld/extend/index.rst:18
msgid ""
"In these examples the tutorial extends Plone. First, we create an add-on "
"package on the filesystem to put our code. Then within that package, we add "
"a simple form, a content-type, and a custom view."
msgstr ""

# 1b31851ac8de42f3a619682215f5493e
#: ../develop/addons/helloworld/extend/view.rst:3
msgid "Add a custom view"
msgstr ""

# e9de9a0761814aebb14588ca6ed91d62
#: ../develop/addons/helloworld/extend/view.rst:11
msgid ""
"In this tutorial we add a browser view. Plone uses views to display dynamic "
"content."
msgstr ""

# bf82c64ceb3440f5a7a8fd5605e7bda1
#: ../develop/addons/helloworld/extend/view.rst:13
msgid ""
"There are now two ways to add views to Plone; Zope 3 and Grok. This tutorial"
" covers the Zope 3 method. For more information about views, see the "
":doc:`Views and viewlets </develop/plone/views/index>` section of the "
"developer manual."
msgstr ""

# 4b8d8afecdb242c5ac7853a20e0f3077
#: ../develop/addons/helloworld/extend/view.rst:15
msgid ""
"There are 3 parts to our view; a Python class, a page template, and a ZCML "
"registration. We will add the two files and edit configure.zcml in the "
"**browser** directory."
msgstr ""

# 778a15e4bcf144569d6ef668213e5d5a
#: ../develop/addons/helloworld/extend/view.rst:19
msgid "Register the view"
msgstr ""

# b7038f2844bf41c4891c853a2d093129
#: ../develop/addons/helloworld/extend/view.rst:32
msgid "We use the **name** attribute to access the view."
msgstr ""

# f06174e48ea04a87be8aa19658a10192
#: ../develop/addons/helloworld/extend/view.rst:35
msgid ""
"The **class** attribute points to our Python class. Here, we have a "
"**HelloWorldView** class in a file named **hello_world_view.py**."
msgstr ""

# d8a201774edd43c1b02ad139cad45ede
#: ../develop/addons/helloworld/extend/view.rst:37
msgid ""
"If you have not already done so, you need to define the browser namespace in"
" configure.zcml by adding this to the configure tag.::"
msgstr ""

# af544d9162b84db4abb8f63cd67221ed
#: ../develop/addons/helloworld/extend/view.rst:41
msgid ""
"If you also went through the simple form tutorial, then *configure.zcml* "
"should look something like this when you are done.::"
msgstr ""

# 49c4695d8d1e4b91b822a503f9a68102
#: ../develop/addons/helloworld/extend/view.rst:72
msgid "Create Python class"
msgstr ""

# 7e94ebddb01f4089a383520b4c23eda7
#: ../develop/addons/helloworld/extend/view.rst:74
msgid ""
"We need to create our Python class. In the **browser directory**, create a "
"file named **hello_world_view.py** and add the following code.::"
msgstr ""

# ac24454252da49ea9fe89fff0175a94f
#: ../develop/addons/helloworld/extend/view.rst:90
msgid ""
"Our BrowserView class is a Python callable. The __call__() method is the "
"entry point. In it, we add a **hello_name** attribute to the view. Our page "
"template will use the value of hello_name when the page is rendered."
msgstr ""

# 8242413dec754b92bc844e62e015ea65
#: ../develop/addons/helloworld/extend/view.rst:92
msgid ""
"The logic in our class is pretty simple. If our context has a hello_name "
"attribute, then we use its value in our view. If not, we use the string "
"'World'."
msgstr ""

# 796567e6da9a4f33adc9701dd8bd163e
#: ../develop/addons/helloworld/extend/view.rst:94
msgid ""
"In the class, we also define our page template **hello_world_view.pt** and "
"save it in the **template** attribute."
msgstr ""

# cbd21eadbb644ea290edefc8b754aa37
#: ../develop/addons/helloworld/extend/view.rst:98
msgid "Create page template"
msgstr ""

# 9fe91fe0317a4574bf098f144e1f9ec6
#: ../develop/addons/helloworld/extend/view.rst:100
msgid "The third part of our view is the page template."
msgstr ""

# 2a9a6abe8a1240cfa38c62f53f1ebee3
#: ../develop/addons/helloworld/extend/view.rst:102
msgid ""
"In the browser directory, create a file named **hello_world_view.pt** and "
"add the following::"
msgstr ""

# c15f07528b7e460cb4586c2671478fec
#: ../develop/addons/helloworld/extend/view.rst:119
msgid ""
"Plone uses Zope Page Templates (ZPT). For great documentation on ZPT and the"
" TAL, TALES, and METAL languages, see the :doc:`TAL page templates </adapt-"
"and-extend/theming/templates_css/template_basics>` section of the developer "
"manual, and the `TAL/TALES & METAL Reference Guide "
"<http://www.owlfish.com/software/simpleTAL/tal-guide.html/>`_"
msgstr ""

# 37766a5777f24b9ab57ef48b54d5c874
#: ../develop/addons/helloworld/extend/view.rst:122
msgid ""
"In the above code, we define some xml namespaces; **metal** and **tal** that"
" we use in our template.::"
msgstr ""

# 1f278ed327854e088587d0ba007eccb0
#: ../develop/addons/helloworld/extend/view.rst:127
msgid ""
"The **metal:use-macro** statement tells ZPT to use **main_template** to draw"
" our page.::"
msgstr ""

# 79dc467ba14f496e863c3d8b68b49626
#: ../develop/addons/helloworld/extend/view.rst:131
msgid ""
"The master template *main_template* contains predefined **slots**, or areas "
"on the page, that we can fill with content from our template."
msgstr ""

# ed9ca4e9f63c44f398641083d331a092
#: ../develop/addons/helloworld/extend/view.rst:133
msgid "Anything in our code, between the::"
msgstr ""

# f27dda1abd4d406b98f27d4fe138a04f
#: ../develop/addons/helloworld/extend/view.rst:137
msgid "and::"
msgstr ""

# fdae8644d3024be3a7124242ac830c3a
#: ../develop/addons/helloworld/extend/view.rst:141
msgid ""
"gets put in the **content-core** area of main_template and is displayed on "
"our page."
msgstr ""

# 235c40dbac1a4ad58a7a941da2fab657
#: ../develop/addons/helloworld/extend/view.rst:143
msgid ""
"We also have access to our view class using the **view** namespace. In our "
"case, we are interested in **view/hello_name**.::"
msgstr ""

# f0f13c2d3f1a4ab4a2807ddfa18eec5d
#: ../develop/addons/helloworld/extend/view.rst:147
msgid ""
"In our Python class, we defined a *hello_name* attribute. This code says "
"take the value of the *view/hello_name* attribute and use it as the content "
"for the span tag. So, the string \"this gets replaced\" gets replaced with "
"the value of *view/hello_name*."
msgstr ""

# 9dc9f7780e444044b50f9737fbc4d5eb
#: ../develop/addons/helloworld/extend/view.rst:152
msgid "Access the view"
msgstr ""

# d1c3ef2fe1f24cab911e3df27276a35c
#: ../develop/addons/helloworld/extend/view.rst:154
msgid ""
"To access the view, restart your instance to have access to the new view"
msgstr ""

# 8d9735359b5f4622b23bc2f969d46ad6
#: ../develop/addons/helloworld/extend/view.rst:156
msgid ""
"Then, add @@hello_world_view to the end of an object url in your plone "
"site.::"
msgstr ""

# c4091a7a88f54bff8dea818a5fedd9ed
#: ../develop/addons/helloworld/extend/view.rst:160
msgid ""
"Since our object has a *hello_name* attribute, the value is displayed along "
"with the word *Hello*."
msgstr ""

# 3bd838387844400e97e104b93f12dcef
#: ../develop/addons/helloworld/extend/view.rst:164
msgid "We can also call our view on the root of the site.::"
msgstr ""

# bebd0345f8304314afcd1e3fd7c3d4d8
#: ../develop/addons/helloworld/extend/view.rst:168
msgid ""
"The root of the site does not have a *hello_name* attribute, so *Hello "
"World* is displayed."
msgstr ""

# c926b5153e414ec4ac225b82a2fc4b8c
#: ../develop/addons/helloworld/extend/view.rst:172
msgid ""
"For a more in depth explanation of views, see the :doc:`Views and viewlets "
"</develop/plone/views/index>` section of this manual."
msgstr ""

# ae11ee60cadc4e75994e2e43c1a98f77
# b31096666bf7496193ec009c9f7543dd
#: ../develop/addons/helloworld/index.rst:3
#: ../develop/plone/getstarted/index.rst:183
msgid "Hello World Tutorial"
msgstr ""

# b525e04518a64ff0acf7cda0857b9007
#: ../develop/addons/helloworld/intro.rst:11
msgid ""
"This tutorial uses simple examples to introduce Plone development. The "
"examples cover a basic form, custom content-type, and dynamic view."
msgstr ""

# 24ce030177f14072a6c63b8916593e52
#: ../develop/addons/helloworld/intro.rst:13
msgid ""
"It also has detailed sections on building a development environment, "
"installing Plone, and creating an add-on package for your development code."
msgstr ""

# 05360d45957745fbad0da81221593723
#: ../develop/addons/helloworld/intro.rst:17
msgid "There are many ways to install Plone."
msgstr ""

# 607b65b0619b4390acc3d5d5033c799b
#: ../develop/addons/helloworld/intro.rst:19
msgid ""
"In the examples, we build a new version of Python 2.7 and create a "
"virtual_env using the new Python. We then install Plone within the "
"virtual_env using ZopeSkel 2.21.2."
msgstr ""

# bd4b022ea42b4e20855db42f649db59d
#: ../develop/addons/helloworld/intro.rst:21
msgid ""
"This can be a lot of work, just to try some hello world examples in Plone."
msgstr ""

# d09f2345c4af4635adabba196358259b
#: ../develop/addons/helloworld/intro.rst:23
msgid ""
"You don't have to do it this way. You can create a similar environment using"
" the `Plone 4 installers <http://plone.org/products/plone/releases/4.2>`_. "
"The examples should all work with little or no adjustment."
msgstr ""

# 73e18a7105814b3bb47fb75f1b153fe8
#: ../develop/addons/helloworld/intro.rst:25
msgid ""
"There are benefits to managing your own Python development environment. The "
"choice is up to you."
msgstr ""

# e363b759117e465ca7693a8dc61142d3
#: ../develop/addons/helloworld/intro.rst:27
msgid ""
"This tutorial is only an introduction to Plone development. Other areas of "
"the developer manual have more detailed information. We link to some of "
"those areas in the examples below."
msgstr ""

# e3003fd7e27742a38fd70ae4c01312ba
#: ../develop/addons/helloworld/todo.rst:3
msgid "Ideas for improvement"
msgstr ""

# a10f56a33a2648289f818660877a856c
#: ../develop/addons/helloworld/todo.rst:10
msgid "Ideas for improving the tutorial"
msgstr ""

# 0f732b77288c48a393255447dbc4a4fb
#: ../develop/addons/helloworld/todo.rst:12
msgid "Add more information about universal installer."
msgstr ""

# daf66e64f9704686bf371cbd39a50fff
#: ../develop/addons/helloworld/todo.rst:13
msgid "Add section on Dexterity content-type."
msgstr ""

# e3bbcaa74634465d8d7bb4c6bce2ef02
#: ../develop/addons/helloworld/todo.rst:14
msgid "Put example code on Github as collective.hello_world."
msgstr ""

# e8f2362a81e342ea979b40e0d11ec1b3
#: ../develop/addons/helloworld/todo.rst:16
msgid "General editing"
msgstr ""

# 57b6ce54987342b8b645b04c6b96d61e
#: ../develop/addons/helloworld/todo.rst:16
msgid "allow individual sections to stand on their own"
msgstr ""

# 0eaacb0e1a3d41e6b7c4443abc675ce4
#: ../develop/addons/helloworld/todo.rst:17
msgid "better narrative if read beginning to end"
msgstr ""

# 4f7e0d3a063640c2a42d12b1aad3f0bd
#: ../develop/addons/index.rst:2
msgid "Develop Plone Add ons"
msgstr ""

# d1914919b5ac4d308b8f8be5aef39c19
# afcb1bd6de754667b91005dd743edbff
# b85c5c2175a34307a34857c30f37a2ed
# 595d63e3a5534421920bd9e76e8e8fb3
#: ../develop/addons/javascript.rst:3
#: ../develop/plone-coredev/es/plipreview.rst:60
#: ../develop/plone-coredev/plipreview.rst:58
#: ../develop/plone-coredev/pt_BR/plipreview.rst:58
msgid "Javascript"
msgstr ""

# f7cfb90eeb73490abc9ab972d5c48ad2
#: ../develop/addons/javascript.rst:7
msgid "Writing, including and customizing Javascript for Plone add-ons"
msgstr ""

# 3b1d3e19055347cb97404d3ebaace21c
#: ../develop/addons/javascript.rst:14
msgid "Javascripts files must be distributed to Plone"
msgstr ""

# bb2c4d423f124d77ba877fe2f64173cb
#: ../develop/addons/javascript.rst:16
msgid ""
"By creating them through-the-web editor in :doc:`portal_skins </adapt-and-"
"extend/theming/templates_css/skin_layers>`. are stored in ZODB in this case."
msgstr ""

# c4888a3afb904ba29b9ae01c882f0aa9
#: ../develop/addons/javascript.rst:19
msgid ""
"By add-on products using :doc:`resource folders </adapt-and-"
"extend/theming/templates_css/resourcefolders>`"
msgstr ""

# 0e5de3c9573d491bb9ecad035849259a
#: ../develop/addons/javascript.rst:21
msgid "Then the Javascript must be registered on the site"
msgstr ""

# 0c0208feb7ff40fa809d6a9f6288ead2
#: ../develop/addons/javascript.rst:23
msgid "Through-the-web in portal_javascripts in ZMI"
msgstr ""

# 2e0c4082460a4c24a944f4abdc4b6bfc
#: ../develop/addons/javascript.rst:25
msgid ""
"Using :doc:`GenericSetup jsregistry.xml "
"</develop/addons/components/genericsetup>` which is run (and rerun) when you"
" use the add-on installer in the control panel"
msgstr ""

# 6b3f117eaa0045378b9473ef3759f4bb
#: ../develop/addons/javascript.rst:28
msgid ""
"Plone Javascripts are managed by resource registry *portal_javascripts*. You"
" can find this in Zope Management interface, under your portal root folder."
msgstr ""

# f236050df3b34c6fa3c46ceb94b933bd
#: ../develop/addons/javascript.rst:31
msgid "portal_javascript will automatically"
msgstr ""

# 44f67e0f1e134e86a7e2a9196d2aa381
#: ../develop/addons/javascript.rst:33
msgid "compress JS files"
msgstr ""

# bf3dc78d6f4547ceb97907a9026eb787
#: ../develop/addons/javascript.rst:35
msgid "merge JS load requests"
msgstr ""

# 9a7874abc27b4dd1aef67dca050eb725
#: ../develop/addons/javascript.rst:37
msgid "determine which files are included on which HTML page"
msgstr ""

# d0b06b05538641e8ae213dcff7e284f8
#: ../develop/addons/javascript.rst:39
msgid "support IE conditional comments"
msgstr ""

# 1d0caa3d5ee7498fb282ebd10545c631
#: ../develop/addons/javascript.rst:42
msgid "Javascript basic tips"
msgstr ""

# 98f967a7458a499a8cf8653461f755d4
#: ../develop/addons/javascript.rst:44
msgid ""
"When using jQuery etc. libraries with Plone write your code so that you pass"
" the library global reference to your script as a local - this way you can "
"include several library versions in one codebase."
msgstr ""

# ae010c28bbeb4decaadf23de6a0135a1
#: ../develop/addons/javascript.rst:56
msgid "Always use DOM ready event before executing your DOM manipulation."
msgstr ""

# bb57dd64c15e46fa97d63827042d128e
#: ../develop/addons/javascript.rst:58
msgid ""
"Don't include Javascript inline in HTML code unless you are passing "
"variables from Python to Javascript."
msgstr ""

# c2dea10833ad4fcdaba7d7914a7a7c4f
#: ../develop/addons/javascript.rst:60
msgid ""
"Use JSLint with your code editor and ECMAStrict 5 strict mode to catch "
"common Javascript mistakes (like missing var)."
msgstr ""

# 21fcd1082a4b4551b6b2419464dee688
#: ../develop/addons/javascript.rst:62
msgid ""
"For more Javascript tips see `brief introduction to good Javascript "
"practices and JSLint <http://opensourcehacker.com/2011/11/05/javascript-how-"
"to-avoid-the-bad-parts/>`_"
msgstr ""

# 0d4b5073d9a3425b8562a608d9f1df7f
#: ../develop/addons/javascript.rst:65
msgid "Plone default Javascript libraries"
msgstr ""

# eafb8521bd4944689baafdfcecfe40ba
#: ../develop/addons/javascript.rst:67
msgid ""
"You can use any Javascript library with Plone after inclusion it to JS "
"registry (see below)."
msgstr ""

# 9889c0a1a4c74bb68b0ea85045d86811
#: ../develop/addons/javascript.rst:70
msgid "Plone 4.1 ships with"
msgstr ""

# cef7f8ef84b24e2ebbb9f25755537af3
#: ../develop/addons/javascript.rst:72
msgid "jQuery"
msgstr ""

# 01086e442e5c4a5f800840012a30c3f7
#: ../develop/addons/javascript.rst:74
msgid ""
"`jQuery tools <http://jquerytools.org/>`_: Use jQuery Tools for tabs, "
"tooltips, overlays, masking and scrollables."
msgstr ""

# 29533dd067274d9da6eaf7e49fd3c18e
#: ../develop/addons/javascript.rst:76
msgid ""
"`jQuery Form Plugin <http://jquery.malsup.com/form/>`_: Use it for AJAX form"
" input marshaling and submission. Note that jQuery’s built-in form input "
"marshaling is inadequate for many forms as it does not handle submit-button "
"or file-input data."
msgstr ""

# 61b29d12f5c042a8bd3867ad1459beda
#: ../develop/addons/javascript.rst:78
msgid "Also see"
msgstr ""

# 2e9bc20dd63846a981f69bbb24649485
#: ../develop/addons/javascript.rst:80
msgid ""
"`Plone compatible jQuery UI package "
"<http://plone.org/products/collective.js.jqueryui>`_."
msgstr ""

# 146c573f91f248a1aefe46d35eb27797
#: ../develop/addons/javascript.rst:82
msgid ""
"`Useful Plone out of the box Javascripts "
"<http://www.sixfeetup.com/blog/2009/7/31/utilize-available-javascript-in-"
"plone-without-knowing-javascript>`_."
msgstr ""

# 95e276fcb6ad4b66a2dcf31d95fe349b
#: ../develop/addons/javascript.rst:85
msgid "Creating Javascripts for Plone"
msgstr ""

# 05ae090d71bd4e79b53599c80373b39b
#: ../develop/addons/javascript.rst:87
msgid "The following ste"
msgstr ""

# b6d1f190c8234dfeba9e3e4536ad8e17
#: ../develop/addons/javascript.rst:89
msgid "Put ZMI -> portal_javascripts to debug mode"
msgstr ""

# de2b2098891b4debb3e86800c9373443
#: ../develop/addons/javascript.rst:91
msgid "Include new JS files"
msgstr ""

# 9607146e13bc473493479a7dc2b3c730
#: ../develop/addons/javascript.rst:93
msgid ""
"Use ZCML configuration directive :doc:`resourceFolder </adapt-and-"
"extend/theming/templates_css/resourcefolders>` to include static media files"
" in your add-on product"
msgstr ""

# fece7248198c46fc92c3d3cdd8f24fbb
#: ../develop/addons/javascript.rst:96
msgid ""
"Put in new Javascript via ZMI upload (you can use Page Template type) to "
"portal_skins/custom folder"
msgstr ""

# ad296def951e427f94543201b1885a15
#: ../develop/addons/javascript.rst:98
msgid "Register Javascript in portal_javascripts"
msgstr ""

# b57908dfcdea4c8e9a0b2a1c196c5632
#: ../develop/addons/javascript.rst:100
msgid ""
"Do it through-the-web using portal_javascripts ZMI user interface ...or..."
msgstr ""

# a6e45ab7cfbe49a4808c9e042c84fb01
#: ../develop/addons/javascript.rst:102
msgid ""
"Add *profiles/default/jsregistry.xml* file to describe Javascript files "
"included with your add-on product"
msgstr ""

# 21a38296f34b4033a2973a6282f90bff
#: ../develop/addons/javascript.rst:105
msgid "Executing Javascript code on page load"
msgstr ""

# ed0fc3677bfe4149b3c341e43ef11a40
#: ../develop/addons/javascript.rst:107
msgid ""
"Plone includes JQuery library which has ``ready()`` event handler to run "
"Javascript code when DOM tree loading is done (HTML is loaded, images and "
"media files are not necesssarily loaded)."
msgstr ""

# 680222007e1041a4a9b7d5a0b3c46b25
#: ../develop/addons/javascript.rst:112
msgid "Create following snippet::"
msgstr ""

# 6540dda806e743b08e0e33284d856742
#: ../develop/addons/javascript.rst:120
msgid ""
"This makes use of the facts that 1) functions passed to jQuery are executed "
"on ready; and 2) jQuery passes itself to such functions."
msgstr ""

# 9a949878b6024680bdcd4d343ce204a0
#: ../develop/addons/javascript.rst:124
msgid "Registering javascripts to portal_javascripts"
msgstr ""

# 8c29cfa5b671416aba328f21aea905fa
#: ../develop/addons/javascript.rst:126
msgid ""
"Javascript files need to be registered in order to appear in Plone's <html> "
"<head> and in the Javascript merge compositions."
msgstr ""

# 40305a6c37944243aad570f99455dde2
#: ../develop/addons/javascript.rst:129
msgid ""
"Javascripts are registered to portal_javascripts tool using "
"*profiles/default/jsregistry.xml* GenericSetup profile file. The following "
"options are available"
msgstr ""

# d741bb537529428da6533a4fd185f3f3
#: ../develop/addons/javascript.rst:132
msgid "*id* (required): URI from where the Javascript is loaded"
msgstr ""

# ed33fc553bb34cbca3a9d2381ace22c7
#: ../develop/addons/javascript.rst:134
msgid ""
"*expression* empty string or TAL condition which determines whether the file"
" is served to the user. The files with the same condition are grouped to the"
" same compression bundle. For more information, see :doc:`expressions "
"documentation </develop/plone/functionality/expressions>`."
msgstr ""

# 1c29c4f720084434b47f00b8e67992b2
#: ../develop/addons/javascript.rst:138
msgid ""
"*authenticated* (Plone 4+) is expression override, which tells to load the "
"script for authenticated users only"
msgstr ""

# 679a3d62e0e64c28ace51ece76a47aa8
#: ../develop/addons/javascript.rst:141
msgid ""
"*cookable* is merging of Javascript files allowed during the compression"
msgstr ""

# 106a6365e7ac444facb307d4fadfe977
#: ../develop/addons/javascript.rst:143
msgid "*inline* is script server as inline inside <script>...</script> tag"
msgstr ""

# 86a259603a45470b9fd8a97d4c872dcc
#: ../develop/addons/javascript.rst:145
msgid "*enabled* shortcut to disable some Javascripts"
msgstr ""

# 4de5ce453184437296d1840a5caa1ed6
#: ../develop/addons/javascript.rst:147
msgid ""
"*compression* none, safe or full. See full option list from "
"portal_javascripts."
msgstr ""

# a5e9fe6d4a7343c6b131a4962fbb79eb
#: ../develop/addons/javascript.rst:149
msgid ""
"*insert-before* and *insert-after* control the position of the Javascript "
"file in relation to other served Javascript files"
msgstr ""

# 25ca6805d4954f73ba6287e77fead203
#: ../develop/addons/javascript.rst:161
msgid "Bundles"
msgstr ""

# 56d7d73b304847c3956db73670994273
#: ../develop/addons/javascript.rst:163
msgid ""
"There are several compressed Javascript bundles served by Plone. The process"
" of compressing & merging files to different bundles is internally called "
"\"cooking\""
msgstr ""

# 65206e1fc43e40b99a5f0c23efb28c7e
#: ../develop/addons/javascript.rst:167
msgid ""
"You can examine available bundles in *portal_javascripts* Zope Management "
"Interface Tool, on *Merged Compositions* tab."
msgstr ""

# 4161fea68e2d4fe4a76d020d4bb10dda
#: ../develop/addons/javascript.rst:170
msgid "Usually the following bundles are served"
msgstr ""

# 3b2599736a104c08b6cba83a57c8f640
#: ../develop/addons/javascript.rst:172
msgid "Anonymous users (no condition)"
msgstr ""

# 48641cd822d74e3c9da37eee60396b07
#: ../develop/addons/javascript.rst:174
msgid ""
"Logged in users (condition: not: portal/portal_membership/isAnonymousUser)"
msgstr ""

# 0c193022548949c5b6bc65d48736bbb3
#: ../develop/addons/javascript.rst:176
msgid "Visual editor (TinyMCE) related Javascripts"
msgstr ""

# a8edfe8b470f49c5a9c721c817aa22a0
#: ../develop/addons/javascript.rst:179
msgid "Include Javascript on every page"
msgstr ""

# 4eefe125c36e4256955e6cab74892bfe
#: ../develop/addons/javascript.rst:181
msgid ""
"The following example includes Javascript file intended for anonymous site "
"users. It is included after toc.js so that the file ends up as the last "
"script of the compressed JS bundle which is served for all users."
msgstr ""

# bb9814877075408285f0c58610966cd9
#: ../develop/addons/javascript.rst:185
msgid ""
"The Javascript file itself is usually *yourcompany/app/static/yourjsfile.js*"
" in your :doc:`add-on product </develop/addons/paste>`."
msgstr ""

# 6f8e3210879742f2b0774d89cf292c51
#: ../develop/addons/javascript.rst:188
msgid "It is mapped to URI like::"
msgstr ""

# d699ff2d22f84b098ce5ecf4bb00deee
#: ../develop/addons/javascript.rst:192
msgid ""
"by :doc:`Zope 3 resource subsystem </adapt-and-"
"extend/theming/templates_css/resourcefolders>`."
msgstr ""

# 8b55a439c3294e6b9e2248f5bfd32de7
#: ../develop/addons/javascript.rst:194
msgid "Example ``profiles/default/jsregistry.xml`` in your add-on product."
msgstr ""

# d959dde4943245eb95a488da9b3d361c
#: ../develop/addons/javascript.rst:209
msgid ""
"If <javascript> does not have insert-after or insert-before, the script will"
" end up as the last of the Javascript registry."
msgstr ""

# 91abe5bd28ae450ab8605a97d3160529
#: ../develop/addons/javascript.rst:213
msgid "Including Javascript for authenticated users only"
msgstr ""

# cf7aba8058094cb0aaeb3c075f5b1e9d
#: ../develop/addons/javascript.rst:215
msgid ""
"The following registers two Javascript files which are aimed to edit mode "
"and authenticated users. The Javascript are added to the merge bundle and "
"compressed, so they do not increase the load time of the page. The files are"
" loaded from ``portal_skins`` (not from resource folder) and can be referred"
" by their direct filename - Plone resolves portal_skins files magically for "
"the site root and every folder."
msgstr ""

# 8ea605d305284bdfa823b57643ca68dd
#: ../develop/addons/javascript.rst:223
msgid "``jsregistry.xml``:"
msgstr ""

# 79acb2c2757a4b9a95ae7edd0848012d
#: ../develop/addons/javascript.rst:247
msgid "Including Javascripts for widgets and other special conditions"
msgstr ""

# f2e097a27bfd435d86c1caeeaedcd55c
#: ../develop/addons/javascript.rst:249
msgid ""
"Here is described a way to include Javascript for certain widgets or certain"
" pages only."
msgstr ""

# a110a54f91a641f6ba9cf5cfc945e5ba
#: ../develop/addons/javascript.rst:254
msgid ""
"Since Plone loads very heavy Javascripts for logged in users (TinyMCE), it "
"often makes sense to decrease the count of HTTP requests and just merge your"
" custom scripts with this bundle instead of trying to have fine-tuned "
"Javascript load conditions for rare cases."
msgstr ""

# b4a66d2c064041c19254c5c788a292f5
#: ../develop/addons/javascript.rst:259
msgid "Javascripts are processed through portal_javascripts"
msgstr ""

# d78376c0d4194e78bc7aaf62e715fc5a
#: ../develop/addons/javascript.rst:261
msgid ""
"A special condition is created in Python code to determine when to include "
"the script or not"
msgstr ""

# d5c30e2f5a5a4aac90ab24992e8b1ec2
#: ../develop/addons/javascript.rst:263
msgid ""
"Javascripts are served from a *static* media folder in a Plone add-on "
"utilizing Grok framework"
msgstr ""

# 0694c3e040124137b2acc510f4787cfc
#: ../develop/addons/javascript.rst:266
msgid ""
"The example here shows how to include a Javascript if the following "
"conditions are met"
msgstr ""

# e1817ad250b740b49cd01839aac4b904
#: ../develop/addons/javascript.rst:269
msgid ""
"Content type has a certain :doc:`Dexterity behavior "
"</develop/plone/content/behaviors>` applied on it"
msgstr ""

# 6e52cf4f9b55492a9c87650c072ec34e
#: ../develop/addons/javascript.rst:271
msgid "Different files are served for view and edit modes"
msgstr ""

# 0cefc4dad9b041dd8d34f94070ebf341
#: ../develop/addons/javascript.rst:275
msgid ""
"There is no easy way to currently directly check whether a certain widget "
"and widget mode is active on a particular view. Thus, we do some assumptions"
" and checks manually."
msgstr ""

# f02e1b6913d94f489644e9e5d200f396
#: ../develop/addons/javascript.rst:280
msgid "jsregistry.xml:"
msgstr ""

# 0d776a298a6b408ab2f25db92a1b472e
#: ../develop/addons/javascript.rst:308
msgid ""
"We create special conditions using :doc:`Grok "
"</develop/addons/components/grok>` views."
msgstr ""

# f725f015a10b431e85983d3a55202b18
#: ../develop/addons/javascript.rst:387
msgid "Popup overlays and forms"
msgstr ""

# 4ee3c0abbc7640eaa78d32a04f54fd7c
#: ../develop/addons/javascript.rst:389
msgid ""
"plone.app.jquerytools provides a “prepOverlay” plugin that makes it easy to "
"create popup overlays to display images or AJAX-loaded content from other "
"pages. It also handles AJAX submission of forms in popups."
msgstr ""

# f6c3b6452fd84300bf10b9dcc2b39218
#: ../develop/addons/javascript.rst:391
msgid ""
"The prepOverlay plugin is well-documented at "
"https://pypi.python.org/pypi/plone.app.jquerytools. Many usage examples are "
"available in Products/CMFPlone/skins/plone_ecmascript/popupforms.js, which "
"provides the setup for Plone 4’s standard popup forms."
msgstr ""

# 65e4c4ceba2d4f4295b0708ee1d02a7d
#: ../develop/addons/javascript.rst:394
msgid "Messages and translation"
msgstr ""

# 5ee5bf6723b647f4925e9e988c8d9471
#: ../develop/addons/javascript.rst:396
msgid ""
"JavaScript components should include as few messages as possible. Whenever "
"possible, the messages you display via JavaScript should be drawn from the "
"page."
msgstr ""

# ec8693374a3749a58fab497ad115b2be
#: ../develop/addons/javascript.rst:398
msgid ""
"If that’s not possible, it is your responsibility to assure that the "
"messages you need are translatable. Our current mechanism for doing that is "
"to include the messages via Products/CMFPlone/browser/jsvariables.py. This "
"will nearly certainly be changed."
msgstr ""

# 36650b9bac5f428da6ae37d2a0f87017
#: ../develop/addons/javascript.rst:402
msgid "Passing dynamic settings to Javascripts"
msgstr ""

# 71fe75d1fe314f248b1136bc5b8573f1
#: ../develop/addons/javascript.rst:405
msgid "Default passed in variables"
msgstr ""

# 84f763c7af334bff94536010e92db983
#: ../develop/addons/javascript.rst:407
msgid ""
"Plone passes in some variables, like ``portal_url`` to Javascript by "
"default."
msgstr ""

# 281e530b90df488f80c861fc714c3d98
#: ../develop/addons/javascript.rst:409
msgid ""
"https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/browser/jsvariables.py"
msgstr ""

# 43c483805bf54fa292d970cfdb6c594c
#: ../develop/addons/javascript.rst:413
msgid ""
"http://stackoverflow.com/questions/12530308/accessing-portal-url-in-"
"javascript-in-plone/12530378#12530378"
msgstr ""

# f975689cff1f4c3483c6db08c0ac062a
#: ../develop/addons/javascript.rst:416
msgid "Passing settings on every page"
msgstr ""

# 19c1ec6db2f945c5a4e4b18a51c317aa
#: ../develop/addons/javascript.rst:418
msgid ""
"Here is described a way to pass data from site or context object to a "
"Javascripts easily. For each page, we create a ``<script>`` section which "
"will include all the options filled in by Python code."
msgstr ""

# 8d220d49941446678e12e44766dbe942
#: ../develop/addons/javascript.rst:422
msgid ""
"We create the script tag in ``<head>`` section using a :doc:`Grok viewlet "
"</develop/plone/views/viewlets>` registered there."
msgstr ""

# 1e2fabe248f546498424e844adea69fc
#: ../develop/addons/javascript.rst:425
msgid "viewlet.py::"
msgstr ""

# 367e98216c43494a999594088f2657b6
#: ../develop/addons/javascript.rst:504
msgid "Passing settings on one page only"
msgstr ""

# 056712ffa5a5447d9209dc7e185ed8e0
#: ../develop/addons/javascript.rst:506
msgid "Here is an example like above, but is"
msgstr ""

# b6a3a489bf444a5a84ee4f2af4fb9241
#: ../develop/addons/javascript.rst:508
msgid ""
"Specific to one view and this view provides the JSON code to populate the "
"settings"
msgstr ""

# 070476fffefa411c9f0a7f2c8c221358
#: ../develop/addons/javascript.rst:510
msgid "Settings are included using METAL slots instead of viewlets"
msgstr ""

# 75f2cd3122b742038d4fb369ba3eac1c
#: ../develop/addons/javascript.rst:564
msgid "Generating Javascript dynamically"
msgstr ""

# 2d4db8082e6b496a9589893006b1265f
#: ../develop/addons/javascript.rst:566
msgid ""
"TAL template language is not suitable for non-XML generation. Use Python "
"string templates."
msgstr ""

# 9af3a157fc8a46b8b7d536bb40fa16c0
#: ../develop/addons/javascript.rst:569
msgid ""
"Don't put dynamically generated javascripts to ``portal_javascripts`` "
"registry unless you want to cache them and they do not differ by the user."
msgstr ""

# 90e9b2efe3ae4b2c9ee9eb8878b92c37
#: ../develop/addons/javascript.rst:572
msgid "For example, see ``FacebookConnectJavascriptViewlet``"
msgstr ""

# a8e7cc67f3234c69b91f0d32c06ccbc1
#: ../develop/addons/javascript.rst:574
msgid ""
"http://svn.plone.org/svn/collective/mfabrik.like/trunk/mfabrik/like/viewlets.py"
msgstr ""

# 01616e55c8914f3e97b368518e7752b0
#: ../develop/addons/javascript.rst:577
msgid "Upgrading jQuery"
msgstr ""

# c9ec2927dc054389a1ced6d89a406137
#: ../develop/addons/javascript.rst:579
msgid ""
"``jquery.js`` lives in *Products.CMFPlone* "
"``portal_skins/plone_3rdparty/jquery.js``. Plone 4.1 ships with compressed "
"jQuery 1.4.4."
msgstr ""

# bb455c24312e4396b2e1a786f0912cc0
#: ../develop/addons/javascript.rst:582
msgid ""
"Here are instructions to change jQuery version. Please note that this may "
"break Plone core functionality (tabs, overlays)."
msgstr ""

# ad604d621f444bd89d1b9624017496fe
#: ../develop/addons/javascript.rst:585
msgid ""
"These instructions also apply if you want to enable debug version (non-"
"compressed) jQuery on your site."
msgstr ""

# ba751d6b1afb493790a182415eae0c0c
#: ../develop/addons/javascript.rst:588
msgid ""
"Download new jQuery from http://docs.jquery.com/Downloading_jQuery and save "
"it to your local disk"
msgstr ""

# aa4cd2d8134f435db1d378fcbdf88537
#: ../develop/addons/javascript.rst:590
msgid "In ZMI, go to plone_3rdparty, customize jquery.js"
msgstr ""

# 5141b1e2d88148218856b99457f35e6d
#: ../develop/addons/javascript.rst:592
msgid "Upload new jQuery from your hard disk"
msgstr ""

# 45369d101ebb46c8ab7b4bae3cae0a64
#: ../develop/addons/javascript.rst:595
msgid "Having multiple jQuery versions (noConflict)"
msgstr ""

# 3e4cef0cc8b04b2a8d0d92a504d30658
#: ../develop/addons/javascript.rst:597
msgid "http://noenieto.com/blog/having-two-jquery-versions-in-one-plone"
msgstr ""

# 230a10fe8aa042ae944263809a7fb7ef
#: ../develop/addons/javascript.rst:601
msgid ""
"Loading Javascript files for certain edit views only (to be used with "
"widgets)"
msgstr ""

# 535ad9ca3a1c4f718264d0b2ec178d87
#: ../develop/addons/javascript.rst:603
msgid ""
"http://stackoverflow.com/questions/5469844/registering-a-javascript-to-be-"
"loaded-on-edit-view"
msgstr ""

# dae3f9ef9486405988f6a838f845e15c
#: ../develop/addons/javascript.rst:606
msgid "Converting page links to pop-up windows"
msgstr ""

# 3a6ef59b20864232a6433fe746941d40
#: ../develop/addons/javascript.rst:608
msgid ""
"`plone.app.jquerytools <http://plone.org/products/plone.app.jquerytools>`_ "
"can convert links, images and forms to AJAX pop-up windows. Plone 4 uses "
"this e.g. for the login box pop-up functionality."
msgstr ""

# 8d29865f26a14f039b0318968682ac53
#: ../develop/addons/javascript.rst:612
msgid ""
"Below is an example code how you can convert any of the links on your site "
"to a pop-up window."
msgstr ""

# 6497a6ebab5241ce8d6bab93594b533f
#: ../develop/addons/javascript.rst:615
msgid "Example code"
msgstr ""

# 1948a4e3c0024889a99464d5f9c96c1c
#: ../develop/addons/javascript.rst:642
msgid "AJAX-y view loading"
msgstr ""

# eae3ee78003a44469ccb5e7feb01e7b3
#: ../develop/addons/javascript.rst:645
msgid "Loading by page load"
msgstr ""

# cc8e0411dbb441f19b8a8a7dbb580708
#: ../develop/addons/javascript.rst:647
msgid ""
"Let's imagine we have this piece of synchronous page template code. The code"
" is a :doc:`view page template </develop/plone/views/browserviews>` code "
"which includes another view inside it."
msgstr ""

# 32a1dad83ecd42e989887aedff79bf23
#: ../develop/addons/javascript.rst:656
msgid ""
"To make it load the view asynchronous, to be loaded with AJAX call when the "
"page loading has been completed, you can do:"
msgstr ""

# e7413451d0014fc9b980fc0c12ae7103
#: ../develop/addons/javascript.rst:693
msgid "Loading when element becomes visible"
msgstr ""

# a9a787f2c3a3475fba01f48e5cc5fc28
#: ../develop/addons/javascript.rst:695
msgid ""
"Here is another example where more page data is lazily loaded when the user "
"scrolls down to the page and the item becomes visible."
msgstr ""

# ba785cdcf50f45019458907c1cd4b001
#: ../develop/addons/javascript.rst:723
msgid ""
"http://blog.mfabrik.com/2011/03/09/lazily-load-elements-becoming-visible-"
"using-jquery/"
msgstr ""

# c89af90bc6d747c792c76b9b31a68150
#: ../develop/addons/javascript.rst:725
msgid "http://remysharp.com/2009/01/26/element-in-view-event-plugin/"
msgstr ""

# f9afbf239cc04965844182cc3403a89b
#: ../develop/addons/javascript.rst:728
msgid "Checking if document is in WYSIWYG edit mode"
msgstr ""

# 6836c65207c5494a9872f9c5c6b0dc1b
#: ../develop/addons/javascript.rst:730
msgid ""
"WYSIWYG editor (TinyMCE) is loaded in its own <iframe>. Your UI related "
"Javascript mode might want to do some special checks for running different "
"code paths when the text is being edited."
msgstr ""

# 35bd5550732f4bb5bbacdcf6e98563a5
#: ../develop/addons/javascript.rst:748
msgid "Image hovers"
msgstr ""

# 08463ae40e324aa4bea6bfd5e8c87aa8
#: ../develop/addons/javascript.rst:750
msgid ""
"Here is a simple jQuery method to enable image roll-over effects (hover). "
"This method is suitable for content editors who can only images through "
"TinyMCE or normal upload - only naming image files specially is needed. No "
"CSS, Javascript or other knowledge needed by the person who needs to add the"
" images."
msgstr ""

# 8cc179cc9d104b02be2678f38c51c7d5
#: ../develop/addons/javascript.rst:756
msgid ""
"Just include this script on your HTML page and it will automatically scan "
"image filenames, detects image filenames with special roll-over marker "
"strings and then applies the roll-over effect on them. Roll-over images are "
"preloaded to avoid image blinking on slow connections."
msgstr ""

# 28abb2f5845145219b90c983fc1cae0b
#: ../develop/addons/javascript.rst:761
msgid "The script"
msgstr ""

# dd257b1d270d480d9afe15b882137bbb
#: ../develop/addons/javascript.rst:826
msgid "Disabling KSS"
msgstr ""

# cb6bfa74024947e7b75924462b541760
#: ../develop/addons/javascript.rst:828
msgid ""
"KSS, not used since Plone 3, may cause Javascript errors on migrated sites "
"and new browsers."
msgstr ""

# 1a4b6efdb71843fba971371c899dd971
#: ../develop/addons/javascript.rst:830
msgid "Here is ``jsregistry.xml`` snippet to get rid of KSS on your site::"
msgstr ""

# 37414a16d5ad4b518cebbc4e8f5ef40d
#: ../develop/addons/javascript_standards.rst:3
msgid "Javascript coding conventions"
msgstr ""

# c3260c79637a4627a15defc5a356a26e
#: ../develop/addons/javascript_standards.rst:7
msgid "Styleguides for writing Javascript for Plone"
msgstr ""

# 41cf7c00e54745adadcbc5cf82daf129
#: ../develop/addons/javascript_standards.rst:14
msgid ""
"Here we have collected community best practices for writing Javascript for "
"Plone. These apply for Plone core and are suggested to be applied in your "
"own add-on."
msgstr ""

# a36b3909852c49a58bcb3e1fbe24b218
#: ../develop/addons/javascript_standards.rst:18
msgid "Progressive Enhancement"
msgstr ""

# c843422016d942b9b57ff09a96c2c038
#: ../develop/addons/javascript_standards.rst:20
msgid ""
"Pages presented in Plone, including forms and form widgets, must be fully "
"usable in situations where JavaScript is not available. The availability of "
"JavaScript on the browser side should enhance the presentation of the page "
"and its content. Additionally, the structured document delivered via "
"HTML/XHTML should be semantically correct and complete in meaning."
msgstr ""

# d190e20b374c44fb9ce56cdc3c675f3b
#: ../develop/addons/javascript_standards.rst:22
msgid ""
"The best way to accomplish these goals is to: first. compose complete and "
"useful content in HTML; second, style its presentation with CSS; and third, "
"make use of JavaScript behaviors to enhance presentation and interaction."
msgstr ""

# cf28182dd75e48818fb54a9b291ddc6d
#: ../develop/addons/javascript_standards.rst:25
msgid "Unobtrusive JavaScript"
msgstr ""

# 4ea4f55b54b0453d95cd16fe76e3f24e
#: ../develop/addons/javascript_standards.rst:27
msgid ""
"JavaScript should nearly never be present in the content area of a page. "
"Typically, it will only appear via link and script elements in the head of "
"the document (or at its very end when that improved rendering). In "
"particular, HTML tags should nearly never have event-handler (e.g., onclick "
"or onsubmit) tag attributes or JavaScript in URLs. Coding JavaScript into "
"HTML tags generally makes for code that is hard to maintain and nearly "
"impossible to test."
msgstr ""

# 58730fe75fe145a18503a6a036025740
#: ../develop/addons/javascript_standards.rst:30
msgid ""
"Instead of coding event handlers in HTML attributes, use jQuery's \"bind\" "
"and its various convenience aliases like \"click\" methods to attach event "
"handlers to elements. Use \"live\" if installing behaviors that need to "
"operate in AJAX-loaded HTML."
msgstr ""

# fbfbac4fc4d748e7b14c5a6467fc2e8c
#: ../develop/addons/javascript_standards.rst:33
msgid "Coding Standards"
msgstr ""

# 01337c96c3e1422d800c79e3b576ac6c
#: ../develop/addons/javascript_standards.rst:36
msgid "JSLint"
msgstr ""

# 2114abaf56d84e719ecd0d33ade7934f
#: ../develop/addons/javascript_standards.rst:38
msgid ""
"All JavaScript components that are incorporated into the Plone core must "
"pass JSLint code quality tests. At some point in the 4.x series, this will "
"become part of Plone's continuous integration testing. JSLint has many "
"options, and it is our goal that our code pass \"The Good Parts\" tests. A "
"couple of acceptable deviations from the good parts settings are to::"
msgstr ""

# 1cd3062ea15b4d39a041ee00c9651c36
#: ../develop/addons/javascript_standards.rst:46
msgid ""
"You may set these options by including at the top of your JavaScript file::"
msgstr ""

# 6e80173a613744efabba88d28d5d7fae
#: ../develop/addons/javascript_standards.rst:52
msgid ""
"These settings are available as a file in "
"Products/CMFPlone/skins/plone_ecmascript/js-standards.js. If you use those "
"settings, you only need set the options for any deviations needed by the "
"current file. Deviations like turning off the regular-expression \".\" "
"prohibition, are perfectly reasonable when porting old code, but should be "
"avoided in new code."
msgstr ""

# 07673dbb61cb414183e39cca86b6e9c2
#: ../develop/addons/javascript_standards.rst:54
msgid ""
"A common way to execute a command-line jslint test using these options would"
" be to execute::"
msgstr ""

# e898036ad0a347f6a61122fa16b9e025
#: ../develop/addons/javascript_standards.rst:58
msgid ""
"if you were testing the \"accessibility.js\" file. JSLint is also available "
"as a plugin for most popular web code editors and can be set to test on "
"save. An example of setting up TextMate to run jslint on save: * JSLint on "
"Save"
msgstr ""

# 3073d7e36c744c4abfe673ef38537c6c
#: ../develop/addons/javascript_standards.rst:62
msgid "Strict Mode"
msgstr ""

# 7197febfcc5d46fbbc10c0f8baaa518f
#: ../develop/addons/javascript_standards.rst:64
msgid "Use strict in nested function scopy only::"
msgstr ""

# 4a7d1757aa494e3c9a49066245723919
#: ../develop/addons/javascript_standards.rst:71
msgid ""
"If you use \"strict\", you *must* test on a browser that supports it. "
"Otherwise, your code may break when it encounters such a browser."
msgstr ""

# 3ca38f1be1224e6586f011fad1f933f5
#: ../develop/addons/javascript_standards.rst:75
msgid "Globals"
msgstr ""

# f85176a602784ca5a5b12801ee1a70de
#: ../develop/addons/javascript_standards.rst:77
msgid ""
"JavaScript components should create as few as possible global variables. If "
"a component must create globals, it should only create one: a namespace "
"object with a very distinctive name. Please document your new global at the "
"top of the component file."
msgstr ""

# fd4c2ae94fc74e6b9e81f9f0e8fde5e3
#: ../develop/addons/javascript_standards.rst:80
msgid "Platform Testing"
msgstr ""

# c42f27f5d5c8435a94610b2c7aff06da
#: ../develop/addons/javascript_standards.rst:82
msgid "JavaScript for Plone core must be tested on"
msgstr ""

# 4c860bd0b4d341409769a5470a4fe13c
#: ../develop/addons/javascript_standards.rst:84
msgid "IE 7, 8, 9"
msgstr ""

# 91d766228b0d42d9b95ab0ac691beda2
#: ../develop/addons/javascript_standards.rst:86
msgid ""
"Firefox, current release and most-recent beta or rc for the next release, if"
" available"
msgstr ""

# 54a53b636e0d424ba55cd2e20ceb1f2a
#: ../develop/addons/javascript_standards.rst:88
msgid "Webkit browsers: Current"
msgstr ""

# dde6c9499206449c8631982458eb30fa
#: ../develop/addons/javascript_standards.rst:90
msgid ""
"In general, degrade gracefully to no-js behavior when a platform cannot be "
"supported. You need not support IE 6, but if you know that a feature works "
"poorly on IE 6, simply turn it off::"
msgstr ""

# d22681f54382442494155fe16807bf1d
#: ../develop/addons/javascript_standards.rst:97
msgid "Testing"
msgstr ""

# 883c6d2ff75149b7a8116778925c38d2
#: ../develop/addons/javascript_standards.rst:99
msgid ""
"As of this writing, the Plone community has not settled on standards for "
"JavaScript unit and integration testing. QUnit is (as of this writing), the "
"most common unit-testing mechanism. Selenium and Windmill are both in use "
"for unit testing."
msgstr ""

# 11502395a7d44ac5a1214027fb7335c7
#: ../develop/addons/javascript_standards.rst:102
msgid ""
"Plone 4.2 is expected to include strong recommendations for both unit and "
"integration testing, and these will be supported by our continuous "
"integration testing."
msgstr ""

# 4df080d22a3b467d87d34d36c13e0222
#: ../develop/addons/paste.rst:3
msgid "Bootstrapping Plone add-on development"
msgstr ""

# 7216f5dd7c7d45dfb6dfa6b8c6691c46
#: ../develop/addons/paste.rst:7
msgid ""
"ZopeSkel is a tool which generates a code skeleton template for your Plone "
"add-on you wish to develop."
msgstr ""

# 01c017e1ae6a4fc0b85d1504f98dc4da
#: ../develop/addons/paste.rst:15
msgid ""
"ZopeSkel provides a command-line utility and a number of templates that help"
" you to generate skeleton code for a Plone project.  Using ZopeSkel you can "
"create Plone buildouts, add-on packages and themes.  The skeleton code "
"created by ZopeSkel follows generally accepted best practices, and will get "
"you started developing for the Plone CMS."
msgstr ""

# c8e938d0aaa04a478647d143ed34249e
#: ../develop/addons/paste.rst:23
msgid "Add-on creation and installation steps"
msgstr ""

# 074ee99c5c1f4f4fa5bb543e0572f3de
#: ../develop/addons/paste.rst:25
msgid ""
"There are three steps in your add-on creation and installation procedure:"
msgstr ""

# 67d636657482421db274a76a638946b4
#: ../develop/addons/paste.rst:27
msgid ""
"Create the add-on code skeleton using ZopeSkel as instructed below. The tool"
" will provide sensible defaults for all options, so if you unsure about an "
"answer, simple accept the default."
msgstr ""

# 8b70a78a20ba49aabb402886650d5236
#: ../develop/addons/paste.rst:32
msgid ""
"Make your new add-on available in buildout as described in the installation "
"instructions below. Adding code to buildout is done only once. After this "
"you can see your package listed in the ``bin/instance`` script when you open"
" the file."
msgstr ""

# 1aff9a266b784d56beef9a2a914c15a3
#: ../develop/addons/paste.rst:38
msgid ""
"After this, Zope will load your Python and ZCML code every time Zope is "
"restarted."
msgstr ""

# 9577b7d0125b4059bb52642315af8385
#: ../develop/addons/paste.rst:42
msgid "Adding ZopeSkel to your buildout"
msgstr ""

# e464623082c04dbe9be53dcf3817abeb
#: ../develop/addons/paste.rst:44
msgid ""
"To install ZopeSkel in your buildout, add the following to your "
"``buildout.cfg`` in the appropriate places::"
msgstr ""

# f968b4a059244234b7eb267227254951
#: ../develop/addons/paste.rst:69
msgid ""
"In buildout.cfg # marks comment at the end of the line - you don't need to "
"type those"
msgstr ""

# b1c271f62d774ca189c8c85d31a32d3d
#: ../develop/addons/paste.rst:71
msgid ""
"After adding this, run buildout and it will install ZopeSkel that it "
"requires. After buildout completes, you will find the ``zopeskel`` command "
"in the ``bin`` directory of your buildout.  You can use this command to list"
" template, run them, and build the skeleton code you need to get started."
msgstr ""

# 64a82b670e45491f84300e55a891ea6a
#: ../develop/addons/paste.rst:78
msgid "To find out what templates are available, run:"
msgstr ""

# ec90738a4a9b4b939ae3ec190adbd0dd
#: ../develop/addons/paste.rst:84
msgid "To get extensive documentation on the abilities of ZopeSkel, run:"
msgstr ""

# 8f6ac7059361405ea053dac0b569dddd
# 5060f991a0b94043a7edcc4bf5d25144
# 7df09a351efd48c8af748acdf42f99d3
# 2d6035b8d34c41e3b01526e34a8f2387
#: ../develop/addons/paste.rst:91 ../develop/plone-coredev/issues.rst:2
#: ../develop/plone-coredev/pt_BR/issues.rst:2
#: ../develop/plone/content/creating.rst:553
msgid "Troubleshooting"
msgstr ""

# c1626117e1734914966b1eb6abe18d64
#: ../develop/addons/paste.rst:93
msgid ""
"If you get any exceptions running this command see :doc:`troubleshooting "
"</manage/troubleshooting/exceptions>`. If self-service help doesn't get you "
"anywhere `file issues on Github "
"<https://github.com/collective/ZopeSkel/issues>`_."
msgstr ""

# 0d84f5d16fec43a99d4697407b9084a5
#: ../develop/addons/paste.rst:100
msgid ""
"If you are migrating from a version of ZopeSkel prior to 3.0, you may need "
"to remove the old ZopeSkel egg before you begin."
msgstr ""

# 409712c3b131468f816e475c34186ad5
#: ../develop/addons/paste.rst:106
msgid "ZopeSkel Templates"
msgstr ""

# 6e96f036a1cb45779565eb659cfe4818
#: ../develop/addons/paste.rst:110
msgid ""
"The templates listed below may not be the only ones available when you "
"install ZopeSkel. New templates are being developed actively."
msgstr ""

# 2c49a07bbec64c558147d0ce06b2f2b2
#: ../develop/addons/paste.rst:116
msgid "``archetypes``"
msgstr ""

# 4b27992cd272462c9cad13692bea5b0f
#: ../develop/addons/paste.rst:115
msgid ""
"Creates a package skeleton for :doc:`Archetypes "
"</develop/plone/content/archetypes/index>` based content types."
msgstr ""

# 9c8122130b4d4d3884de4ec6ac29d338
#: ../develop/addons/paste.rst:119
msgid "``dexterity``"
msgstr ""

# 49d2d98de8424ccf92ce0f0c3812abae
#: ../develop/addons/paste.rst:119
msgid "Creates a package for developing Dexterity content types."
msgstr ""

# 2816f164e87f43a4a69719c0f57d6329
#: ../develop/addons/paste.rst:124
msgid "``plone_basic``"
msgstr ""

# 127a8ba1ae7a4bd1968d8341314b3c5f
#: ../develop/addons/paste.rst:122
msgid ""
"Creates a basic skeleton good for general Plone add-on packages. Minimal and"
" clean.  You can use this package to set up views, forms, portlets, and many"
" other add-on features."
msgstr ""

# 1d455b68a41a4c60842eda88a2987522
#: ../develop/addons/paste.rst:128
msgid "``plone3_theme``"
msgstr ""

# 69f05784d5964b52b28d13f6e55dd94e
#: ../develop/addons/paste.rst:127
msgid ""
"Creates a basic skeleton good for creating old style theme for Plone (views,"
" viewlets and so on)"
msgstr ""

# 95353d9c35cb494d9a17054adc641a5e
#: ../develop/addons/paste.rst:134
msgid "``plone_nested``"
msgstr ""

# 5877d1d494cf4d668174d334fd6ec3ea
#: ../develop/addons/paste.rst:131
msgid ""
"Creates a nested namespace package with the same basic skeleton as "
"``plone_basic``.  This is generally used for packages that are meant to be "
"part of a set, like ``collective.blog.feeds``, "
"``collective.formwidget.autocomplete`` or ``collective.geo.mapwidget``."
msgstr ""

# 4bb63ca6de1c436793e9d960a6b02bcc
#: ../develop/addons/paste.rst:137
msgid "Creating an add-on product skeleton"
msgstr ""

# 4d13777ba4804b6e8a8a9150999c3250
#: ../develop/addons/paste.rst:139
msgid ""
"After you have followed the steps above how include ZopeSkel to your "
"buildout, you can create your first add-on."
msgstr ""

# 4fffb6c9314c44f29878ce22c9da6144
#: ../develop/addons/paste.rst:142
msgid "To create an Archetypes-based content types package:"
msgstr ""

# 7327a6725303404bbd14d209acbaa997
#: ../develop/addons/paste.rst:155
msgid ""
"Now it will ask you a series of question for the add-on properties. After "
"this ``yourcompany.productname`` folder is created with prepopulated "
"subfolders and files."
msgstr ""

# e57b6529fe324cc6b030c947d5e0c1d7
#: ../develop/addons/paste.rst:160
msgid ""
"If you are unsure about questions, you may type ``?`` to get more "
"information. You can also just hit enter to accept the default value. These "
"are sensible for most cases."
msgstr ""

# b559b117f2c042569b46770430bd4882
#: ../develop/addons/paste.rst:166
msgid ""
"After answering the questions, you'll have a new python package in the "
"``src`` directory of your buildout. To begin using this code, you'll need to"
" include the newly created package in your ``buildout.cfg``::"
msgstr ""

# 72226e62170f419a88fb434b105454f9
#: ../develop/addons/paste.rst:177
msgid "Rerun buildout to pick up the new package."
msgstr ""

# 308b88238ae245f7a6572e4a60556377
#: ../develop/addons/paste.rst:179
msgid ""
":doc:`Restart Plone in foreground mode </manage/troubleshooting/basic>`. If "
"your new code files contain errors it usually fails at this point with a "
":doc:`Python traceback </manage/troubleshooting/exceptions>`. This traceback"
" will contain valuable information about what went wrong, and will be the "
"first thing anyone will ask for if you seek help."
msgstr ""

# 0faf18f2948645e5965b7eb3866a45b9
#: ../develop/addons/paste.rst:185
msgid ""
"Once Plone has started, log in as admin and go to :guilabel:`Site Setup` > "
":guilabel:`Add-ons`. If your package has a ``GenericSetup`` profile, you "
"should see your add-on in the list of available add-ons at the top of the "
"page."
msgstr ""

# 080ce7c7fc1b49db93fe15ac10dc17f3
# e27459f550dd4cb6ab64cad9ff83f94c
#: ../develop/addons/paste.rst:191
#: ../develop/plone/misc/paster_templates.rst:233
msgid "Local commands"
msgstr ""

# dc682a0694424ea1834898d0c53c856b
#: ../develop/addons/paste.rst:193
msgid ""
"Besides project templates, ZopeSkel allows templates to define **local "
"commands**. Local commands are context-aware commands that allow you to add "
"more functionality to an existing project generated by ZopeSkel."
msgstr ""

# a67083489de24b57a506f610960a0a85
#: ../develop/addons/paste.rst:197
msgid ""
"Examples of the kind of Plone functionality you can add with local commands:"
msgstr ""

# 52701f0b7df546cca84f46c953ded00e
#: ../develop/addons/paste.rst:199
msgid "Content types inside your add-on."
msgstr ""

# 0b05eef2f7574e55b62e8d37082e73ea
#: ../develop/addons/paste.rst:200
msgid "Schemas for your content types."
msgstr ""

# 6e0707c39c8f438ca75d557712a4304c
#: ../develop/addons/paste.rst:201
msgid "Browser views"
msgstr ""

# 25dc66d5db71458bb4bd1ce7614df1b9
#: ../develop/addons/paste.rst:202
msgid ""
"Browser layers (to allow you to isolate add-on code to sites where your "
"package is activated)"
msgstr ""

# 898240ea698f4ec78ab092251a3fd4c8
# ca64e54aa5844158a612d1efb85cc923
# ca8fcf74a1824837ad1e83dad4cb77c0
# cf8320c563c5429987c887803211d2ed
#: ../develop/addons/paste.rst:205
#: ../develop/plone/content/dynamic_views.rst:23
#: ../develop/plone/content/index.rst:18
#: ../develop/plone/getstarted/index.rst:151
msgid "etc."
msgstr ""

# 3e99cfb44dbb4a0881e1ef55d1c1b91a
#: ../develop/addons/paste.rst:209
msgid ""
"Local commands work only with paster command run from buildout bin/ "
"directory. Do not try to run local commands with system-wide paster command."
msgstr ""

# 605fff5295a84c00a20513198315b12b
#: ../develop/addons/paste.rst:214
msgid ""
"Local commands are not available until your egg is registered as development"
" egg in your buildout, you have run buildout and you use paster command "
"provided by buildout."
msgstr ""

# 2274f454d5f146fcb0bfd3de1f4d6501
#: ../develop/addons/paste.rst:218
msgid ""
"If you follow the instructions below and do not see an ``add`` local "
"command, please verify that your package has been properly added to your "
"buildout and that buildout has been re-run afterwards."
msgstr ""

# c4158bbe3b5e4c9c954b509aa668d1ac
#: ../develop/addons/paste.rst:226
msgid "Adding a Content Type to your package"
msgstr ""

# 571513b26835434dbc204ee5238d41e2
#: ../develop/addons/paste.rst:228
msgid ""
"In this example we will continue ``yourcompany.productname`` development and"
" add our first Archetypes-based content type."
msgstr ""

# b4231e9e720f4a7aad889b0a4fa10e71
#: ../develop/addons/paste.rst:231
msgid "Example of creating a content type:"
msgstr ""

# d1b6023043ca43ddadb0f99bac56ff70
#: ../develop/addons/paste.rst:240
msgid ""
"You must create the ``src`` folder **inside** your package. Otherwise the "
"``paster add`` command cannot work."
msgstr ""

# 6bf1ebb616654be3897da3322fdd5a44
#: ../develop/addons/paste.rst:243
msgid "To list the local commands available to your package, type:"
msgstr ""

# 02ac631ad2d1446faf46bc77f8713bc8
#: ../develop/addons/paste.rst:249
msgid ""
"This will display local commands that will work for the package you have "
"created. Different package types have different local commands. Next you can"
" use the ``paster add`` local command to add new functionality to your "
"existing code."
msgstr ""

# fdc7810296444358989a5314f75ef448
#: ../develop/addons/paste.rst:255
msgid "For example, to add a special content type for managing lectures:"
msgstr ""

# 050ee210fbdb4a238124b930a4610caf
#: ../develop/addons/paste.rst:261
msgid ""
"After the content type is added, you can add schema fields for the type:"
msgstr ""

# 7fdbfe6da74b4bccb9fd6e9efc276895
#: ../develop/addons/paste.rst:269
msgid ""
"New content types are added to Plone using GenericSetup. GenericSetup "
"profiles are run when an add-on product is **activated**. To see the content"
" type you create, you'll need to restart Plone **and** reinstall the add-on."
msgstr ""

# b4f930d71bed415f964f45810bde4955
#: ../develop/addons/paste.rst:275
msgid "Site setup and Add-on installation"
msgstr ""

# 2df7b543fd1a41e081adf54ae0de02e3
#: ../develop/addons/paste.rst:277
msgid ""
"If you want your add-on to be 'activated' by going to the Plone Add-on "
"control panel, you will need to have a :doc:`GenericSetup profile "
"</develop/addons/components/genericsetup>`. ZopeSkel can set this up for "
"you, just say 'Yes' if you are asked. Some templates require a profile, and "
"will not ask. This profile modifies the site database **every time you run "
"Add-on installer your site setup**. If you make changes to your profile, you"
" need to **re-run the installation of your package** to pick up those "
"changes."
msgstr ""

# 5f5d94e45464437191b2174e438e8b0f
#: ../develop/addons/paste.rst:287
msgid ""
"A GenericSetup profile is just a bunch of XML files with information that is"
" written to the database when the add-on is installed. This is independent "
"of Python and ZCML code, and GenericSetup XML can be updated without "
"restarting the site."
msgstr ""

# 8856b4a4fbf14f9ba12b8788ad911bd2
#: ../develop/addons/paste.rst:292
msgid ""
"Not all add-ons provide GenericSetup profiles. If an add-on does not modify "
"the site database in any way, e.g. they provide only new :doc:`views "
"</develop/plone/views/browserviews>`, it may not require one. But a "
"GenericSetup profile is required in order to have the add-on appear in the "
"list of 'available add-ons' in the Plone Add-ons control panel."
msgstr ""

# 835e9008f6eb4f0db2376e3c7b4a0cfa
#: ../develop/addons/paste.rst:301
msgid "In-depth background information"
msgstr ""

# 5399222b215b4d9681b74e19fba0b211
#: ../develop/addons/paste.rst:304
msgid "How paster local commands work"
msgstr ""

# c5e88c1ed0ed402d94f227c859e3601b
#: ../develop/addons/paste.rst:306
msgid ""
"Paster reads ``setup.py``. If it finds a ``paster_plugins`` section there, "
"it will look for local commands."
msgstr ""

# 6670cfc4af7e4000a2ae83e51f7a4409
#: ../develop/addons/paste.rst:309
msgid ""
"This allows paster to know that packages created by that template provide "
"local commands defined by the templer system which underlies ZopeSkel."
msgstr ""

# 7895c3109e52485896725bf49d158b8a
#: ../develop/addons/paste.rst:313
msgid ""
":doc:`More about paster templates </develop/plone/misc/paster_templates>`."
msgstr ""

# f7b66fbc52f94844af93ddb22361502b
#: ../develop/addons/paste.rst:316
msgid "setup.py install_requires"
msgstr ""

# 54301cca1f4c479b865dddc34681d32b
#: ../develop/addons/paste.rst:318
msgid ""
"Python modules can specify dependencies to other modules by using the "
"``install_requires`` section in ``setup.py``. For example, a Plone add-on "
"might read::"
msgstr ""

# 850e2c2fe6a3421abc6ff30d33c83127
#: ../develop/addons/paste.rst:328
msgid ""
"This means that when you use setuptools/buildout/pip/whatever Python package"
" installation tool to install your package from the `Python Package Index "
"(PyPi) <https://pypi.python.org/pypi>`_ it will also automatically install "
"Python packages declared in ``install_requires``."
msgstr ""

# de9750d801ac4215911e67b54fe08396
#: ../develop/addons/paste.rst:335
msgid "paster and ``install_requires``"
msgstr ""

# c6ffbc23e3e945a1ad2a43cc1b2a4f55
#: ../develop/addons/paste.rst:339
msgid ""
"Never use a system-wide paster installation with local commands. This is "
"where things usually go haywire. Paster is not aware of this external Python"
" package configuration set (paster cannot see them in its ``PYTHONPATH``). "
"Also don't try to execute system-wide ``paster`` in a Python source code "
"folder containing ``setup.py``. Otherwise paster downloads all the "
"dependencies mentioned in the ``setup.py`` into that folder even though they"
" would be available in the ``eggs`` folder (which paster is not aware of)."
msgstr ""

# 914ed77fa9a64e65b8f768fe354ce2ec
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:2
msgid "Creating a package"
msgstr ""

# cb901d97668a47c1b49709de57c96764
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:4
msgid "**Giving our forms a home**"
msgstr ""

# efea0976fdd4416e9fba13a1370d203e
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:6
msgid ""
"For the purposes of this tutorial, we will create a simple package that adds"
" the necessary dependencies. If you have an existing package that requires a"
" form, you should be able to add the same dependencies. If you have read the"
" :doc:`Dexterity developer manual "
"</external/plone.app.dexterity/docs/index>`, most of this should be "
"familiar."
msgstr ""

# 3bad0a3ca2bf4d9d8d9e5137856dc968
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:11
msgid ""
"For details about creating new packages, see :doc:`Bootstrapping Plone add-"
"on development </develop/addons/paste>`."
msgstr ""

# 39045a7f374c48dd97da38f22cb8de7c
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:14
msgid "First, we create a new package:"
msgstr ""

# 3b724c01283f43a9b68a4fd97fc26dca
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:20
msgid ""
"After answering the relevant questions, we edit *setup.py* to add "
"*plone.app.z3cform* and *plone.directives.form* as dependencies. This will "
"pull in the other pre-requisites, including *plone.z3cform* and *z3c.form* "
"itself. We have also removed the *ZopeSkel* local command support, which we "
"will not need, although there is no harm in keeping it in. Finally, we have "
"added a *tests* extra to pull in *collective.testcaselayer* for our "
"integration tests."
msgstr ""

# b51c84b3a355441c9b7db714ba87434a
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:68
msgid "Next, we edit *configure.zcml* to add some boilerplate:"
msgstr ""

# 9fe6d5869d1c4035ad992c9004a2611a
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:91
msgid "This will:"
msgstr ""

# fa77493e59864c8685d2cca9c4c08199
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:93
msgid ""
"Include the configuration of the packages we have listed in the "
"*install\\_requires* line in *setup.py*. This saves us from manually "
"including them with individual ZCML *<include />* statements."
msgstr ""

# fa7073a69a5e43aea27833e991ca99dc
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:96
msgid ""
"“Grok” the package, to configure the forms we will add. See the "
":doc:`five.grok manual</develop/addons/five-grok/index>` for more details."
msgstr ""

# 378117db529c40d5a44b893c633c4213
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:98
msgid ""
"Create an installation profile that will install this package and its "
"dependencies."
msgstr ""

# 558c119646454df8a85d90271e3159a5
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:101
msgid ""
"The installation profile contains the instructions to install our package’s "
"dependencies into the Plone site. We create a *profiles/default* directory, "
"and add to it a *metadata.xml*:"
msgstr ""

# 2e9421b182174411ac984c42efaeac50
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:115
msgid ""
"We need to install *plone.app.z3cform* to ensure that our forms have the "
"proper widgets and templates available."
msgstr ""

# 25fd12c479b746b0bc07ccd09e23ca61
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:118
msgid ""
"Next, we add a *message factory* to allow the titles and descriptions in our"
" form to be translated. We’ll do this in a module *interfaces.py* at the "
"root of our package:"
msgstr ""

# 332d6a6742b748228ce7ea63383c8e76
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:127
msgid "The name of the factory should normally be the name of the package."
msgstr ""

# 61d21f6ee2064ab5908cc3ef133bd0ac
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:129
msgid ""
"Finally, we add this package to our *buildout.cfg* and re-run "
"*bin/buildout*."
msgstr ""

# 0777dee62c314baab0c61798f427f10e
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:151
msgid ""
"Obviously, we have omitted large parts of the buildout configuration here. "
"The important things to note are:"
msgstr ""

# 01dbf9ba54b84a23b5b73fb85bed680b
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:154
msgid ""
"We have included the known good set (KGS) of package versions for the latest"
" 4.x release of Plone."
msgstr ""

# f14efbf6d4a24e83ba7b4cd27dfbcb41
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:156
msgid ""
"We list the new egg as a develop egg, and make sure it is in an eggs list "
"that gets used for the Zope instance."
msgstr ""

# 4e51c2e3a3f2446ba34432be9c2c890e
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-package.rst:158
msgid ""
"We use the [*tests]* extra when listing the testable eggs in the tests "
"section. This ensures that *collective.testcaselayer* is installed for the "
"testrunner."
msgstr ""

# f35ca1a21a43428cba2345f9c90e7e20
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:2
msgid "Creating a schema"
msgstr ""

# db7b5536950f41db9772af730810490e
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:4
msgid "**The starting point for our form**"
msgstr ""

# 8d837fbeec6f45f4a4bf6225f5e0012b
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:6
msgid ""
"With the form package created and installed, we can create our form schema. "
"Whilst it is strictly not necessary yet, we will use the *Schema* interface "
"base from *plone.autoform.* This lets us use schema directives (as seen in "
"Dexterity content type schemata) to configure custom widgets, set up hidden "
"fields and so on. Later in this manual, we will cover in more detail how you"
" can perform these operations imperatively in Python code."
msgstr ""

# 0beff5ade5534f879b65dcc05ca07388
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:14
msgid ""
"The example we’ll use for this form is a pizza ordering form. We’ll build on"
" this form over the coming sections, so if you look at the example source "
"code, you may find a few extra bits. However, the basics are simple enough."
msgstr ""

# b1a7468a977e4e02812fcf0625c9550b
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:19
msgid ""
"We’ll create a module called *order.py* inside our package "
"(*example/dexterityforms/order.py)*, and add the following code to it:"
msgstr ""

# f5b69657da4a49d7a6252543bd8a8d92
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:65
msgid ""
"For now, this form is quite simple. The list of pizzas is hard-coded, and we"
" can only choose one of each type. We will make it (a little) more realistic"
" later by adding a better vocabulary, creating a custom widget for the pizza"
" order part, and improving the look and feel with a custom template."
msgstr ""

# 548803fffdb64d3eb278d67fa776e06b
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:71
msgid ""
"At the top, we have included a number of imports. Some of these pertain to "
"the form view, which will be described next. Other than that, we have simply"
" defined a schema that describes the form’s fields. The *title* and "
"*description* of each field are used as label and help text, respectively. "
"The *required* attribute can be set to *False* for optional fields. For a "
"full field and widgets reference, see the :doc:`Dexterity developer manual "
"</external/plone.app.dexterity/docs/index>`. (It is no accident that the "
"Dexterity content type fields and widgets are defined in the same manner as "
"those of a standalone form!)"
msgstr ""

# af38927d8f3740ec89c2a9e09d29ded1
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:77
msgid ""
"Also notice how all the user-facing strings are wrapped in the message "
"factory to make them translatable. The message factory is imported as *\\_*,"
" which helps tools like *gettext* extract strings for translation. If you "
"are sure your form will never need to be translated, you can skip the "
"message factory in *interfaces.py* and use plain unicode strings, i.e. "
"*u“Postcode”* instead of *\\_(u“Postcode”)*"
msgstr ""

# 8f970148792949f2b26abf0cf71576ff
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-a-schema.rst:84
msgid ""
"We are almost done with our most basic form. Before we can use the form, "
"however, we need to create a form view and define some actions (buttons). "
"That is the subject of the next section."
msgstr ""

# 41dc7cadf0cd46e881597d3298c8b60c
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:2
msgid "Creating the form view"
msgstr ""

# f132a383825f4a299e3f6cee2f95d597
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:4
msgid "**Using our schema in a form**"
msgstr ""

# ddb38680f7884402ba2c7ff081adcac7
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:6
msgid ""
"To render our form, we need to create a view that uses a *z3c.form* base "
"class. The view is registered like any other, either in ZCML or, as we will "
"show here, by using convention-over-configuration ala `five.grok`_. It is "
"then configured with the schema to use for form fields, the label (page "
"title) and description (lead-in text) to show, and actions to render as "
"buttons."
msgstr ""

# 4e9f1a4a146f4a3fa2a2c37b60ec480f
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:13
msgid "Still in *order.py*, we add the following:"
msgstr ""

# 30010e4701334564b9104356b8586247
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:72
msgid "Let’s go through this in some detail:"
msgstr ""

# 58b5f2998b88457e86fa54a0d2f343d9
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:74
msgid ""
"We derive our form view from one of the standard base classes in "
"*plone.directives.form*. The *SchemaForm* is a *plone.autoform*-based form "
"(so it configures the form fields from the schema automatically and takes "
"schema hints into account), without any of the standard actions that can be "
"found on more specialised base classes such as *SchemaAddForm* or "
"*SchemaEditForm*. It basically mirrors the *z3c.form.form.Form* base class."
msgstr ""

# 48eee70a77d340cbb87ec7b223b75410
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:81
msgid ""
"We then use the standard *five.grok* view directives to register the view: "
"*grok.name()* gives it a friendly name (used as a path segment in the URL); "
"*grok.context()* sets the type of context where the form is available (here,"
" we make it available on the Plone site root, though any interface or class "
"may be passed; to make the form available on any context, use "
"*zope.interface.Interface* as the context); *grok.require()* specifies a "
"permission which the user must have to be able to view the form (here, we "
"use the standard *zope2.View* permission). See the views section in the "
":doc:`five.grok manual </develop/addons/five-grok/index>` for more detail."
msgstr ""

# 07367a92290f4083a4e5c5ff7350508a
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:91
msgid ""
"Next, we specify the schema via the *schema* attribute. This is the "
"equivalent of assigning the *fields* attribute to a *field.Fields()* "
"instance, as you may have seen in documentation for “plain” *z3c.form. (*In "
"fact, the \"*fields = field.Fields(ISchema)*\" pattern of working is "
"supported if you use *plone.directives.form.Form* as a base class instead of"
" *SchemaForm*, but you will then be unable to use form schema hints in the "
"schema itself - more on this later.)"
msgstr ""

# 7eb840f1c09d417fba0f72ad6285edf8
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:98
msgid ""
"We set *ignoreContext* to *True*. This tells *z3c.form* not to attempt to "
"read the current value of any of the form fields from the context. The "
"default behaviour is to attempt to adapt the context (the Plone site root in"
" this case) to the schema interface and read the schema attribute value from"
" this adapter when first populating the form. This makes sense for edit "
"forms and things like control panels, but not for a standalone form like "
"this."
msgstr ""

# 6736a4393b74422f84b379db066ab5a2
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:105
msgid ""
"We then set a *label* and *description* for the form. In the standard form "
"template, these are rendered as a page header and lead-in text, "
"respectively."
msgstr ""

# ae9ac3ad514444438124d8fd20230310
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:108
msgid ""
"We override the *update()* method to set the *disable\\_border* request "
"variable. This hides the editable border when rendering the form. We then "
"call the base class version of *update()*. This is crucial for the form to "
"work! *update()* is a good place to perform any pre-work before the form "
"machinery kicks in (before calling the base class version) or post-"
"processing afterwards (after calling the base class version). See the "
"section on the form rendering lifecycle later in this manual for the gory "
"details."
msgstr ""

# 869a861cb9b34a87bf7770b210f9337b
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:116
msgid ""
"Finally, we define two actions, using the *@button.buttonAndHandler()* "
"decorator. Each action is rendered as a button (in order). The argument is a"
" (translated) string that will be used as a button label. The decorated "
"handler function will be called when the button is clicked."
msgstr ""

# 3935205eccee4633806b026153001dc7
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:122
msgid ""
"For the purposes of this test, the actual work we do with the main handler "
"is relatively contrived. However, the patterns are generally applicable."
msgstr ""

# 89e141b646fe4fb08da132c2a3e70649
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:126
msgid ""
"The second button (cancel) is the simpler of the two. It performs no "
"validation and simply redirects to the context’s default view, i.e. the "
"portal front page in this case."
msgstr ""

# 4c43a41cfdc14ecead2968ad542a0e3b
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/creating-the-form-view.rst:130
msgid ""
"The first button actually extracts the data from the form, using "
"*self.extractData()*. This returns a tuple of the form data, which has been "
"converted to the field’s underlying type by each widget (thus, the value "
"corresponding to the *Set* field contains a *set*) and any errors. If there "
"are errors, we abort, setting *self.status* to confer an error message at "
"the top of the page. Otherwise, we use the form data (here just printing the"
" output to the console - you need to run Zope in foreground mode to see "
"these messages), add a cookie-tracked status message (so that it can appear "
"on the next page) and redirect the user to the context’s default view. In "
"this case, that means the portal front page."
msgstr ""

# f35ea1e8ad1f41539821740bfd60dc12
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/index.rst:2
msgid "Creating a simple form"
msgstr ""

# 23e3a2026cd7426498368e7b652be509
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:2
msgid "Testing the form"
msgstr ""

# 22916c50ff23411da1be59d6e1f74eea
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:4
msgid "**Seeing the form in action**"
msgstr ""

# 6b4d5d88865c49aabb10049a30ef86be
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:6
msgid ""
"The schema and (grokked) form view is all that’s needed to create the first "
"iteration of the form. We can now install our new package and test the form."
msgstr ""

# a5132179e9e74fb49ac9d3be0eae09fb
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:10
msgid ""
"First, we make sure that we have run *bin/buildout* so that the new package "
"is available to the Zope instance script. We then start up Zope in "
"foreground mode:"
msgstr ""

# 7efd0f742d8f4a4bb6563089291596fd
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:18
msgid ""
"Next, we create or go to a Plone site, and install the new *Example forms* "
"product via the new Plone site creation form or the Add-ons control panel. "
"This should also install the product called *Plone z3c.form support* (from "
"the *plone.app.z3cform* package) as a dependency."
msgstr ""

# 676dddf33200434fac5d9fbbe0fcd0a3
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:24
msgid ""
"We haven’t created any links to the form yet (though you could easily do so "
"in a content item or portlet by inserting a manually-entered URL), but the "
"form can be visited by going to the *@@order-pizza* view on the Plone site "
"root, e.g.:"
msgstr ""

# 4d109b5a83584a3c9031364c77d439a3
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:29
msgid "*http://localhost:8080/Plone/@@order-pizza*"
msgstr ""

# 9481b8d129a2433797a36ccde2fbd8a2
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:31
msgid "It should look something like this:"
msgstr ""

# 85f1856df0b745ffb61be9736750e7a8
#: ../develop/addons/schema-driven-forms/creating-a-simple-form/testing-the-form.rst:37
msgid ""
"Try to fill in the form and use the two buttons. You should see the "
"validation (both on-the-fly and after submit if you ignore the on-the-fly "
"warnings), as well a message printed to the console if a valid form is "
"submitted when clicking the *Order* button."
msgstr ""

# 3888b6c2cc5a4d4390cdf2cd0be51f98
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:2
msgid "Actions (buttons)"
msgstr ""

# f37aa61ab9314772af24680b7982fb75
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:4
msgid "**Defining form buttons and executing code when they are clicked**"
msgstr ""

# 6f95d7cbdde243e883f199e184bd3f9f
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:6
msgid ""
"*z3c.form* defines a rich framework for defining, processing and executing "
"*actions*, an abstraction of the “outcome” of a form. Actions are not "
"necessarily related to form buttons, but for the vast majority of use cases,"
" we can think of forms buttons as a special type of widget that represents "
"an underlying action. Such “button actions” are usually the only type of "
"action we will ever use. Actions are nearly always associated with a handler"
" method, which will be called by the framework when a form was submitted in "
"response to a click of a particular button."
msgstr ""

# 46e8157af4e34134885b300574e345d8
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:15
msgid ""
"The usual way to define actions and buttons is to use the "
"*@button.buttonAndHandler()* decorator. This takes as a minimum the button "
"title as an argument. We have already seen two examples of this in our pizza"
" order form:"
msgstr ""

# 5d7a5c81e35541e1a8c5d79aa59812f2
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:30
msgid ""
"The name of the method is not particularly important, so long as it is "
"unique. The body of the handler function may react to the button however is "
"appropriate for the form’s use case. It may perform a redirect or update "
"form properties prior to re-rendering of the form. It should not return "
"anything. Use the *self.extractData()* helper to return a tuple of the "
"form’s submitted data and any errors, as shown in the preceding examples."
msgstr ""

# 8c77c4dddb1b4e688bc6040317131d8e
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:38
msgid ""
"The *action* argument is the action that was executed. We normally ignore "
"this, but it may be introspected to find out more about the action. The "
"*isExecuted()* method can be used to determine if the corresponding button "
"was indeed clicked, and would normally be *True* within any action handler "
"that is called by the framework. The *title* attribute contains the button "
"title as shown to the user."
msgstr ""

# c8410a0066f44d62947703595764f33c
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:46
msgid "Access keys"
msgstr ""

# 989fbaa0b53c4859b33427123162d10c
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:48
msgid ""
"To define a HTML access key for a button, use the *accessKey* keyword "
"argument:"
msgstr ""

# 276c30c71e824eadafff0cb256ed3b14
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:58
msgid "Conditional actions"
msgstr ""

# 7c3b4d230c2343199b38df434a707314
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:60
msgid ""
"If a button should only be shown in some cases, we can use the *condition* "
"keyword argument, passing a function that takes as its only parameter the "
"form to which the button belongs. If this does not return *True*, the button"
" will be omitted from the form:"
msgstr ""

# d9b4a3555aa74abaab2db17fbf38ba26
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:85
msgid "Updating button properties"
msgstr ""

# 1f7279a53bdf47b3a02bc65d23633752
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:87
msgid ""
"As with regular widgets, it is sometimes useful to set properties on buttons"
" after they have been instantiated by *z3c.form*. One common requirement is "
"to add a CSS class to the button. The standard edit form "
"in*plone.directives.form* does this, for example, to add Plone’s standard "
"CSS classes. The usual approach is to override *updateActions()*, which is "
"called during the form update cycle:"
msgstr ""

# 3bc28a7c7d4f45638bd585d1ebbc316e
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:101
msgid ""
"Notice how we call the base class version first to ensure the actions have "
"been properly set up. Also bear in mind that if a button is conditional, it "
"may not be in *self.actions* at all."
msgstr ""

# fab9aaa961ef4aefa0dcad4629170f5b
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/actions.rst:105
msgid ""
"Buttons are really just HTML input widgets, so you can set other properties "
"too, including attributes like onclick or ondblclick to install client-side "
"JavaScript event handlers."
msgstr ""

# 123258b07cd9489fbaf8907b509809b6
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:2
msgid "Fieldsets"
msgstr ""

# fd630be602a84e4daef1ffa8e5d387c1
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:4
msgid "**Breaking forms into multiple fieldsets**"
msgstr ""

# d009a349dfd24128aafa90916a54de69
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:6
msgid ""
"*z3c.form* supports the grouping of form fields into what is known as "
"*groups*. A form class may mix in *z3c.form.group.GroupForm* to gain support"
" for groups, setting the *groups* variable to a list of *Group* subclasses. "
"The *Group* base class behaves much like the *Form* base class, but is used "
"only for grouping fields, and cannot have actions."
msgstr ""

# a7e6b31cf5734fcc8130293f94485c6d
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:12
msgid ""
"In Plone, groups are represented as fieldsets. The standard templates make "
"these look like dynamic tabs, much like those we can find in the edit forms "
"for most Plone content. For this reason, *plone.supermodel* provides a "
"directive called *model.fieldset()*, which can be used to create fieldsets."
msgstr ""

# e8aff7dfa5234ce3ab5fb49bdd4b8b95
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:20
msgid ""
"The *z3c.form* *Group* idiom is still supported, and can be mixed with the "
"more declarative *model.fieldset()* approach. However, the latter is usually"
" easier to use."
msgstr ""

# 6fccc174a5274902bae078c70a9ad535
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:25
msgid ""
"To illustrate fieldsets, let’s give customers the option to leave feedback "
"on our pizza ordering form. To keep our main form short, we will put this in"
" a separate fieldset. Note that there is still only one set of submit "
"buttons, i.e. all fieldsets are submitted at once. This is purely for "
"aesthetic effect."
msgstr ""

# 370c7ed1d4c64409a0d246e28056abfe
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:106
msgid ""
"Since this approach uses form schema hints, the schema must derive from "
"*model.Schema* and the form base class must extend "
"*plone.autoform.AutoExtensibleForm*. In our example, we are using "
"*SchemaForm*, a subclass of AutoExtensibleForm."
msgstr ""

# f4377116e77942ed85d22648c529c1a7
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:110
msgid ""
"Above, we have declared a single fieldset, and listed the fields within it. "
"Those fields not explicitly associated with a fieldset end up in the "
"“default” fieldset. We also set a fieldset name and label. The label is "
"optional."
msgstr ""

# 2672507e3190465e82b7d849e2d101ef
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/fieldsets.rst:115
msgid ""
"It is possible to use the same fieldset name multiple times in the same "
"form. This is often the case when we use the *additional\\_schemata* "
"property to set secondary schemata for our form. In this case, the *label* "
"from the first *fieldset* directive encountered will be used."
msgstr ""

# 6a69c9554d4241e0afafa8346ad3ee7c
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/index.rst:2
msgid "Customising form behaviour"
msgstr ""

# fd644ddffbe143c29033438adacd9a3f
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:2
msgid "Validation"
msgstr ""

# 4c4f164bcc5142b0a1c7571355ed2a31
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:4
msgid "**How to validate a form prior to processing**"
msgstr ""

# d282a86c5acd45bda04fbd985749f88f
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:6
msgid ""
"All forms apply some form of validation. In *z3c.form,* validators can be "
"executed in action handlers. If the validation fails, the action handler can"
" choose how to proceed. For “submit” type buttons, that typically means "
"showing error messages next to the relevant form fields. For “cancel” type "
"buttons, the validation is normally skipped entirely."
msgstr ""

# f53f75e8b5a445c39370b4141ca42de6
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:12
msgid ""
"Form validation takes two forms: field-level validation, pertaining to the "
"value of an individual field, and form-level validation, pertaining to the "
"form as a whole. Form-level validation is less common, but can be useful if "
"fields have complex inter-dependencies."
msgstr ""

# 46c10d43f71a46d0816efb0f66d9260f
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:18
msgid "Field-level validation"
msgstr ""

# dcd3545f0e0f435785d6ef5ab9998316
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:20
msgid ""
"The simplest field-level validation is managed by the fields themselves. All"
" fields support a *required* attribute, defaulting to *True*. The default "
"field validator will return an error if a required field is not filled in. "
"Some fields also support more specific properties that affect validation:"
msgstr ""

# f86307c769b34c3b89a0af03ad0798a3
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:26
msgid ""
"Text fields like *Bytes, BytesLine, ASCII, ASCIILine, Text*and *TextLine*, "
"as well as sequence fields like *Tuple, List, Set,**Frozenset* and *Dict* "
"all support two properties, *min\\_length* and *max\\_length*, which can be "
"set to control the minimum and maximum allowable length of the field’s "
"value."
msgstr ""

# 49618154d2ba4bd697ca7f4bdf791091
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:31
msgid ""
"Numeric fields like *Int, Float* and *Decimal*, as well as temporal fields "
"like *Date*, *Datetime* and *Timedelta* all support two properties, *min* "
"and *max*, setting minimum and maximum (inclusive) allowable values. In this"
" case, the min/max value needs to be of the same type as field, so for an "
"*Int* field, the value of this property is an integer, whereas for a "
"*Datetime* field, it is a Python *datetime* object."
msgstr ""

# 6c5546531fb4489692cd6be25b4858c1
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:38
msgid ""
"A *Choice* field only allows values in a particular vocabulary. We will "
"cover vocabularies in the next section."
msgstr ""

# 875e5ebfbbd64e21beae2d4fe509bda6
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:42
msgid "Constraints"
msgstr ""

# 90bbf6c9ca9c412683e707bb2ee03246
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:44
msgid ""
"If you require more specific validation, and you have control over the "
"schema, you can specify a *constraint* function. This will be passed the "
"submitted value (which is converted to a value appropriate for the field, so"
" that e.g. a *List* field is passed a list). If the value is acceptable, the"
" function should return *True*. If not, it should raise a "
"*zope.schema.Invalid* exception or a derivative (returning *False* will also"
" result in an error, but one without a meaningful error message)."
msgstr ""

# 3e652c41cbac4a58adeb601174e38c92
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:52
msgid ""
"Here is the order form schema again, this time with a constraint function:"
msgstr ""

# 8afecf4eb85747a096650594ec8b5c15
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:106
msgid ""
"Notice how the *postcodeConstraint()*function is passed a value (a unicode "
"string in this case, since the field is a *TextLine*), which we validate. If"
" we consider the value to be invalid, we raise an *Invalid* exception, with "
"the error message passed as the exception argument. Otherwise, we return "
"*True*."
msgstr ""

# 257a9a9ecd9a43fcae49539581f638f3
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:113
msgid "Field widget validators"
msgstr ""

# 6fe2df68e5424ed5905572c8956480c9
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:115
msgid ""
"Constraints are relatively easy to write, but they have two potential "
"drawbacks: First of all, they require that we change the underlying "
"interface. This is no problem if the interface exists only for the form, but"
" could be a problem if it is used in other contexts as well. Second, if we "
"want to re-use a validator for multiple forms, we would need to modify "
"multiple schemata."
msgstr ""

# 530b1cbdf5f24369a05b63aa2ca29f50
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:122
msgid ""
"z3c.form’s field widget validators address these shortcomings. These are "
"specific to the form; by contrast, constraints are a feature of "
"*zope.interface* interfaces and apply in other scenarios where interfaces "
"are used as well. *plone.directives.form* provides a convenience decorator "
"for creating simple field validators."
msgstr ""

# cd65f9359eb6470785557134952f575b
# 021b36ad608545f2876e86c9b89f89bd
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:128
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:273
msgid "For example:"
msgstr ""

# c66d18e37dae4e99ac298dbe5580a908
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:164
msgid ""
"The *@form.validator()* decorator registers a validator adapter. When the "
"validation is invoked, the decorated function will be called with the "
"field’s value as an argument and given an opportunity to raise a validation "
"error, much like the constraint above. Again like the constraint, the "
"default validator is called first, so things like the required flag and "
"indeed any custom constraint are processed first."
msgstr ""

# 3952e7e949cf44dc88115ae37ace906a
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:171
msgid ""
"The *@form.validator()* decorator can take keyword arguments to make the "
"validator more specific or more generic. The valid values are:"
msgstr ""

# 5ce535757a3747babc5dbaff3b13e9f0
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:175
msgid "context"
msgstr ""

# 4e232f64f54348258b7c93406ee56f38
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:175
msgid ""
"The form’s context, typically an interface. This allows a validator to be "
"invoked only on a particular type of content object."
msgstr ""

# 522d182914e24061bb8797c898dda6cb
# 3f37896b14ba49c0bc4eb706ec934210
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:178
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:76
msgid "request"
msgstr ""

# fd52394ca4824b6c9a2a65fce2a35efd
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:178
msgid "The form’s request. Normally, this is used to specify a browser layer."
msgstr ""

# b1e9b3f570514e6f93c98d0f516e5271
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:182
msgid "view"
msgstr ""

# 766bbee7b36143a4891806b28e3a7856
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:181
msgid ""
"The form view itself. This allows a validator to be invoked for a particular"
" type of form. As with the other options, we can pass either a class or an "
"interface."
msgstr ""

# 7a77a69340c84c769e69a8dd8e7d404f
# d3c67e086a4d4ae3944cad815bfb3d0b
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:185
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:82
msgid "field"
msgstr ""

# ddac59ef41164f1c87482053d931ffa6
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:185
msgid ""
"A field instance, as illustrated above, or a field *type*, e.g. an interface"
" like *zope.schema.IInt*."
msgstr ""

# 84d43a94757843c187e3505eca593327
# c318521c029b47e7826252f771ba1e37
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:188
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:78
msgid "widget"
msgstr ""

# 8471a56cf1ca4537b0dd6234a51948e1
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:188
msgid "The widget being used for the field"
msgstr ""

# 5bd740dc46124fbb8f6ca183202a1baf
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:190
msgid ""
"It is important to realise that if we don’t specify the *field* "
"discriminator, or if we pass a field type instead of an instance, the "
"validator will be used for all fields in the form (of the given type). Also "
"note how we had to define the constraint function before the form schema "
"interface (since it was referenced in the schema itself), but we define this"
" validator after the schema and form, since here we need the interface to "
"have been defined before we use it."
msgstr ""

# 33892ff2ce7140dcac43ce795f439453
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:199
msgid "Advanced field widget validators"
msgstr ""

# 50f000cc91d146249c3a2f5f9e976735
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:201
msgid ""
"z3c.form validators are in fact a little more powerful than what we have "
"seen above. A validator is registered as a multi-adapter providing "
"*z3c.form.interfaces.IValidator* and adapting the objects *(context, "
"request, view, field, widget)*, corresponding to the discriminants seen "
"above. You may wish to register an adapter directly instead of using the "
"*@form.validator()* decorator if you:"
msgstr ""

# 3c2b8a4cd7004c2da6724458a96bdb03
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:208
msgid ""
"want to skip the default validation of field properties like *required* or "
"*min*/*max*"
msgstr ""

# 0844f16d083d43a08a54eaad01264f1e
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:210
msgid ""
"need to access the context, request, form, field and/or widget instances to "
"validate the value"
msgstr ""

# 6fc7c55d04904bf9ae58311279a19183
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:213
msgid ""
"We won’t show a full example here, but as an outline, consider the following"
" code snippet:"
msgstr ""

# 7a9686bfad4343a3a60358db33da0d3d
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:236
msgid ""
"This registers an adapter, extending the SimpleFieldValidator base class, "
"and calling the superclass version of validate() to gain the default "
"validation logic. In the validate() method, we can use variables like "
"self.context, self.request, self.view, self.field and self.widget to access "
"the adapted objects. The WidgetValidatorDiscriminators class takes care of "
"preparing the adapter discriminators. It takes the same keyword arguments as"
" @form.validator() seen above."
msgstr ""

# 33796451465846fb954bbd00e4795c2c
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:245
msgid "Form-level validation"
msgstr ""

# 6c259995333441b5a8072cd76462c80b
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:247
msgid ""
"Form level validation is less common than field-level validation, but is "
"useful if your fields are inter-dependent in any ways. As with field-level "
"validation, there are two options:"
msgstr ""

# d41ee3718ced49feb1c133c14e53b5a7
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:251
msgid ""
"Invariants are specified at the interface level. As such, they are analogous"
" to constraints."
msgstr ""

# 798be943486d471fac6fb18b3e5e8eee
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:253
msgid ""
"Widget manager validators are standalone adapters that are specific to "
"*z3c.form*. As such, they are analogous to field widget validators."
msgstr ""

# fd4f1e6db50c44139bf010e62dea2084
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:258
msgid "Invariants"
msgstr ""

# 22031b94a3c14322b5cd84c3bcf8f512
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:260
msgid ""
"Invariants work much like constraints, in that they are called during the "
"form validation cycle and may raise *Invalid* exceptions to indicate a "
"validation problem. Because they are not tied to fields specifically, an "
"error resulting from an invariant check is displayed at the top of the form."
msgstr ""

# aab5b0e7bf6c4ef3adb131f7e59a83ba
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:266
msgid ""
"Invariants are written as functions inside the interface definition, "
"decorated with the *zope.interface.invariant* decorator. They are passed a "
"data object that provides the schema interface. In the case of a *z3c.form* "
"form, this is actually a special object that provides the values submitted "
"in the request being validated, rather than an actual persistent object."
msgstr ""

# 0feae7f46d314c5fbdc902395bf539f4
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:327
msgid ""
"Here we have defined a single invariant, although there is no limit to the "
"number of invariants that you can use."
msgstr ""

# a601dad91121438db88ec12ea45c6cf4
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:331
msgid "Widget manager validators"
msgstr ""

# 1ced2404a0b3479c935083f9c53ff30f
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:333
msgid ""
"Invariants have most of the same benefits and draw-backs as constraints: "
"they are easy to write, but require modifications to the schema interface, "
"and cannot be generalised beyond the interface. Not surprisingly therefore, "
"*z3c.form* provides another option, in the form of a widget manager "
"validator. This is a multi-adapter for *(context, request, view, schema, "
"widget manager*) providing *z3c.form.interfaces.IManagerValidator*. The "
"default simply checks invariants, although you can register your own "
"override."
msgstr ""

# cde80799c2ca479290ac40963b3add31
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:342
msgid ""
"That said, overriding the widget manager validator is not particularly "
"common, because if you need full-form validation and you don’t want to use "
"invariants, it is normally easier to place validation in the action handler,"
" as we will see next."
msgstr ""

# 381f67c1b18149448e3ebcf229a2d4e3
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:348
msgid "Invoking validators"
msgstr ""

# faca1b1f4aa541b99ab3e886093c351a
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:350
msgid ""
"Unlike some of the earlier form libraries, *z3c.form* does not automatically"
" invoke validators on every form submit. This is actually a good thing, "
"because it makes it much easier to decide when validation makes sense (e.g. "
"there is no need to validate a “cancel” button)."
msgstr ""

# bace59a330a14de09d147380bd64953e
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:355
msgid ""
"We have already seen the most common pattern for invoking validation in our "
"handler for the “order” button:"
msgstr ""

# ffca7e5c712a4cd6a97576ff39ae5fa3
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:373
msgid ""
"Notice how we call *extractData()*, which returns both a dictionary of the "
"submitted data (for valid fields, converted to the underlying field value "
"type) and a dictionary of errors (which is empty if all fields are valid)."
msgstr ""

# 983cefbd524548b79962117ec26edf7e
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:379
msgid "Validating in action handlers"
msgstr ""

# 6f79b6e42523465597030d2699abbd48
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:381
msgid ""
"Sometimes, it may be useful to perform additional validation in the action "
"handler itself. We can inspect the *data* dictionary, as well as any other "
"aspect of the environment (like *self.context*, the context content object, "
"or *self.request*, the request), to perform validation."
msgstr ""

# 277182204b3f491384248417f83dc97c
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:386
msgid "To signal an error, we use one of two exception types:"
msgstr ""

# 119c4ca4b5d343dd8852e20868bf84b6
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:388
msgid ""
"*z3c.form.interfaces.ActionExecutionError*, for generic, form-wide errors"
msgstr ""

# cb2ccc3856f7481f9c9ddaffd105240c
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:390
msgid ""
"*z3c.form.interfaces.WidgetActionExecutionError*, for field/widget-specific "
"errors"
msgstr ""

# 9bcd5575cec3470b9210064dadf0b3a5
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:393
msgid ""
"In both cases, these exceptions wrap an *Invalid* exception. Let’s add two "
"examples to our action handler."
msgstr ""

# ab4f145eb17e4394a163da1a1ba0221d
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/validation.rst:437
msgid ""
"Notice how we perform the check after the *extractData()* call, but before "
"the possible premature return in case of validation errors. This is to "
"ensure all relevant errors are displayed to the user. Also note that whilst "
"the invariant is passed an object providing the schema interface, the *data*"
" dictionary is just that - a dictionary. Hence, we use “dot notation” "
"(*data.address1*) to access the value of a field in the invariant, but "
"“index notation” (*data[‘address1’]*)**to access the value of a field in the"
" handler."
msgstr ""

# 3a30722ab6a24b939b4c92d5f044d404
# 3c4b3f9ccc794e03a6c8f458bcc7b452
# 9cd9bda87f51412db3856c5cc2afee99
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:2
#: ../develop/plone/content/archetypes/fields.rst:595
#: ../develop/plone/forms/vocabularies.rst:3
msgid "Vocabularies"
msgstr ""

# 2c5f1ec5a6424ec3a4675d7275a3b41b
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:4
msgid "**Static and dynamic lists of valid values**"
msgstr ""

# 463e8e651aa5457997830bc386aa4498
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:6
msgid ""
"The term “vocabulary” here refers to a list of values that are allowable by "
"a given field. In most cases, that implies a field using a selection widget,"
" like a multi-select list box or a drop-down."
msgstr ""

# 46412cf271bb4e77aeaa1f94bb887ace
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:10
msgid ""
"Selection fields use the *Choice* field type. To allow the user to select a "
"single value, use a *Choice* field directly:"
msgstr ""

# 4f4c8c2dfdad4495b74e86239de40ff0
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:21
msgid ""
"For a multi-select field, use a *List*, *Tuple, Set* or *Frozenset* with a "
"*Choice* as the *value\\_type*:"
msgstr ""

# 8ec0da7c46a148c2ad3b046e3454f01f
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:35
msgid ""
"The *Choice* field must be passed one of the following arguments, specifying"
" its vocabulary:"
msgstr ""

# 3329d58b68ea44cca1d7873291863d49
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:38
msgid "*values* can be used to give a list of static values"
msgstr ""

# 6302ffca46114e6f9da86641edaee9b0
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:39
msgid ""
"*source* can be used to refer to an *IContextSourceBinder* or *ISource* "
"instance"
msgstr ""

# e730775e4049478ab286824e9e41fb54
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:41
msgid ""
"*vocabulary* can be used to refer to an *IVocabulary* instance or (more "
"commonly) a string giving the name of an *IVocabularyFactory* named utility."
msgstr ""

# 538dc8c6f6614f4e9c9c6940878d7c15
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:45
msgid ""
"We’ll now explore various ways in which we can improve on the *orderItems* "
"list."
msgstr ""

# e35b5d420d5640369746e24d41f9600c
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:49
msgid "Static vocabularies"
msgstr ""

# b8a944a54457436494a50c0b4cba9a7f
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:51
msgid ""
"Up until now, we have been using a static vocabulary, passing the list of "
"allowable values as the *values* parameters to the *Choice* field. This is "
"simple, but has a few draw-backs:"
msgstr ""

# 513a396e5c7746dda9e1d52e75eb2055
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:55
msgid "If the vocabulary changes, we have to change the interface code."
msgstr ""

# ea13842a2bfe4b87b65b0ca55b6277ab
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:56
msgid ""
"There is no way to separate the label that the user sees in the selection "
"widget from the value that is extracted."
msgstr ""

# e9ef2d915fbf4161bc122599cd4361c3
# e9a298ef68854822bae3bccb1a594fc1
# 31b5f8e371a94cb5a243d152e4531aa7
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:60
#: ../develop/plone/content/archetypes/fields.rst:600
#: ../develop/plone/forms/vocabularies.rst:150
msgid "Dynamic vocabularies"
msgstr ""

# 80541e67c1bd4141a587da6185b157ef
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:62
msgid ""
"To implement a more dynamic vocabulary, we can use a source. Before we do "
"that, though, let’s consider where our data will come from."
msgstr ""

# 977e4d00c0544c5481ead6acc1cff287
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:65
msgid ""
"We want to make the “order items” list more dynamic, and allow the list of "
"available pizza types to be managed through the web. There are various ways "
"to do this, including modelling pizzas as content items and creating a "
"source that performs a catalog query to find them all. To manage a simple "
"list, however, we can use *plone.app.registry* and install the list with our"
" product’s extension profile. An administrator could then use the registry "
"control panel to change the list. We won’t go into *plone.app.registry* in "
"detail here, but you can read its `documentation`_ to get a full "
"understanding of what it is and how it works."
msgstr ""

# ef9607d42f8e4a6581d7778d512289e5
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:76
msgid ""
"First, we need to add *plone.app.registry* as a dependency in *setup.py*:"
msgstr ""

# 136bc7dff8884717be5b0f60ba3425d2
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:88
msgid ""
"We also want to configure it when our product is installed in Plone, so we "
"edit *profiles/default/metadata.xml* as follows:"
msgstr ""

# c966403ddecb4bc1b460dedcd160bb91
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:101
msgid "Next, we create a registry.xml containing the following:"
msgstr ""

# ae2110bbb4e3456db710e77c99cc5cee
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:121
msgid "After re-running buildout and (re-)installing our product in the"
msgstr ""

# 314750fc565745789bdc7559c2c7a6ba
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:124
msgid "Terminology"
msgstr ""

# 08562d76d58a4c95b65e610b7d0f018a
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:126
msgid ""
"When working with dynamic vocabularies, we come across some terminology that"
" is worth explaining:"
msgstr ""

# 650b055c5f7642c781f9d11db0045742
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:129
msgid ""
"A *term* is an entry in the vocabulary. The term has a value. Most terms are"
" *tokenised* terms which also have a token, and some terms are *titled*, "
"meaning they have a title that is different to the token."
msgstr ""

# ba1a6db3c21740d9b0fc72a210d57dc6
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:133
msgid ""
"The *token* must be an ASCII string. It is the value passed with the request"
" when the form is submitted. A token must uniquely identify a term."
msgstr ""

# 880e44fe8f76427a8a3b9a0f0ebca162
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:136
msgid ""
"The *value* is the actual value stored on the object. This is not passed to "
"the browser or used in the form. The value is often a unicode string, but "
"can be any type of object."
msgstr ""

# fce9961cccb64378b2e79335d0ccc33c
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:139
msgid ""
"The *title* is a unicode string or translatable message. It is used in the "
"form and displayed to the user."
msgstr ""

# 9b03ca69e591433a80128da14d55fbae
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:143
msgid "One-off sources with a context source binder"
msgstr ""

# 789b47c6626d434d9828d4f7897e9ccd
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:145
msgid ""
"We can make a one-off dynamic vocabulary using a context source binder. This"
" is simply a callable (usually a function or an object with a "
"*\\_\\_call\\_\\_* method) that provides the *IContextSourceBinder* "
"interface and takes a *context* parameter. The *context* argument is the "
"context of the form view. The callable should return a vocabulary, which is "
"most easily achieved by using the *SimpleVocabulary* class from "
"*zope.schema*."
msgstr ""

# 2bb481e374bf40019cc843a556dfaf22
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:153
msgid "Here is an example that returns our pizza types:"
msgstr ""

# 3103623706c041c1acd3011a8026e239
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:186
msgid ""
"Here, we have defined a function acting as the*IContextSourceBinder*, as "
"specified via the @*grok.provider()* decorator. This looks up the registry "
"and looks for the record we created with *registry.xml* above (remember to "
"re-install the product in the Add-on control panel or the "
"*portal\\_quickinstaller* tool if you modify this file). We then use the "
"*SimpleVocabulary* helper class to create the actual vocabulary."
msgstr ""

# 97c98f0b62a94e7a99e5dd5e5fb4ccf0
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:193
msgid ""
"The *SimpleVocabulary* class additionally contains two class methods that "
"can be used to create vocabularies from lists:"
msgstr ""

# 84e1e9b09ece4c52a8aff3a9f55cecc1
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:196
msgid ""
"*fromValues()* takes a simple list of values and returns a tokenised "
"vocabulary where the values are the items in the list, and the tokens are "
"created by calling *str()* on the values."
msgstr ""

# 91f5c56f9e53470bb8ab2cffb904014d
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:199
msgid ""
"*fromItems()* takes a list of *(token, value)* tuples and creates a "
"tokenised vocabulary with the token and value specified."
msgstr ""

# f27b5baabc6b4ecfa0affbbfda7dd432
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:202
msgid ""
"We can also instantiate a *SimpleVocabulary* directly and pass a list of "
"terms in the initialiser as we have done above. The *createTerm()* class "
"method can be used to create a term from a *value*, *token* and *title*. "
"Only the value is required."
msgstr ""

# b4db491f7f474728baabeb55749a9629
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:207
msgid ""
"To use this context source binder, we use the *source* argument to the "
"*Choice* constructor:"
msgstr ""

# f3535ca0422b4e4d8cb5720bbcdae134
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:222
msgid "Parameterised sources"
msgstr ""

# 619c3f9264ca4fc18b394e4c0c097540
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:224
msgid ""
"Sometimes, it is useful to parameterise the source. For example, we could "
"generalise the pizza source to work with any registry value containing a "
"sequence, by passing the registry key as an argument. This would allow us to"
" create many similar vocabularies and call upon them in code easily."
msgstr ""

# 7f7793abd021420389921fe779e8e04e
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:230
msgid ""
"This degree of generalisation is probably overkill for our use case, but to "
"illustrate the point, we’ll outline the solution below."
msgstr ""

# ac6e392375ba42a3b317f7fa366b35c3
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:233
msgid ""
"First, we turn our *IContextSourceBinder* into a class that is initialised "
"with the registry key"
msgstr ""

# eb31349a13bf470ab8450d7dac7c92c9
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:254
msgid ""
"Notice how in our first implementation, the function *provided* the "
"*IContextSourceBinder*interface, but the class here *implements* it. This is"
" because the function was the context source binder callable itself. "
"Conversely, the class is a factory that creates *IContextSourceBinder* "
"objects, which in turn are callable."
msgstr ""

# 1c8cd7e222c247b08e59ad7f5bb81ec6
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:260
msgid ""
"Again, the source is set using the *source* argument to the *Choice* "
"constructor."
msgstr ""

# 24f2491969c045cdae90d485ebcc1f94
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:270
msgid ""
"When the schema is initialised on startup, the a *RegistrySource* object is "
"instantiated, storing the desired registry key in an instance variable. Each"
" time the vocabulary is needed, this object will be called (i.e. the "
"*\\_\\_call\\_\\_()* method is invoked) with the context as an argument, and"
" is expected to return an appropriate vocabulary."
msgstr ""

# 62e49663ae2b48c999a4d72844799a7b
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:277
msgid "Named vocabularies"
msgstr ""

# 941b45201f2344d3b29e5e96985c543b
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:279
msgid ""
"Context source binders are great for simple dynamic vocabularies. They are "
"also re-usable, since we can import the source from a single location and "
"use it in multiple instances. However, we may want to provide an additional "
"level of decoupling, by locating a vocabulary by name, not necessarily "
"caring where or how it is implemented."
msgstr ""

# fe60e2eb13b64483bf4f156e2a94141b
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:285
msgid ""
"Named vocabularies are similar to context source binders, but are components"
" registered as named utilities, referenced in the schema by name only. This "
"allows local overrides of the vocabulary via the Component Architecture, and"
" makes it easier to distribute vocabularies in third party packages."
msgstr ""

# 4739dc4374ed4486bd6a1cd83dd3b747
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:292
msgid ""
"Named vocabularies cannot be parameterised in the way as we did with the "
"context source binder above, since they are looked up by name only."
msgstr ""

# 01325775410f425a9072cac17b24ff41
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:296
msgid ""
"We can turn our first dynamic vocabulary into a named vocabulary by creating"
" a named utility providing *IVocabularyFactory*, like so:"
msgstr ""

# d29d8b6e72364b818980e16f7c7963c2
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:327
msgid ""
"By convention, the vocabulary name is prefixed with the package name, to "
"ensure uniqueness."
msgstr ""

# ccbb504b909047cc96fabe4f187d5164
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:330
msgid ""
"We can make use of this vocabulary in any schema by passing its name to the "
"*vocabulary* argument of the *Choice* field constructor:"
msgstr ""

# 7f67ce0116784e08b4622c2bfc83b58e
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/vocabularies.rst:340
msgid ""
"As you might expect, there are a number of standard vocabularies that come "
"with Plone and third party packages, most of which are named vocabularies. "
"Many of these can be found in the *plone.app.vocabularies* package, and add-"
"ons such as *plone.principalsource*."
msgstr ""

# 0a8bfa94e129428abb6562b3cd39796f
# 9ecefff72c074a0a94085bd54caa4cb9
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:2
#: ../develop/plone/forms/z3c.form.rst:564
msgid "Widgets"
msgstr ""

# d7656d72de804f55a0d34fa5c94b3347
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:4
msgid "**Changing the widget used to render a field**"
msgstr ""

# 6ee41364d6d644d48d315587ad1a18e8
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:6
msgid ""
"Like most form libraries, *z3c.form* separates a field – a representation of"
" the value being provided by the form – from its widget – a UI component "
"that renders the field in the form. In most cases, the widget is rendered as"
" a simple HTML *<input />* element, although more complex widgets may use "
"more complex markup."
msgstr ""

# 8f5b106b42c64178ae6e08d4f023e6d4
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:12
msgid ""
"The simplest widgets in *z3c.form* are field-agnostic. However, we nearly "
"always work with *field widgets*, which make use of field attributes (e.g. "
"constraints or default values) and optionally the current value of the field"
" (in edit forms) during form rendering."
msgstr ""

# 96ce74833e5346189ac15001d1812c3e
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:17
msgid ""
"Most of the time, we don’t worry too much about widgets: each of the "
"standard fields has a default field widget, which is normally sufficient. If"
" we need to, however, we can override the widget for a given field with a "
"new one."
msgstr ""

# 4692be098f9f46679caca53ffda609fa
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:23
msgid "Selecting a custom widget using form directives"
msgstr ""

# 1520b6cf3203451a82b32203a968a9d9
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:25
msgid ""
"*plone.directives.form* provides a convenient way to specify a custom widget"
" for a field, using the *form.widget()* directive:"
msgstr ""

# 337287515e694f3facbc2cfd3257e55a
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:51
msgid ""
"The argument can be either a field widget factory, as shown here, or the "
"full dotted name to one (*plone.app.z3cform.wysiwyg.WysiwygFieldWidget* in "
"this case)."
msgstr ""

# 0a072aefa4fc4e8f9a219e37f54c6375
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:56
msgid "Updating widget settings"
msgstr ""

# 2f6dbc2ab72941b4b9ce3597087fdd96
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:58
msgid ""
"All widgets expose properties that control how they are rendered. You can "
"set these properties by passing them to the widget directive:"
msgstr ""

# 9f9f1e0fe03d4395bf9e12fbd1e71755
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:74
msgid ""
"Support for specifying widget properties was added in plone.autoform 1.4."
msgstr ""

# 3b9d2edc8fbc419daf271b72f881ee24
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:76
msgid ""
"Some of the more useful properties are shown below. These generally apply to"
" the widget’s *<input />* element."
msgstr ""

# c17fd40d673f4ad09539a3599f9226e5
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:79
msgid "*klass*, a string, can be set to a CSS class."
msgstr ""

# 7a08190c917445988c6c806859076e07
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:80
msgid "*style*, a string, can be set to a CSS style string"
msgstr ""

# ce4619dfe38444d1a094b74e52d64543
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:81
msgid ""
"*title*, a string, can be used to set the HTML attribute with the same name"
msgstr ""

# a6c0002f140f4a358c8883d2130932b8
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:83
msgid ""
"*onclick*, *ondblclick*, etc can be used to associate JavaScript code with "
"the corresponding events"
msgstr ""

# 73d3f11b899b4ef2870290ed1c13575a
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:85
msgid "*disabled* can be set to True to disable input into the field"
msgstr ""

# 19b28e08644746a9a6444aa70046f825
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:87
msgid ""
"Other widgets also have attributes that correspond to the HTML elements they"
" render. For example, the default widget for a *Text* field renders a "
"*<textarea />* , and has attributes like *rows* and *cols*. For a "
"*TextLine*, the widget renders an *<input type=“text” />*, which supports a "
"*size* attribute, among others."
msgstr ""

# 2d249953598c4a58b7bdf8bd73d8baa5
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:93
msgid ""
"Take a look at *z3c.form*’s *browser/interfaces.py* for a full list of "
"attributes that are used."
msgstr ""

# bed42ab6bebf4a6ca33a427965ca921b
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:98
msgid "Supplying a widget factory"
msgstr ""

# d7ac1b3637cb47f3b638f5eb09a912cc
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:100
msgid ""
"Later in this manual, we will learn how to set up the *fields* attribute of "
"a form manually, as is done in “plain” *z3c.form*, instead of using the "
"*schema* shortcut that is provided by *plone.autoform*. If you are using "
"this style of configuration (or simply looking at the basic *z3c.form* "
"documentation), the syntax for setting a widget factory is:"
msgstr ""

# 540c0e328669494581264a8ba2ae9637
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:117
msgid "Widget reference"
msgstr ""

# 30765fb5b4ea4b5186c006edbff63298
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:119
msgid ""
"You can find the default widgets in the *browser* package in *z3c.form*. The"
" *z3c.form* `documentation`_ contains a `listing`_ of all the default "
"widgets that shows the HTML output of each."
msgstr ""

# b6483f47e59440538b618fa674159f37
#: ../develop/addons/schema-driven-forms/customising-form-behaviour/widgets.rst:123
msgid ""
"In addition, the Dexterity manual contains :doc:`an overview of common "
"custom widgets </external/plone.app.dexterity/docs/reference/widgets>`."
msgstr ""

# efde7c56fbbd4e2ea333e7f8c6eaf86f
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:2
msgid "Error snippets"
msgstr ""

# 7a45c98d5fcc4259a1facaa88df73dc9
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:4
msgid "**Customising error messages**"
msgstr ""

# 3d73553ed6e542c78bd5a71d3880ff3d
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:6
msgid ""
"When creating custom validators, as shown earlier in this manual, it is easy"
" to tailor an error message. However, *zope.schema* and *z3c.form* already "
"perform a fair amount of validation for us, which results in generic error "
"messages. For example, if a required field is not completed, a rather bland "
"error message (“Required input is missing”) will be shown. Sometimes, we may"
" want to change these messages."
msgstr ""

# 0285fbb2c9ab4d1ca8b95efd7f9c9a09
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:13
msgid ""
"*z3c.form* allows error messages to be customised at various levels of "
"detail. For example, it is possible to register a custom "
"*z3c.form.interfaces.IErrorViewSnippet* adapter, which behaves like a mini-"
"view and can output arbitrary HTML. However, in most cases, we only want to "
"update the output text string. For this, we use what’s known as a “value "
"adapter”. This is simply an adapter which *z3c.form*’s default "
"*IErrorViewSnippet* implementations will look up to determine which message "
"to show."
msgstr ""

# 1fe65bc837bb4e989d6232276501fa5a
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:22
msgid ""
"The easiest way to create an error message value adapter is to use the "
"*@form.error\\_message()* decorator from *plone.directives.form*. This "
"decorator should be applied to a function that takes as its only argument "
"the (invalid) value that was submitted, and return a unicode string or "
"message indicating the error. To illustrate this, we will add a new function"
" to *order.py*, just after the interface definition:"
msgstr ""

# 95b94104fc4c4fa5a5bbf13ac149c360
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:65
msgid ""
"As with the *@form.validator()* decorator, the *@form.error\\_message()* "
"validator takes a number of keyword arguments, used to control where the "
"error message is applied. The allowable arguments are:"
msgstr ""

# 6bba65c85056479fb912e3075bb05afe
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:72
msgid "error"
msgstr ""

# c322454605bb48a09e52897653aeedd6
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:70
msgid ""
"The type of error, which is normally represented by an exception class. The "
"most general type will usually be a "
"*zope.schema.interfaces.ValidationError*. See below for a list of other "
"common exception types."
msgstr ""

# 9ce51bd19550410bba7cede79c85db73
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:75
msgid ""
"The current request. This is normally used to supply a browser layer marker "
"interface. This is a good way to ensure a general error message is only in "
"force when our product is installed."
msgstr ""

# d805d6afacba4ee88b0c05f68c5ebe9e
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:79
msgid "The widget which was used to render the field."
msgstr ""

# 2dc35383a2114fbebe686aee2b0c314e
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:81
msgid ""
"The field to which the error message applies. If this is omitted, the "
"message would apply to all fields on the form (provided *form* is supplied) "
"of the given error (provided *error* is applied)."
msgstr ""

# f719314f3f164baaaeeb2b97e8fbcb4f
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:87
msgid "form"
msgstr ""

# 7d170b42f75d44fe97875ff2f105f57c
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:85
msgid ""
"The form class. We can use this either to apply a single message to a given "
"error across multiple fields in one form (in which case *field* would be "
"omitted), or to customise an error message for a particular form only if a "
"schema is used in more than one form."
msgstr ""

# f6c85f83808e46ef919b0df69c37e4d1
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:90
msgid "content"
msgstr ""

# 927d170ed50b490190492131f8744f29
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:90
msgid "The content item (context) on which the form is being rendered."
msgstr ""

# 45adb4d136d646bcbba9e026e893212b
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:93
msgid ""
"In almost all cases, you will want to supply both *field* and *error* at a "
"minimum, although if you have multiple fields that may raise a particular "
"error, and you want to create a message for all instances of that error, you"
" can omit *field* and use *form* instead. If you supply just *error*, the "
"validator will apply to all instances of that error, on all forms, site-"
"wide, which is probably not a good idea if you intend your code to be-"
"usable. At the very least, you should use the *request* field to specify a "
"browser layer in this case, and install that layer with *browserlayer.xml* "
"in your product’s installation profile."
msgstr ""

# 2e26a373d33f4b9f8a40dd763c33b735
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:103
msgid ""
"The exception types which may be used for the *error* discriminator are "
"field-specific. The standard fields as defined in *zope.schema* use the "
"following exceptions, all of which can be imported from "
"*zope.schema.interfaces*:"
msgstr ""

# 2a959bbb66544a0d8772ced1b748b1e8
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:108
msgid ""
"*RequiredMissing*, used when a required field is submitted without a value"
msgstr ""

# 17474db282494f85992e28ca928852da
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:110
msgid "*WrongType*, used when a field is passed a value of an invalid type"
msgstr ""

# 8503284a638a4935b64312a7b264c364
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:111
msgid ""
"*TooBig* and *TooSmall*, used when a value is outside the *min* and/or *max*"
" range specified for ordered fields (e.g. numeric or date fields)"
msgstr ""

# ac8186e887714e50804ac676ce73060b
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:114
msgid ""
"*TooLong* and *TooShort*, used when a value is outside the *min\\_length* "
"and/or *max\\_length* range specified for length-aware fields (e.g. text or "
"sequence fields)"
msgstr ""

# bb61d09ad5874b6eb37b1a50e378dacc
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:117
msgid ""
"*InvalidValue*, used when a value is invalid, e.g. a non-ASCII character "
"passed to an ASCII field"
msgstr ""

# 0dbe4119243f44d78fa129478274986c
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:119
msgid ""
"*ConstraintNotSatisfied*, used when a *constraint* method returns *False*"
msgstr ""

# 5d7a568f59f44507a15588cafc10ca82
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:121
msgid ""
"*WrongContainedType*, used if an object of an invalid type is added to a "
"sequence (i.e. the type does not conform to the field’s *value\\_type*)"
msgstr ""

# 3fa4ca99e13d42fb9260b9a5e63ca33b
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:124
msgid "*NotUnique*, used if a uniqueness constraint is violated"
msgstr ""

# fc9ae7e269f04cc0a4cc043f0d514490
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:125
msgid "*InvalidURI*, used for *URI* fields if the value is not a valid URI"
msgstr ""

# edd50f5fde444365985952efd62c1ddc
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:126
msgid "*InvalidId*, used for *Id* fields if the value is not a valid id"
msgstr ""

# 715f70e0c6c04d3b8d4c42590ebd469d
#: ../develop/addons/schema-driven-forms/customising-form-presentation/error-snippets.rst:127
msgid ""
"*InvalidDottedName*, used for *DottedName* fields if the value is not a "
"valid dotted name"
msgstr ""

# 8702892e92e441a8af20450b8ea7c33d
#: ../develop/addons/schema-driven-forms/customising-form-presentation/index.rst:2
msgid "Customising form presentation"
msgstr ""

# c7ebe0343c054575955ebe078aa48869
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:2
msgid "Layout templates"
msgstr ""

# 3844d0b1fe374cd7b289f0383ed5fecf
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:4
msgid "**Creating a custom layout for our form**"
msgstr ""

# d945348b1bec41bca7d427260f20f9fa
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:6
msgid ""
"So far, we have relied on Plone (in fact, *plone.app.z3cform*) to supply a "
"default template for our forms. This uses the default Plone form markup, "
"which is consistent with that used in other forms in Plone. For many forms, "
"this is all we need. However, it is sometimes useful to create a custom "
"template."
msgstr ""

# e0d621046b56446db6068083490c6a54
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:12
msgid ""
"Custom templates are normally needed for one of two reasons: Either, to "
"insert some additional markup around or inside the form itself; or to "
"radically change the form markup itself. The former is more common, since "
"changing the form look-and-feel is normally done better with CSS. For that "
"reason, *plone.app.z3cform* registers a view called *@@ploneform-macros*, "
"which provides useful macros for rendering forms using the standard markup. "
"We will illustrate how to use this below."
msgstr ""

# 36f928179f0f4773a54ec6792de799b1
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:20
msgid ""
"The easiest way to associate a template with a form is to use the default "
"grokked template association. Our form is called *OrderForm* and lives a "
"module called *order.py*, so the grokker will look for a template in "
"*order\\_templates/orderform.pt*."
msgstr ""

# 45673d54f13c4c2db7d0819839de0711
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:26
msgid ""
"With the exception of *DisplayForms*, there is always a default template for"
" forms extending the grokked base classes in *plone.directives.form*. "
"Therefore, the template is optional. Unlike *grok.View* views, there is no "
"need to override *render()* if the template is omitted."
msgstr ""

# 51d96d0b4d574eb6be3cc38d37c5a34c
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:31
msgid ""
"As an example, let’s create such a template and add some content before the "
"form tag:"
msgstr ""

# 8d974b76a51b4e9487d75e0d668bc2f4
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:57
msgid ""
"Notice how the *@@ploneform-macros* view does most of the work. This "
"contains a number of useful macros:"
msgstr ""

# ad5784b341b842acaca7e6ae0f54d8ea
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:60
msgid "*form* is a full page form, including the label"
msgstr ""

# bf2dd99c4f18479d8b310e7479fe8270
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:61
msgid ""
"*titlelessform* includes the form *status* at the top, the *<form />* "
"element, and the contents of the *fields* and *actions* macros. It also "
"defines three slots: *formtop*, just inside the *<form>* opening tag; "
"*formbottom*, just before the *</form>* closing tag; and *beforeactions*, "
"just before the form actions (buttons) are output."
msgstr ""

# 10a58723240b4efba036d0c9609023a0
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:66
msgid ""
"*fields* iterates over all widgets in the form and renders each, using the "
"contents of the *field* macro."
msgstr ""

# 0aa1afa75a5140e1a02b17890d13ca5b
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:68
msgid ""
"*field* renders a single field. It expects the variable *widget* to be "
"defined in the TAL scope, referring to a *z3c.form* widget instance. It will"
" output an error message if there is a field validation error, a label, a "
"marker to say whether the field is required, the field description, and the "
"widget itself (normally just an *<input />* element)."
msgstr ""

# d2ca05ce210248e1887c2f922d837136
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:74
msgid ""
"*actions* renders all actions on the form. This normally results in a row of"
" *<input type=“submit” … />* elements."
msgstr ""

# a345c6444fd2458bb6ceba9a73766389
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:78
msgid ""
"If you require more control, you can always create your form from scratch. "
"Take a look at *macros.pt* in *plone.app.z3cform* for inspiration."
msgstr ""

# 8f5f19f147f94812b084438e011565a2
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:82
msgid ""
"If you don’t require tabbed fieldsets or “inline” field validation, the "
"template can be simplified substantially. See *macros.pt* in *plone.z3cform*"
" for a cleaner example."
msgstr ""

# e745f85b940f4f16bf09911128703689
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:86
msgid "The most important variables used in the template are:"
msgstr ""

# e294634b8d984e55969b94dc5e373740
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:88
msgid "*view.id*, a unique id for the form"
msgstr ""

# 400d68d82bb54157a5da0553444db8e6
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:89
msgid "*view.enctype*, the form’s *enctype* attribute"
msgstr ""

# 13ba214e88f24858a44605c4900dc9c0
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:90
msgid "*view.label*, the form’s title"
msgstr ""

# b13689eff73b43728615c8da3bc5e69f
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:91
msgid "*view.description*, the forms’ description"
msgstr ""

# 4861fed0312c47d7b25895d7511d033f
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:92
msgid "*view.status*, a status message that is often set in action handlers."
msgstr ""

# 6957cbee6597495e85c65ab10ab04244
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:93
msgid ""
"*view.groups,* a list of fieldsets (groups), as represented by *Group* "
"instances."
msgstr ""

# f612523a230a4d918a722b4a7095ae95
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:95
msgid ""
"*view.widgets*, which contains all widgets. *view.widgets.errors* contains a"
" list of error snippet views. Otherwise, *widgets* behaves like an ordered "
"dictionary. Iterating over its *values()* will yield all widgets in order. "
"The widgets have been updated, and can be output using their *render()* "
"method."
msgstr ""

# 22de652366134bde97bbcba63e9e1e22
#: ../develop/addons/schema-driven-forms/customising-form-presentation/layout-templates.rst:100
msgid ""
"*view.actions,* contains an ordered dictionary of actions (buttons). "
"Iterating over its *values()* will yield all actions in order. The actions "
"have been updated, and can be output using their *render()* method."
msgstr ""

# 745a106f92174270829dae0b61d91b4a
#: ../develop/addons/schema-driven-forms/form-types/add-forms.rst:2
msgid "Add forms"
msgstr ""

# 35bad39d3a9f417fb827323df98e93d3
#: ../develop/addons/schema-driven-forms/form-types/add-forms.rst:4
msgid "**Forms to create new content objects**"
msgstr ""

# f38e3bab397740adb509af6506fd07f2
#: ../develop/addons/schema-driven-forms/form-types/add-forms.rst:6
msgid ""
"An add form, as its name implies, is used to add content to a container. Add"
" forms are usually registered as views on a container. For generic CMF or "
"Plone content, the *IFolderish* interface is normally a good candidate. The "
"fields in an add form usually represent the fields in the type that is being"
" added."
msgstr ""

# 95310965b2b2492bb377ea011a6f8de0
#: ../develop/addons/schema-driven-forms/form-types/add-forms.rst:13
msgid ""
"If you are using Dexterity or Archetypes, these frameworks have their own "
"add form factories, which you probably want to use instead of the more basic"
" version described here."
msgstr ""

# ca43fe9f2def42ff970806e734dfd111
#: ../develop/addons/schema-driven-forms/form-types/add-forms.rst:17
msgid ""
"Add forms derive from *z3c.form.form.AddForm*, which is extended by "
"*plone.directives.form.AddForm* and *plone.directives.form.SchemaAddForm*, "
"adding grok support and standard Plone semantics."
msgstr ""

# 12f00a28b6b14f76b4e62b4eda3acf2d
#: ../develop/addons/schema-driven-forms/form-types/add-forms.rst:22
msgid ""
"To use an add form, you must implement two methods - *create()* and *add()*."
" The form then takes care of emitting the proper events and directing the "
"user to the newly added content item. You can also set the "
"*immediate\\_view* property to the URL of a page to visit after adding the "
"content item."
msgstr ""

# 64d8fb95284c4242a59f2ac258b0a5c9
#: ../develop/addons/schema-driven-forms/form-types/add-forms.rst:62
msgid ""
"*create()* is called after validation, and is passed a dictionary of "
"marshalled form fields. It should construct and return the object being "
"added. That object is then passed to *add()* (after an object-created event "
"has been fired), which should add it, normally to *self.context* (the "
"container)."
msgstr ""

# 12e00ebec7a5406182e67570667cc553
# d327e32b2ca841a9b5f064772db4d3bb
#: ../develop/addons/schema-driven-forms/form-types/add-forms.rst:68
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:53
msgid "A non-schema version would look like this:"
msgstr ""

# 01e1cdb4436b4c97a1edea24fe428d03
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:2
msgid "Base forms and schema forms"
msgstr ""

# 5412474fb9b74fed9d9f546f6791e67a
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:4
msgid "**Understanding the two types of forms work with in this manual**"
msgstr ""

# 993ab6bf05464c12b5790e0946b27b50
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:6
msgid ""
"*z3c.form* comes with a few base classes for forms, covering common use "
"cases including page forms, edit forms, add forms and display forms. In this"
" manual, we are actually using some intermediary base classes from "
"*plone.directives.form*, which serve two purposes: they allow the forms to "
"be “grokked”, for example to associate a page template or register the form "
"as a view using directives like *grok.context()* and *grok.name()*; some of "
"them also provide a hook for *schema forms*, which use form hints supplied "
"in directives (like *form.widget()* as we saw in the previous section) that "
"are interpreted by *plone.autoform* to configure the form’s fields. Whilst "
"we can do everything in code using the plain *z3c.form* API, many people may"
" prefer the more declarative style of configuration that comes with "
"*plone.autoform* and *plone.directives.form*, because it involves less code "
"and keeps the field-specific form configuration closer to the field "
"definitions."
msgstr ""

# 73d169df9a004b73bfd094d7846f93ab
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:21
msgid ""
"Over the next several sections, we will discuss the various form base "
"classes. A brief overview follows."
msgstr ""

# 793fed91711e4e85be98781ebbe27d02
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:34
msgid "**z3c.form.form.BaseForm**"
msgstr ""

# e3d3f4b097ae40ad863c10d4a08a2bdc
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:25
msgid ""
"This base class is not to be used directly, but is the ancestor of all "
"*z3c.form* forms. It defines attributes like *label* (the form’s title), "
"*mode* (the default mode for the form’s fields, usually *‘input’* in regular"
" forms and *‘display’* in display forms), *ignoreContext*, *ignoreRequest* "
"(see below) and *ignoreReadonly* (which omits readonly fields from the "
"form). It also defines the basic *update()* and *render()* methods that are "
"the basis of the form rendering cycle, which we will explain towards the end"
" of this manual, and the *getContent()* helper method which can be used to "
"tell the form about an alternative context - see below."
msgstr ""

# 12b959dff979416e842977d9ba8d4545
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:38
msgid "**plone.directives.form.Form (extending z3c.form.form.Form)**"
msgstr ""

# 98fcb18359c844909e3bb17f1d528692
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:37
msgid ""
"A basic full-page form. It supports actions (buttons), and will by default "
"read field values from the request (unless *ignoreRequest* is *True*) or the"
" context (unless *ignoreContext* is *True*)."
msgstr ""

# 5fe9f7f9a6b54098be64dc07ac421813
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:43
msgid "**plone.directives.form.SchemaForm**"
msgstr ""

# 2bd764c6dba346ed9ce66691e4266395
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:41
msgid ""
"This is identical to *Form*, except that it will construct its fields "
"*plone.autoform* schema hints. The *schema* attribute is required, and must "
"be a schema interface. The *additional\\_schemata* attribute may be set to a"
" tuple of additional schemata - see below."
msgstr ""

# 08c2260ee8454774a03a10776cc3007f
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:48
msgid "**plone.directives.form.AddForm (extending z3c.form.form.AddForm)**"
msgstr ""

# 31daf13c65774d208df46056c6ee4e7b
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:46
msgid ""
"A basic content add form with two actions - save and cancel. This implements"
" default Plone semantics for adding content. Note that if you are using "
"Dexterity, you should use the Dexterity add form instead. See the Dexterity "
"documentation for details."
msgstr ""

# 0b19c3888daa47ac9c389eb0b7d65824
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:50
msgid "**plone.directives.form.SchemaAddForm**"
msgstr ""

# 6294ffd733d34d109f00f19a451830d4
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:51
msgid "The schema form equivalent of *AddForm*."
msgstr ""

# f0cd982384ca4959bda48ec0c96a7bd1
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:59
msgid "**plone.directives.form.EditForm**"
msgstr ""

# e2051b046a5d43638f141456279206a1
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:53
msgid ""
"A basic edit form with two actions - save and cancel. This operates on the "
"context returned by the *getContent()* helper method. By default, that’s the"
" context of the form view (*self.context*), but we can override "
"*getContent()* to operate on something else. In particular, it is possible "
"to operate on a dictionary. See the section on edit forms shortly. Note that"
" if you are using Dexterity, you should use the Dexterity edit form instead."
" See the Dexterity documentation for details."
msgstr ""

# 3a9d9f1fd8f14d6687623fb330208cf9
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:61
msgid "**plone.directives.form.SchemaEditForm**"
msgstr ""

# 258dca05fce649b3b3d2f3af9501da0b
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:62
msgid "The schema form equivalent of *EditForm*."
msgstr ""

# 98efc8550725474eaf6383af662c8199
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:69
msgid "**plone.directives.dexterity.DisplayForm**"
msgstr ""

# 74187b9185d642c0a09ec5173e0ce9b8
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:64
msgid ""
"This is a display form view based on the *WidgetsView* base class from "
"*plone.autoform*. You can use this much like *grok.View*, except that it "
"must be initialised with a *schema*, and optionally a tuple of "
"*additional\\_schemata*. There are several helper variables set during the "
"*update()* cycle which provide easy access to the form’s widgets in display "
"mode."
msgstr ""

# 107b4807bc7443a3a83d4081b7f7ea05
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:72
msgid "Context and request"
msgstr ""

# 5142de42e8e441d6bcc84f82f735918f
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:74
msgid ""
"When a form is first rendered, it will attempt to fill fields based on the "
"following rules:"
msgstr ""

# f5b36b5e7f67469aac3932b3df424f0b
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:77
msgid ""
"If *ignoreRequest* is *False* (as is the default for all forms bar display "
"forms), and a value corresponding to the field is in the request, this will "
"be used. This normally means that the form was submitted, but that some "
"validation failed, sending the user back to the form to correct their "
"mistake."
msgstr ""

# 9d2a46603c924e709b6d4b2168e37ad8
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:82
msgid ""
"If no request value was found and *ignoreContext* is *False* (as is the "
"default for all forms bar add forms), the form will look for an associated "
"interface for each widget. This is normally the schema interface of the "
"field that the widget is rendering. It will then attempt to adapt the "
"context to that interface (if the context provides the interface directly, "
"as is often the case for edit and display forms, the context is used as-is)."
" If no such adapter exists, form setup will fail. If this happens, you can "
"either set *ignoreContext = True* (which is normally appropriate for free-"
"standing forms like the examples earlier in this manual), supply an adapter "
"(which is normally appropriate for forms that edit some aspect of the "
"context), or override *getContent()* to return a content that is adaptable "
"to the schema interface."
msgstr ""

# 827fc35b7a704c9eabaaab756e1e9124
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:95
msgid ""
"If no request or context value was found and the field has a default value, "
"this will be used."
msgstr ""

# 6393b92b1390449798be3dfc7e00b27a
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:99
msgid "Primary and additional schemata in schema forms"
msgstr ""

# 7116eb25186c487faf16466f582c3bf8
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:101
msgid ""
"When using a schema form, it is possible to set two form properties "
"supplying schemata for the form:"
msgstr ""

# 91dbce92dd9a42bca4d10a4ce0199f14
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:104
msgid ""
"*schema* is required for all schema forms, and must point to a schema "
"interface. This is known as the default or primary schema for the form."
msgstr ""

# 72079a8f5e664f3e971cde648984ea3d
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:107
msgid ""
"*additional\\_schemata* is optional, and can be set to a tuple or list of "
"schema interfaces. These will also be included in the form."
msgstr ""

# 81a18df3aae1460295287a19167556cb
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:111
msgid ""
"If you want to make the schema dynamic, you can implement these as read-only"
" properties. this is how Dexterity’s add and edit forms work, for example - "
"they look up the primary schema from the type information in "
"*portal\\_types*, and additional schemata from behaviours."
msgstr ""

# a2abb4eee1b84b5682b2eb5628bf0e10
#: ../develop/addons/schema-driven-forms/form-types/base-forms-and-schema-forms.rst:116
msgid ""
"Later in this manual, we will learn about creating tabbed fieldsets, also "
"known as groups. The schema forms support a property *autoGroups* which "
"default to *False*. When set to *True*, the primary schema will be used as "
"the primary fieldset, and each schema in *additional\\_schemata* will become"
" its own fieldset. The schema name will become the fieldset name, and its "
"docstring will become its description. This is obviously somewhat "
"inflexible, but can be useful for certain forms where the fieldsets need to "
"be dynamically looked up."
msgstr ""

# e16a8245c45a44daa958e69d35e2c755
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:2
msgid "Display forms"
msgstr ""

# a7433294d5264b7ca71b69b2d5a0beb8
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:4
msgid "**Using widgets in display mode**"
msgstr ""

# 150da7f7fb724e0dadb541df8de049a1
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:6
msgid ""
"Both forms and widgets support the concept of a “mode”. The form’s mode acts"
" as a default for its widgets. The most commonly used mode is *‘input’*, as "
"indicated by the constant *z3c.form.interfaces.INPUT\\_MODE*, but there is "
"also *‘hidden’* (*HIDDEN\\_MODE*) and *‘display’* (*DISPLAY\\_MODE*). The "
"latter is the form mode for *display forms*."
msgstr ""

# ac444a0cf351421489f23e028f1da748
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:13
msgid ""
"Display forms derive from *z3c.form.display.DisplayForm*, which is extended "
"by *plone.directives.dexterity.DisplayForm*. This also mixes in "
"*plone.autoform.view.WidgetsView*, which provides various conveniences for "
"dealing with display mode widgets and fieldsets (groups). Note that this is "
"a “schema form”, i.e. we must set the *schema* property (and optionally "
"*additional\\_schemata*) to a schema deriving from *form.Schema*."
msgstr ""

# a28a10171cf04477a361566e078046f0
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:22
msgid ""
"If you require a grokked alternative that is not a schema form, you can "
"derive from *z3c.form.form.DisplayForm* and "
"*plone.directives.form.form.GrokkedForm*."
msgstr ""

# fed77671046e4fd29ce6e8490a4b8523
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:26
msgid ""
"Display forms are not very common outside framework code. In most cases, it "
"is easier to just create a standard view that renders the context. In a "
"framework such as Dexterity, display forms are used as the default views of "
"content items. The main reason to use display forms for anything bespoke is "
"to use a complex widget that has a display mode rendering that is difficult "
"to replicate in a custom template."
msgstr ""

# b13bcd00e29749a7b3bac0c8037e05ba
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:33
msgid ""
"It is also possible to put some widgets into *input* mode (by setting the "
"*mode* attribute in the *updateWidgets()* hook), thus placing a widget into "
"a form that is otherwise not managed by *z3c.form*."
msgstr ""

# df56701c862b454b959658cf0ab20c5b
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:37
msgid "Display forms are used much like standard views. For example:"
msgstr ""

# 6611f4f7617f42b8a48706e84ef55acc
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:56
msgid ""
"There would typically also be a template associated with this class. This "
"uses standard five.grok view semantics. If the display form above was in a "
"module called *display.py*, a template may be found in "
"*display\\_templates/mydisplayform.pt*."
msgstr ""

# c3e9e53938e74758a3158a1e7544375c
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:61
msgid ""
"The *DisplayForm* base class in *plone.directives.form* makes the following "
"view attributes available to the template:"
msgstr ""

# c1f13aa480734a17b35281d897b1674c
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:64
msgid ""
"*view.w* is a dictionary of all the display widgets, keyed by field names. "
"This includes widgets from alternative fieldsets."
msgstr ""

# 429b3d83807044298ca135eb5866f6cf
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:66
msgid ""
"*view.widgets* contains a list of widgets in schema order for the default "
"fieldset."
msgstr ""

# 295680f73e014460863a92ffeb88030b
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:68
msgid "*view.groups* contains a list of fieldsets in fieldset order."
msgstr ""

# d8a67d301ca04ab6ad48a965302e68f4
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:69
msgid "*view.fieldsets* contains a dict mapping fieldset name to fieldset"
msgstr ""

# 5e3d640951f2424790dc9489e10ee682
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:70
msgid ""
"On a fieldset (group), you can access a *widgets* list to get widgets in "
"that fieldset"
msgstr ""

# 85042552babd4d8d81fc8cd1d9039e79
#: ../develop/addons/schema-driven-forms/form-types/display-forms.rst:73
msgid ""
"The *w* dict is the mostly commonly used. To render a widget named *foo* in "
"the template, we could do:"
msgstr ""

# 53b7527150cf42598c58f5d0074f105b
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:2
msgid "Edit forms"
msgstr ""

# 3c7c16b5f59d4635b8ae66668064824e
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:4
msgid "**Forms that edit something**"
msgstr ""

# 5cb3295b49ce4cea803c7908c8f11b00
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:6
msgid ""
"Edit forms, unsurprisingly, are used to edit content objects or other "
"contexts. They derive from *z3c.form.form.EditForm*, which is extended by "
"*plone.directives.form.EditForm* and *plone.directives.form.SchemaEditForm*,"
" adding grok support and Plone semantics. The edit form takes care of firing"
" object-modified events, and implements default save and cancel actions."
msgstr ""

# 75a4b49b5f4042b1ba516f5ae9bf5050
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:14
msgid ""
"As with add forms, frameworks like Archetypes and Dexterity provide their "
"own default edit forms, which should use for editing content objects built "
"with those frameworks."
msgstr ""

# a6142b021b584d88981bffcaf2588316
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:18
msgid ""
"The schema of an edit form is normally a content object schema, which "
"normally also describes the context of the form view. That is, the edit form"
" is normally a view on the object that is being edited"
msgstr ""

# d567ca2b98de445db27a72f24feafec5
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:22
msgid ""
"That said, we can implement *getContent()* to supply a different context. "
"This would normally provide the schema interface, but it does not need to. "
"As with any form, the context need only be adaptable to the interface(s) "
"associated with its fields."
msgstr ""

# c1b7ed8b201c40559933079d4b860ff4
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:27
msgid ""
"A simple edit form in a view called *@@edit* that edits a content object "
"providing *IMyType* would look like this:"
msgstr ""

# 36dbbd77d22c467fb3b0c023a02e48af
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:53
msgid ""
"There is no need to define any actions or implement any methods. The default"
" save button handler will adapt the context to *IMyType* and then set each "
"field in the interface with the submitted form values."
msgstr ""

# 95287af8acdc4155b19b02254d31b422
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:57
msgid "A non-schema example would look like:"
msgstr ""

# 3459064a01cb4391ad40de90420af70d
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:82
msgid ""
"As a slightly ore interesting example, here is one adapted from "
"*plone.app.registry*’s control panel form base class:"
msgstr ""

# edb8a4c1e76c407cb852de5141655dbc
#: ../develop/addons/schema-driven-forms/form-types/edit-forms.rst:125
msgid ""
"The idea here is that *IMySettings*, which is set as the schema for this "
"schema edit form, is installed in the registry as a set of records. The "
"*forInterace()* method on the *IRegistry* utility returns a so-called "
"records proxy object, which implements the interface, but reads/writes "
"values from/to the configuration registry. The form view is registered on "
"the site root, but we override *getContent()* to return the records proxy. "
"Hence, the initial form values is read from the proxy, and when the form is "
"successfully submitted, the proxy (and hence the registry) is automatically "
"updated."
msgstr ""

# d07be345a47e4bd08d10d702e053d643
#: ../develop/addons/schema-driven-forms/form-types/index.rst:2
msgid "Form types"
msgstr ""

# 847547b2ccab4ca3baee0174a601450a
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:2
msgid "Page forms"
msgstr ""

# e286847498ad469abae5fd2bd888b561
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:4
msgid "**The most basic type of form**"
msgstr ""

# d6d8f2f99c2743a7b926f023524bf80d
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:6
msgid ""
"A page form, or simply “form”, is a basic, “standalone” form. The pizza "
"order example in this manual is a page form."
msgstr ""

# d53f43e22d8e4d1080b14045e3aeb53a
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:9
msgid ""
"Page forms derive from *z3c.form.form.Form*, which is extended by "
"*plone.directives.form.Form* and *plone.directives.form.SchemaForm* as "
"described in this manual. They will typically have actions, and be "
"registered as a view for some context. For a completely standalone form, the"
" site root is often good choice."
msgstr ""

# 5fb5cee1fcbd49449e220c67b80126e9
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:93
msgid ""
"Many “standalone” page forms will set *ignoreContext = True*. If it is "
"*False* (the default), the form will read the current value of each field "
"from the context, by attempting to adapt it to the form schema, as described"
" in the previous section."
msgstr ""

# 32fdac221b6a40a0960ccd2d68eee3b5
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:98
msgid ""
"Sometimes, we want to populate the form with initial values that are not "
"attributes of the context (or an adapter thereof). *z3c.form* allows us to "
"change the object from which the form’s data is read, by overriding the "
"*getContent()* method. We can return another object that provides or is "
"adaptable to the schema interface(s) associated with the form’s fields, but "
"we can also return a dictionary with keys that match the names of the fields"
" in the form schema. This is usually easier than creating an adapter on some"
" arbitrary context (e.g. the site root) solely for the purpose of pre-"
"populating form values. It also makes it easy to construct the form’s "
"initial values dynamically."
msgstr ""

# ea05e8ee39b34d5495e7dab1ab9d962d
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:158
msgid ""
"Note how the fields in the *data* dictionary returned by *getContent()* "
"correspond to the fields of the schema interface from which the form’s "
"fields are built. If we had fields from multiple interfaces (e.g. using the "
"*additional\\_schemata* tuple), we would need to populate keys based on the "
"fields from all interfaces."
msgstr ""

# 94795f5079d84efebf8168e985968938
#: ../develop/addons/schema-driven-forms/form-types/page-forms.rst:164
msgid ""
"Also note that the values in the dictionary must be valid for the fields. "
"Here, we have used *TextLine* fields, which expect unicode string values. We"
" would likely get an error if the value was a byte string or integer, say."
msgstr ""

# d792bb06aaf94325ad150a47ea0530f9
# f7c2969eef154b78b889ddac72bc9c6e
# bb19860646d441aca8a2284a7d36375f
# e0c990dc9ff44baf9e27a12ec55e3f92
# a3cebf95a9414373b6eadcf244ead1da
#: ../develop/addons/schema-driven-forms/further-reading.rst:2
#: ../develop/plone/content/events.rst:25
#: ../develop/plone/content/events.rst:451
#: ../develop/plone/forms/z3c.form.rst:2134
#: ../develop/plone/members/member_profile.rst:64
msgid "Further reading"
msgstr ""

# 26a61049702f49bda2798d36ffc79241
#: ../develop/addons/schema-driven-forms/further-reading.rst:4
msgid "**Where to find more information**"
msgstr ""

# 35ca4fe0cd4a4136bd6cdc67c3b79c99
#: ../develop/addons/schema-driven-forms/further-reading.rst:6
msgid ""
"To find out more about *z3c.form* and its uses in Plone, consult the "
"following references:"
msgstr ""

# 4a2ae07745614b6ab8ee53965db99ab5
#: ../develop/addons/schema-driven-forms/further-reading.rst:9
msgid ""
"The `z3c.form`_ documentation. This provides a detailed guide to "
"*z3c.form*’s inner workings."
msgstr ""

# 0002dbb1879f482c98c6b9d9715d3fbe
#: ../develop/addons/schema-driven-forms/further-reading.rst:11
msgid ""
"The `plone.z3cform`_ documentation. Describes how to use “raw” *z3c.form* "
"forms in Zope 2, and documents the Zope 2-specific extensions provided by "
"this package."
msgstr ""

# 00ba34d03b3f4646b5d80196e6d44a8b
#: ../develop/addons/schema-driven-forms/further-reading.rst:14
msgid ""
"The `plone.app.z3cform`_ documentation. Describes how to use “raw” "
"*z3c.form* forms in Plone."
msgstr ""

# 8dad8ca294204bdeba7f561e0ff7a82d
#: ../develop/addons/schema-driven-forms/further-reading.rst:16
msgid ""
"The `plone.autoform`_ documentation. Explains the raw behaviour of the "
"*plone.autoform* library and its directives."
msgstr ""

# 64b498fb63f84de99d5198e623533878
#: ../develop/addons/schema-driven-forms/further-reading.rst:18
msgid ""
"The `plone.directives.form`_ documentation. Lists the form base classes."
msgstr ""

# 4f6f1d035f4e4f1fbd30a0ce8e61196b
#: ../develop/addons/schema-driven-forms/further-reading.rst:19
msgid ""
"The `five.grok`_ manual. Explains the concepts of grokkers, the Zope "
"Component Architecture, and view component registrations."
msgstr ""

# e8e0587d474c406d958f3fb93d61e66b
#: ../develop/addons/schema-driven-forms/further-reading.rst:21
msgid ""
"The :doc:`Dexterity manual </external/plone.app.dexterity/docs/index>`. "
"Illustrates in various sections how *z3c.form* is used in Dexterity."
msgstr ""

# e8e7903598b247a19b78a2dac3d2908c
#: ../develop/addons/schema-driven-forms/index.rst:2
msgid "Schema-driven forms"
msgstr ""

# f31ee0c0439643a3956688c4b79bf60a
#: ../develop/addons/schema-driven-forms/index.rst:4
msgid ""
"**This tutorial covers how to build schema-driven forms, using the z3c.form "
"and plone.autoform libraries.**"
msgstr ""

# a6711cddb51546a68dfdedf8ab318497
#: ../develop/addons/schema-driven-forms/intro.rst:4
msgid "**What is z3c.form all about?**"
msgstr ""

# 84be38e292d84fbb8c85e24093ad9a56
#: ../develop/addons/schema-driven-forms/intro.rst:6
msgid ""
"HTML forms are the cornerstone of modern web applications. When you interact"
" with Plone, you use forms all the time - to search the content store, to "
"edit content items, to fill in your personal details. You will notice that "
"most of these forms use the same layout and conventions, and that they all "
"rely on common patterns such as server-side validation and different buttons"
" resulting in different actions."
msgstr ""

# 9c7196a0d1fc490bbb638b21b04fba80
#: ../develop/addons/schema-driven-forms/intro.rst:8
msgid ""
"Over the years, several approaches have evolved to deal with forms. A few of"
" the most important ones are:"
msgstr ""

# 1e8bda593bb34dd898e4a60eac71ab45
#: ../develop/addons/schema-driven-forms/intro.rst:11
msgid ""
"Creating a simple view with an HTML form that submits to itself (or another "
"view), where the request is validated and processed in custom Python code. "
"This is very flexible and requires little learning, but can also be fairly "
"cumbersome, and it is harder to maintain a common look and feel and "
"behaviour across all forms. See the :doc:`five.grok view documentation "
"</develop/addons/five-grok/browser-components/views>` for some hints on one "
"way to build such views."
msgstr ""

# b9e1a46f607345c194510a31e0aae5d9
#: ../develop/addons/schema-driven-forms/intro.rst:17
msgid ""
"Using the *CMFFormController* library. This relies on special page objects "
"known as “controller page templates” that submit to “controller python "
"scripts”. The form controller takes care of the flow between forms and "
"actions, and can invoke validator scripts. This only superficially addresses"
" the creation of standard form layouts and widgets, however. It is largely "
"deprecated, although Plone still uses it internally in places."
msgstr ""

# 9cfc6c7e752f499e9b318a8029a560a8
#: ../develop/addons/schema-driven-forms/intro.rst:24
msgid ""
"Using *zope.formlib*. This is a library which ships with Zope. It is based "
"on the principle that a *schema interface* defines a number of form fields, "
"constraints and so on. Special views are then used to render these using a "
"standard set of widgets. Formlib takes care of page flow, validation and the"
" invocation of *actions* - methods that correspond to buttons on the form. "
"Formlib is used for Plone’s control panels and portlets. However, it can be "
"cumbersome to use, especially when it comes to creating custom widgets or "
"more dynamic forms."
msgstr ""

# f92ae1b6d24b4335812ad3702b5d399f
#: ../develop/addons/schema-driven-forms/intro.rst:33
msgid ""
"Using *`z3c.form`_*. This is a newer library, inspired by formlib, but more "
"flexible and modern."
msgstr ""

# ef637542a0ed47998f47c65118ed8fc3
#: ../develop/addons/schema-driven-forms/intro.rst:36
msgid ""
"This manual will show you how to use *z3c.form* in a Plone context. It will "
"use tools and patterns that are consistent with those used for Dexterity "
"development, as shown in the :doc:`Dexterity developer manual "
"</external/plone.app.dexterity/docs/index>`, but the information contained "
"herein is not Dexterity specific. Note that Dexterity’s standard add and "
"edit forms are all based on *z3c.form*."
msgstr ""

# a92eadbeec2f4574b86532f594650653
# 25c8c0b8058e41939a6190fa130a8515
#: ../develop/addons/schema-driven-forms/intro.rst:41
#: ../develop/plone/misc/context.rst:128
msgid "Tools"
msgstr ""

# af9e9826969f478e9dcbc7701a6e0884
#: ../develop/addons/schema-driven-forms/intro.rst:43
msgid ""
"As a library, *z3c.form* has spawned a number of add-on modules, ranging "
"from new field types and widgets, to extensions that add functionality to "
"the forms built using the framework. We will refer to a number of packages "
"in this tutorial. The most important packages are:"
msgstr ""

# 9b61bcbc65574eb88f0a0877551b08b4
#: ../develop/addons/schema-driven-forms/intro.rst:48
msgid ""
"`z3c.form`_ itself, the basic form library. This defines the standard form "
"view base classes, as well the default widgets. The *z3c.form* "
"`documentation <http://docs.zope.org/z3c.form>`_ applies to the forms "
"created here, but some of the packages below simplify or enhance the "
"integration experience."
msgstr ""

# af22d5f2243c446894ef17e352ea811d
#: ../develop/addons/schema-driven-forms/intro.rst:52
msgid ""
"`plone.z3cform`_ makes *z3c.form* usable in Zope 2. It also adds a number of"
" features useful in Zope 2 applications, notably a mechanism to extend or "
"modify the fields in forms on the fly."
msgstr ""

# 184c11f6008d4edfba5fb2970ba058c2
#: ../develop/addons/schema-driven-forms/intro.rst:55
msgid ""
"`plone.app.z3cform`_ configures *z3c.form* to use Plone-looking templates by"
" default, and adds few services, such as a widget to use Plone’s visual "
"editor and “inline” on-the-fly validation of forms. This package must be "
"installed for *z3c.form*-based forms to work in Plone."
msgstr ""

# 60ad0e276028437a82281464c941db3b
#: ../develop/addons/schema-driven-forms/intro.rst:60
msgid ""
"`plone.autoform`_ improves *z3c.form*’s ability to create a form from a "
"schema interface. By using the base classes in this package, schemata can be"
" more self-describing, for example specifying a custom widget, or specifying"
" relative field ordering. We will use *plone.autoform* in this tutorial to "
"simplify form setup."
msgstr ""

# e336dd8cff6c451889a6982133fb4d4e
#: ../develop/addons/schema-driven-forms/intro.rst:65
msgid ""
"`plone.directives.form`_ provides tools for registering forms using "
"convention-over-configuration instead of ZCML. It depends on `five.grok`_ "
"and adds support for the patterns that apply to the *grok.View* base class, "
"including automatic template association. We will use "
"*plone.directives.form* to configure our forms in this manual. You can read "
"more about this in the :doc:`five.grok manual </develop/addons/five-"
"grok/index>`. We will register all our forms using *plone.directives.form* "
"in this tutorial."
msgstr ""

# 953922a3cf78458dba3f97b113582856
#: ../develop/addons/schema-driven-forms/intro.rst:75
msgid "A note about versions"
msgstr ""

# 4d69505c8a04451db100d5cbd1bd1b06
#: ../develop/addons/schema-driven-forms/intro.rst:77
msgid "This manual is targeted at Plone 4.1 and above (Zope 2.13)."
msgstr ""

# 7499e0d311214d7c9f514ab69164c921
#: ../develop/import/index.rst:3
msgid "Importing content from other sources"
msgstr ""

# 9711a95827a14552ad783bf9d00ac454
#: ../develop/import/index.rst:7
msgid ""
"There are various tools to help you import content from other systems into "
"Plone"
msgstr ""

# f5e833ce84f54360a070117da334d521
#: ../develop/import/index.rst:14
msgid ""
"Rarely does a new website start all from scratch. Most of the time, you will"
" have to import content from other systems. These may include:"
msgstr ""

# 4a550851753749faa74d1aaca39166c3
#: ../develop/import/index.rst:17
msgid "other CMS systems, sometimes based on PHP/MySQL"
msgstr ""

# b222657123dd4eeda0c893c9d5c2f4a1
#: ../develop/import/index.rst:18
msgid "legacy sites in plain HTML"
msgstr ""

# bee7de5e49a44b0f9b3e85dbe0aec664
#: ../develop/import/index.rst:19
msgid "resources that exist on a filesystem, such as files and images"
msgstr ""

# fdc69b3a48b14ea986b8c54a4dbc7e06
#: ../develop/import/index.rst:20
msgid "other Plone sites, including older and unmaintained versions"
msgstr ""

# 0f75326532314615be96ed3233073cbf
#: ../develop/import/index.rst:22
msgid ""
"While Plone even comes with an FTP service, that can serve as a last-ditch "
"effort to get some pictures in, there are far more sophisticated tools "
"available."
msgstr ""

# b13f9789dbc949c4a9157e49a1aa604f
#: ../develop/import/index.rst:26
msgid "Transmogrify"
msgstr ""

# 26f16721dc6449b1b0ef8e13e41fadb8
#: ../develop/import/index.rst:28
msgid ""
"By far the most flexible tool available is something called "
"**collective.transmogrifier**."
msgstr ""

# dd95d4bb411d4cee92afedd18c1895d4
#: ../develop/import/index.rst:32
msgid ""
"A transmogrifier is fictional device used for transforming one object into "
"another object. The term was coined by Bill Waterson of Calvin and Hobbes "
"fame."
msgstr ""

# c096127957f04a22aeac58e64530a574
#: ../develop/import/index.rst:34
msgid ""
"In principle, what it does is to allow you to lay a 'pipeline', whereby an "
"object (a piece of content) is transported. At each part of the pipeline, "
"you can perform various operations on it: extract, change, add metadata, "
"etcetera. These operations are in the form of so-called 'blueprints'."
msgstr ""

# 1a58816b408345acaab0ab1d9ed2ad39
#: ../develop/import/index.rst:36
msgid ""
"In short: an object is gathered from a source you define. Then, it goes to "
"one or more segments of the pipeline to let the various blueprints work on "
"it, and in the end you use a 'constructor' to turn it into a Plone content "
"object."
msgstr ""

# b26a70ac605c49578920f6989df79629
#: ../develop/import/index.rst:38
msgid ""
"That's the basics, but by combining all your options you have an incredibly "
"flexible and powerful tool at hand."
msgstr ""

# d6495048970049fbbcdcb6f669d79d45
# 62b28cdb6cbc480a9487486177e374c0
#: ../develop/import/index.rst:41 ../develop/plone/content/importexport.rst:55
msgid "collective.transmogrifier"
msgstr ""

# 388414dcf2d24c20a715073126e63ded
#: ../develop/import/index.rst:43
msgid "See the extensive documentation:"
msgstr ""

# 580e87fd899c47bc932fa127d84688dc
#: ../develop/import/index.rst:52
msgid "Transmogrify helpers"
msgstr ""

# 81123cfe5ff34af880d0765bd9b6c6a0
#: ../develop/import/index.rst:54
msgid "Various add-ons exist to make working with transmogrify easier:"
msgstr ""

# 8bf52e8f602241fcb63be551e620b1f6
#: ../develop/import/index.rst:56
msgid ""
"`mr.migrator <https://pypi.python.org/pypi/mr.migrator>`_ is a way to easily"
" lay pipelines"
msgstr ""

# 9e3b1a769edb43baa9b72f5a6c32389b
#: ../develop/import/index.rst:57
msgid ""
"`funnelweb <https://pypi.python.org/pypi/funnelweb>`_ helps to parse static "
"sites, and crawl external sites"
msgstr ""

# 98daf1c2e37840418c2335562ba94cf6
#: ../develop/import/index.rst:58
msgid ""
"`parse2plone <https://pypi.python.org/pypi/parse2plone>`_ is meant to get "
"HTML content from the file system into Plone"
msgstr ""

# 604d498776274af984a2a662793b7b08
#: ../develop/import/index.rst:60
msgid "And a wide array of extra 'blueprints' exist, like"
msgstr ""

# 7292e5788d0c48a1b88409f12f620b6c
#: ../develop/import/index.rst:62
msgid ""
"`quintagroup.transmogrifier "
"<https://pypi.python.org/pypi/quintagroup.transmogrifier>`_"
msgstr ""

# 2c0afa12e11847db8915725e2117f9ed
#: ../develop/import/index.rst:63
msgid ""
"`transmogrify.sqlalchemy "
"<https://pypi.python.org/pypi/transmogrify.sqlalchemy/1.0.1>`_ to get "
"content out of just about any SQL database you can think of"
msgstr ""

# 3f33a833097e4292afd2c678963e18bc
#: ../develop/import/index.rst:64
msgid ""
"`collective.jsonmigrator "
"<https://pypi.python.org/pypi/collective.jsonmigrator>`_ is good at "
"migrating data via JSON format from very old Plone versions, going back all "
"the way to 2.x"
msgstr ""

# 3a3dfe5f27fa40238c6b9232d5c4da18
#: ../develop/import/index.rst:66
msgid ""
"Note this is only a selection, do a search on pypi to find more. NB "
"searching both on `transmogrify "
"<https://pypi.python.org/pypi?%3Aaction=search&term=transmogrify&submit=search>`_"
" and `transmogrifier "
"<https://pypi.python.org/pypi?%3Aaction=search&term=transmogrifier&submit=search>`_"
" gives more results!"
msgstr ""

# 534d9d4a25d44fcda9aee188d0233cbf
#: ../develop/index.rst:2
msgid "Developing for Plone"
msgstr ""

# cda7f0f660cb4122be8043778c49430b
#: ../develop/index.rst:6
msgid "Developing add-ons"
msgstr ""

# 89d546bc5d7e4b9394062aa18cfa17c1
#: ../develop/index.rst:14
msgid "Programming with Plone"
msgstr ""

# f40ea357a50943fea7f24047f2c65e2b
#: ../develop/index.rst:22
msgid "Developing for Plone Core"
msgstr ""

# 3aee3466681e469fa081b0b05fe7b983
#: ../develop/index.rst:31
msgid "Dev helper packages"
msgstr ""

# 1842ea24db894c948fa1cba331fd066f
#: ../develop/index.rst:34
msgid "plone.app.testing"
msgstr ""

# 680ee97725f9472d8c1bf2e655eab3ef
#: ../develop/index.rst:42
msgid "plone.api"
msgstr ""

# 8ad1ef7b5484415e99419c14316d5aea
# 2ac3a054fa5c47e18a3c15d895cca82b
#: ../develop/index.rst:50 ../develop/plone/i18n/translating_content.rst:487
msgid "plone.app.multilingual"
msgstr ""

# da09c016fdc04e909291a20ccd3cc740
#: ../develop/index.rst:58
msgid "plone.app.contenttypes"
msgstr ""

# ab5a7ed4ccd04d63b7c712e0bc84e9a8
#: ../develop/index.rst:66
msgid "plone.app.contentlisting"
msgstr ""

# 210b92afed1e4f21b47a9614a4d3eb52
#: ../develop/index.rst:74
msgid "plone.app.robotframework"
msgstr ""

# 3ac6f77107f34ad687297b7ec95398f6
#: ../develop/index.rst:83
msgid "Importing content from other systems"
msgstr ""

# 4dee8d458395431d867f8f05b8290089
#: ../develop/plone-coredev/agreement.rst:2
msgid "Contributing to Plone Core"
msgstr ""

# d0f0a2b2165e4313b3df478f80ad73db
#: ../develop/plone-coredev/agreement.rst:4
msgid ""
"There are many people and companies who rely on Plone on a day-to-day basis "
"so we have to introduce some level of code quality control. Plone's source "
"code is hosted in a git repository at  https://github.com/plone, but only "
"members of the developer team have commit-rights."
msgstr ""

# 0c55b5d55dfc49a38763328b003874a6
#: ../develop/plone-coredev/agreement.rst:6
msgid ""
"Just sending in a contributors agreement does not guarantee you access to "
"the repository, but once you send it in we will always have it on file for "
"when you are ready to contribute. We do ask that before requesting core "
"access you familiarize yourself a little with the community since they will "
"help you get ramped up:"
msgstr ""

# 1f707ab7f4ff4f31882f4599933bd3c8
#: ../develop/plone-coredev/agreement.rst:8
msgid ""
"Ask and (especially) answer questions on `stack overflow "
"<http://stackoverflow.com/>`_ and :doc:`IRC <culture>` with a focus on "
"getting to know the active developers a bit."
msgstr ""

# ec2e659ae57c4fb391f331f42d205801
#: ../develop/plone-coredev/agreement.rst:10
msgid ""
"Attend a `conference <http://plone.org/events/conferences>`_ / `symposium "
"<http://plone.org/events/regional>`_ or participate in a `sprint "
"<http://plone.org/events/sprints>`_ / `tune-up <http://plone.org/events"
"/plone-tuneups>`_. There are plenty of opportunities to meet the community "
"and start contributing through various coding sessions, either in person or "
"on the web. You may even be able to get immediate core access at a "
"conference if you are flexing your mad coding skills and the right people "
"are attending."
msgstr ""

# 061c5c4233354928bc88b73d25ae8dae
#: ../develop/plone-coredev/agreement.rst:12
msgid ""
"Get your feet wet by contributing to the `collective "
"<http://collective.github.com/>`_. Don't worry about getting it perfect or "
"asking for help; this way you get to know us and we improve our code "
"together as a community."
msgstr ""

# 69906d2e9378436aae41ee9b12d0d073
#: ../develop/plone-coredev/agreement.rst:14
msgid ""
"**Patches:** Historically we encouraged people to submit patches to the "
"ticket collector. These tickets are usually ignored forever. Technically, in"
" order for us to accept your patch you must sign the contributors agreement."
" If you want to contribute fixes, please just sign the agreement and go "
"through the standard github pull request process described until you feel "
"comfortable to bypass review. If the ticket is trivial, or you're fixing "
"documentation, you do not need to sign a contributor's agreement."
msgstr ""

# 05158fbefc8c4e7aafbcec3b941dcfa3
#: ../develop/plone-coredev/agreement.rst:16
msgid ""
"Once you have familiarized yourself with the community and you are excited "
"to contribute to the core:"
msgstr ""

# e965700b49cc43549d3782b4e42b37c0
#: ../develop/plone-coredev/agreement.rst:18
msgid ""
"Sign the contributor agreement at http://plone.org/foundation/contributors-"
"agreement/agreement.pdf/at_download/file, then either snail mail it to the "
"address provided or scan and email it to assignments@plone.org. This offers "
"both copyright protection and ensures that the Plone Foundation is able to "
"exercise some control over the codebase, ensuring it is not appropriated for"
" someone's unethical purposes. For questions about why the agreement is "
"required, please see :doc:`Contributor’s Agreement for Plone Explained "
"<contributors_agreement_explained>`."
msgstr ""

# 05224b0521574c7a80683b7c481a191e
#: ../develop/plone-coredev/agreement.rst:20
msgid ""
"If you aren't sure where to start or just want more direction, feel free to "
"get on IRC, mailing lists, Twitter, etc... and ask for help. While there is "
"no official mentoring process, there are plenty of people willing to act in "
"that role and guide you through the steps of getting involved in the "
"community. A common way to start contributing is to participate in a Plone "
"tune-up day. Tune-ups are filled with a good mix of newbies and experienced "
"devs alike. For more information, please see  http://plone.org/tuneup."
msgstr ""

# 651d83a262ca4d62b510a51eab43d9ba
#: ../develop/plone-coredev/agreement.rst:22
msgid "**Welcome to the Plone community!**"
msgstr ""

# 43626fa1ec72409ba9b621cfc1aef52e
#: ../develop/plone-coredev/agreement.rst:26
msgid "Dealing with pull requests on GitHub"
msgstr ""

# 07d42f25637545ecbf07feff8cf6ca36
#: ../develop/plone-coredev/agreement.rst:28
msgid ""
"Before we can merge a pull request, we have to check that the author has "
"signed the contributor's agreement."
msgstr ""

# e807d4ff0a644d2f99c7ed9aaa98c7f7
#: ../develop/plone-coredev/agreement.rst:30
msgid ""
"If they're listed in https://github.com/plone?tab=members, the author has "
"signed so we can go ahead and merge."
msgstr ""

# b071f52349b5478c95f1e9525c3f63b1
#: ../develop/plone-coredev/agreement.rst:32
msgid ""
"If they aren't listed there, there's still a chance they have signed the "
"contributor's agreement. Check on IRC `#plone-framework "
"<http://webchat.freenode.net?channels=plone-framework>`_."
msgstr ""

# fa28a5e0022f4e35b878b47e486d6efb
#: ../develop/plone-coredev/agreement.rst:35
msgid ""
"Pull requests without contributor's agreement can only be merged in trivial "
"cases, and only by the release manager."
msgstr ""

# dbaab0a3b81343e9b1c6384d4eba3583
#: ../develop/plone-coredev/contributors_agreement_explained.rst:2
msgid "Contributor’s Agreement for Plone Explained"
msgstr ""

# 223848bb4d244cb699161476599876f4
#: ../develop/plone-coredev/contributors_agreement_explained.rst:4
msgid ""
"Prospective contributors to the Plone core code base are required to sign a "
"contributor’s agreement, which assigns copyright in the code to the Plone "
"Foundation, the non-profit organization which stewards the Plone code base. "
"This document explains the purposes of this, along with questions and "
"answers about what this means."
msgstr ""

# bf93b07e5b6b4433bea4323ee8bf40a0
#: ../develop/plone-coredev/contributors_agreement_explained.rst:10
msgid ""
"The Plone Contributor Agreement can be found at: "
"`http://plone.org/foundation/contributors-agreement/agreement.pdf`_"
msgstr ""

# 25829687c5b64521854e051788f1b14b
#: ../develop/plone-coredev/contributors_agreement_explained.rst:14
msgid "About the Plone Contributor Agreement"
msgstr ""

# 2d8c847e9bf14a07975cd7ccaa1dce99
#: ../develop/plone-coredev/contributors_agreement_explained.rst:16
msgid ""
"The Foundation feels that it benefits the community for a single "
"organization to hold the rights to Plone. Prior to the Foundation, the "
"intellectual property of Plone was jointly held by individual developers and"
" by Alan Runyan and Alexander Limi. The community members who formed the "
"Foundation felt that having the Foundation hold these rights provides "
"several benefits:"
msgstr ""

# 615b9b39e65745ada6d8967c6f3d3dfb
#: ../develop/plone-coredev/contributors_agreement_explained.rst:22
msgid ""
"**Minimizing confusion / maximizing business compatibility** -- "
"Organizations considering adopting Plone have a simple answer for \"Who owns"
" this?\", rather than a more complicated answer that might scare away the "
"legally-cautious."
msgstr ""

# af9ff5e9bfbe45e8bdaedd0ee74daa99
#: ../develop/plone-coredev/contributors_agreement_explained.rst:27
msgid ""
"**Trademark protection** -- By having the Foundation hold the trademarks and"
" rights to the Plone branding assets, it can effectively protect these from "
"unfair use."
msgstr ""

# 67f7cfd5494e4ea29a84646732342137
#: ../develop/plone-coredev/contributors_agreement_explained.rst:31
msgid ""
"**Guarantee of future Open Source versions** -- The Foundation's contributor"
" agreement ensures that there will **always** be an OSI- approved version of"
" Plone."
msgstr ""

# 1f5c4b81a578437aa6a95286ef50e026
#: ../develop/plone-coredev/contributors_agreement_explained.rst:37
msgid "Questions & Answers"
msgstr ""

# 72877d42126c4b318ddafa4c80b2f5dc
#: ../develop/plone-coredev/contributors_agreement_explained.rst:39
msgid "What does the contributor's agreement cover?"
msgstr ""

# c142a1366e0449379dae00a7b63d6b69
#: ../develop/plone-coredev/contributors_agreement_explained.rst:41
msgid ""
"This agreement is for the Plone core codebase only. The Plone core codebase "
"is that code which lives in the Plone core version repositories, currently "
"located at `http://dev.plone.org/plone`_ and `https://github.com/plone`_. "
"Contributions to the \"Collective,\" currently located at "
"`http://dev.plone.org/collective`_ and `https://github.com/collective`_ are "
"not assigned to the Plone Foundation, and are made available under whatever "
"license the project developers wish to use, although add-on products that "
"import from GPLed Plone code are of course subject to the terms of the GPL, "
"which requires derived works to be GPL licensed."
msgstr ""

# 06531b044527425fabf435949453f3a6
#: ../develop/plone-coredev/contributors_agreement_explained.rst:50
msgid "What rights will I continue to have for my contributions?"
msgstr ""

# e3cbae5411d04f93b9437eac284ca374
#: ../develop/plone-coredev/contributors_agreement_explained.rst:52
msgid ""
"Contributors are asked to transfer their intellectual property rights to the"
" Foundation. In return, they will be given back irrevocable rights to use "
"and distribute their contributions. They can even give their contributions "
"to other Open Source projects (as long as those projects are compatible with"
" the license Plone itself is issued under) or use them in non-Open Source "
"commercial applications (if that is compatible with the license Plone is "
"under)."
msgstr ""

# a4ba809fd85b4474923fa2531d083c10
#: ../develop/plone-coredev/contributors_agreement_explained.rst:60
msgid ""
"Do I have to sign the contributor's agreement to make checkins to the Plone "
"core codebase?"
msgstr ""

# 2020e6879eed4a85a32d4df87101f787
#: ../develop/plone-coredev/contributors_agreement_explained.rst:60
msgid "Yes."
msgstr ""

# 6bd6fdefed8e4ca08ccc1b2d7192ec78
#: ../develop/plone-coredev/contributors_agreement_explained.rst:62
msgid ""
"Do I have to sign the contributor's agreement to submit a patch to the Plone"
" core codebase?"
msgstr ""

# 7e340bf2478b44739bf4c7c8389e2300
#: ../develop/plone-coredev/contributors_agreement_explained.rst:64
msgid ""
"We enthusiastically welcome patches, but we can't merge them until you sign "
"and return a contributor's agreement. (Unless, in the judgement of the Plone"
" Release Manager, the patch is so tiny as not to constitute a \"creative "
"work.\" See the `Policy for Contributor Agreements and Patches`_ for more "
"detail on this policy.)"
msgstr ""

# 8bc4c49ddb0b427ab8507765d293f390
#: ../develop/plone-coredev/contributors_agreement_explained.rst:69
msgid ""
"Can I grant the Plone foundation a non-exclusive license to my contributions"
" rather than an exclusive license, so that I can contribute the same code to"
" other projects under different terms or use the contribution for other "
"commercial endeavors?"
msgstr ""

# fe5668c457144435a00e11f3da6bd446
#: ../develop/plone-coredev/contributors_agreement_explained.rst:71
msgid "Not under the current version of the contributors agreement."
msgstr ""

# d382b5507d264d93a181d82a58b392f6
#: ../develop/plone-coredev/contributors_agreement_explained.rst:73
msgid "Does the Foundation control use of the Plone trademark?"
msgstr ""

# c4eb1c215e5a433aa7da51890f163149
#: ../develop/plone-coredev/contributors_agreement_explained.rst:75
msgid ""
"Yes. In order to keep the trademark, the Foundation (or any trademark owner)"
" must demonstrate that they have acted to protect it."
msgstr ""

# 61f351496751491e8e334810ca506deb
#: ../develop/plone-coredev/contributors_agreement_explained.rst:78
msgid ""
"Will Plone always be available under an OSI-approved/Open Source license? "
"Couldn't the Board change its mind about this?"
msgstr ""

# 4b059b30d2cc4c069bc40f7f3662f928
#: ../develop/plone-coredev/contributors_agreement_explained.rst:80
msgid ""
"Plone will always be available under an OSI-approved license; this is "
"written into the language of the contributor agreement each developer and "
"the foundation sign."
msgstr ""

# 063f1bab41da43ae8bcdd53db2f6bd08
#: ../develop/plone-coredev/contributors_agreement_explained.rst:83
msgid "Will Plone ever be available under a non-GPL license?"
msgstr ""

# 4f555e8e4ddd44a4b1b7ff4f0aa50430
#: ../develop/plone-coredev/contributors_agreement_explained.rst:85
msgid ""
"The current Plone approach states that companies can negotiate a non-GPL "
"license. Thus, the Foundation might pursue a dual-licensing (GPL and non-"
"GPL) scheme - but, at this time, the Board has not yet created any policies "
"on this. This is an important question for the community, of course, and the"
" Foundation intends to have this conversation in a transparent way."
msgstr ""

# 86ed1f7a7318440a9953c61802a5dab2
#: ../develop/plone-coredev/contributors_agreement_explained.rst:91
msgid "Why would anyone want a non-GPL Plone?"
msgstr ""

# a6aa4f104eca4cd398110b53d072f833
#: ../develop/plone-coredev/contributors_agreement_explained.rst:93
msgid ""
"Two possible reasons: Some companies are reluctant to do in-house "
"modifications of framework-like systems (such as Plone) that are under the "
"GPL, fearing that a clause in the GPL might force them to disclose their "
"internal work - thus wanting to license it under (for example) a BSD-style "
"license. Second, companies may wish to offer a commercial version of Plone, "
"under a conventional shrink-wrap license, without the obligation to reveal "
"source code or share changes."
msgstr ""

# 2cafb5b7dd674edd86727d10754c1fc7
#: ../develop/plone-coredev/contributors_agreement_explained.rst:100
msgid "How much would a non-GPL version of Plone cost?"
msgstr ""

# 3833db26228148c8b104fa4bf5d5330d
#: ../develop/plone-coredev/contributors_agreement_explained.rst:102
msgid ""
"Would a small company be able to afford one? -- Neither the Foundation nor "
"the Board have made any decisions about a non-GPL version, let alone about "
"pricing. However, one of the Foundation's stated goals is to maintain a "
"level playing field for Plone while trying to benefit all of the Plone "
"commons. If a non-GPL version was available, and a large company bought it, "
"added features to it, and sold it, wouldn't they be using our work without "
"an obligation to give back? It's helpful to remember the core value open "
"source provides: distributed development, maintenance, security checking, "
"and support. Companies that build large features for Plone are **already** "
"having to make decisions of whether to release their products under an open "
"source license or not (since they could always release them as a Product, "
"not as a modification to the Plone core). Despite this, though, many large "
"and excellent contributions - such as Archetypes - have been made, and the "
"Foundation hopes that companies will continue to do so. In any event, a "
"company that purchases a non-GPL license (should such ever become available)"
" is contributing financial resources to our community, which can be used to "
"further develop, market, and protect the GPL version of Plone."
msgstr ""

# 8f58332619ab451c8715225e2790c577
#: ../develop/plone-coredev/culture.rst:3
msgid "Plone Developer Culture"
msgstr ""

# ff2097fac5494f0d9d400cce3976fb8b
#: ../develop/plone-coredev/culture.rst:5
msgid ""
"If you are going to be contributing back to Plone, we ask a couple things. "
"First, please join the `plone-developers "
"<https://lists.sourceforge.net/lists/listinfo/Plone-developers>`_ list and "
"at minimum lurk around. You will quickly see how people work and what kind "
"of things are best suited for group discussion. Second, please ask for help "
"setting up your environment in IRC. Most of our developers work there and "
"you will get the best advice there."
msgstr ""

# 75ab848760d0415190cca8678b936ac1
#: ../develop/plone-coredev/culture.rst:7
msgid ""
"Download an IRC client (Or using an alternative client `through the web "
"<http://webchat.freenode.net/>`_) and jump on to `#plone-framework "
"<http://webchat.freenode.net?channels=plone-framework>`_ (and/or `#plone "
"<http://webchat.freenode.net?channels=plone>`_ - both on freenode). The "
"people in `#plone-framework <http://webchat.freenode.net?channels=plone-"
"framework>`_ have been using plone for a very long time and are happy to "
"help you get going and make the right decisions. More info on IRC can be "
"found at http://plone.org/support/chat."
msgstr ""

# 0f24cf88eb1d4744a8982ec9e45ae6ea
#: ../develop/plone-coredev/culture.rst:9
msgid ""
"If you are actively committing code, join the `test bot mailing list "
"<https://lists.plone.org/mailman/listinfo/plone-testbot/>`_ so you know if "
"your recent commits have broken (or fixed!) the build."
msgstr ""

# 4c6b4fbda8f1471aa421ed80c776209a
#: ../develop/plone-coredev/culture.rst:11
msgid ""
"If you are in a timezone when things are not very active, please post to the"
" plone-developers mailing list or grab a beer and wait for people to wake "
"up."
msgstr ""

# fffaadc37aba4bf4a364a7d734e4ccd8
#: ../develop/plone-coredev/culture.rst:13
msgid ""
"When in doubt, please ask. The code base is very complicated and everyone is"
" vested in the right thing happening. Despite the occasional grouch here and"
" there, most plone devs will go out of their way to get you on the right "
"path."
msgstr ""

# 0ce217876a4248598d11fae29772674d
# 945593365a414c67b53158f44e9e4860
#: ../develop/plone-coredev/documentation.rst:2
#: ../develop/plone-coredev/pt_BR/documentation.rst:2
msgid "Writing documentation"
msgstr ""

# 979298a282e84c9282b35023fb9c5f25
# 5c93eccc174f4a64b638d30afe4d4b2b
#: ../develop/plone-coredev/documentation.rst:5
#: ../develop/plone-coredev/pt_BR/documentation.rst:5
msgid "Documentation of Plone"
msgstr ""

# d2962ebbca6c47fcaf9e63eaf08f1938
#: ../develop/plone-coredev/documentation.rst:7
msgid ""
"`docs.plone.org <http://docs.plone.org>`_ contains a full overview of the "
"current documentation for Plone."
msgstr ""

# c6d336e5caf74feea1666020c68159bc
# 0cf4dc56bace4f8c867b6bda0888e14c
#: ../develop/plone-coredev/documentation.rst:10
#: ../develop/plone-coredev/pt_BR/documentation.rst:24
msgid "Documenting a package"
msgstr ""

# d775ee93e8c34fde95f86e337cc1873b
# 4a64923017684d2c9034236fea8e6380
#: ../develop/plone-coredev/documentation.rst:13
#: ../develop/plone-coredev/pt_BR/documentation.rst:27
msgid "The basics"
msgstr ""

# 63441e539e64477abdc5def89c3fe9ac
# 8a7121b0cd46485891a211f2ef6d5821
#: ../develop/plone-coredev/documentation.rst:15
#: ../develop/plone-coredev/pt_BR/documentation.rst:29
msgid ""
"At the very least, your package should include the following forms of "
"documentation:"
msgstr ""

# 874be71709074a44a908805992f719f7
# 7440821aa1c84b98bcedf26c132771a3
#: ../develop/plone-coredev/documentation.rst:26
#: ../develop/plone-coredev/es/documentation.rst:41
msgid ":file:`README.rst`"
msgstr ""

# 5c73e106616d4d45a1bd311cf91e43e3
# 06f4e35596224842a6db632e3a181996
#: ../develop/plone-coredev/documentation.rst:18
#: ../develop/plone-coredev/pt_BR/documentation.rst:32
msgid ""
"The readme is the first entry point for most people to your package. It will"
" be included on the PyPI page for your egg, and on the front page of its "
"github repository. It should be formatted using `reStructuredText (reST) "
"<http://docutils.sourceforge.net/rst.html>`_ in order to get formatted "
"properly by those systems."
msgstr ""

# a53d6998d3e74e0888473b262cda71fd
#: ../develop/plone-coredev/documentation.rst:20
msgid ":file:`README.rst` should include:"
msgstr ""

# 166980903de44cb280158f6028cdf845
# 496c3b4781bf4402b3278cc49fc89b36
#: ../develop/plone-coredev/documentation.rst:22
#: ../develop/plone-coredev/pt_BR/documentation.rst:36
msgid "A brief description of the package's purpose"
msgstr ""

# 3d045d36124c48c68f86a780908c74d7
# 7302577e24034545ba7a50c3c5e73157
#: ../develop/plone-coredev/documentation.rst:23
#: ../develop/plone-coredev/pt_BR/documentation.rst:37
msgid "Installation information (How do I get it working?)"
msgstr ""

# 17f3523e99f1426880a231c503da1725
# 8db8d8cbe1304865b17494db33859c92
#: ../develop/plone-coredev/documentation.rst:24
#: ../develop/plone-coredev/pt_BR/documentation.rst:38
msgid "Compatibility information (what versions of Plone does it work with?)"
msgstr ""

# 35ec468371b04d48a48e8f9aaa88ac70
# aa241ff3a0454549b999027364b08da2
#: ../develop/plone-coredev/documentation.rst:25
#: ../develop/plone-coredev/pt_BR/documentation.rst:39
msgid "Links to other sources of documentation"
msgstr ""

# 3dc18963b0bc48609850a4339e7e1626
# bbcd2ee72f54430bab3cf2d94d809f65
#: ../develop/plone-coredev/documentation.rst:26
#: ../develop/plone-coredev/pt_BR/documentation.rst:40
msgid "Links to issue trackers, mailing lists, and other ways to get help."
msgstr ""

# c2630abe88f54ae398c64be19011b95c
# 62cd596906f744d78be9b35febbe08f0
#: ../develop/plone-coredev/documentation.rst:28
#: ../develop/plone-coredev/pt_BR/documentation.rst:42
msgid "The manual (a.k.a. narrative documentation)"
msgstr ""

# b4df589d73c34ed18ded825030de741f
# 50c7eea5530945939b83cbf0054769f6
#: ../develop/plone-coredev/documentation.rst:30
#: ../develop/plone-coredev/pt_BR/documentation.rst:44
msgid ""
"The manual goes into further depth for people who want to know all about how"
" to use the package."
msgstr ""

# fe1bf941fa6f4074ad1f69bedb947dcb
# ba1c8dd769ad4645ac5aac442f68e0c5
#: ../develop/plone-coredev/documentation.rst:32
#: ../develop/plone-coredev/pt_BR/documentation.rst:46
msgid "It includes topics like:"
msgstr ""

# f377643d48504f5fb38fe5fc662b7220
# c46f68cacf1b493ab6339f62a03ed40d
#: ../develop/plone-coredev/documentation.rst:34
#: ../develop/plone-coredev/pt_BR/documentation.rst:48
msgid "What the features are"
msgstr ""

# fb9c43a802b64bb0be4b64cf15261773
# 2c53480e670a4af181b5bbefe559a58b
#: ../develop/plone-coredev/documentation.rst:35
#: ../develop/plone-coredev/pt_BR/documentation.rst:49
msgid "How to use them (in English—not doctests!)"
msgstr ""

# f45e90ae3b174926a49ed7cef5a8019f
# ac8739fb6d31455695c08000a32ac3a7
#: ../develop/plone-coredev/documentation.rst:36
#: ../develop/plone-coredev/pt_BR/documentation.rst:50
msgid "Information about architecture"
msgstr ""

# dd62cf82cb924a3fac60acd527fa7dec
# e753285aa3bb4442a302bc1d6de4301d
#: ../develop/plone-coredev/documentation.rst:37
#: ../develop/plone-coredev/pt_BR/documentation.rst:51
msgid "Common gotchas"
msgstr ""

# 81c0f8fa87344156af9e96f702f11310
# 1139fca473454abba272e285ab1cedc6
#: ../develop/plone-coredev/documentation.rst:39
#: ../develop/plone-coredev/pt_BR/documentation.rst:53
msgid ""
"The manual should consider various audiences who may need different types of"
" information:"
msgstr ""

# 2dfbf67424e14db0b1e8b38a6d49476a
# 78dc72385e3b418f840200fc8ec02843
#: ../develop/plone-coredev/documentation.rst:41
#: ../develop/plone-coredev/pt_BR/documentation.rst:55
msgid "End users who use Plone for content editing but don't manage the site."
msgstr ""

# 55dd6b6ff525430191e2e2538f71aac0
# b4e63c3e99e549699398ebd022b405b7
#: ../develop/plone-coredev/documentation.rst:42
#: ../develop/plone-coredev/pt_BR/documentation.rst:56
msgid "Site administrators who install and configure the package."
msgstr ""

# f1e24c82a8db413daca5c7b4279cbd58
# d06a40c7ec744a09b603062d09c74b97
#: ../develop/plone-coredev/documentation.rst:43
#: ../develop/plone-coredev/pt_BR/documentation.rst:57
msgid ""
"Integrators who need to extend the functionality of the package in code."
msgstr ""

# f1ddccf8c63d4b66af3531d9775aff0f
# 2c1ea59cdcfe4badbcf8f3dccfb21fb6
#: ../develop/plone-coredev/documentation.rst:44
#: ../develop/plone-coredev/pt_BR/documentation.rst:58
msgid "Sysadmins who need to maintain the server running the software."
msgstr ""

# 151e157839024199af5545396b7d0484
#: ../develop/plone-coredev/documentation.rst:46
msgid ""
"Simple packages with limited functionality can get by with a single page of "
"narrative documentation. In this case it's simplest to include it in an "
"extended :file:`README.rst`. Some excellent examples of a single-page readme"
" are https://pypi.python.org/pypi/plone.outputfilters and "
"https://github.com/plone/plone.app.caching"
msgstr ""

# 6ed68f234208490fb17a80c2d56f9aaa
#: ../develop/plone-coredev/documentation.rst:48
msgid ""
"If your project is moderately complex, you may want to set up your "
"documentation with multiple pages. The best way to do this is to add Sphinx "
"to your project and host your docs on readthedocs.org so that it rebuilds "
"the documentation whenever you push to github. If you do this, your "
":file:`README.rst` must link off site to the documentation."
msgstr ""

# 9aff964634614b30bc10365b3d6843da
# caa0ccfdbb334c94912dd8d3fb43e398
#: ../develop/plone-coredev/documentation.rst:50
#: ../develop/plone-coredev/pt_BR/documentation.rst:64
msgid "Reference (a.k.a. API documentation)"
msgstr ""

# a50ec318b12645d0a0c3eb9e2ca49cdb
# e6a5decb12a148c7adc3a64a02deddf6
#: ../develop/plone-coredev/documentation.rst:52
#: ../develop/plone-coredev/pt_BR/documentation.rst:66
msgid ""
"An API reference provides information about the package's public API (that "
"is, the code that the package exposes for use from external code.) It is "
"meant for random access to remind the reader of how a particular class or "
"method works, rather than for reading in its entirety."
msgstr ""

# e6fd7b9bb4e14c9fa78aa2fb83657b52
# a66054961d854ec6acb8a8e04aabca83
#: ../develop/plone-coredev/documentation.rst:54
#: ../develop/plone-coredev/pt_BR/documentation.rst:68
msgid ""
"If the codebase is written with docstrings, API documentation can be "
"automatically generated using Sphinx."
msgstr ""

# 50cfb6fa360d4d799d396ecadc2f2d36
# 68fff0bb5a6e4f72ac75b309af792f91
#: ../develop/plone-coredev/documentation.rst:72
#: ../develop/plone-coredev/es/documentation.rst:87
msgid ":file:`CHANGES.txt`"
msgstr ""

# 3ca8d0fb0a0142adb7230cb1c07a6eb5
# 2118c45ef85a4f6a9976998964a4fd89
#: ../develop/plone-coredev/documentation.rst:57
#: ../develop/plone-coredev/pt_BR/documentation.rst:71
msgid ""
"The changelog is a record of all the changes made to the package and who "
"made them, with the most recent changes at the top. This is maintained "
"separately from the git commit history to give a chance for more user-"
"friendly messages and to and record when releases were made."
msgstr ""

# 418b721120874f0786696f2ad6227d51
# 0a35b2f9c25d41d5b29276cb5c3ae466
#: ../develop/plone-coredev/documentation.rst:59
#: ../develop/plone-coredev/pt_BR/documentation.rst:73
msgid "A changelog looks something like::"
msgstr ""

# 5dc5e30e53814d1993063cb781531cdc
# d4bda49545064c2e8c3d1bf20fed5c05
#: ../develop/plone-coredev/documentation.rst:70
#: ../develop/plone-coredev/pt_BR/documentation.rst:84
msgid ""
"See https://raw.github.com/plone/plone.app.caching/master/CHANGES.rst for a "
"full example."
msgstr ""

# 9592032b664d48b6a05be7f62703c790
# b0957d797da64335af305d58aee96530
#: ../develop/plone-coredev/documentation.rst:72
#: ../develop/plone-coredev/pt_BR/documentation.rst:86
msgid ""
"If a change was related to a bug in the issue tracker, the changelog entry "
"should include a link to that issue."
msgstr ""

# f0882ccfa7d6479aa7e2d80a06f12d38
# 8cad571d82654b7a8db8a84609fedfb0
#: ../develop/plone-coredev/documentation.rst:78
#: ../develop/plone-coredev/pt_BR/documentation.rst:92
msgid "Licenses"
msgstr ""

# f55444a1a97749b1a85b6f37c0bd1af7
#: ../develop/plone-coredev/documentation.rst:75
msgid ""
"Information about the open source license used for the package should be "
"placed within the :file:`docs` directory."
msgstr ""

# 89eaee9cba9e4ae7b3732d1ced0af889
#: ../develop/plone-coredev/documentation.rst:77
msgid ""
"For Plone core packages, this includes :file:`LICENSE.txt` and "
":file:`LICENSE.GPL`."
msgstr ""

# 0e4adcc6eff7405e85773be2148bfe73
# 08e22d4ab57a4c32827a61b8456ed476
#: ../develop/plone-coredev/documentation.rst:81
#: ../develop/plone-coredev/pt_BR/documentation.rst:95
msgid "Using Sphinx"
msgstr ""

# 2583b2bfd85c44e9acb2b81aca7a920b
# d6a7d2faf8e74cf79c01d26151729c7a
#: ../develop/plone-coredev/documentation.rst:83
#: ../develop/plone-coredev/pt_BR/documentation.rst:99
msgid "reST References:"
msgstr ""

# 981492d158e848d7a152dc18975fd805
# 1449b272b2264970ab718526de89d86f
#: ../develop/plone-coredev/documentation.rst:85
#: ../develop/plone-coredev/pt_BR/documentation.rst:99
msgid "`Sphinx reST Primer <http://sphinx-doc.org/rest.html>`_"
msgstr ""

# 703e20229be541a897ecf5bb8bc34205
#: ../develop/plone-coredev/es/agreement.rst:4
msgid "Contribuyendo al núcleo de Plone"
msgstr ""

# 794a1211fa6c4260948effa234a3249d
#: ../develop/plone-coredev/es/agreement.rst:6
msgid ""
"Hay muchas personas y compañías quiénes confían en Plone diariamente, por "
"tanto nosotros tenemos que introducir algún nivel de control en la calidad "
"del código fuente. Todo el código de fuente de Plone es hospedado en un "
"repositorio git en https://github.com/plone, solo para los miembros del "
"equipo de desarrollado que tienen derecho de hacer revisiones."
msgstr ""

# 9f533c6abc3248bd88dbdd74c39b2ced
#: ../develop/plone-coredev/es/agreement.rst:8
msgid ""
"El enviar el acuerdo de contribuciones (contributors agreement) no garantiza"
" que se otorguen acceso al repositorio, pero una vez que lo envía siempre lo"
" tenemos en el archivo para cuando usted está listo para contribuir. "
"Nosotros pedimos que antes de solicitar el acceso de escritura al núcleo de "
"Plone, usted debe familiarizarse un poco con la comunidad, ya que le ayudará"
" a acelerar su iniciación:"
msgstr ""

# 532623abbf4c47488033d38c6e9157a2
#: ../develop/plone-coredev/es/agreement.rst:10
msgid ""
"Preguntar y (especialmente) responder a preguntas en el sitio web `stack "
"overflow <http://stackoverflow.com/>`_ y canal :doc:`IRC <culture>` con un "
"enfoque para conocer un poco a los desarrolladores activos."
msgstr ""

# 2c9a20730cc4419288c70ac93c7b221e
#: ../develop/plone-coredev/es/agreement.rst:12
msgid ""
"Asistir una `conferencia <http://plone.org/events/conferences>`_ / un "
"`simposio <http://plone.org/events/regional>`_ o participar en un `sprints "
"<http://plone.org/events/sprints>`_ / `tune-ups <http://plone.org/events"
"/plone-tuneups>`_. Hay abundancia de oportunidades de conocer la comunidad y"
" comenzar a contribuir a través de varias sesiones de programación, ya sea "
"en persona o en la web. Usted puede incluso ser capaz de obtener acceso "
"inmediato en una conferencia si usted ha demostrando sus habilidades de "
"programación y las personas adecuada asisten."
msgstr ""

# 6d826e96036f44b7a7e3bbc3460e4341
#: ../develop/plone-coredev/es/agreement.rst:14
msgid ""
"Puede iniciarse en la contribuciones en el repositorio de `collective "
"<http://collective.github.com/>`_. No se preocupe por hacer todo perfecto o "
"no complique al pedir ayuda, de esta forma usted nos hace saber a nosotros "
"como mejorar nuestro código juntos como una comunidad."
msgstr ""

# 95717f3a8612413c8eefdfb62495d943
#: ../develop/plone-coredev/es/agreement.rst:16
msgid ""
"**Parches / Patches:** Históricamente nosotros animamos a las personas para "
"entregar parches *(patches)* al colector del ticket. Estos tickets suelen "
"ser ignorados para siempre. Técnicamente, para que nosotros aceptemos su "
"parche usted debe firmar el *contributor agreement*. Si usted quiere "
"contribuir a corregir del código, por favor sólo debe firmar el acuerdo y "
"pasar por el proceso estándar github de pull request descrito hasta que se "
"sienta cómodo para pasar revisión. Si el ticket es trivial, o está "
"arreglando la documentación, no es necesario firmar el *contributor "
"agreement*."
msgstr ""

# d9318ede82c849afbe7d42ba14addd44
#: ../develop/plone-coredev/es/agreement.rst:18
msgid ""
"Una vez te se allá familiarizado usted mismo con la comunidad y usted está "
"entusiasmado para contribuir al núcleo:"
msgstr ""

# d65f5d110641409a8156bfad47579657
#: ../develop/plone-coredev/es/agreement.rst:20
msgid ""
"Firme y envié un correo con el contributor agreement ubicado en "
"http://plone.org/foundation/contributors-"
"agreement/agreement.pdf/at_download/file, entonces sea bien por correo "
"postal a la dirección indicada o escanear y enviar por correo electrónico a "
"assignments@plone.org. Esto ofrece protección de derechos de autor y se "
"asegura de que la Fundación Plone que sea capaz de ejercer un cierto control"
" sobre el código base, asegurándose de que no es apropiado para fines poco "
"éticos de alguien. Para preguntas acerca de por qué el acuerdo está "
"requerido, por favor ver :doc:`Contributor’s Agreement for Plone Explained "
"<contributors_agreement_explained>`."
msgstr ""

# b3b7c08ea38144d5b48ea0111a38f590
#: ../develop/plone-coredev/es/agreement.rst:22
msgid ""
"Si usted no esta seguro por dónde empezar o solo querer más dirección, "
"siéntase libre de usar el canal IRC, las listas de correo, Twitter, etc... y"
" pedir ayuda. Si bien no existe un proceso oficial de tutoría, hay un montón"
" de personas dispuestas a actuar en ese rol y le guiará por los pasos de "
"involucrarse en la comunidad. Una manera común de empezar las contribuciones"
" es participar en un día de tune-up de Plone. Los Tune-ups está llenado con "
"una buena mezcla de programadores recién iniciados y experimentados "
"igualmente. Para más información, por favor ver http://plone.org/tuneup."
msgstr ""

# 85a94d8fdb7e404ea29e8f85f7b61971
#: ../develop/plone-coredev/es/agreement.rst:24
msgid "**¡Sea bienvenido a la comunidad Plone!**"
msgstr ""

# 5e017d5d0cd34d8dba34e5d9b8427db7
#: ../develop/plone-coredev/es/agreement.rst:28
msgid "Lidiar con los pull requests en GitHub"
msgstr ""

# 00eb1c17c5634b1fb85aa4ad7400e446
#: ../develop/plone-coredev/es/agreement.rst:30
msgid ""
"Antes de que podamos ``merge`` un ``pull request``, tenemos que comprobar "
"que el autor ha firmado el acuerdo del contribuyente."
msgstr ""

# 905b1aa80a3841599ccad5936ffe43b5
#: ../develop/plone-coredev/es/agreement.rst:32
msgid ""
"Si están listados en https://github.com/plone?tab=members, el autor ha "
"firmado para que podamos seguir adelante y hacer un ``merge``."
msgstr ""

# e30daaf1986b4675bbf88c0268056a51
#: ../develop/plone-coredev/es/agreement.rst:34
msgid ""
"Si no están en la lista, todavía hay una posibilidad de que han firmado el "
"acuerdo del contribuyente. Verifique eso en el canal IRC `#plone-framework "
"<http://webchat.freenode.net?channels=plone-framework>`_."
msgstr ""

# 5a7543b441cc4fd6874c4185a3bcf1c7
#: ../develop/plone-coredev/es/agreement.rst:37
msgid ""
"Los ``pull requests`` sin el acuerdo del contribuyente sólo puede ser "
"fusionadas en casos triviales, y sólo por el encargado de la liberación de "
"Plone o *release manager*."
msgstr ""

# e36b77c26ab241e68208a303a1560946
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:4
msgid "Acuerdo de contribución para Plone explicado"
msgstr ""

# 6150cd1686d244efa4500c55f15a0880
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:6
msgid ""
"Para los colaboradores potenciales al código base del núcleo de Plone les es"
" requerido que firmen el contributor’s agreement, el cual asigna copyright "
"del código fuente a la Fundación Plone, la organización sin ánimo de lucro "
"qué administradores auxiliares el código base de Plone. Este documento "
"explica el propósito de este respondiendo a este con preguntas y respuestas "
"acerca del lo que este significa."
msgstr ""

# 062e837682644a97befdaf13888a6af3
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:12
msgid ""
"El acuerdo de contribución para Plone puede ser encontrado en: "
"`http://plone.org/foundation/contributors-agreement/agreement.pdf`_"
msgstr ""

# e46022cc2b6349dc9a9e14fcbcdb62f5
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:16
msgid "Acerca del acuerdo de contribuidor de Plone"
msgstr ""

# c8ed15a2b03942ce886def2fade86a83
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:18
msgid ""
"La Fundación siente que beneficia la comunidad teniendo una organización "
"sola para mantener los derechos a Plone. Antes de la Fundación, la propiedad"
" intelectual de Plone era conjuntamente mantenida por desarrolladores "
"individuales y por Alan Runyan y Alexander Limi. Los miembros comunitarios "
"quiénes formaron la Fundación sentían que habiendo eso, la Fundación "
"cuidaría esos derechos y que proporcionaría varios beneficios:"
msgstr ""

# 0bf853500d03426b8a323a8e2e58ce21
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:24
msgid ""
"**Minimizando la confusión / maximizando la compatibilidad empresarial** -- "
"Para las organizaciones que consideran la adopción Plone tener una respuesta"
" sencilla para \"¿Quien es el dueño de esto?\", en lugar de una respuesta "
"más complicada que podría ahuyentar el carácter cauteloso."
msgstr ""

# aede377ed5714e6aba4f91c314da4f51
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:29
msgid ""
"**Protección de la marca** -- Por que teniendo a la Fundación para proteger "
"la marcas comerciales y derechos de marca sobre los activos Plone, puede "
"proteger eficazmente estos ante el uso injusto."
msgstr ""

# f3330404927f45dcb414c751579db141
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:33
msgid ""
"**Garantía de versiones futuro en código abierto** -- El contributor "
"agreement de la Fundación asegura que habrá **siempre** de ser una versión "
"aprobada por la Open Source Initiative OSI de Plone."
msgstr ""

# b6a8102010c946288feaa872b2119840
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:39
msgid "Preguntas & Respuestas"
msgstr ""

# 0dc3d52cca5f4e74b133d62b7d8bfceb
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:41
msgid "¿Qué cubre el contributor's agreement?"
msgstr ""

# ae31cda4fbdf49a4949a796177392d34
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:43
msgid ""
"Este contributor's agreement es  sólo para el código base del núcleo de base"
" de Plone. El código base del núcleo de base de Plone es el código que se "
"vive en los repositorios de la versión del núcleo de Plone, actualmente "
"ubicada en `http://dev.plone.org/plone`_ y `https://github.com/plone`_. Las "
"contribuciones a al repositorio \"Collective,\" actualmente localizado en "
"`http://dev.plone.org/collective`_ y `https://github.com/collective`_ no "
"están asignados a la Fundación Plone y se ponen a disposición bajo cualquier"
" licencia de los desarrolladores del proyecto desean utilizar, aunque los "
"productos add-on que se importar como código Plone basado en GPL, por "
"supuesto, sujeto a los términos de la licencia GPL, que obliga a los "
"trabajos derivados a ser licencia GPL."
msgstr ""

# fde705db4f9841408686d6274a0b9319
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:52
msgid "¿Qué derechos voy a seguir teniendo por mis contribuciones?"
msgstr ""

# e2e94af7f16e4354b734ac007aabfa58
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:54
msgid ""
"A los colaboradores se les pide a transferir sus derechos de propiedad "
"intelectual a la Fundación. A cambio, se les dará de nuevo los derechos "
"irrevocables para usar y distribuir sus contribuciones. ncluso pueden dar a "
"sus contribuciones a otros proyectos de código abierto (siempre y cuando "
"esos proyectos sean compatibles con la propia licencia con que está emitida "
"Plone) o usar en aplicaciones comerciales de fuentes no abiertas (si esta es"
" compatible con la propia licencia con que está emitida Plone)."
msgstr ""

# 3da40f01db5348c682c1b8dca720888b
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:62
msgid ""
"¿Tengo que firmar el contributor's agreement para hacer checkins para el "
"código base del núcleo de Plone?"
msgstr ""

# 254dd443785542f7a54aea2df63df1f2
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:62
msgid "Si."
msgstr ""

# 748fff4c23aa428092d7323e4167f534
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:64
msgid ""
"¿Tengo que firmar el contributor's agreement para suministrar un parche para"
" el código base del núcleo de Plone?"
msgstr ""

# e96a64f356cb4b2a80ea00a7e98fe079
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:66
msgid ""
"Acogemos con entusiasmo parches, pero no podemos hacer el merge hasta que "
"firme y devuelva el contributor's agreement. (A menos que, a juicio del "
"Plone Release Manager, el parche es tan pequeño que no constituyan un "
"\"trabajo creativo\". Véase la `Política de Acuerdos del contribuyente y "
"parches`_ para más detalles sobre esta política.)"
msgstr ""

# 452716b8dd37433c9e3c3b14e457b888
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:71
msgid ""
"¿Puedo conceder a la fundación Plone una licencia no exclusiva para mis "
"contribuciones en lugar de una licencia exclusiva, por lo que yo puedo "
"aportar el mismo código en otros proyectos bajo diferentes términos o usar "
"la contribución de otras actividades comerciales?"
msgstr ""

# c61bd3c4e15647c4a3696b5511f5c587
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:73
msgid "No bajo la versión actual del contributors agreement."
msgstr ""

# 6516893299d147eeaf74477723da751e
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:75
msgid "¿La Fundación Plone hace control del uso de la marca?"
msgstr ""

# 35772ea5572d4c84ab26f711a9088f41
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:77
msgid ""
"Si. A fin de mantener la marca, la Fundación (o cualquier propietario de la "
"marca) deben demostrar que han tomado medidas para protegerlo."
msgstr ""

# ec6605427612427ead2632cb5f5e0da1
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:80
msgid ""
"Plone estará siempre disponible bajo una licencia aprobada por la Open "
"Source Initiative/Código abierto? ¿No podría el Board cambiar la opinión "
"sobre esto?"
msgstr ""

# 1aa6c71c0b89434b85c923d9f1922da5
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:82
msgid ""
"Plone siempre estará disponible bajo una licencia aprobada por la Open "
"Source Initiative, lo que está escrito en el lenguaje del contributor "
"agreement de cada desarrollador y la firma de la fundación."
msgstr ""

# 24fc6316a21b4cc0a658614faba04eea
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:85
msgid ""
"¿Plone nunca estará disponible bajo una licencia no compatible con la GPL?"
msgstr ""

# d19ee671dd294b8a8df0d1b46fa1bfde
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:87
msgid ""
"El enfoque actual Plone establece que las empresas pueden negociar una "
"licencia no-GPL. De este modo, la Fundación podría perseguir un esquema de "
"licenciamiento dual (GPL y no GPL) -, pero, en este momento, el Board aún no"
" ha creado ninguna política al respecto. Esta es una pregunta importante "
"para la comunidad, por supuesto, y la Fundación tiene la intención de tener "
"esta conversación de una manera transparente."
msgstr ""

# 573b73ec00714662ae7f8c4b230e6a8d
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:93
msgid "¿Por qué iba alguien a querer un licenciamiento no GPL para Plone?"
msgstr ""

# 20b9b831ccc14c10926ea2f4b4bd3bc2
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:95
msgid ""
"Dos posibles razones: Algunas compañías se resisten a hacer modificaciones "
"internas de los sistemas de framework (como Plone) que están bajo la GPL, "
"por temor a que una cláusula de la licencia GPL podría obligarlos a revelar "
"su trabajo interno - queriendo así a licenciar en los términos de (por "
"ejemplo) una licencia estilo BSD. En segundo lugar, las empresas pueden "
"ofrecer una versión comercial de Plone, bajo una licencia convencional "
"cerrada, sin la obligación de revelar el código fuente o de compartir los "
"cambios."
msgstr ""

# c798cb5accd94af99e0831413f738a83
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:102
msgid "¿Cuánto costaría una versión no GPL de Plone?"
msgstr ""

# e2bda4c6f95f47eaba3f712bcd0a0f39
#: ../develop/plone-coredev/es/contributors_agreement_explained.rst:104
msgid ""
"¿Una pequeña empresa será capaz de pagar uno? --  Ni la Fundación ni el "
"Board han tomado ninguna decisión acerca de una versión no GPL, y mucho "
"menos acerca de los precios. Sin embargo, uno de los objetivos declarados de"
" la Fundación es la de mantener la igualdad de condiciones para Plone al "
"tratar de beneficiar a todos los bienes comunes de Plone. Si una versión no "
"GPL estaba disponible, y una gran empresa la compró, añade características a"
" la misma, y lo vendió, ¿no se utilizará nuestro trabajo sin una obligación "
"de devolver? Es útil recordar el valor de la base de código abierto ofrece: "
"desarrollo distribuido, mantenimiento, control de seguridad y apoyo. Las "
"empresas que construyen grandes características para Plone **ya están** "
"teniendo que tomar decisiones acerca de si para liberar sus productos bajo "
"una licencia de código abierto o no (ya que siempre podrían ponerlos en "
"libertad como un producto y no como una modificación al núcleo de Plone). A "
"pesar de esto, sin embargo, muchas contribuciones amplias e inmejorables - "
"como Archetypes - se han hecho, y la Fundación espera que las empresas "
"seguirán haciéndolo. En cualquier caso, una empresa que compra una licencia "
"no GPL (debe tal vez estar haciendo disponibles) contribuyendo con recursos "
"financieros a nuestra comunidad, que puede estar usado para desarrollar, "
"comercializar y proteger a la versión GPL de Plone."
msgstr ""

# a23cc18a68184d5d945bd36936ad13c5
#: ../develop/plone-coredev/es/culture.rst:5
msgid "Cultura de desarrollo en Plone"
msgstr ""

# 8e13af7d0bf8475e81c94a73c99e2c83
#: ../develop/plone-coredev/es/culture.rst:7
msgid ""
"Si usted va a contribuir algo a Plone, pedimos un par de cosas. En primer "
"lugar, por favor, únase a la lista de correo de desarrolladores de Plone "
"`plone-developers <https://lists.sourceforge.net/lists/listinfo/Plone-"
"developers>`_ y, como mínimo, para estar al acecho de los acontecimientos "
"alrededor de esta lista. Usted pronto vera cómo la gente trabaja y qué tipo "
"de cosas son las más adecuadas para la discusión grupal. Segundo, por favor,"
" pida ayuda para configurar su entorno en el canal IRC. La mayoría de "
"nuestros desarrolladores trabajan allí y obtendrá el mejor consejo desde "
"allí."
msgstr ""

# 0742318c565d4a15a8f0f85e7f7952db
#: ../develop/plone-coredev/es/culture.rst:9
msgid ""
"Descargue un software de cliente IRC (o use un cliente alternativo `a través"
" de la web <http://webchat.freenode.net/>`_) y entre dentro de la sala IRC "
"`#plone-framework <http://webchat.freenode.net?channels=plone-framework>`_ "
"(y / o en la sala `#plone <http://webchat.freenode.net?channels=plone>`_ - "
"ambos en el servidor freenode). La gente en la sala IRC `#plone-framework "
"<http://webchat.freenode.net?channels=plone-framework>`_ tienen mucho tiempo"
" usando Plone y por eso estarán muy felices en ayudarle a ir por la "
"dirección correcta y hacerle tomar las decisiones mas adecuadas. Mas "
"información sobre el servicio de IRC puede ser encontrada en el siguiente "
"enlace http://plone.org/support/chat."
msgstr ""

# 1d0eb6d0902249ca82ab2485688605ff
#: ../develop/plone-coredev/es/culture.rst:11
msgid ""
"Si usted está activamente suministrando código, únase la `lista de correo "
"electrónico del bot de prueba <https://lists.plone.org/mailman/listinfo"
"/plone-testbot/>`_ así usted sabe si sus recientes commits ha dañado algo (o"
" corregirlo!) la construcción."
msgstr ""

# 8f08b7778c3643638951a8b8d81b4870
#: ../develop/plone-coredev/es/culture.rst:13
msgid ""
"Tenga en cuenta que es posible que usted este en una zona horaria distinta "
"cuándo necesita hacer preguntas en el canal IRC y las cosas no están muy "
"activas, por favor, escriba un mensaje a la lista de correo `plone-"
"developers <https://lists.sourceforge.net/lists/listinfo/Plone-developers>`_"
"  o tome una cerveza y relájese, espere a que la gente se despierte del otro"
" lado del computador o del mundo."
msgstr ""

# 57f99c1b8579475aa8999533ea0107ed
#: ../develop/plone-coredev/es/culture.rst:15
msgid ""
"Cuando tenga dudas, por favor, pregunte. El código base es muy complicado y "
"todo el mundo se confiere de que lo que sucede es lo correcto. A pesar del "
"mal humor ocasional aquí y allá, la mayoría de los desarrolladores de Plone "
"se salen de su camino para ayudarle a que usted consiga la ruta correcta."
msgstr ""

# be8c792b27a94765b3e881ae2eeb36e6
#: ../develop/plone-coredev/es/documentation.rst:3
msgid "Escribiendo documentación"
msgstr ""

# 69a910dc31b04246929f5ccf6f6c9883
#: ../develop/plone-coredev/es/documentation.rst:6
msgid "Documentación de Plone"
msgstr ""

# 23f59ec296d846c286139d409e263726
#: ../develop/plone-coredev/es/documentation.rst:8
msgid "Como una comunidad, Plone mantienen muchos tipos de documentación:"
msgstr ""

# 2da2754ef8c74d6bae64b6af9a81681d
#: ../develop/plone-coredev/es/documentation.rst:10
msgid ""
"Documentos *mantenidos*. Esto es un conjunto limitado de documentación que "
"está pretendido para ser cuidadosamente dirigido y regularmente actualizado."
msgstr ""

# 309bcb39617f428e9099d2656ccb3967
#: ../develop/plone-coredev/es/documentation.rst:12
msgid ""
"`Manual de Usuario <http://plone.org/documentation/manual/plone-4-user-"
"manual>`_."
msgstr ""

# a88607dace774c7f9aff431941b5145a
#: ../develop/plone-coredev/es/documentation.rst:13
msgid ""
"`Instalando Plone <http://plone-spanish-"
"docs.readthedocs.org/en/latest/manuales/instalando_plone.html>`_, la versión"
" original de esta documentación en Ingles esta disponible como `Installing "
"Plone <http://plone.org/documentation/manual/installing-plone>`_."
msgstr ""

# 27182a3699954c6298dafe997c368c67
#: ../develop/plone-coredev/es/documentation.rst:14
msgid "`Referencia de Temas <http://developer.plone.org/#theme-development>`_"
msgstr ""

# 282b0a1d13de4508b0afff1e3e48072b
#: ../develop/plone-coredev/es/documentation.rst:15
msgid "`Manual de Desarrollo <http://developer.plone.org/>`_"
msgstr ""

# a02b52e4db5043f09842d69d9a80e8cc
#: ../develop/plone-coredev/es/documentation.rst:17
msgid ""
"Las mejoras a los documentos mantenidos pueden ser discutidos en la lista de"
" correo `plone-docs <https://lists.sourceforge.net/lists/listinfo/plone-"
"docs>`_."
msgstr ""

# dbbc88b1be754e9999f668ff0594ab69
#: ../develop/plone-coredev/es/documentation.rst:19
msgid ""
"Documentos *editado colectivamente en comunidad*. Estos son abiertos para "
"contribuciones por cualquier que lo deseo hacer. Esto dirige a una riqueza "
"de información que es de más ampliamente variando calidad."
msgstr ""

# f626fca6e2fb4b23a9db0455fd3d57c6
#: ../develop/plone-coredev/es/documentation.rst:21
msgid ""
"`Base de conocimiento en plone.org <http://plone.org/documentation/kb>`_. "
"Cualquiera con una cuenta en plone.org es libre de editarlo."
msgstr ""

# dfaf35cdd2924f69b8eb5c4c35526bbc
#: ../develop/plone-coredev/es/documentation.rst:22
msgid ""
"`Documentación para el programador en Plone Collective "
"<http://developer.plone.org/index.html>`_. Cualquiera tal ves puede "
"`contribuir <http://collective-"
"docs.readthedocs.org/en/latest/introduction/developermanual.html>`_."
msgstr ""

# 802f7012ca9740c4858b375edcae6978
#: ../develop/plone-coredev/es/documentation.rst:25
msgid "Documentando un paquete"
msgstr ""

# 22b6e91be86a47c6b4148e092e8ba2f2
#: ../develop/plone-coredev/es/documentation.rst:28
msgid "Lo básico"
msgstr ""

# cfbb311e96c74a9abcae260e182a16d2
#: ../develop/plone-coredev/es/documentation.rst:30
msgid ""
"Al menos, su paquete tendría que incluir las siguientes formas de "
"documentación"
msgstr ""

# fc8ef525a70b41aca6672a84b7d34d19
#: ../develop/plone-coredev/es/documentation.rst:33
msgid ""
"El archivo README es el primer punto de partida para la mayoría de personas "
"a su paquete. Este será incluido en la página PyPI en su paquete Egg, y en "
"la página de su repositorio github. Este tendrá que ser formateado "
"utilizando `reStructuredText (reST) "
"<http://docutils.sourceforge.net/rst.html>`_ para conseguir el formato "
"apropiado por aquellos sistemas."
msgstr ""

# b8582ad5e1464ee5ad338dae5768dd27
#: ../develop/plone-coredev/es/documentation.rst:35
msgid ":file:`README.rst` tendría que incluir:"
msgstr ""

# b15d4b8bf38e4197a887b676c6c6112b
#: ../develop/plone-coredev/es/documentation.rst:37
msgid "Una breve descripción del propósito del paquete"
msgstr ""

# 3975b22f6dd3420d96f4935924a6a1ab
#: ../develop/plone-coredev/es/documentation.rst:38
msgid "Información de instalación (Cómo consigo que funcione?)"
msgstr ""

# c4a6781c735743f09a10b79c458ea0b9
#: ../develop/plone-coredev/es/documentation.rst:39
msgid ""
"Información de compatibilidad (qué versiones de Plone trabaja con que?)"
msgstr ""

# b41f366031504690895d88683a76b2d9
#: ../develop/plone-coredev/es/documentation.rst:40
msgid "Enlaces a otras fuentes de documentación"
msgstr ""

# 025c51669a7c4a8184d27a6d004e3c4e
#: ../develop/plone-coredev/es/documentation.rst:41
msgid ""
"Enlaces para reportar errores, listas de correo, y otras maneras de "
"conseguir ayuda."
msgstr ""

# b9eb3b54bbbc41418e791b4827dfef53
#: ../develop/plone-coredev/es/documentation.rst:43
msgid "El manual (a.k.a. documentación narrativa)"
msgstr ""

# f3931a8b01b1422fa957d5f6e9ba9946
#: ../develop/plone-coredev/es/documentation.rst:45
msgid ""
"El manual va a una profundidad más lejana para personas que quieren saber "
"todo acerca de cómo para utilizar el paquete."
msgstr ""

# 5b35649559a241bbad49cbd720bb3a95
#: ../develop/plone-coredev/es/documentation.rst:47
msgid "Este incluye temas como los siguientes:"
msgstr ""

# 76ccc7d01d3f4cf787c03f447c05c7c3
#: ../develop/plone-coredev/es/documentation.rst:49
msgid "¿Qué características poseen?"
msgstr ""

# 10f7ab46b9104077943fba8fa131e8ae
#: ../develop/plone-coredev/es/documentation.rst:50
msgid "Documentos ¿Cómo usar? (¡doctests que no estén en Inglés!)"
msgstr ""

# 85327158fa934ae0963c03f6fe0b807f
#: ../develop/plone-coredev/es/documentation.rst:51
msgid "Información aproximadamente de la arquitectura"
msgstr ""

# 39e0b00ba7204e38b6870d023572d322
#: ../develop/plone-coredev/es/documentation.rst:52
msgid "Común gotchas"
msgstr ""

# ed2e8624b6c14da690d8e7fb76764b1a
#: ../develop/plone-coredev/es/documentation.rst:54
msgid ""
"El manual debería considerar varias audiencias quiénes pueden necesitar "
"tipos diferentes de información"
msgstr ""

# 89cf734bed054c3793213e9d5d53bbc2
#: ../develop/plone-coredev/es/documentation.rst:56
msgid ""
"Los usuarios finales quiénes utilizan Plone para editar contenido pero no "
"administran el sitio."
msgstr ""

# 8e32b6c81ac8493fb84b20e781ebeda0
#: ../develop/plone-coredev/es/documentation.rst:57
msgid ""
"Los administradores del sitio quiénes instalan y configurar el paquete."
msgstr ""

# 57a5c4dda4454d919faeaf0cf94b6979
#: ../develop/plone-coredev/es/documentation.rst:58
msgid ""
"Los integradores quiénes necesitan extender la funcionalidad del paquete "
"desde el código fuente."
msgstr ""

# 55ff581b071a4ab4862312d4eed05dc8
#: ../develop/plone-coredev/es/documentation.rst:59
msgid ""
"Los administradores de sistemas quiénes necesitan mantener que el servidor "
"ejecute el software."
msgstr ""

# f01fe186393648de881a1fb0996cd90a
#: ../develop/plone-coredev/es/documentation.rst:61
msgid ""
"Los paquetes sencillos con funcionalidad limitada pueden ser una página sola"
" de narrativa documentación. En este caso es más sencillo de incluir él un "
"extendido :file:`README.rst`. Algunos ejemplos excelentes de una página "
"sencilla de archivo readme son "
"https://pypi.python.org/pypi/plone.outputfilters y "
"https://github.com/plone/plone.app.caching"
msgstr ""

# bc6fc763d3a34e5ab949a5d6f68e3b2d
#: ../develop/plone-coredev/es/documentation.rst:63
msgid ""
"Si su proyecto es moderadamente complejo, puedes querer instalar su "
"documentación con páginas múltiples. La manera mejor de hacer este es para "
"añadir Sphinx a su proyecto y hospedar su documentos en readthedocs.org de "
"modo que reconstruye la documentación siempre que aplica un cambio en "
"github.com Si tú hace esto, su :file:`README.rst` debe que enlazar fuera "
"sitio a la documentación."
msgstr ""

# 4744141cd8594ff69c85add94a979ba1
#: ../develop/plone-coredev/es/documentation.rst:65
msgid "Referencia (a.k.a.  documentación de API)"
msgstr ""

# 2853c88c464e41eea1dc95fa468517e7
#: ../develop/plone-coredev/es/documentation.rst:67
msgid ""
"Una referencia de API proporciona información sobre la API pública del "
"paquete (eso es, el código que el paquete expone para uso de código "
"externo.)  Eso significa para el acceso aleatorio a recordar el lector de "
"cómo una clase particular o un método trabajo, más que para leer "
"enteramente."
msgstr ""

# 3e5b769fcc534b6baad7f425e63da8d9
#: ../develop/plone-coredev/es/documentation.rst:69
msgid ""
"Si el código base está escrito con docstrings, la documentación de la API "
"puede ser automáticamente generada utilizando Sphinx."
msgstr ""

# 46920aa4033746bcbb18b27b493bd140
#: ../develop/plone-coredev/es/documentation.rst:72
msgid ""
"El changelog o registro de cambios es un registro de todos los cambios que "
"hizo al paquete y quién les hicieron, con los cambios más recientes en la "
"parte superior. Esto está mantenido por separado del historial de revisión "
"del git para dar una posibilidad de mensajes mas amigables al usuario al "
"registrar cuándo las liberaciones estuvieran listas."
msgstr ""

# 98cafce438c646ed8901f9a1d3284be9
#: ../develop/plone-coredev/es/documentation.rst:74
msgid "Un changelog se parece a algo así::"
msgstr ""

# a4e0d549225b497f966a29e9db3f81ad
#: ../develop/plone-coredev/es/documentation.rst:85
msgid ""
"Ver https://raw.github.com/plone/plone.app.caching/master/CHANGES.rst para "
"un ejemplo completo."
msgstr ""

# 8e623829b08b498d8ea480a1bbcc13b4
#: ../develop/plone-coredev/es/documentation.rst:87
msgid ""
"Si un cambio sucedió relacionado a un error en el sistema de ticket, en la "
"entrada changelog tendría que incluir un enlace a aquel asunto."
msgstr ""

# 16e4405ba17741f9bf304d22367ef3e0
#: ../develop/plone-coredev/es/documentation.rst:93
msgid "Licencias"
msgstr ""

# 90ef03cfc09f45c2bb39a6b8b9c07c53
#: ../develop/plone-coredev/es/documentation.rst:90
msgid ""
"Información sobre la licencia del código abierto utilizada para el paquete "
"tendría que ser colocado dentro del directorio :file:`docs`."
msgstr ""

# ad9413fdaa1b4607a2c8fc28565a782c
#: ../develop/plone-coredev/es/documentation.rst:92
msgid ""
"Para paquetes del núcleo Plone, esto incluye :file:`LICENSE.txt` y "
":file:`LICENSE.GPL`."
msgstr ""

# 01a7e386648d443d9ca76336603b68d1
#: ../develop/plone-coredev/es/documentation.rst:96
msgid "Utilizando Sphinx"
msgstr ""

# 98f2a6828d28443998fabbffef2c3aeb
#: ../develop/plone-coredev/es/documentation.rst:100
msgid "Referencias reST:"
msgstr ""

# 19924d0b877a4b40a35d82501109e007
#: ../develop/plone-coredev/es/documentation.rst:99
msgid ""
"`Documentación Shpinx orientada a Plone "
"<http://developer.plone.org/reference_manuals/active/writing/index.html>`_"
msgstr ""

# 5499414ea6104c46ad9187ddd1bd864a
#: ../develop/plone-coredev/es/documentation.rst:100
msgid "`Manual básico Sphinx reST <http://sphinx-doc.org/rest.html>`_"
msgstr ""

# bdbb45bb9ff1416d9eccee98ae47a4ee
#: ../develop/plone-coredev/es/index.rst:5
msgid "Procesos para el desarrollo del núcleo de Plone"
msgstr ""

# 054fa2d39e1d411a805ace519d5746fc
#: ../develop/plone-coredev/es/index.rst:8
msgid "Introducción"
msgstr ""

# 388f9fe849a1422dbdff271b98de7534
#: ../develop/plone-coredev/es/index.rst:9
msgid ""
"Esta documentación describes el proceso para desarrollar en Plone. Este es "
"principalmente un recurso técnico para instalar su configuración buildout "
"del desarrollador del núcleo del CMS, corregir fallos, y escribir plips."
msgstr ""

# a371454961d94e0eba1b3596e41acde5
#: ../develop/plone-coredev/es/index.rst:12
msgid "¡DETÉNGASE!"
msgstr ""

# bb2daeb26a0d4fd5aa9aa0fedb32d3eb
#: ../develop/plone-coredev/es/index.rst:13
msgid ""
"Legalmente, usted NO puede contribuir al código al menos que usted allá "
"firmado el :doc:`acuerdo de contribución <agreement>`. Esto significa que "
"nosotros NO podemos aceptar las peticiones de mejoras de usted pueda "
"presentar a no ser que allá hecho cumplido con este requisito, por favor, no"
" ponga código fuente para ser revisado de ninguna forma si no ha hecho eso. "
"Presentar el acuerdo de contribución es fácil (y pronto será más fácil) y si"
" quieres acceso rápido y esta familiarizado con comunidad, entre dentro del "
"canal :doc:`irc <culture>` y preguntar por los administradores del "
"repositorio para otorgarle acceso en base a una versión digitalizada del "
"acuerdo. ¡Ellos lo harán lo mas rápido posible!"
msgstr ""

# a23e98297a0e4c94b14841b615d6e99e
#: ../develop/plone-coredev/es/index.rst:16
msgid "Tabla de contenidos"
msgstr ""

# f7c6f312a23f4f3cbd5490ae6deddb98
#: ../develop/plone-coredev/es/index.rst:30
msgid "Otros"
msgstr ""

# dc4e97669ae743eaa0299d9c53aff936
#: ../develop/plone-coredev/es/index.rst:32
msgid ""
"Estos son algunos documentos a utilizar como referencia para esta "
"documentación."
msgstr ""

# 5adab8f073a344da8dc6636f5d31ef2a
#: ../develop/plone-coredev/es/index.rst:42
msgid "Traducciones disponibles"
msgstr ""

# 0d4f2a00b51a459d9b92378d722013c7
#: ../develop/plone-coredev/es/index.rst:44
msgid ""
"Hay algunas iniciativas para mantener las traducciones disponibles en otros "
"idiomas para esta documentación como las siguientes:"
msgstr ""

# 3f54eb186228411495724b5fc43db962
#: ../develop/plone-coredev/es/index.rst:52
msgid ":doc:`Versión en Ingles <../index>`"
msgstr ""

# 6f7dfa65d42c47a4a63375400bfa5252
#: ../develop/plone-coredev/es/intro.rst:4
msgid "Como presentar corrección de fallos al núcleo de Plone"
msgstr ""

# 79963d07c4354ea3ac200e054743a142
#: ../develop/plone-coredev/es/intro.rst:5
msgid ""
"Este documento supone que usted quiere corregir un fallo y detallará el "
"proceso completo para hacerlo. Para más información en la redacción de "
"PLIPS, por favor :doc:`valla aquí <plips>`."
msgstr ""

# 6e20742784ef43a9ba93510d9765f87a
#: ../develop/plone-coredev/es/intro.rst:8
msgid "Política sobre soporte a la Versión"
msgstr ""

# 361b063a2b2544fe98eeaf3b25406061
#: ../develop/plone-coredev/es/intro.rst:9
msgid ""
"Si usted está tratando de corregir fallos, tenga en cuenta que Plone tiene "
"una `política sobre soporte al versionamiento <http://plone.org/support"
"/version-support-policy>`_."
msgstr ""

# 7439dccbeb9d40d49c5b1b23c34eefb6
#: ../develop/plone-coredev/es/intro.rst:12
msgid "Dependencias"
msgstr ""

# 0f88cd0070a84e8da6cae024c10ad8ca
# ebfabd39af72471fb9a6880cdcbff638
# cee939807c9f48c09a5cf14134236dee
#: ../develop/plone-coredev/es/intro.rst:13
#: ../develop/plone-coredev/intro.rst:11
#: ../develop/plone-coredev/pt_BR/intro.rst:11
msgid "`Git <http://help.github.com/mac-set-up-git/>`_"
msgstr ""

# 12414c6a35844565855db13b65ce6699
# 6f9a01acdc3c4fa9b6f3124e482a20ca
# f260a01f099f465fbb338907430da224
#: ../develop/plone-coredev/es/intro.rst:14
#: ../develop/plone-coredev/intro.rst:12
#: ../develop/plone-coredev/pt_BR/intro.rst:12
msgid "`Subversion <http://subversion.apache.org/>`_"
msgstr ""

# 12364f6de3564fa0a6a99c406f3e6cae
#: ../develop/plone-coredev/es/intro.rst:15
msgid ""
"`Python <http://python.org/>`_ 2.6 o 2.7 incluyendo sus librerías de "
"encabezados, usadas para el desarrollo."
msgstr ""

# b0f059f76adf419b98853294e0e46484
#: ../develop/plone-coredev/es/intro.rst:16
msgid ""
"Si usted esta usando un Mac OSX, necesitara instalar `XCode "
"<https://developer.apple.com/xcode/>`_. Usted puede hacer este a través de "
"la app store o muchos otros métodos en que lo venden. Usted probablemente "
"querrá instalar su propio python 2.6 entonces necesita fuera todos los "
"archivos encabezados de las librerías cuál hace compilar algunas "
"extensiones. Usted puede ignorar este consejo para empezar, pero créame, que"
" usted tendrá que instalarlas mas adelante. Ellos siempre hacen..."
msgstr ""

# fbce1fcd8eeb4d67b5b1f38807854cb8
#: ../develop/plone-coredev/es/intro.rst:17
msgid ""
"`Python Imaging Library (PIL) <http://www.pythonware.com/products/pil/>`_. "
"Debe asegurarse instalar esto dentro del entorno apropiado de python."
msgstr ""

# f95c03d279644aa4985280c4e759f8bd
#: ../develop/plone-coredev/es/intro.rst:18
msgid ""
"`VirtualEnv <http://www.virtualenv.org/en/latest/index.html>`_ en el "
"apropiado entorno python."
msgstr ""

# 19be105cf58c49378c9044208e220742
#: ../develop/plone-coredev/es/intro.rst:19
msgid "`GCC <http://gcc.gnu.org/>`_ para compilar ZODB, Zope y lxml."
msgstr ""

# ac4f549113e744d99ef7597a12bfca31
#: ../develop/plone-coredev/es/intro.rst:20
msgid ""
"`libxml2 y libxslt <http://xmlsoft.org/XSLT/downloads.html>`_, incluyendo "
"sus librerías de encabezados para desarrollo."
msgstr ""

# 7e6b786e17e44025a002f120d410445d
#: ../develop/plone-coredev/es/intro.rst:24
msgid "Instalando su Entorno de Desarrollo"
msgstr ""

# 9f877aa820dd4805848e4b78933f77ff
#: ../develop/plone-coredev/es/intro.rst:25
msgid ""
"El primer paso en corregir un fallo está consiguiendo ejecutar este "
"`buildout <https://github.com/plone/buildout.coredev>`_ correctamente. Le "
"recomendamos corregir un fallo en la branch más reciente y entonces "
"`backporting <http://en.wikipedia.org/wiki/Backporting>`_ tan como sea "
"necesario. `Github <https://github.com/plone/buildout.coredev/>`_ por "
"defecto siempre apunta a la branch actualmente activa. Más información sobre"
" el cambio de las branches de liberación a continuación."
msgstr ""

# 9191db45c3fa407ab8db3ef0bb42d891
#: ../develop/plone-coredev/es/intro.rst:27
msgid ""
"Para instalar un entorno de desarrollo plone 4.2 debe ejecutar los "
"siguientes comandos::"
msgstr ""

# 0e8e78d9757e43e5a54add80278bd35c
#: ../develop/plone-coredev/es/intro.rst:36
msgid ""
"Si se encuentra con problemas en este proceso, consulte la documentación "
":doc:`issues`."
msgstr ""

# 4a4248511d944ef9af121ee13e31c3e2
#: ../develop/plone-coredev/es/intro.rst:38
msgid ""
"Esto se ejecutará durante mucho tiempo, si es su primera ejecución de "
"buildout (~ 20 minutos) o tal ves mas todo dependerá de su conexión a "
"Internet. Una vez que se hace ejecutado el buildout, usted puede iniciar su "
"nueva instancia Zope con el siguiente comando::"
msgstr ""

# c3f3626ded674e8abd7a5be8a10f34d3
#: ../develop/plone-coredev/es/intro.rst:42
msgid ""
"El usuario y contraseña por defecto para una instancia Zope de desarrollo es"
" **admin/admin**."
msgstr ""

# d66489544f504abbade5fe84fe122280
#: ../develop/plone-coredev/es/intro.rst:45
msgid "Cambiar Branches"
msgstr ""

# 942b26c4a6ae4a31a318fd646601ef8f
#: ../develop/plone-coredev/es/intro.rst:46
msgid ""
"Si su fallo es especifico en una branch o usted piensa que debería hacer "
"`backport <http://en.wikipedia.org/wiki/Backporting>`_, usted puede cambiar "
"fácilmente las branches. La primera ves usted tiene que obtener una branch, "
"entonces usted debe hacer eso con el siguiente comando::"
msgstr ""

# 8ce93dcbfaec4efa8f05ca6db841f2c7
#: ../develop/plone-coredev/es/intro.rst:50
msgid ""
"Esto debería crear una branch local de 4.1 con el seguimiento de la una en "
"el servicio github. A partir de entonces sólo se puede hacer con el "
"siguiente comando::"
msgstr ""

# 5379962b8044489f8e051507e469cc13
#: ../develop/plone-coredev/es/intro.rst:54
msgid ""
"Para ver en qué branch usted se encuentra actualmente, solo ejecute el "
"siguiente comando::"
msgstr ""

# 2a7c1ae7dd9549c4810b8d69054336ee
#: ../develop/plone-coredev/es/intro.rst:58
msgid ""
"La línea con un * por él indicará qué branch actualmente estás trabajando."
msgstr ""

# c2775c4e9d0d4128838e5d4eb94815ae
#: ../develop/plone-coredev/es/intro.rst:61
msgid ""
"¡Asegúrese de volver a ejecutar buildout si estuviera en una branch "
"diferente antes para obtener las versiones correctas de los paquetes, de lo "
"contrario obtendrá un comportamiento extraño!"
msgstr ""

# 641ff900d6d64b29ac9528842bd91a12
#: ../develop/plone-coredev/es/intro.rst:63
msgid ""
"Para mas información sobre buildout, por favor ver la documentación sobre "
"`buildout en el manual de desarrollador collective "
"<http://developer.plone.org/reference_manuals/old/buildout/index.html>`_."
msgstr ""

# a3f721ae15be4adaab9f1e23fa031b7f
#: ../develop/plone-coredev/es/intro.rst:67
msgid "Comprobando paquetes para corregir"
msgstr ""

# a7ef83520a3f44daaffa9ea09fbbc98d
#: ../develop/plone-coredev/es/intro.rst:68
msgid ""
"La mayoría de paquetes no están por defecto en el directorio :file:`src/`, "
"así que usted puede usar ``mr.developer`` para conseguir la versión mas "
"reciente y asegurarse que usted siempre tiene la versión mas actualizada. "
"Puede ser un poco intimidado al principio para averiguar qué paquetes están "
"causando el fallo en cuestión, pero sólo pregunte en el IRC si necesitas "
"algo de ayuda. Una vez que [usted cree] que sabe cuál(es) paquete(s) usted "
"que desea, nosotros tenemos que obtener de la fuente del mismo."
msgstr ""

# db65331182424a74ad65e3984f3760ed
#: ../develop/plone-coredev/es/intro.rst:70
msgid ""
"Usted puede conseguir el código fuente del paquete con ``mr.developer`` o "
"con el comando ``checkout``, o puedes ir directamente a editar "
":file:`checkouts.cfg`. Nosotros recomendamos el último pero describirá "
"ambos. Al final, el archivo :file:`checkouts.cfg` tiene que ser configurado "
"de cualquier manera así que también podrás empezar allí."
msgstr ""

# 29d4413a8a1a455eab150887115280e6
#: ../develop/plone-coredev/es/intro.rst:72
msgid ""
"En el directorio raíz de su su buildout, abra el archivo "
":file:`checkouts.cfg` y añada su paquete si no es ya allí de la siguiente "
"forma::"
msgstr ""

# e5b76897c507493fa221908310f4c5b5
#: ../develop/plone-coredev/es/intro.rst:81
msgid ""
"Entonces ejecutar de nuevo buildout para conseguir los códigos fuentes de "
"los paquetes desde sus repositorios, con el siguiente comando::"
msgstr ""

# 4c68d103c86c46998696a71054378428
#: ../develop/plone-coredev/es/intro.rst:85
msgid ""
"Alternativamente, nosotros podemos administrar los checkouts desde la línea "
"de comando, usando el comando de mr.developer :command:`bin/develop` para "
"conseguir la fuente de paquetes más reciente. Por ejemplo, si la incidencia "
"esta en los paquetes ``plone.app.caching`` y ``plone.caching`` lo ejecuta "
"con los siguientes comandos::"
msgstr ""

# 43ac51be41de4ee59309facb17408c7d
#: ../develop/plone-coredev/es/intro.rst:91
msgid ""
"¡No olvide volver a ejecutar buildout! En ambos métodos, ``mr.developer`` "
"descargará el código fuente desde github (o de donde se definió) y colocara "
"el paquete en el directorio :file:`src/`. Usted puede repetir este proceso "
"con tantos paquetes cuando lo necesite. Para algunos más consejos en la "
"forma de trabajo con ``mr.developer``, por favor :doc:`lea mas aquí "
"<mrdeveloper>`."
msgstr ""

# 4c6250191b974c0fad37dcef2e700248
#: ../develop/plone-coredev/es/intro.rst:94
msgid "Probando localmente"
msgstr ""

# 96c36847f5ce42c9814c73f38ecb7cf5
#: ../develop/plone-coredev/es/intro.rst:95
msgid ""
"En un mundo ideal, usted debería escribir un caso de prueba para su "
"incidencia antes de tratar de corregir el fallo. En realidad esto rara ves "
"sucede. No importa la forma cómo usted te acercas a resolver la falla, usted"
" tiene que SIEMPRE probar la ejecución de los casos de prueba para ambos el "
"módulo y plone.org antes de que usted genere una revisión con cualquiera de "
"cambios."
msgstr ""

# 8cacf50e92fa4b4195de2d15219a80fa
#: ../develop/plone-coredev/es/intro.rst:97
msgid ""
"¡Si usted no comienza con un caso de prueba, se ahorrará problemas "
"potenciales y valida el fallo antes de llegar demasiado profundo en la "
"incidencia!"
msgstr ""

# 7fdbe5252d6c47d793f03dafa0d835f1
#: ../develop/plone-coredev/es/intro.rst:99
msgid ""
"Para correr una prueba para el módulo específico ejecute el siguiente "
"comando::"
msgstr ""

# eea222465d0a4f5594988f6735ae960e
#: ../develop/plone-coredev/es/intro.rst:103
msgid ""
"Estos deberían ejecutarse todo sin fallos. ¡Por favor, no verifique nada "
"adicional! Si usted no ha escrito su caso de prueba aun, este es un buen "
"momento para escribir un caso de prueba para la falla que usted está "
"reparando y asegúrese de que todo está funcionando como debería."
msgstr ""

# 1211ec003a1a414c92517f795ac3846d
#: ../develop/plone-coredev/es/intro.rst:105
msgid ""
"Después que las pruebas al nivel del módulo se ejecutan con su cambio "
"realizado, por favor asegúrese de que los otros módulos no se ven afectados "
"por el cambio realizado por usted, para esto ejecute todas las pruebas con "
"el siguiente comando::"
msgstr ""

# 8e9d056551164445b6b1c8e5388a0bb6
#: ../develop/plone-coredev/es/intro.rst:111
msgid ""
"Las pruebas toman un tiempo en ejecutarse. Una ves se allá convertido en el "
"maestro de corrección de fallas, usted tal ves solo le deje hacer esto al "
"servicio de ``jenkins`` hacer esta tarea por usted. Más sobre esto a "
"continuación."
msgstr ""

# 0fdefeae5546428d86aa466c8b2c0e13
#: ../develop/plone-coredev/es/intro.rst:114
msgid "Actualizar el archivo CHANGES.rst y checkouts.cfg"
msgstr ""

# cab9a0a2c32845d090a9a68a6f4e3e8e
#: ../develop/plone-coredev/es/intro.rst:115
msgid ""
"Una ves todo las pruebas se ejecuten localmente en su maquina, usted debe "
"estar **CASI** listo para generar una revisión de sus cambios. Un par de "
"cosas hay que hacer antes de continuar."
msgstr ""

# bd38f4d11b194bdfa33c7f05574bf4e9
#: ../develop/plone-coredev/es/intro.rst:117
msgid ""
"Lo primero, por favor, edite el archivo :file:`CHANGES.rst` (o "
":file:`CHANGES.txt`, o :file:`HISTORY.txt`) en cada archivo que usted "
"modifico y agregue un resumen de sus cambios. En esta nota el cambio será "
"cotejada para la próxima versión Plone y es importante para los integradores"
" y desarrolladores puedan ser capaz de ver lo que obtendrán si se "
"actualizan. Nuevas entradas al changelog debería ser agregadas en la partes "
"superiores del archivo :file:`CHANGES.txt`."
msgstr ""

# 8d38359f06644f7dbf76dd5231a6b9be
#: ../develop/plone-coredev/es/intro.rst:120
msgid ""
"*Lo más importante*, si no lo hizo antes, edite el archivo "
":file:`checkouts.cfg` en el directorio de buildout y agregar el paquete al "
"cual le hizo sus cambios a la lista de ``auto-checkout``. Esto le permite al"
" release manager de Plone saber que paquete ha sido actualizado para que "
"cuando se de la próxima versión de Plone, este tendrá que fijar a la próxima"
" versión del paquete al momento de generar un nuevo paquete Egg. LEER: esto "
"es como su corrección viene en un paquete egg!"
msgstr ""

# a5dbebc4a8984ba8926698aeffd229dc
#: ../develop/plone-coredev/es/intro.rst:122
msgid ""
"Tenga en cuenta que hay una separador de sección llamada ``# Test Fixes "
"Only``. Asegúrese que su paquete egg este por encima de esa línea o su "
"paquete egg probablemente no se hizo muy rápidamente. Esto le dice al "
"release manager que los paquetes Egg por debajo de esta línea tienen pruebas"
" que están actualizadas, pero no hay cambios en el código."
msgstr ""

# 811ff14f61714c40bfa65dfc25b5fa36
#: ../develop/plone-coredev/es/intro.rst:124
msgid ""
"Modifique el archivo :file:`checkouts.cfg` también ejecute el comando "
"buildbot, entonces el `servicio jenkins <https://jenkins.plone.org/>`_, "
"actualizara el paquete egg y ejecutara todas las pruebas contra las pruebas "
"que usted realizo. No sea que usted alguna vez volvería a sáltate ejecutar "
"todas las pruebas, por supuesto... Más sobre esto a continuación."
msgstr ""

# e81e7ed8cc5c4ceeabefed2516367425
#: ../develop/plone-coredev/es/intro.rst:126
msgid ""
"Si su fallo esta en mas de una publicación (ej. 4.1 y 4.2), por favor, "
"aplicar sus cambios en ambas branches y añadir al archivo "
":file:`checkouts.cfg`."
msgstr ""

# d4c1e4d8bc1f457388af11602c09ae71
#: ../develop/plone-coredev/es/intro.rst:129
msgid "Generando una revisión y haciendo Pull Requests"
msgstr ""

# 87088bc591c84bff9313d5c33b222a12
#: ../develop/plone-coredev/es/intro.rst:130
msgid ""
"¡Uf! Estamos en la recta final. Verifique su lista de actividades hechas en "
"los últimos minutos:"
msgstr ""

# 945b3f993a2d43a7afdf762ba0744bf8
#: ../develop/plone-coredev/es/intro.rst:132
msgid "¿Usted corrigió el fallo original?"
msgstr ""

# 02873b138ffe406db14ca7da5e604b99
#: ../develop/plone-coredev/es/intro.rst:133
msgid "¿Su código es consistente con nuestra :doc:`style`?"
msgstr ""

# 37607301d73a4af5a5cbb5f0fcb1e314
#: ../develop/plone-coredev/es/intro.rst:134
msgid "¿Usted removió lineas extras de código y PDB persistentes?"
msgstr ""

# 9b93b5fde71c45908acf49a276d7f101
#: ../develop/plone-coredev/es/intro.rst:135
msgid "¿Usted escribió un caso de prueba para su fallo?"
msgstr ""

# b65764ce8df945f9aced7d8bef5e77ee
#: ../develop/plone-coredev/es/intro.rst:136
msgid ""
"¿Todos sus casos de prueba para los módulos y para Plone se ejecutan sin "
"ningún problema?"
msgstr ""

# 4a094fb4c5cc467097a90a72c14e4641
#: ../develop/plone-coredev/es/intro.rst:137
msgid ""
"¿Usted actualizo el archivo :file:`CHANGES.rst` en cada paquete que usted "
"modifico?"
msgstr ""

# 9db60d4af2d949169dc2b5aa6030aa01
#: ../develop/plone-coredev/es/intro.rst:138
msgid "¿Usted añadió sus paquetes cambiados al archivo :file:`checkouts.cfg`?"
msgstr ""

# a966f84d4d1f450dae7dcf0f7550427d
#: ../develop/plone-coredev/es/intro.rst:140
msgid ""
"Si usted respondió *SI* a todas estas preguntas, ¡usted esta listo para "
"presentar sus cambios! Un par de recordatorios rápidos:"
msgstr ""

# dffa8d83f0d34e169d9ea1f34122b7db
#: ../develop/plone-coredev/es/intro.rst:142
msgid ""
"Solamente generar una revisión directamente a la branch de desarrollo, si "
"usted esta seguro que su código no causa ninguna falla y los cambios son "
"pequeños y triviales. De lo contrario, por favor, haga un ``fork`` del "
"repositorio aplicando sus revisiones allí y luego haga un ``pull request`` "
"(mas abajo se explica como)."
msgstr ""

# 2e4dd4e6c6164215969e5e65de59359d
#: ../develop/plone-coredev/es/intro.rst:143
msgid ""
"Por favor, trate de hacer un cambio por cada revisión. Si usted esta "
"corrigiendo tres fallas, haga tres revisiones. De esta forma, es fácil ver "
"que fue cambiado y donde se realizo el cambio, además es mas fácil hacer un "
"``roll back`` de cualquier cambio si es necesario. Si usted quiere hacer "
"muchos cambios como limpiar espacios en blanco o renombrar variables, es "
"especialmente importante hacer una revisión separada por esta razón."
msgstr ""

# 71ba5d3e53b941fab6c32559f67f8442
#: ../develop/plone-coredev/es/intro.rst:144
msgid ""
"Nosotros tenemos un grupo de guardianes que siguen los cambios y cada "
"revisión aplicada para ver que ha sucedido de nuevo en el código fuente de "
"nuestro favorito CMS! Si su revisión tiene algo REALMENTE no está bien, "
"ellos le contactaran políticamente a usted, lo mas común que suceda es que "
"inmediatamente revierten los cambios aplicados con sus revisiones. Hay "
"personas no oficiales asignadas a esto si usted esta especialmente nervioso,"
" entre en el canal IRC `#plone "
"<http://webchat.freenode.net?channels=plone>`_ en freenode.net y pregunte "
"por alguien que pueda ver sus cambios."
msgstr ""

# dba6401be8604f1d9e83b9a2c03456a9
# 3cb65343707049208f186f6444384d7a
#: ../develop/plone-coredev/es/intro.rst:147
#: ../develop/plone-coredev/es/intro.rst:203
msgid "Generando revisiones al paquete Products.CMFPlone"
msgstr ""

# 1f0044fe76c34789834096157b702a3f
# db1332217d9c45ecb6aa49e089794e28
#: ../develop/plone-coredev/es/intro.rst:148
#: ../develop/plone-coredev/es/intro.rst:204
msgid ""
"Si usted esta trabajando un corregir un fallo en el paquete "
"``Products.CMFPlone``, hay un par de otras cosas que debe tomar en cuenta. "
"Primero y mas importante, puede ver que este paquete tiene varias branches. "
"Al momento de escribir este documento, habían tres branches para ``4.1``, "
"``4.2``, y la ``master``, el cual es implícitamente 4.3."
msgstr ""

# d1114011496f469e9e95667c5fcf5171
# 9246290c11fe4dd4a7c9d94a4f3c12f8
#: ../develop/plone-coredev/es/intro.rst:155
#: ../develop/plone-coredev/es/intro.rst:211
msgid ""
"¿Aun me sigue con la explicación? Entonces, usted tiene un corrección de "
"fallas para 4.x. Si la corrección es solamente para una versión, asegúrese "
"de obtener la branch y aplicar sus cambios allí. Sin embargo, si la "
"corrección del fallo es en múltiples branches."
msgstr ""

# 91c14c4efb024345b20de6df862f19fe
# 5891b647bdc74a6a8922ef4f59be1ea3
#: ../develop/plone-coredev/es/intro.rst:160
#: ../develop/plone-coredev/es/intro.rst:216
msgid ""
"Por ejemplo, el fallo inicia en la versión 4.1. Obtenga la branch 4.1 y "
"aplicar sus cambios allí con varias revisiones por cada cambio con sus "
"respectivas pruebas."
msgstr ""

# e7c4bdce07ac40c2b5786241dfa6ade9
# 02b58dbe161a4d159a1bfb384a49577c
#: ../develop/plone-coredev/es/intro.rst:162
#: ../develop/plone-coredev/es/intro.rst:218
msgid ""
"Si su corrección involucra una simple revisión de cambios, usted puede usar "
"el comando ``git cherry-pick`` para aplicar la misma revisión a un branch "
"diferente."
msgstr ""

# df1695d6330b4e0cb8cdec6ef7bf867d
# 43b811d61f43441e9c374bdd90647761
#: ../develop/plone-coredev/es/intro.rst:166
#: ../develop/plone-coredev/es/intro.rst:222
msgid "Primero cambie a la branch, con el siguiente comando::"
msgstr ""

# 7e3a966ceffb4fd1b3423cecbef95d4e
#: ../develop/plone-coredev/es/intro.rst:170
msgid ""
"Y entonces con el comando ``git cherry-pick`` y el número de revisión del "
"commit (usted puede obtener el número SHA hash desde el ``git log``), con el"
" siguiente comando::"
msgstr ""

# 4724cb5a39364bc2ba59b1c54bb1d8e6
# 8c890479e04b401f95af01cbb29e66f4
#: ../develop/plone-coredev/es/intro.rst:174
#: ../develop/plone-coredev/es/intro.rst:230
msgid ""
"Tal ves allá conflictos; entonces, resuélvalos y seguir las instrucciones "
"que la herramienta git le da a usted para completar el comando ``git cherry-"
"pick``."
msgstr ""

# 1bd717f2f886448ebe5e099b01ae37a1
# c63bf1c90b06463ca2b253ad691dc231
#: ../develop/plone-coredev/es/intro.rst:177
#: ../develop/plone-coredev/es/intro.rst:233
msgid ""
"Si su corrección involucra múltiples revisiones, entonces hacer un ``cherry-"
"picking`` uno a uno puede resultar tedioso. En este caso, las cosas son más "
"fáciles, si usted hizo su corrección en una branch con una característica "
"separada."
msgstr ""

# 8d6088b8bbd14dd4891d35e941913044
# a78b97c8600542c6892f09e278bac722
#: ../develop/plone-coredev/es/intro.rst:180
#: ../develop/plone-coredev/es/intro.rst:236
msgid ""
"En ese escenario, primero fusione la branch característica a la branch 4.1, "
"con los siguientes comandos::"
msgstr ""

# f903867238c74f1c95df2cc0ffb3a9d8
# 32ca594f950444e0bd92d884cd2cbbf0
#: ../develop/plone-coredev/es/intro.rst:185
#: ../develop/plone-coredev/es/intro.rst:241
msgid ""
"A continuación, regrese a la branch característica y haga una branch para "
"`establecerlo` dentro de la branch 4.2, con los siguientes comandos::"
msgstr ""

# 27240e8a2aa54d7cb6af8b4aeebf7103
# 5c04f67751b74decaef20ede65d22636
#: ../develop/plone-coredev/es/intro.rst:191
#: ../develop/plone-coredev/es/intro.rst:247
msgid ""
"(ef978a viene a ser la ultima revisión en el histórico de la branch "
"característica antes de que sea bifurcaba de la versión 4.1. Usted puede "
"mirar el histórico de su repositorio git con el comando ``git log`` para "
"encontrar este.)"
msgstr ""

# 55dd7c442923415d975eb4842827fafd
# d8996b25d834493db15f63608a31ef16
#: ../develop/plone-coredev/es/intro.rst:194
#: ../develop/plone-coredev/es/intro.rst:250
msgid ""
"Al llegar a este punto, la historia de la branch característica ha sido "
"actualizada, pero no ha sido de hecho fusionada con la versión 4.2 aún. Este"
" le permite a usted resolver conflictos antes de que usted lo fusione a la "
"branch release 4.2. Hacerlo ahora así con los siguientes comandos::"
msgstr ""

# 1272a6d3204d45e5a0e6e0dad97a0e79
#: ../develop/plone-coredev/es/intro.rst:226
msgid ""
"Y entonces con el comando ``git cherry-pick`` y el número de revisión (usted"
" puede obtener el número SHA hash desde el ``git log``), con el siguiente "
"comando::"
msgstr ""

# d53d05abb0e247fab73b65881a5f6267
#: ../develop/plone-coredev/es/intro.rst:259
msgid "Los branches y los forks y hacer revisiones directamente - ¡Por Dios!"
msgstr ""

# d06f239b5b21482dbc13e1f431cf8c4a
#: ../develop/plone-coredev/es/intro.rst:260
msgid ""
"Plone uso un repositorio svn, así que todo el mundo es familiar y "
"acostumbrado a hacer revisiones directamente a las branches. Después de la "
"migración de los repositorios svn a los repositorios git en el servicio "
"github, la comunidad decidió mantener este espíritu. Si usted ha firmado el "
"documento :doc:`contributor agreement <contributors_agreement_explained>`, "
"usted puede hacer commit directamente a la branch (para plone esto sería la "
"versión del branch, para más otros paquetes esto sería el branch llamado "
"``master``)."
msgstr ""

# 7000bbf8a5a9426494695de555bf587f
#: ../develop/plone-coredev/es/intro.rst:266
msgid ""
"AUN ASÍ, hay unas cuantas situaciones donde una hacer un nuevo branch es "
"apropiado. Si usted:"
msgstr ""

# 9de22a934c1d4bd5be3da081816f3ff7
#: ../develop/plone-coredev/es/intro.rst:263
msgid "usted se esta iniciando,"
msgstr ""

# 3281736c74dd43759f820bf52754e621
#: ../develop/plone-coredev/es/intro.rst:264
msgid "usted no esta seguro acerca de sus cambios"
msgstr ""

# 017c43e55ab942d180b364a4eac7ed67
#: ../develop/plone-coredev/es/intro.rst:265
msgid "quiere una revisión de comentario/código"
msgstr ""

# dc12579da31c44119eeefd99e92b2906
#: ../develop/plone-coredev/es/intro.rst:266
msgid "están llevando a cabo un cambio no trivial"
msgstr ""

# 39fb6df322114992b5a2ce69449c1bec
#: ../develop/plone-coredev/es/intro.rst:268
msgid ""
"Entonces probablemente quieres crear una branch de cualquier paquete que "
"está usando y entonces use la característica de `pull request "
"<https://help.github.com/articles/using-pull-requests>`_ del servicio github"
" para obtener revisión. Todo acerca de este proceso sería el mismo, excepto "
"que necesita para trabajar en una branch. Tome de ejemplo el paquete "
"``plone.app.caching``. Después de comprobarlo con ``mr.developer``, cree su "
"propia branch con los siguientes comandos::"
msgstr ""

# b81793e9117347aca4ca514e2fd79f20
#: ../develop/plone-coredev/es/intro.rst:275
msgid ""
"Hacer un branch o fork es su elección. Yo prefiero hacer branch, y yo estoy "
"escribiendo la documentación en esto usando el método de branch. Si usted "
"hace un branch, nos ayuda porque nosotros *sabemos* que tienes permisos para"
" aplicar revisiones a este branch. De cualquier forma, es tu decisión."
msgstr ""

# 62db6346f8aa446c9f3fecf3cb6a2c14
#: ../develop/plone-coredev/es/intro.rst:277
msgid ""
"Proceda como le sea costumbre. Cuándo usted este a punto para hacer ``push``"
" de la corrección de su fallo, debe hacer un push a una branch remota con el"
" siguiente comando::"
msgstr ""

# 6bb25df109c4426399a90eb8939581d3
#: ../develop/plone-coredev/es/intro.rst:281
msgid ""
"Esto hará un branch remoto en el servicio github. Vaya a esta branch de la "
"interfaz de usuario github y en la parte superior derecha habrá un botón que"
" dice **\"Pull Request\"**. Este le permitirá hacer una solicitud dentro de "
"un pull request en la branch principal. Hay personas que se ven una vez a la"
" semana o más para revisar las solicitudes pull requests y confirmar si son "
"o no es una buena corrección y le dará una retroalimentación cuando sea "
"necesario. Los revisores son informales y muy agradables, así que no se "
"preocupe - ¡que están ahí para ayudar! Si usted quieres retroalimentación "
"inmediata, valla a la sala IRC con el enlace de ``pull request`` y pedida "
"una revisión."
msgstr ""

# b51fd7bd3ff4452791316f8d7d64b0df
#: ../develop/plone-coredev/es/intro.rst:285
msgid ""
"¡todavía necesitas actualizar el archivo :file:`checkouts.cfg` en las "
"branches correctas de proyecto buildout.coredev!"
msgstr ""

# 968ac61752cd4fc1932d4b15532fd75d
# 240ab356fdeb49328b6f6af815150fa0
# 31bd30bfb4e645bfad6782b8742f2004
#: ../develop/plone-coredev/es/intro.rst:288
#: ../develop/plone-coredev/intro.rst:230
#: ../develop/plone-coredev/pt_BR/intro.rst:223
msgid "Jenkins"
msgstr ""

# 81cfedee0c4e4027bcb0ee05abde7c60
#: ../develop/plone-coredev/es/intro.rst:289
msgid ""
"¡Usted TODAVÍA no está listo! Por favor, compruebe que el servicio jenkins "
"se asegure que sus cambios no hallan roto cosas. Se ejecuta cada media hora "
"y tarda un rato para ejecutar la comprobación en una hora es bueno para "
"verificar el resultado que arroje. Ten una cerveza y tu mirada sobre el "
"`panel de control Jenkins <https://jenkins.plone.org/>`_."
msgstr ""

# b359b97ebd4a4831a4e9e6e0e9fdd75a
#: ../develop/plone-coredev/es/intro.rst:292
msgid "Finalizando Tickets"
msgstr ""

# b7775d964d2549bd9ea10e69e5b1ac7e
#: ../develop/plone-coredev/es/intro.rst:293
msgid ""
"Si usted esta trabajando de un ticket asignado, por favor no olvide en "
"volver a actualizar el ticket y agregar un enlace a sus revisión de cambios."
" Actualmente no tenemos una integración de nuestro sistema de ticket con el "
"servicio github pero es una forma agradable de seguir sus cambios. Eso "
"también le permite al reportero saber que usted preocupa. Si el fallo es "
"realmente grave, considere en contactar al release manager y he invitarle a "
"hacer un pronto lanzamiento."
msgstr ""

# b19c48564c7549a2aedf1049e59c3c3d
# 5bb8cb134bef4cba87b362bc32bca876
# 7ed99ff0e63741ad931cb81942d18eb2
#: ../develop/plone-coredev/es/intro.rst:296
#: ../develop/plone-coredev/intro.rst:238
#: ../develop/plone-coredev/pt_BR/intro.rst:231
msgid "FAQ"
msgstr ""

# 070442db95714b93ba2cb468a139e5db
#: ../develop/plone-coredev/es/intro.rst:298
msgid "*¿Cómo puedo saber si se tomaron mis cambios de mi paquete?*"
msgstr ""

# 1235e4d09b3a419686d3d9e6fe403de0
#: ../develop/plone-coredev/es/intro.rst:298
msgid ""
"Usted puede seguir el proyecto en github y mirar la `linea del tiempo de "
"cambios <https://github.com/organizations/plone>`_. Usted también puede "
"descargar el :file:`CHANGES.txt` de cada liberación de Plone para ver una "
"lista comprensible de todos los cambios y validar que su contribuciones "
"estén presente."
msgstr ""

# 658bec8c1487473795efcefc051c32bd
#: ../develop/plone-coredev/es/issues.rst:4
msgid "Troubleshooting: solucionar problemas"
msgstr ""

# 2621d5e903204cd387ed516bf86ec8f1
#: ../develop/plone-coredev/es/issues.rst:7
msgid "Incidencias Buildout"
msgstr ""

# f6c7077faf204427b277c7e23f2e4bfb
#: ../develop/plone-coredev/es/issues.rst:9
msgid ""
"Buildout puede ser muy frustrante para aquellos no familiarizados con el "
"análisis a través del lenguaje robot autista. ¡No tema! Estos errores son "
"casi siempre tienen una solución rápida y un con poco de comprensión le "
"lleva a un largo camino."
msgstr ""

# e31a0b3068f74d5cb293e7b7ca0cd67a
#: ../develop/plone-coredev/es/issues.rst:12
msgid "Errores ejecutando bootstrap.py"
msgstr ""

# d421922461fe4ae3b1deaffc233b84bc
#: ../develop/plone-coredev/es/issues.rst:13
msgid ""
"Ni siquiera se puede llegar a correr buildout y entonces ya tendrá un error."
" Déjeme darle un ejemplo de esto::"
msgstr ""

# c3973b3971574163ae6be8e18b61a6ff
#: ../develop/plone-coredev/es/issues.rst:21
msgid ""
"Usted puede pensar que la diosa buildout está enfadada porque han pasado "
"MESES desde que usted hizo un sacrificio humano para ella, pero sea fuerte y"
" siga adelante. Buildout simplemente se ha dado cuenta de que la versión de "
"buildout requerida por el archivo bootstrap.py que usted está intentando "
"ejecutar no coincide con la versión de buildout en la biblioteca de python. "
"En el error anterior, el sistema dispone de buildout 1.5.1 instalado y el "
"archivo bootstrap.py quiere correr con 1.5.2."
msgstr ""

# ad5af42e1f0241b6806ac9889097b463
#: ../develop/plone-coredev/es/issues.rst:23
msgid ""
"Para solucionarlo, hay un par de opciones. En primer lugar, puede hacer que "
"se ejecute buildout con la versión que ya se han instalado mediante la "
"invocación de la etiqueta de versión. Esto le dice a su archivo bootstrap.py"
" [Plone] para ejecutar muy bien con la versión que ya se ha instalado. En el"
" caso de que el error pegado encima, que sería::"
msgstr ""

# 9c5c7ff773be416b9e8b2ef96e5544c9
#: ../develop/plone-coredev/es/issues.rst:27
msgid ""
"Yo conozco personalmente que las versiones 1.4.4, 1.5.1, 1.5.2 y todo "
"funciona de esta manera."
msgstr ""

# 8cc2fe61ab6c48eba78c5f601260c7e6
#: ../develop/plone-coredev/es/issues.rst:29
msgid ""
"La otra opción es eliminar el paquete egg actual y forzar la actualización. "
"En el caso de que el error anterior, todo lo que necesita para eliminar del "
"paquete egg que tiene actualmente en ell sistema. ej::"
msgstr ""

# 25629d0b33dd4b099902663910d03c57
#: ../develop/plone-coredev/es/issues.rst:33
msgid ""
"Al volver a ejecutar el archivo bootstrap.py, este buscará para el paquete "
"egg para el buildout, ya que no hay uno, y luego ir a buscar el paquete egg "
"con la nueva versión que se quiere para su construcción buildout."
msgstr ""

# eac20fe5911c4f829def0aa55b63b193
#: ../develop/plone-coredev/es/issues.rst:35
msgid ""
"De una de esas, digamos dos Ave Marías, con tres padres nuestros y ejecute "
"de nuevo bootstrap.py. ¡Tada!"
msgstr ""

# 3410bf4ac95842498e9100b864a14ada
#: ../develop/plone-coredev/es/issues.rst:37
msgid ""
"Otra cosa de la nota es que está ejecutando bootstrap efectivamente asocia "
"al ejecutable python y todas sus bibliotecas a su buildout. Si tiene varias "
"instalaciones Python y quiere cambiar a cual Python está asociando a su "
"buildout, sólo tiene que volver a ejecutar bootstrap.py con el nuevo python "
"(y vuelva a ejecutar el buildout). Usted puede obtener el mismo error "
"anterior nuevamente, ahora que sabes cómo solucionarlo, usted puede pasar "
"ese tiempo bebiendo cerveza en vez de aplastar el teclado."
msgstr ""

# d264d73e0c9d47d59fb7528a67ed1130
# 247eca14a1a44319b34d097ac02b084c
#: ../develop/plone-coredev/es/issues.rst:39
#: ../develop/plone-coredev/es/issues.rst:74
msgid "¡Hurra!"
msgstr ""

# fe7a36220ae943c7b9590e74045cf0b5
#: ../develop/plone-coredev/es/issues.rst:42
msgid "Cuando Mr. Developer no es feliz"
msgstr ""

# 1e182f14f5af4829b0286e799c936c1c
#: ../develop/plone-coredev/es/issues.rst:43
msgid ""
"``mr.developer`` nunca es feliz, excepto cuando es. A pesar de que esto "
"técnicamente no es un incidente buildout, pasa cuándo esta ejecutando "
"buildout, entonces yo lo estoy poniéndolo en las incidencias buildout."
msgstr ""

# b9e7336464c143a78237dfff57f5b427
#: ../develop/plone-coredev/es/issues.rst:45
msgid ""
"Cuándo trabajando con la instancia de desarrollo, especialmente con toda el "
"movimiento de ida y vuelta de cambios entre github y svn, usted puedes tener"
" una copia vieja de un paquete en le directorio ``src``. El error luce así::"
msgstr ""

# fb7fe52cf0bc4ab09cc41f5e43bd1304
#: ../develop/plone-coredev/es/issues.rst:50
msgid ""
"Mientras usted no tenga cualquier revisión de cambios pendiente, usted solo "
"necesita remover el paquete del directorio ``src/`` y se vuelve a revisar "
"para usted cuando se actualiza."
msgstr ""

# f7521acaa350475bab6397fba15998c2
#: ../develop/plone-coredev/es/issues.rst:53
msgid ""
"Usted también se puede conseguir con errores tan divertidos tales como::"
msgstr ""

# 2a2876ab101b42cf8cefee93ac60fad5
#: ../develop/plone-coredev/es/issues.rst:58
msgid ""
"Estos errores están bien para ser ignorados SI y SÓLO SI las líneas que "
"siguen diga::"
msgstr ""

# 5123fb3862e04b8880746fa6395b00c5
#: ../develop/plone-coredev/es/issues.rst:64
msgid ""
"Si buildout termina con un aviso de que algunos paquetes no se pudo "
"descargar, entonces es probable que el paquete no se ha descargado. Esto es "
"malo y puede causar todo tipo de errores al iniciar o tratar de hacer las "
"cosas porque nunca se llegan a descargar el paquete."
msgstr ""

# 6e2208f0edcb4f07a32fbd8986b14c53
#: ../develop/plone-coredev/es/issues.rst:66
msgid ""
"Hay dos maneras de obtener este error desaparezca. Lo primero es eliminar "
"todas las instancias del host filtrado. registrar minuciosamente todos los "
"archivos y elimine cualquier lineas la cual diga así ``allow-hosts =`` y "
"``allow-hosts +=``. En teoría, mediante la restricción de los hosts del cual"
" se va a descarga, buildout irá más rápido. Ya sea que realmente sucede o "
"no, yo no puedo opinar. El punto es que son de seguramente se pueden "
"eliminar."
msgstr ""

# 1e960fe4e15c4a93876510405f359a3b
#: ../develop/plone-coredev/es/issues.rst:68
msgid ""
"La segunda opción es el permitir al host al cual ese apunta para ser añadido"
" de algo como esto a su archivo .cfg::"
msgstr ""

# 15bb65d964bf4a68a09e679e5662c307
#: ../develop/plone-coredev/es/issues.rst:72
msgid ""
"Otra vez, esto es sólo necesario si el paquete no fue encontrado al final."
msgstr ""

# 603daec5143f45a2bca66377f79ff244
#: ../develop/plone-coredev/es/issues.rst:77
msgid "Errores de ruta mr.developer"
msgstr ""

# 845bc5e48f374daa9f4756854711e022
# ef94d8ea724246d9b6e1f38a61f46895
#: ../develop/plone-coredev/es/issues.rst:79
#: ../develop/plone-coredev/issues.rst:77
msgid ""
"``ERROR: You are not in a path which has mr.developer installed "
"(:file:`.mr.developer.cfg` not found).``"
msgstr ""

# 5471106221d3481a9bc07f5d38cdf171
#: ../develop/plone-coredev/es/issues.rst:81
msgid "Cuando ejecuta algún comando :command:`./bin/develop`."
msgstr ""

# 111b6497f7a3441bb9612b543d2c3df3
#: ../develop/plone-coredev/es/issues.rst:83
msgid "Para solucionar, simplemente ejecute el siguiente comando::"
msgstr ""

# e3f107be6d694d709528e70af46b21f6
#: ../develop/plone-coredev/es/issues.rst:90
msgid "Otros incidentes aleatorios"
msgstr ""

# fc968c64dbcb4ac7a305fe883fe55e48
#: ../develop/plone-coredev/es/issues.rst:94
msgid "Paquetes Sucios"
msgstr ""

# 2534b94804bd425096afca276f460ad0
# faea23f6413444dd8f4c6c191ac527ec
# c779708ef47c48f4927a42affb414a13
#: ../develop/plone-coredev/es/issues.rst:96
#: ../develop/plone-coredev/issues.rst:94
#: ../develop/plone-coredev/pt_BR/issues.rst:94
msgid "\"ERROR: Can't update package '[Some package]', because it's dirty.\""
msgstr ""

# 69a99a9f20cc412abf29a32a97762e68
# a3ba076c1aab442c9231c8b0bfe5bb3a
#: ../develop/plone-coredev/es/issues.rst:99
#: ../develop/plone-coredev/es/issues.rst:133
msgid "Solución"
msgstr ""

# acdf30e3c44b46038e7a30f4e0171daa
#: ../develop/plone-coredev/es/issues.rst:100
msgid ""
"``mr.developer`` se queja porque un archivo se ha cambiado / añadido, pero "
"no se ha generado una revisión."
msgstr ""

# 951982e87ae04e509a95e471ff951022
#: ../develop/plone-coredev/es/issues.rst:103
msgid ""
"Utilice el comando :command:`bin/develop update --force`. Añadiendo ``*.pyc "
"*~.nib *.egg-info .installed.cfg *.pt.py *.cpt.py *.zpt.py *.html.py *.egg``"
" a su configuración subversion global-ignores ha sido sugerido como una "
"solución más permanente."
msgstr ""

# f1bd110c8f6c405eb88df9c469239ea2
# 4dd4572533c044988bbcae7a5a4cfc90
# 5466e2f6c0b54be3861b9c06f9d5ca27
#: ../develop/plone-coredev/es/issues.rst:109
#: ../develop/plone-coredev/issues.rst:107
#: ../develop/plone-coredev/pt_BR/issues.rst:107
msgid "No module named zope 2"
msgstr ""

# b7a618a4c3fd47e0b76a5a136774536d
# e91bdd162a064d3aa9eaec786b67b68e
# de8a148c9cac4350a504206a6fd6c54c
#: ../develop/plone-coredev/es/issues.rst:110
#: ../develop/plone-coredev/issues.rst:108
#: ../develop/plone-coredev/pt_BR/issues.rst:108
msgid ""
"``ImportError: No module named Zope2\" when building using a PLIP cfg "
"file.``"
msgstr ""

# 0ce1496249f046d182dccb11a8841a67
#: ../develop/plone-coredev/es/issues.rst:112
msgid ""
"Parece no ser en realidad el caso. Eliminar el archivo "
":file:`mkzopeinstance.py` desde el directorio :file:`bin/` y ejecute de "
"nuevo el script buildout para corregir esto si usted está encontrando "
"fastidioso."
msgstr ""

# 0a5949d7460c4e809bc7d32b6e9b6915
#: ../develop/plone-coredev/es/issues.rst:116
msgid "No puede abrir el archivo '/Startup/run.py'"
msgstr ""

# cd4d056d4a854693ab6a05ca75826947
#: ../develop/plone-coredev/es/issues.rst:117
msgid ""
"Dos posibles soluciones, usted esta usando Python 2.4 por equivocación, así "
"que por favor use Python 2.6 en cambio. O, usted tal ves necesitar "
"asegurarse que usted ejecuto el script :command:`bin/buildout …` después "
"ejecutar el script :command:`bin/develop …`. Trate de remover los "
"directorios :file:`parts/*`, :file:`bin/*`, el archivo "
":file:`.installed.cfg`, entonces ejecute de nuevo el archivo "
":file:`bootstrap.py` y ejecute de nuevo buildout, develop, buildout."
msgstr ""

# 878d7771fbd7463785137edde2f98b29
#: ../develop/plone-coredev/es/issues.rst:120
msgid "PIL perdido"
msgstr ""

# e26fa39561aa465c9c33d33043e5145c
#: ../develop/plone-coredev/es/issues.rst:121
msgid ""
"El archivo :file:`pil.cfg` es incluido con esta configuración buildout para "
"ayudar en instalación PIL. Ejecutar :command:`bin/buildout -c pil.cfg` a "
"instalar la librería PIL. Este método no funciona en Windows, así que "
"nosotros somos incapaces de correr él por defecto."
msgstr ""

# 061a7a9d24644695bd41bbb7b9bbf21d
#: ../develop/plone-coredev/es/issues.rst:127
msgid "Incidencias con paquetes egg modificado"
msgstr ""

# 546b746c5457485cb485db348502ded4
#: ../develop/plone-coredev/es/issues.rst:128
msgid ""
"El comando :command:`bin/develop status` el mostrara que el paquete egg "
"``Products.CMFActionIcons`` ha sido modificado, pero no lo he tocado.  Y "
"ejecutando este comando :command:`bin/develop up` esta previniendo la "
"actualización de todos los paquetes egg."
msgstr ""

# 0a37b5aa4ad5437fbf43b4f169ce4892
#: ../develop/plone-coredev/es/issues.rst:135
msgid ""
"Editar el archivo :file:`~/.subversion/config` y añadir eggtest*.egg a la "
"lista de ``global-ignores``"
msgstr ""

# b2f9573c0f544ae28a3c3ad690356477
# cc32fe7645c2401d86cc68af2a1007ce
# 72aa6bbc034643699ffcaed1efdab3a1
#: ../develop/plone-coredev/es/mrdeveloper.rst:4
#: ../develop/plone-coredev/mrdeveloper.rst:2
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:2
msgid "Mr. Developer"
msgstr ""

# b3acea88f85b49da9f13ffd63e17810e
#: ../develop/plone-coredev/es/mrdeveloper.rst:6
msgid ""
"Esta configuración buildout usa mr.developer para administrar los paquetes "
"de desarrollo. Ver https://pypi.python.org/pypi/mr.developer para mayor "
"información o ejecutar el comando :command:`bin/develop help` para un lista "
"de comando disponibles."
msgstr ""

# e867e511d8bd44ee8dab5a86d569edd1
#: ../develop/plone-coredev/es/mrdeveloper.rst:10
msgid ""
"El mas común flujo de trabajo para obtener todas la ultimas actualizaciones "
"es::"
msgstr ""

# 4c28f86001d34b25977781557b251692
#: ../develop/plone-coredev/es/mrdeveloper.rst:15
msgid ""
"Esto te conseguirá la versión mas reciente de la configuración **coredev**, "
"compruebe y actualice todos los paquetes vía Subversion en el directorio "
":file:`src` y ejecute buildout para configurar el asunto."
msgstr ""

# 2f611035d57549d5a7ece59cbe6be315
#: ../develop/plone-coredev/es/mrdeveloper.rst:17
msgid "De vez en cuando puedes comprobar si alguna cosas pendiente::"
msgstr ""

# 663c1c5830bd4882851d679303632bcc
#: ../develop/plone-coredev/es/mrdeveloper.rst:21
msgid ""
"Si esto imprime alguna líneas con un signo de interrogación delante, usted "
"puede limpiarlo con::"
msgstr ""

# ea486c372f224c398b1907a31b3752b0
#: ../develop/plone-coredev/es/mrdeveloper.rst:25
msgid ""
"Esto sacará los paquetes del directorio :file:`src/` los cuáles ya no son "
"necesarios, cuando estos han sido reemplazados por una apropiada liberación "
"en formato Egg de estos paquetes."
msgstr ""

# 742d3870155a42d599c9b473d586ee17
#: ../develop/plone-coredev/es/plipreview.rst:4
msgid "Revisando PLIPs"
msgstr ""

# 868c6dc248ea4c7da2093bf46fafb6d5
# 17d1b9359b19484684370f89248cb5ab
#: ../develop/plone-coredev/es/plipreview.rst:7
#: ../develop/plone-coredev/pt_BR/plipreview.rst:5
msgid "Expectativas"
msgstr ""

# 4cdcdf2c3f394ee9a505ccf6e49a4b79
#: ../develop/plone-coredev/es/plipreview.rst:8
msgid ""
"Una buena revisión del PLIP toma aproximadamente 4 horas así que por favor "
"haga planes en consecuencia. Cuando haya terminado, si usted tiene acceso al"
" núcleo por favor comprometerse con la revisión de los plips y hacer "
"referencia a la PLIP en el mensaje de confirmación. Si no tienes acceso, por"
" favor adjuntar su revisión al ticket PLIP en si mismo."
msgstr ""

# 6b372e79640442e88dc0b576514cd4bc
#: ../develop/plone-coredev/es/plipreview.rst:11
msgid "Instalando el entorno"
msgstr ""

# d788a40c814244b797b4a5c6776cf88a
#: ../develop/plone-coredev/es/plipreview.rst:12
msgid ""
"Seguir las instrucciones en `definiendo un entorno de desarrollo "
"<https://dev.plone.org/wiki/DevelopmentEnvironment>`_ para \"obtener el "
"código fuente\". Usted necesitará a tener una copia al branch del "
"repositorio del cual el PLIP fue asignado. En vez de correr el buildout con "
"el archivo predeterminado buildout, usted lo ejecutara el archivo especifico"
" de configuración del plip::"
msgstr ""

# 32b6c45fa5df4637bd36a889ddad0178
#: ../develop/plone-coredev/es/plipreview.rst:17
msgid "Revisión de funcionalidad"
msgstr ""

# 403def01cfd0448793bc6c1447d1dc02
#: ../develop/plone-coredev/es/plipreview.rst:18
msgid ""
"Hay varias cosas que podría ser dirigido en una revisión PLIP que depende de"
" la naturaleza del PLIP. Esto es de ninguna manera una lista exhaustiva, "
"pero un sitio para empezar. Las cosas para pensar aproximadamente cuándo "
"este revisando:"
msgstr ""

# 8cd9149daeb043178ac34e90578a65b9
# 77d437663da04bc19c4cb753b4832e33
#: ../develop/plone-coredev/es/plipreview.rst:21
#: ../develop/plone-coredev/plipreview.rst:19
msgid "General"
msgstr ""

# a3a2ef8c9f5247ae943558eeb5d07952
#: ../develop/plone-coredev/es/plipreview.rst:22
msgid ""
"¿Este PLIP realmente hace lo que los implementadores propusieron? ¿Hay "
"variaciones incompletas?"
msgstr ""

# ac399dcbd00b4cb9826d9b935f748792
#: ../develop/plone-coredev/es/plipreview.rst:23
msgid ""
"¿Hubo allí algunos errores al ejecutar el buildout? ¿Hizo el trabajo de "
"migración?"
msgstr ""

# 8e943695fd13455b91011bba2e154cc5
#: ../develop/plone-coredev/es/plipreview.rst:24
msgid ""
"¿No mensajes de error y los mensajes de estado tiene sentido? ¿Son correctas"
" las internacionalizaciones?"
msgstr ""

# f7ab184056ae435e974164f85b0e2fc2
#: ../develop/plone-coredev/es/plipreview.rst:25
msgid ""
"¿Hay alguna consideraciones de rendimiento? ¿El implementador de este PLIP "
"se dirigió a ellos si es así?"
msgstr ""

# eb186244be9e4c88b4612361e2868f4a
#: ../develop/plone-coredev/es/plipreview.rst:28
msgid "Errores"
msgstr ""

# 4e9e556521e549f5a7a19a78a1405f98
#: ../develop/plone-coredev/es/plipreview.rst:29
msgid "¿Hay algún error? Nada es demasiado grande ni pequeño."
msgstr ""

# b780536a8ee542938d7a0fd26de0e7f0
#: ../develop/plone-coredev/es/plipreview.rst:30
msgid ""
"¿Los campos a manejar data estrafalarias? ¿Cómo son las cadenas en los "
"campos de fecha o los campos nulos son requeridos?"
msgstr ""

# 49c2031514ec447584ca8d2df085c0e3
#: ../develop/plone-coredev/es/plipreview.rst:31
msgid ""
"Es validación y cuestión de puro sentido? ¿Es demasiado restrictiva o no es "
"lo suficiente restrictivo?"
msgstr ""

# 7c700a1053774a87bd68a0aaad397f14
#: ../develop/plone-coredev/es/plipreview.rst:34
msgid "Incidentes de usabilidad"
msgstr ""

# 821e3926896a45b7be80b927df11038c
#: ../develop/plone-coredev/es/plipreview.rst:35
msgid "¿Es usable la implementación?"
msgstr ""

# acaefd3a8070464aba1a989c7f16fe5d
#: ../develop/plone-coredev/es/plipreview.rst:36
msgid "¿Cómo los usuarios finales novatos responden al cambio?"
msgstr ""

# b7effc66476d4f53a24a79cfbbe69d53
#: ../develop/plone-coredev/es/plipreview.rst:37
msgid ""
"¿Hace este PLIP necesidad una revisión de usabilidad? Si usted piensa que "
"este PLIP necesita una revisión de usabilidad, por favor, cambiar el estado "
"a \"please review\" y agregue una nota a estos comentarios."
msgstr ""

# 1742f69ade9d4b37b016a5eaff4f70af
#: ../develop/plone-coredev/es/plipreview.rst:38
msgid ""
"¿El PLIP es compatible con el resto de Plone? Por ejemplo, si hay "
"configuración de panel del control, hacer esta forma nueva funciona en con "
"el resto de los panel de control."
msgstr ""

# c750ff9aba384972996f0b659ff16ce0
#: ../develop/plone-coredev/es/plipreview.rst:39
msgid ""
"¿Todo se comporta bien para principiantes y usuarios avanzados? ¿Hay algún "
"flujo de trabajo que se ofrece una experiencia extraña?"
msgstr ""

# 01bcc96f64724e698f9a216d10d35304
#: ../develop/plone-coredev/es/plipreview.rst:40
msgid ""
"¿Hay permisos nuevos y ellos trabajan correctamente? ¿Esas asignaciones de "
"roles hacen con sentido?"
msgstr ""

# bb300c4e61a94c988edfc6b4e69bf024
#: ../develop/plone-coredev/es/plipreview.rst:43
msgid "Incidencias de la documentación"
msgstr ""

# 53a61c1e7b234866acb1125cbb015f56
#: ../develop/plone-coredev/es/plipreview.rst:44
msgid ""
"¿Hay suficiente documentación disponible correspondiente para el usuario "
"final, ya sea programador o usuario plone?"
msgstr ""

# 3a801c06966648e8b9a3c4784293804a
#: ../develop/plone-coredev/es/plipreview.rst:45
msgid "¿Este cambio en si mismo esta correctamente documentado?"
msgstr ""

# 44c6722636cd48ee88b642015b45fc16
#: ../develop/plone-coredev/es/plipreview.rst:47
msgid ""
"Por favor, reporte fallos/incidencias en el sistema de ticket Trac como si "
"se tratara de cualquier fallo Plone. Haga referencia al PLIP en el fallo, "
"asigne a su implementador, y añadir una etiqueta para el PLIP en forma de "
"plip-xxx. De este modo el implementor puede encontrar ayuda si lo necesita. "
"Por favor, también priorizar el ticket. El PLIP no será fusionado hasta que "
"todo los fallos bloqueadores y críticos están corregido."
msgstr ""

# c476521cf62b4b42bd2a87b9e1437393
#: ../develop/plone-coredev/es/plipreview.rst:50
msgid "Revisión de Código"
msgstr ""

# b65384da30eb4b7380967f947553bfb9
# 85dd19f886894d9baf4b3e240dfdaf44
# f99abdaac4ca4723854e49e187c87445
#: ../develop/plone-coredev/es/plipreview.rst:53
#: ../develop/plone-coredev/plipreview.rst:51
#: ../develop/plone-coredev/pt_BR/plipreview.rst:51
msgid "Python"
msgstr ""

# b8397484ea1c4b999ae2bfce76d9426d
#: ../develop/plone-coredev/es/plipreview.rst:54
msgid "¿Es este código fuente mantenible?"
msgstr ""

# 6693b0f91be2400ba547510616e99dc7
#: ../develop/plone-coredev/es/plipreview.rst:55
msgid "¿Esta el código fuente adecuadamente documentado?"
msgstr ""

# 0b2554241b724746b72cd957b6d00bc6
#: ../develop/plone-coredev/es/plipreview.rst:56
msgid "¿El código fuente se adhiere al estándar PEP8 (más o menos)?"
msgstr ""

# db556f84a4d846f184f898149a466cda
#: ../develop/plone-coredev/es/plipreview.rst:57
msgid "¿Están importando módulos obsoletos?"
msgstr ""

# 46dba5a0552f49278775a6e9838f3d99
#: ../develop/plone-coredev/es/plipreview.rst:61
msgid ""
"¿El javascript conocer a nuestro conjunto de normas javascript? Ver "
"http://developer.plone.org/templates_css_and_javascripts/javascript.html"
msgstr ""

# cd985fe0431746ada6782eed06b71922
#: ../develop/plone-coredev/es/plipreview.rst:62
msgid ""
"¿El Javascript funciona en todos los navegadores soportados actualmente? ¿Es"
" eficaz?"
msgstr ""

# 61edacfc27b9474e9202b41180e243cd
# 81c762fa86324f89a3a09b1d9cbf3996
# 47f3c97b45f241939687931a6496292d
#: ../develop/plone-coredev/es/plipreview.rst:65
#: ../develop/plone-coredev/plipreview.rst:63
#: ../develop/plone-coredev/pt_BR/plipreview.rst:63
msgid "ME/TAL"
msgstr ""

# 8a46e9c5f7d0418ba7e102e108707842
#: ../develop/plone-coredev/es/plipreview.rst:66
msgid ""
"¿La vista de usuario del PLIP adecuadamente y evitando demasiada lógica?"
msgstr ""

# 4a6d53dd1cd84f3490c721b24babe57d
#: ../develop/plone-coredev/es/plipreview.rst:67
msgid ""
"¿Hay algún código fuente en un bucle que podría ser un problema de "
"rendimiento?"
msgstr ""

# b98c86d55806416284a0e5468d7cef72
#: ../develop/plone-coredev/es/plipreview.rst:68
msgid ""
"¿Hay alguna líneas de código con estilo obsoleto o viejo ME/TAL como el uso "
"de DateTime?"
msgstr ""

# 92c436836cb34ed6a3fce2e6e6f197ac
#: ../develop/plone-coredev/es/plipreview.rst:69
msgid ""
"¿Es compatible con lo que dicta el estándar html? ¿Los ids y class CSS "
"utilizado son apropiados?"
msgstr ""

# 6a7e5cd199e7407c998bce55ef7675cb
#: ../develop/plone-coredev/es/plipreview.rst:72
msgid "Ejemplos de revisiones de PLIP"
msgstr ""

# a9a525bf1deb45e3a770033783161ea3
# 2be7230e50e142ae92dfbdab2c6b64eb
# 42d2f33701474a1e89d69761e78f5402
#: ../develop/plone-coredev/es/plipreview.rst:73
#: ../develop/plone-coredev/plipreview.rst:71
#: ../develop/plone-coredev/pt_BR/plipreview.rst:71
msgid ""
"https://svn.plone.org/svn/plone/buildouts/plone-"
"coredev/branches/4.1/plips/plip9352-review-davisagli.txt"
msgstr ""

# 6da0742b4bac4ba9a80559594d31cdf3
# 622b1b0386ab428eb2424f6f95bd321d
# fa7819f5eef542fcb909c2c59476ea95
#: ../develop/plone-coredev/es/plipreview.rst:74
#: ../develop/plone-coredev/plipreview.rst:72
#: ../develop/plone-coredev/pt_BR/plipreview.rst:72
msgid ""
"https://svn.plone.org/svn/plone/buildouts/plone-"
"coredev/branches/4.1/plips/plip10886-review-cah190.txt"
msgstr ""

# 6c20d7883a8f473ebe29f7678eb31767
# bcc90dccd31f48b5935fbebe3000aedf
# 241eabccfba44371a634cd051eb51d41
#: ../develop/plone-coredev/es/plipreview.rst:75
#: ../develop/plone-coredev/plipreview.rst:73
#: ../develop/plone-coredev/pt_BR/plipreview.rst:73
msgid ""
"https://svn.plone.org/svn/plone/buildouts/plone-"
"coredev/branches/4.1/plips/plip9352-review-rossp.txt"
msgstr ""

# adfed8841cea47e1a735ff7e266f8562
#: ../develop/plone-coredev/es/plips.rst:4
msgid "Implementando PLIPS"
msgstr ""

# dcc28fba751744249a6b939a5a7eacda
#: ../develop/plone-coredev/es/plips.rst:7
msgid "Todo sobre los PLIPS"
msgstr ""

# 88536f16177546c0bc2e9474335038bc
#: ../develop/plone-coredev/es/plips.rst:9
msgid "**¿Qué es un PLIP?**"
msgstr ""

# 4f54ba1f2a7f4488af6004985fa0214b
#: ../develop/plone-coredev/es/plips.rst:9
msgid ""
"Del ingles, PLIP significa PLone Improvement Proposal, el cual es una "
"propuesta de mejora a Plone. Eso es cuando un cambio a un paquete Plone que "
"afectaría todo el mundo Las PLIPs van por un proceso diferente que la "
"corrección de fallos debido a su ancho logrando efecto. El equipo del "
"framework Plone 4.x revisa todas las PLIPs para ser seguro que es en el "
"mejor interés de la comunidad para ser implementada y que es de calidad "
"alta."
msgstr ""

# 7841daede834404ab61d43ccb5502246
#: ../develop/plone-coredev/es/plips.rst:12
msgid "**¿Es un PLIP o una corrección de fallo?**"
msgstr ""

# 8fc2bf029111408f8bb7b86fd6dabdf4
#: ../develop/plone-coredev/es/plips.rst:12
msgid ""
"En general, cualquier cosa que cambia el API de Plone en el backend o la UI "
"en la portada tendría que ser archivado como PLIP. En caso de duda, se "
"presentará como una PLIP. El equipo del framework esta ansioso al reducir es"
" propia carga de trabajo y clasificarla de nuevo por usted."
msgstr ""

# 189b349365f64a2e8bb73f0a948e6197
#: ../develop/plone-coredev/es/plips.rst:17
msgid "**¿Quiénes pueden presentar PLIPs?**"
msgstr ""

# 68404dbd01bb4c5f8ba0fb198b85d965
#: ../develop/plone-coredev/es/plips.rst:15
msgid ""
"Cualquiera quién ha firmado el Plone core contributor agreement puede "
"trabajar en un PLIP. No deje que la redacción le asuste: la firma del "
"acuerdo es fácil y usted tendrá acceso casi inmediato. Usted no tiene que "
"ser el más increíble programador en el mundo entero para poder presentar una"
" PLIP. El equipo del Framework estará encantado de ayudarle en cualquier "
"momento del proceso. La presentación de un PLIP puede ser un gran proceso de"
" aprendizaje y animamos a la gente de todos los orígenes a presentar.  "
"Cuando el PLIP es aceptado, un miembro del equipo del Framework "
"\"defenderá\" su PLIP y a ser encargado de llevar a cabo esta mejorar hasta "
"que este completada. Las PLIPs no solamente son código fuente monkeys. Si "
"usted tiene ideas sobre nuevas formas de interactuar o de la interfaz de "
"usuario sus ideas son mas que bienvenidas. Incluso te ayudaremos a la par "
"con los implementores si necesario."
msgstr ""

# e55327eb3691478e9a10e02f32539ced
#: ../develop/plone-coredev/es/plips.rst:29
msgid "**¿Qué es un defensor PLIP?**"
msgstr ""

# f6a35ca146c64787aa7dfb207e780de2
#: ../develop/plone-coredev/es/plips.rst:20
msgid ""
"Cuando usted presenta su PLIP y esta es aprobada, Un miembro del equipo de "
"Framework que este especialmente animado a ver hecho realidad el PLIP sera "
"asignado a su PLIP como un defensor. Ellos están ahí para animar hasta su "
"culminación, así que responde a cualquier pregunta y proporcionar "
"orientación necesaria."
msgstr ""

# edaa522f9fd6488bb0446fdb9db849fe
#: ../develop/plone-coredev/es/plips.rst:22
msgid "Un defensor debería:"
msgstr ""

# 79c41e17430341d6ba171aa590d623d6
#: ../develop/plone-coredev/es/plips.rst:24
msgid ""
"Responda a las preguntas formuladas por el implementador tiene sobre el "
"PLIP, técnica y de cualquier otra"
msgstr ""

# 3cb88f9a09e44849a5dd7b3f8cee7d51
#: ../develop/plone-coredev/es/plips.rst:25
msgid ""
"Fomentar el autor PLIP por su constantemente retroalimentación y estímulo"
msgstr ""

# 9bce3de94a0a4c4d9d1805af2132ed35
#: ../develop/plone-coredev/es/plips.rst:26
msgid ""
"Cuidar que el implementador logre la lineas de tiempo y coloque las cosas "
"listas a tiempo"
msgstr ""

# 7d836a1b7ab1469fb13a5ded74b9f464
#: ../develop/plone-coredev/es/plips.rst:27
msgid ""
"Asistir en la búsqueda de ayuda adicional cuando sea necesario para "
"completar la implementación en un tiempo oportuno"
msgstr ""

# 191f4843bc27478d942061e510ee403e
#: ../develop/plone-coredev/es/plips.rst:29
msgid ""
"Ten en mente que los defensores están en modo pasivo por defecto. Si usted "
"necesitas ayuda o asesoría, por favor, contacte a ellos lo mas pronto sea "
"posible para activar el modo ayuda."
msgstr ""

# ba4347d03dec4a3fbc3f20eefd911d7c
#: ../develop/plone-coredev/es/plips.rst:33
msgid ""
"**Yo aun estoy nervioso. ¿Puedo yo involucrarme de otras formas primero?**"
msgstr ""

# faa2998c5deb4ee1b941de0d8bb193d9
#: ../develop/plone-coredev/es/plips.rst:32
msgid ""
"Si quieres sentir el proceso y cómo funciona, nos ayudan a revisar los PLIPs"
" terminar las implementaciones. Si usted quiere sentir el proceso y cómo "
"funciona, ayúdenos a revisar los PLIPs para terminar las implementaciones. "
"Simplemente pregunte a los miembros del equipo de Framework cual PLIPs esta "
"disponible para revisar o verificar el estatus del PLIPs en el `siguiente "
"enlace <https://dev.plone.org/report/24>`_. Asegúrese de decirnos como usted"
" intenta revisar el PLIP uniéndose a la `lista de correo del equipo de "
"Framework <https://lists.plone.org/mailman/listinfo/plone-framework-team>`_ "
"y enviar un correo rápidamente. Entonces, siga las simples instrucciones "
"para :doc:`revisar un PLIP <plipreview>`. ¡Gracias de antemano!"
msgstr ""

# 4f1a79816a90488d97efc7039285bc53
#: ../develop/plone-coredev/es/plips.rst:36
msgid "**¿Cuándo yo puedo presentar un PLIP?**"
msgstr ""

# 38629f04ac954a679b6e707df3cdfe1c
#: ../develop/plone-coredev/es/plips.rst:36
msgid ""
"¡Hoy, mañana, en cualquier momento! Después que la PLIP es aceptada, el "
"equipo del Framework tratara de juzgar la complejidad y el tiempo para "
"completar y asignar este en un hito. Usted puede iniciar rápidamente su "
"trabajo, y nosotros animamos a presentarlo 'rápido y furioso'."
msgstr ""

# 8ed50f3ca0534728a5ec803c427ef2d2
#: ../develop/plone-coredev/es/plips.rst:41
msgid "**¿Cuándo el PLIP es debido?**"
msgstr ""

# 7a17a6c09a774d2d9f78bbb39836037e
#: ../develop/plone-coredev/es/plips.rst:39
msgid ""
"Resumen: Tan pronto usted lo finalice. Técnicamente, nosotros queremos ver "
"eso completado para la publicación a la cual fue asignada. Nosotros sabemos "
"que todos tenemos ocupaciones que nos ponen muy ocupados y además de nuevos "
"problemas hacen a los PLIPs más complicado si es así entonces los vamos a "
"mover hacia la siguiente versión. En general, nosotros no queremos seguir un"
" PLIP por mas de un año. Si su PLIP es aceptada y nosotros no vemos "
"actividad en mas de un año, nosotros probablemente le preguntaremos para "
"iniciar de nuevo el proceso."
msgstr ""

# 34cb4e64c3364675935719f9aa41ce60
#: ../develop/plone-coredev/es/plips.rst:44
msgid "**No le gusta mi PLIP :( Y ahora que?**"
msgstr ""

# 7fa112dd3a97477eb93cb6a58d3dad61
#: ../develop/plone-coredev/es/plips.rst:44
msgid ""
"Solo por que un PLIP no ha sido aceptado en núcleo no significa que sea una "
"mala idea. A menudo, es el caso que hay implementaciones compitiendo y "
"nosotros queremos ver eso evaluado como un añadido antes de recibir la "
"\"bendición\" la implementación preferida."
msgstr ""

# cd454b3e654d4c19b41e2a2aa05fd46e
#: ../develop/plone-coredev/es/plips.rst:47
msgid "Información general del proceso"
msgstr ""

# a1dfc69abefb438e961b53a5de8ef878
#: ../develop/plone-coredev/es/plips.rst:48
msgid "Presentar un PLIP (en cualquier tiempo)"
msgstr ""

# d0a554328fc04262bb11a2ff692ce572
#: ../develop/plone-coredev/es/plips.rst:49
msgid ""
"PLIP es aprobada para incluirse dentro de núcleo para ser dado en una "
"publicación"
msgstr ""

# acf5c5045ba84eb19b761ae715680ef8
#: ../develop/plone-coredev/es/plips.rst:50
msgid "El desarrollador implementa el PLIP (código, tests, documentación)"
msgstr ""

# 3b23ff11b53a4712b9a5853bd9cf5dcb
#: ../develop/plone-coredev/es/plips.rst:51
msgid "PLIP es presentado para ser revisado por un desarrollador"
msgstr ""

# 771484ac758b449d8a590fba2801feac
#: ../develop/plone-coredev/es/plips.rst:52
msgid "El equipo del Framework revisa el plip y ofrece un comentario"
msgstr ""

# 145139a8df70425690ec572e0817ec5b
#: ../develop/plone-coredev/es/plips.rst:53
msgid ""
"El desarrollador direcciona lo concerniente en al comentario y presenta de "
"nuevo si es necesario. Esto puede ir y venir varias veces hasta que tanto el"
" FWT y el desarrollador está satisfecho con el resultado."
msgstr ""

# 71034bb9faf649ff9710bfdff03af8e6
#: ../develop/plone-coredev/es/plips.rst:54
msgid ""
"El PLIP es aprobada para fusionarse. En raras circunstancias, un PLIP sera "
"rechazado. Esto es usualmente a que el resultado del trabajo hecho por el "
"desarrollador no responde al comentario o abandono del proceso.  ¡Aguante "
"ahí!"
msgstr ""

# 3e13634267314df492bd89671f891662
#: ../develop/plone-coredev/es/plips.rst:55
msgid ""
"Después de que todos los otros PLIPS son fusionado, una publicación se "
"corta. Esperar por los nuevos fallos!"
msgstr ""

# 91a65505b42045a196244294757d6bf5
#: ../develop/plone-coredev/es/plips.rst:60
msgid "Como presentar a PLIP"
msgstr ""

# f251b93cb1b043578d07edcc44ee42bd
#: ../develop/plone-coredev/es/plips.rst:61
msgid ""
"Si usted necesita ayuda en algún punto de este proceso, por favor, contacte "
"a un miembro del equipo del framework personalmente o pida ayuda en la "
"`lista de correo FWT <https://lists.plone.org/mailman/listinfo/plone-"
"framework-team>`_."
msgstr ""

# 81bfa65eeabe43a0bcf46654be61f8d6
#: ../develop/plone-coredev/es/plips.rst:63
msgid ""
"Un PLIP es un ticket con una plantilla especial. Para iniciar, `abra un "
"nuevo ticket <https://dev.plone.org/newticket>`_ y seleccione \"PLIP\" como "
"el tipo de ticket. Un nueva plantilla de ticket se cargara y usted debería "
"planear llenarla en todas sus secciones y campos."
msgstr ""

# b35dd58d7deb4842a22c8044ee3b49c2
#: ../develop/plone-coredev/es/plips.rst:65
msgid ""
"Cuando escribe una PLIP, de se lo mas especifico que pueda al punto a "
"tratar. Recuerde su audiencia - que le puede dar apoyo a su propuesta, las "
"personas tendrán que ser capaces de leerla! Un buen PLIP es suficientemente "
"claro para un usuario conocedor de Plone este disponible a entender la "
"propuesta de cambios, y suficientemente detallada para que el release "
"manager y otros desarrolladores entiendan el completo impacto de la "
"propuesta puede tener el código base. Usted no tiene que listar cada línea "
"de código que necesidades de ser cambiadas, pero usted también debe dar una "
"indicación que usted tenga sobre alguna idea de como el cambio puede ser "
"viablemente implementado."
msgstr ""

# 4cb89ce7583044feafb1fc37bb988c2b
#: ../develop/plone-coredev/es/plips.rst:67
msgid ""
"Si el cambio es menor entonces un ticket en el sistema de seguimiento debe "
"ser suficiente, añadido como una mejora. El punto clave acá es que cada "
"cambio necesita documentación para que otros usuarios puedan ver que cambios"
" hay de nuevo. Esto puede ser en el formulario de un registro de en el "
"sistema de incidencia, o un PLIP en el caso de que es un cambio mayor. Un "
"fallo o cambio menor normalmente no necesita ir a través del proceso de "
"revisión - que hace un PLIP."
msgstr ""

# 10517b7c0a764b8fa677237a65dd7ae4
#: ../develop/plone-coredev/es/plips.rst:69
msgid ""
"Después que su plip es escrita, solicite un comentario de sus ideas en la "
"lista de correo plone-developers. En este proceso de evaluación, usted "
"quiere asegurarse de que el cambio no afectará negativamente a otras "
"personas en un accidente. Otros pueden ser capaces de señalar puntos de "
"riegos o incluso ofrecer una mejor o soluciones existentes."
msgstr ""

# a9675d371f67486caa76aa3cab9422b3
#: ../develop/plone-coredev/es/plips.rst:71
msgid ""
"Cuándo este feliz con el comentario, :ref:`presente un PLIP "
"<como_presentar_plip>`. Por favor, use la plantilla proveída (XXX: put the "
"template here? Can we just have a custom ticket type?). Por favor, note un "
"par de cosas. Es muy rara ves que la sección de “Risks” estará vacío o nula."
" Si usted busca esto es el caso y su PLIP no tiene más nada que un cambio "
"trivial, quizás con algo más investigación debería estar listo."
msgstr ""

# 63fd8204486f4080b10516922da9e395
#: ../develop/plone-coredev/es/plips.rst:73
msgid ""
"El campo seconder es REQUERIDO. Nosotros enviaremos el PLIP de regreso a "
"usted si ese campo no es llenado. En la actualidad, sólo alguien más que "
"piensa que su PLIP es una buena idea, un +1. En el futuro cercano, vamos a "
"empezar a preguntar al secunde que es un socio de la codificación, o alguien"
" que esté dispuesto y sea capaz de terminar el PLIP si algo le ocurriera al "
"implementador."
msgstr ""

# 0d504f160cb04a148cb3e04d11f016d7
#: ../develop/plone-coredev/es/plips.rst:75
msgid ""
"Todo lo demás debe explicarse por sí mismo en el ticket de su PLIP. Si le "
"dio pereza escribir estas PLIP tan documentado. Estoy apostando a este "
"último."
msgstr ""

# 078a3c01b33f4af4b2107cfe81373faf
#: ../develop/plone-coredev/es/plips.rst:78
msgid "Evaluando PLIPs"
msgstr ""

# 513ce94b578f4cd3bf0b9c3bdf7634c9
#: ../develop/plone-coredev/es/plips.rst:79
msgid ""
"Después de presentar su PLIP, el equipo Framework tendrá un par de semanas "
"para conocer y le harán de conocimiento si el PLIP es aceptado. Si el PLIP "
"no es aceptado, por favor, se sienta mal! Nosotros animamos a que la mayoría"
" de los PLIPs pasen a través del proceso de add on al principio, si es "
"posible para asegurarse de que la mayoría de la comunidad lo use."
msgstr ""

# 02d12d9931f2462494d6c308aa019e4e
#: ../develop/plone-coredev/es/plips.rst:81
msgid ""
"Toda la comunicación con usted ocurrirá en ticket PLIP ticket en si mismo "
"por favor, este pendiente a su bandeja de entrada de su correo electrónico "
"por cada cambios aplicado al ticket."
msgstr ""

# 39b7b6124f0a413090b9a8b225ee3582
#: ../develop/plone-coredev/es/plips.rst:88
msgid ""
"Estos son los criterios por del equipo framework que va a revisar en su "
"revisión del paquete:"
msgstr ""

# c1e743edcf8c4a67bcc770e8f2178f34
#: ../develop/plone-coredev/es/plips.rst:84
msgid ""
"¿Cual es el tamaño y estatus del trabajo necesitado para culminarlo? ¿Esta "
"listo un add-on y esta bien establecido?"
msgstr ""

# 90b207325b9f42d5a1a5f5f6afd0b189
#: ../develop/plone-coredev/es/plips.rst:85
msgid "¿Esta idea esta bien cocinada y se expresa con claridad?"
msgstr ""

# aa17af23ed8441ed924306ae2c2ccefb
#: ../develop/plone-coredev/es/plips.rst:86
msgid "¿El trabajo propuesto en Plone deber estar ahora, en el futuro?"
msgstr ""

# 64485c5f6b7c44c08670885494167fc2
#: ../develop/plone-coredev/es/plips.rst:87
msgid "¿Es esta PLIP más apropiado a ser calificado como un add-on?"
msgstr ""

# 4ff4baec0a2b4745b867e5f92ae43415
#: ../develop/plone-coredev/es/plips.rst:88
msgid "¿Es esta PLIP demasiado arriesgada?"
msgstr ""

# 5c5e0f8455cc444d9f11fcb3e3731378
#: ../develop/plone-coredev/es/plips.rst:90
msgid "Vea la pagina :doc:`plipreview` para más información."
msgstr ""

# 0cb0a6bcce564b36ad68bcde83ed95ea
#: ../develop/plone-coredev/es/plips.rst:93
msgid "Implementando su PLIP"
msgstr ""

# 7b773f73049d4dc8b615a010d5db6192
#: ../develop/plone-coredev/es/plips.rst:94
msgid ""
"Usted puede iniciar el desarrollo en cualquier momento - pero si usted yendo"
" a modificar el Plone en si mismo, usted podría querer esperar para ver si "
"sus ideas son aprobadas primero para salvarse algún trabajo que no sea "
"necesario."
msgstr ""

# 84caf9f1375f42e4afac8e866869eb83
#: ../develop/plone-coredev/es/plips.rst:97
msgid "Reglas Generales"
msgstr ""

# 5632dae7ef2d496aa1f4889777546947
#: ../develop/plone-coredev/es/plips.rst:98
msgid ""
"Cualquiera de los nuevos paquetes debe estar en una branch bajo el namespace"
" plone en github. Así usted no tenga el desarrollo allí, pero ese debe estar"
" allí cuando este presentado. Nosotros recomendamos usar branches en el "
"repositorio github.com/plone y se detallará abajo."
msgstr ""

# 59b291abed344adba7016d6389e36532
#: ../develop/plone-coredev/es/plips.rst:99
msgid ""
"Lo mas importante, los revisores PLIP debe estar disponible a ejecutarse con"
" buildout y cada cosa debería \"solo trabajar\" (tm)."
msgstr ""

# d0e03a85d22a4928840c33db8e012b1a
#: ../develop/plone-coredev/es/plips.rst:104
msgid "Cualquier nuevo código fuente debería:"
msgstr ""

# 0df2acf20284412384370cf3a5ad46fb
#: ../develop/plone-coredev/es/plips.rst:101
msgid "Estar :doc:`documentado apropiadamente <documentation>`"
msgstr ""

# 6e3e72c4dcd64d34abb300c09cb4cfca
#: ../develop/plone-coredev/es/plips.rst:102
msgid "Tener el código fuente limpio"
msgstr ""

# 07921638ebd344fd9564bbed844d8341
#: ../develop/plone-coredev/es/plips.rst:103
msgid "Usa los idiomas actuales de desarrollo"
msgstr ""

# 70a495f40d7d4adbb310d54d7b275c42
#: ../develop/plone-coredev/es/plips.rst:104
msgid ""
"`Estar probado <http://collective-"
"docs.plone.org/en/latest/testing_and_debugging/index.html>`_"
msgstr ""

# 1ae27e3fb02d4e03a350e088d1e2e4c7
#: ../develop/plone-coredev/es/plips.rst:107
msgid "Creando una nueva branch PLIP"
msgstr ""

# 3c713a6ad72c42b3a134bc7d7589d41b
#: ../develop/plone-coredev/es/plips.rst:110
msgid ""
"Cree un archivo de configuración buildout para su PLIP en la carpeta llamada"
" ``plips``. Dar un nombre descriptivo, iniciando con el numero de plip; por "
"ejemplo ``plip-1234-widget-frobbing.cfg``. Es archivo sera definido en el "
"branches/trunks que usted esta trabajando con su PLIP. Esto debería lucir "
"algo así como lo siguiente:"
msgstr ""

# de8fb0430c6244ba895220e40a0fbbe4
#: ../develop/plone-coredev/es/plips.rst:116
msgid "En el archivo ``plips/plip-1234-widget-frobbing.cfg``::"
msgstr ""

# 7183fdc9180d47fcb2631dbe2ec53836
#: ../develop/plone-coredev/es/plips.rst:136
msgid ""
"Utilice la misma convención de nombre cuando haga un branch existente a "
"paquetes existentes, y siempre usted debería siempre hacer branch paquetes "
"cuando esta trabajando en las PLIPs."
msgstr ""

# 4710a76a66524910aa0a2f4dadda138f
#: ../develop/plone-coredev/es/plips.rst:140
msgid "Finalizando"
msgstr ""

# 977ed5434c474c6fbf7919ac3f4a97f4
#: ../develop/plone-coredev/es/plips.rst:141
msgid ""
"Antes de hacer que su PLIP este listo para revisar, por favor añada un "
"archivo dando un conjunto de instrucciones al revisor PLIP."
msgstr ""

# 39ec529db1e54a9489d5753b4241d282
#: ../develop/plone-coredev/es/plips.rst:147
msgid ""
"Este debería ser llamado ``plip_<number>_notes.txt``. Este debe incluir "
"(pero no es limitado a solo eso):"
msgstr ""

# 93800386283a41868082cc682fb47a0d
#: ../develop/plone-coredev/es/plips.rst:144
msgid ""
"Las direcciones URLs que apuntan a toda la documentación creada/actualizada"
msgstr ""

# c61aa17441e34ac6bbc7c03f5d09b20c
#: ../develop/plone-coredev/es/plips.rst:145
msgid "Cualquier inquietud, las incidencias aún permanecen"
msgstr ""

# bb482895aa66414bbdcd88126833908c
#: ../develop/plone-coredev/es/plips.rst:146
msgid "Cualquier cosas buildout extrañas"
msgstr ""

# 11feccfd7dc642c9bfcb19a2a7fdc262
#: ../develop/plone-coredev/es/plips.rst:147
msgid "XXX: ¿Algo mas?"
msgstr ""

# ff47b622ac8240f3b3fc30d48da0ccca
#: ../develop/plone-coredev/es/plips.rst:149
msgid ""
"Una ves que allá finalizado, por favor, actualice su ticket indicar que esta"
" listo para ser revisado. El equipo del Framework asignara 2 a 3 personas "
"para revisar su PLIP. Ellos seguirán las lineas guías definidas en "
":doc:`plipreview`."
msgstr ""

# 0a2e4e3de6c8412bb6c3493e56d97839
#: ../develop/plone-coredev/es/plips.rst:151
msgid ""
"Después de que el PLIP ha sido aceptado por el equipo de framework y el "
"release manager, se le pedirá que fusionar su trabajo dentro de la línea de "
"desarrollo principal. La fusión de la PLIP no es la parte más difícil, pero "
"hay que pensar en ello cuando se desarrolla. Usted tendrá que interactuar "
"con un gran número de personas para conseguir que todo quede preparado. La "
"fusión puede causar problemas con otros PLIPs que vienen en camino. Durante "
"la fase de fusión debe estar preparado para ayudar con todas las "
"características y fallos que puedan surgir."
msgstr ""

# 9f8895e77b1545f38755b1f6b59ec20c
#: ../develop/plone-coredev/es/plips.rst:153
msgid ""
"Si todo ha ido según lo previsto en el próximo lanzamiento de Plone "
"contendrá su PLIP en ella. Se espera contar con su ayuda para dar soporte a "
"esa característica después de haber sido lanzado en Plone (dentro de lo "
"razonable)."
msgstr ""

# 42eb234c59ed4312b9ddbd31c24094e1
#: ../develop/plone-coredev/es/style.rst:4
msgid "Guía de estilos"
msgstr ""

# f3942f10f9ce405ea9e7dd977d435944
#: ../develop/plone-coredev/es/style.rst:6
msgid ""
"Python, como cualquier lenguaje de programación, puede ser escrito en un "
"número de estilos. ¡Somos los primeros en admitir que Zope y Plone no son "
"los mejores ejemplos de la integridad estilística, pero eso no nos impide "
"intentarlo!"
msgstr ""

# dc8aff486d0643199e348ae95699b25f
#: ../develop/plone-coredev/es/style.rst:8
msgid ""
"Si no estas familiarizado con `PEP 8 "
"<http://www.python.org/dev/peps/pep-0008>`_ - la guía de estilo de la "
"python, por favor, tome un momento para leer y ponerse al día. Nosotros no "
"requerimos, pero nosotros, como comunidad realmente, realmente lo "
"apreciamos."
msgstr ""

# bb8c8d707d5e472cba4dc063a207092f
#: ../develop/plone-coredev/es/style.rst:11
msgid "Convenciones de nombre"
msgstr ""

# 3aa90085e22a40669ed2ff3d06264c9c
#: ../develop/plone-coredev/es/style.rst:12
msgid ""
"¡Por encima de todo, ser coherente con cualquier código que usted está "
"modificando! Históricamente, el código es todo camel case, pero muchas "
"nuevas bibliotecas se encuentran en la convención PEP8. La lista de correo "
"es la explosión de debates sobre que es lo mejor, así que nosotros vamos a "
"dejar el ejercicio de decidir qué hacer con el usuario de esta lista."
msgstr ""

# 6e007c08467b460f97bb3778f7967964
#: ../develop/plone-coredev/es/style.rst:15
msgid "Convenciones de Archivo"
msgstr ""

# 84ff7bd8718d49828081adea15a2a521
#: ../develop/plone-coredev/es/style.rst:16
msgid ""
"En Zope 2, los nombres de archivos que solía ser así MixedCase. En Python, y"
" así en Plone yendo de frente, preferimos todos los nombres de archivos en "
"minúsculas. Esto tiene la ventaja de que usted puede ver inmediatamente si "
"se refiere a un módulo / archivo o una clase::"
msgstr ""

# 1fbbb9949f4447b7af7a7f34de55a90e
# f510843689e1410ca8a5763c37a9bd77
#: ../develop/plone-coredev/es/style.rst:20
#: ../develop/plone-coredev/es/style.rst:28
msgid "comparar eso a::"
msgstr ""

# 3b3399aac7a24ff595ecb1b5d5e9763d
#: ../develop/plone-coredev/es/style.rst:24
msgid ""
"Los nombres de archivos debe ser ordenados y descriptivos. Piensa acerca de "
"como un import podría leerse::"
msgstr ""

# 7a0bcdaefbfd49ae878f6240fc5e17b7
#: ../develop/plone-coredev/es/style.rst:32
msgid ""
"A la primera es, obviamente, mucho más fácil de leer, menos redundante y por"
" lo general estéticamente más agradable."
msgstr ""

# bc0a548104c14fe8bd12099b9d13d850
#: ../develop/plone-coredev/es/style.rst:35
msgid ""
"Este ejemplo es casi tan terrible como el que viene. Necesitamos una mejor."
msgstr ""

# dca73a428934429f993b6d9116b3b348
#: ../develop/plone-coredev/es/style.rst:38
msgid "Reglas específicas"
msgstr ""

# 4714d4ebd3a24b828706867182c42162
#: ../develop/plone-coredev/es/style.rst:39
msgid ""
"¡No utiliza tabuladores en código de Python! Use espacios como indentado, a "
"4 espacios para cada nivel. Nosotros no **\"requerimos\"** `PEP8 "
"<http://www.python.org/dev/peps/pep-0008/>`_, pero mucha gente lo usa y eso "
"es bueno para usted."
msgstr ""

# 5bab222da5034d1bb32e503d65ab093d
#: ../develop/plone-coredev/es/style.rst:40
msgid "Indentar apropiadamente, incluso en HTML."
msgstr ""

# 95f1167ca85b4f578f4c33e96eb23ee1
#: ../develop/plone-coredev/es/style.rst:41
msgid ""
"Nunca usar una excepción bare. Cualquier cosa como ``except: pass`` es "
"probable que sea revertido instantáneamente"
msgstr ""

# a0007bcbcd6744deafd0e1a55f61763d
#: ../develop/plone-coredev/es/style.rst:42
msgid "Evitar ``tal:on-error``, desde estas excepciones swallows"
msgstr ""

# 71834954d51549c9856fe55b275e8101
#: ../develop/plone-coredev/es/style.rst:43
msgid ""
"No use ``hasattr()`` - esto son swallows exceptions, por favor, en este caso"
" use ``getattr(foo, 'bar', None)``. El problema con las swallowed "
"exceptions,no es sólo el informe de errores pobre. Esto también puede "
"enmascarar conflictos de errores (``ConflictErrors``), que indican que algo "
"ha ido mal en el `nivel de la ZODB "
"<http://developer.plone.org/troubleshooting/transactions.html#conflicterror>`_!"
msgstr ""

# b5bf515900394306829bb4305b706cdb
#: ../develop/plone-coredev/es/style.rst:44
msgid ""
"Nunca, coloque ningún código HTML dentro del código Python y lo retorne como"
" una cadena"
msgstr ""

# d892e78345a74a4c994d8baac723c0d7
#: ../develop/plone-coredev/es/style.rst:45
msgid ""
"No adquirir nada menos que sea absolutamente necesario, especialmente "
"herramientas. Por ejemplo, en vez de utilizar ``context.plone_utils``, use::"
msgstr ""

# 258948077c3947969133a94c3062b5bb
#: ../develop/plone-coredev/es/style.rst:50
msgid ""
"No coloque mucho de la lógica en las Plantillas de pagina Zope - ZPT (use "
"`Views <http://developer.plone.org/views/index.html>`_ en este caso!)"
msgstr ""

# cf4fdf6c10d04aa484d6d9cb252817fb
#: ../develop/plone-coredev/es/style.rst:51
msgid ""
"Recuerde agregar etiquetas `i18n "
"<http://developer.plone.org/i18n/index.html>`_ en ZPTs y código Python"
msgstr ""

# 844718ed0f1e459d993d1e7e9cd727ef
#: ../develop/plone-coredev/es/updateme.rst:4
msgid "Cómo actualizar estas documentaciones"
msgstr ""

# 6488fd0c9ef94d50826f76b080c2b067
#: ../develop/plone-coredev/es/updateme.rst:6
msgid ""
"Estos documentos actualmente son almacenados con el directorio "
":file:`/docs`. Para actualizarles, por favor, hacer un checkout desde el "
"buildout coredev y actualizar allá. Hacer los cambios en la rama de versión "
"más reciente (como de esta ``4.4``)::"
msgstr ""

# 8d54dafd379f4539b4ab45f342b3c6b9
#: ../develop/plone-coredev/es/updateme.rst:12
msgid ""
"Para probar sus cambios localmente, inicie de nuevo el buildout y entonces::"
msgstr ""

# 284f16a11cc943d4b548b7fc4c1294d3
#: ../develop/plone-coredev/es/updateme.rst:16
msgid ""
"Sphinx colocara en un directorio que usted puede consultar en tu navegador "
"web para validar. Por ejemplo: "
"``file:///home/user/buildout.coredev/docs/build/index.html``"
msgstr ""

# 68bd8bdb5fa94ae9bb381fd52fb1308a
#: ../develop/plone-coredev/es/updateme.rst:18
msgid ""
"Por favor asegúrese en validar todos los avisos y los errores antes de "
"generar una revisión para estar seguro que los documentos queden válido. Una"
" vez todo está a listo para ir, haga commit y push de sus cambios."
msgstr ""

# 49a8c173668246aeb9d15f51e2fc470d
#: ../develop/plone-coredev/es/updateme.rst:20
msgid ""
"El comando ``git cherry-pick`` hace commits en la rama más reciente a la "
"rama actualmente liberada (como de esta escritura ``4.3``) si estos cambios "
"aplican a aquella versión (usted puede conseguir el SHA hash de registro "
":command:`git log`)::"
msgstr ""

# 757d460a840c45a6896122bf499c5b65
#: ../develop/plone-coredev/es/updateme.rst:25
msgid ""
"Tal ves allá conflictos; entonces, resuélvalos y seguir las instrucciones "
"que la herramienta git le da a usted para completar el comando :command:`git"
" cherry-pick`."
msgstr ""

# 33803d2466924caeaa1f7e14e51ab616
# 0bca3fbee16046da8327ac36c8f9a52e
#: ../develop/plone-coredev/index.rst:5
#: ../develop/plone-coredev/pt_BR/index.rst:5
msgid "Process for Plone core's development"
msgstr ""

# e3fe4f1879a1476889a4a33ed314ccd8
#: ../develop/plone-coredev/index.rst:9
msgid ""
"This documentation describes the process for developing Plone. It is "
"primarily a technical resource for setting up your core developer buildout, "
"fixing bugs, and writing plips."
msgstr ""

# 5708fafa09f34fe2af92d9b1ff73bda5
#: ../develop/plone-coredev/index.rst:14
msgid "STOP!"
msgstr ""

# 67d082c60d514955ac1a0a7706c86ebc
#: ../develop/plone-coredev/index.rst:17
msgid ""
"Legally, you can NOT contribute code unless you have signed the "
":doc:`contributor agreement <agreement>`. This means that we can NOT accept "
"pull requests from you unless this is done, so please don't put the code "
"reviewers at risk and do it anyways. Submitting the agreement is easy (and "
"will soon be easier) and if you want quick access and are familiar with the "
"community, go into :doc:`irc <culture>` and ask one of the repo admins to "
"give you access with a scanned copy of the agreement. They will get you "
"going as fast as possible!"
msgstr ""

# 07c2c5d6f2e84a3abf3a4b785e158d45
#: ../develop/plone-coredev/index.rst:20
msgid "Table of Awesome"
msgstr ""

# db86f76ab2384134906e04d052f47799
# aae913ad4dc040f9be300404821a65ee
#: ../develop/plone-coredev/index.rst:34
#: ../develop/plone-coredev/pt_BR/index.rst:31
msgid "Others"
msgstr ""

# b350d1858d9d4b22b202d557e9425203
# ae820ab64d9a46988355198d9c5178b7
#: ../develop/plone-coredev/index.rst:36
#: ../develop/plone-coredev/pt_BR/index.rst:33
msgid "These are some documents using as reference for this documentation."
msgstr ""

# 4ef55637afd24dc6a6fc765abe8a70a4
#: ../develop/plone-coredev/index.rst:46
msgid "Translations available"
msgstr ""

# 8e01c707eb244a84926e5f114a23d4ab
#: ../develop/plone-coredev/index.rst:48
msgid ""
"There are some initiatives to maintenance available translations in other "
"languages for this documentation like:"
msgstr ""

# 3b02876c73cd449abff0f15fdf44598d
#: ../develop/plone-coredev/intro.rst:2
msgid "How To Commit Fixes to Plone Core"
msgstr ""

# b05b365a3fff4013bbcc9c1d83fa0562
#: ../develop/plone-coredev/intro.rst:3
msgid ""
"This document assumes you want to fix a bug and will detail the full "
"process. For more information on writing PLIPS, please :doc:`go here "
"<plips>`."
msgstr ""

# d9eb8fecfcf1419bb54b42675d967019
#: ../develop/plone-coredev/intro.rst:6
msgid "Version Support Policy"
msgstr ""

# 184ed5c9371e4df1be6c081de592071e
#: ../develop/plone-coredev/intro.rst:7
msgid ""
"If you are triaging or fixing bugs, keep in mind that Plone has a `version "
"support policy <http://plone.org/support/version-support-policy>`_."
msgstr ""

# 62cd7b33236b4302977dc6bba6cdb327
#: ../develop/plone-coredev/intro.rst:13
msgid ""
"`Python <http://python.org/>`_ 2.6 or 2.7 including development headers."
msgstr ""

# 73a51016524d46f7b077becc42258478
#: ../develop/plone-coredev/intro.rst:14
msgid ""
"If you are on Mac OSX, you will need to install `XCode "
"<https://developer.apple.com/xcode/>`_. You can do this through the app "
"store or several other soul-selling methods. You will likely want to install"
" your own python 2.6 as well since they strip out all the header files which"
" makes compiling some extensions weird. You can ignore this advice to start,"
" but have faith, you'll come back to it later. They always do..."
msgstr ""

# 662b0d13e829460c9a7ff8feb1b0e22d
#: ../develop/plone-coredev/intro.rst:15
msgid ""
"`Python Imaging Library (PIL) <http://www.pythonware.com/products/pil/>`_. "
"Make sure to install this into the proper python environment."
msgstr ""

# 2db2ab5defe14cca9efce4bc82dacce2
#: ../develop/plone-coredev/intro.rst:16
msgid ""
"`VirtualEnv <http://www.virtualenv.org/en/latest/index.html>`_ in the proper"
" python environment."
msgstr ""

# e2d6bdb7e88545728c20c14c20be7f43
#: ../develop/plone-coredev/intro.rst:17
msgid "`GCC <http://gcc.gnu.org/>`_ in order to compile ZODB, Zope and lxml."
msgstr ""

# dd8e03987a42494db5c7b1f521e65f23
#: ../develop/plone-coredev/intro.rst:18
msgid ""
"`libxml2 and libxslt <http://xmlsoft.org/XSLT/downloads.html>`_, including "
"development headers."
msgstr ""

# 75210b6355834d0b8be2584bb56d4bfc
# a504b31773ac433c9c1f142f1fedc1e6
#: ../develop/plone-coredev/intro.rst:22
#: ../develop/plone-coredev/pt_BR/intro.rst:22
msgid "Setting up Your Development Environment"
msgstr ""

# d087c80fa1a740518419906dbcff8bff
#: ../develop/plone-coredev/intro.rst:23
msgid ""
"The first step in fixing a bug is getting this `buildout "
"<https://github.com/plone/buildout.coredev>`_ running. We recommend fixing "
"the bug on the latest branch and then `backporting "
"<http://en.wikipedia.org/wiki/Backporting>`_ as necessary. `Github "
"<https://github.com/plone/buildout.coredev/>`_ by default always points to "
"the currently active branch. More information on switching release branches "
"is below."
msgstr ""

# 78a8216b227b42a2b7a6482956c107a8
# 04624921d5224677ae03f0f27aef5381
#: ../develop/plone-coredev/intro.rst:25
#: ../develop/plone-coredev/pt_BR/intro.rst:25
msgid "To set up a plone 4.2 development environment::"
msgstr ""

# f65e850e3bd14fd7bc11a431a6634a13
# 34e9e811e26e429c8d95096a81f031dd
#: ../develop/plone-coredev/intro.rst:34
#: ../develop/plone-coredev/pt_BR/intro.rst:34
msgid ""
"If you run into issues in this process, please see the doc :doc:`issues`."
msgstr ""

# 965bd5874a994513a5851ae5c800ec00
# 7524125cbc56420b813467f5dc307672
#: ../develop/plone-coredev/intro.rst:36
#: ../develop/plone-coredev/pt_BR/intro.rst:36
msgid ""
"This will run for a long time if it is your first pull (~20 mins). Once that"
" is done pulling down eggs, You can start your new instance with::"
msgstr ""

# ddb8b105116146b98e653250bee9c4ec
#: ../develop/plone-coredev/intro.rst:40
msgid "The default username/password for a dev instance is **admin/admin**."
msgstr ""

# 939104af015b4a94ac18c2428d846861
# b9b9455613164bba81412ea9411dc938
#: ../develop/plone-coredev/intro.rst:43
#: ../develop/plone-coredev/pt_BR/intro.rst:43
msgid "Switching Branches"
msgstr ""

# 1ea8d4eeab444fa288e9a9636152ab51
#: ../develop/plone-coredev/intro.rst:44
msgid ""
"If your bug is specific to one branch or you think it should be `backported "
"<http://en.wikipedia.org/wiki/Backporting>`_, you can easily switch "
"branches. The first time you get a branch, you must do::"
msgstr ""

# 4a8eb88a53ce42c08db2438b91635405
# 5e9eb953f76548cb8af0abfac107f58f
#: ../develop/plone-coredev/intro.rst:48
#: ../develop/plone-coredev/pt_BR/intro.rst:48
msgid ""
"This should set up a local 4.1 branch tracking the one on github. From then "
"on you can just do::"
msgstr ""

# 6b3dd86c69384556b46d418b17de5a69
# d6e9680d611b47afbecc147d0ba68d42
#: ../develop/plone-coredev/intro.rst:52
#: ../develop/plone-coredev/pt_BR/intro.rst:52
msgid "To see what branch you are currently on, just do::"
msgstr ""

# 98bdaadff500496f869df020bc753bba
# 5edc6d41d32f40d0bd930dcdbc81444d
#: ../develop/plone-coredev/intro.rst:56
#: ../develop/plone-coredev/pt_BR/intro.rst:56
msgid ""
"The line with a * by it will indicate which branch you are currently working"
" on."
msgstr ""

# 0298a193da84476381b27ef04c0b6448
# 06f62695db2c470dbace405982be3ad8
#: ../develop/plone-coredev/intro.rst:59
#: ../develop/plone-coredev/pt_BR/intro.rst:59
msgid ""
"Make sure to rerun buildout if you were in a different branch earlier to get"
" the correct versions of packages, otherwise you will get some weird "
"behavior!"
msgstr ""

# 65c7070f8e904b2a95261b0943fe6959
#: ../develop/plone-coredev/intro.rst:61
msgid ""
"For more information on buildout, please see the :doc:`collective developer "
"manual documentation on buildout </old-reference-manuals/buildout/index>`."
msgstr ""

# 93d58ef04bd24f2ba7f50fa9489030d7
# 6abf62ece33f435fadd4b239045d8730
#: ../develop/plone-coredev/intro.rst:65
#: ../develop/plone-coredev/pt_BR/intro.rst:65
msgid "Checking out Packages for Fixing"
msgstr ""

# 92d383b45b174f6e9256f83ff42fbbf7
#: ../develop/plone-coredev/intro.rst:66
msgid ""
"Most packages are not in :file:`src/` by default, so you can use "
"``mr.developer`` to get the latest and make sure you are always up to date. "
"It can be a little daunting at first to find out which packages are causing "
"the bug in question, but just ask on irc if you need some help. Once you "
"[think you] know which package(s) you want, we need to pull the source."
msgstr ""

# e411c073bcbc427f9a09632956ea0110
#: ../develop/plone-coredev/intro.rst:68
msgid ""
"You can get the source of the package with ``mr.developer`` and the checkout"
" command, or you can go directly to editing :file:`checkouts.cfg`. We "
"recommend the latter but will describe both. In the end, "
":file:`checkouts.cfg` must be configured either way so you might as well "
"start there."
msgstr ""

# 35d22cdd94364212af33c938a3e2e086
#: ../develop/plone-coredev/intro.rst:70
msgid ""
"At the base of your buildout, open :file:`checkouts.cfg` and add your "
"package if it's not already there::"
msgstr ""

# 1b8ee034d0984a5e9a0819a843232fda
# b9ea722a85504f6986a9e9c6c719e0fa
#: ../develop/plone-coredev/intro.rst:79
#: ../develop/plone-coredev/pt_BR/intro.rst:79
msgid "Then rerun buildout to get the source packages::"
msgstr ""

# df666f4e3540447b8c80198af79a06a4
#: ../develop/plone-coredev/intro.rst:83
msgid ""
"Altternatively, we can manage checkouts from the command line, by using "
"mr.developer's :command:`bin/develop` command to get the latest source. For "
"example, if the issue is in ``plone.app.caching`` and ``plone.caching``::"
msgstr ""

# e5f7fe8574254ac5ad210e91a126b70a
#: ../develop/plone-coredev/intro.rst:89
msgid ""
"Don't forget to rerun buildout! In both methods, ``mr.developer`` will "
"download the source from github (or otherwise) and put the package in the "
":file:`src/` directory. You can repeat this process with as many or as few "
"packages as you need. For some more tips on working with ``mr.developer``, "
"please :doc:`read more here <mrdeveloper>`."
msgstr ""

# 6a1d3a46ad484679bafb15765a42b2e2
# 969339ad1a1b49919a9e0f5864ff37ff
#: ../develop/plone-coredev/intro.rst:92
#: ../develop/plone-coredev/pt_BR/intro.rst:92
msgid "Testing Locally"
msgstr ""

# 6d7d15c9600f479bb16b3a00f29ff018
# 28d9bd9e57124b0cb8805b5906f33950
#: ../develop/plone-coredev/intro.rst:93
#: ../develop/plone-coredev/pt_BR/intro.rst:93
msgid ""
"In an ideal world, you would write a test case for your issue before "
"actually trying to fix it. In reality this rarely happens. No matter how you"
" approach it, you should ALWAYS run test cases for both the module and "
"plone.org before commiting any changes."
msgstr ""

# 08ea8120cfc34a87b06d86df52803a0e
# 2480a91b4f92496ab090d00cbf29f6af
#: ../develop/plone-coredev/intro.rst:95
#: ../develop/plone-coredev/pt_BR/intro.rst:95
msgid ""
"If you don't start with a test case, save yourself potential problems and "
"validate the bug before getting too deep into the issue!"
msgstr ""

# 221ed4df62914ffcb7c3af75e3716a82
# 355973bdf88b4487b3089426624ab2c6
#: ../develop/plone-coredev/intro.rst:97
#: ../develop/plone-coredev/pt_BR/intro.rst:97
msgid "To run a test for the specific module you are modifying::"
msgstr ""

# 5561f05dfb854b0d946767277d746055
# 37a4ead03c36480882575997a8a6a692
#: ../develop/plone-coredev/intro.rst:101
#: ../develop/plone-coredev/pt_BR/intro.rst:101
msgid ""
"These should all run without error. Please don't check in anything that "
"doesn't! If you haven't written it already, this is a good time to write a "
"test case for the bug you are fixing and make sure everything is running as "
"it should."
msgstr ""

# 9d9089192d29488e82f6db96c465ac46
# 9d0b804563ea4c32b772f71bc93e1bd6
#: ../develop/plone-coredev/intro.rst:103
#: ../develop/plone-coredev/pt_BR/intro.rst:103
msgid ""
"After the module level tests run with your change, please make sure other "
"modules aren't affected by the change by running the full suite::"
msgstr ""

# 6bed8b17c97e442fad3a100599b23a37
#: ../develop/plone-coredev/intro.rst:109
msgid ""
"Tests take a long time to run. Once you become a master of bugfixes, you may"
" just let jenkins do this part for you. More on that below."
msgstr ""

# 218c8975ba7c418c9c0398b21e898808
# 588259293b5d4797af5513e7900e3f02
#: ../develop/plone-coredev/intro.rst:112
#: ../develop/plone-coredev/pt_BR/intro.rst:110
msgid "Updating CHANGES.rst and checkouts.cfg"
msgstr ""

# d605ea46d29740fa980ce519850388e4
#: ../develop/plone-coredev/intro.rst:113
msgid ""
"Once all the tests are running locally on your machine, you are **ALMOST** "
"ready to commit the changes. A couple housekeeping things before moving on."
msgstr ""

# e146e046e7e941e4bf180806bb1dcaae
#: ../develop/plone-coredev/intro.rst:115
msgid ""
"First, please edit :file:`CHANGES.rst` (or :file:`CHANGES.txt`, or "
":file:`HISTORY.txt`) in each package you have modified and add a summary of "
"the change. This change note will be collated for the next Plone release and"
" is important for integrators and developers to be able to see what they "
"will get if they upgrade. New changelog entries should be added at the very "
"top of :file:`CHANGES.txt`."
msgstr ""

# 34ae59dd7cd34a99bbde81c600d425b1
#: ../develop/plone-coredev/intro.rst:118
msgid ""
"*Most importantly*, if you didn't do it earlier, edit :file:`checkouts.cfg` "
"file in the buildout directory and add your changes package to the ``auto-"
"checkout`` list. This lets the release manager know that the package has "
"been updated so that when the next release of Plone is cut a new egg will be"
" released and Plone will need to pin to the next version of that package. "
"READ: this is how your fix becomes an egg!"
msgstr ""

# 081ebcd5e58b4c2da251673f7179345c
# 819a624bc5054561a79cd88ca5d6ed1f
#: ../develop/plone-coredev/intro.rst:120
#: ../develop/plone-coredev/pt_BR/intro.rst:117
msgid ""
"Note that there is a section seperator called \"# Test Fixes Only\". Make "
"sure your egg is above that line or your egg probably won't get made very "
"quickly. This just tells the release manager that any eggs below this line "
"have tests that are updated, but no code changes."
msgstr ""

# 8c33d4389dc24ead94d3fb533cfeb272
#: ../develop/plone-coredev/intro.rst:122
msgid ""
"Modifying :file:`checkouts.cfg` file also triggers the buildbot, `jenkins "
"<https://jenkins.plone.org/>`_, to pull in the egg and run all the tests "
"against the changes you just made. Not that you would ever skip running all "
"tests of course... More on that below."
msgstr ""

# 4226bbb1258043ef8234b98088cf13cb
#: ../develop/plone-coredev/intro.rst:124
msgid ""
"If your bug is in more than one release (e.g. 4.1 and 4.2), please checkout "
"both branches and add to the :file:`checkouts.cfg` file."
msgstr ""

# 1159da726e0348c788bb23632c8761a5
# a03d746625014ae7a446b8826e46a1ee
#: ../develop/plone-coredev/intro.rst:127
#: ../develop/plone-coredev/pt_BR/intro.rst:124
msgid "Committing and Pull Requests"
msgstr ""

# 48afc8ad9ce74f4ca257914ea239c454
# 297a6bb9a0154e3bb45741e539660fe0
#: ../develop/plone-coredev/intro.rst:128
#: ../develop/plone-coredev/pt_BR/intro.rst:125
msgid "Phew! We are in the home stretch. How about a last minute checklist:"
msgstr ""

# 4fffa693f5974420988a0862a7a5323a
# c7c888ded2a445599d205c98f9879dec
#: ../develop/plone-coredev/intro.rst:130
#: ../develop/plone-coredev/pt_BR/intro.rst:127
msgid "Did you fix the original bug?"
msgstr ""

# 03cc05867b274cfea8dabde853e124ee
# b4b9e76ff4424bf8bd44ce36451e7abe
#: ../develop/plone-coredev/intro.rst:131
#: ../develop/plone-coredev/pt_BR/intro.rst:128
msgid "Is your code consistent with our :doc:`style`?"
msgstr ""

# 45ac05f525b1410d8a01d329978071b3
# 6d6d5a5b02d146cb832e1fb2cb904f0e
#: ../develop/plone-coredev/intro.rst:132
#: ../develop/plone-coredev/pt_BR/intro.rst:129
msgid "Did you remove any extra code and lingering pdbs?"
msgstr ""

# dc46d140dff54c5b91d04334289ffe54
# cd1db4f192454ed78c5d697a325ab0d8
#: ../develop/plone-coredev/intro.rst:133
#: ../develop/plone-coredev/pt_BR/intro.rst:130
msgid "Did you write a test case for that bug?"
msgstr ""

# a21c43a351634a15ae7425dbf8ce02d9
# e1f92fe944474fc9b5dac31cab9dd154
#: ../develop/plone-coredev/intro.rst:134
#: ../develop/plone-coredev/pt_BR/intro.rst:131
msgid "Are all test cases for the modules(s) and for Plone passing?"
msgstr ""

# cdb79f649a8b472bb22f6faf6fe2ba47
#: ../develop/plone-coredev/intro.rst:135
msgid "Did you update :file:`CHANGES.rst` in each packages you touched?"
msgstr ""

# cc2c77d72a55424eaa8d1d34f4a81364
#: ../develop/plone-coredev/intro.rst:136
msgid "Did you add your changed packages to :file:`checkouts.cfg`?"
msgstr ""

# fa9059b33a4a4b2aa2a0b85a25dd53ea
#: ../develop/plone-coredev/intro.rst:138
msgid ""
"If you answered *YES* to all of these questions, you are ready to push your "
"changes! A couple quick reminders:"
msgstr ""

# 1e085939cc6c4e00bf4467edc25f640f
#: ../develop/plone-coredev/intro.rst:140
msgid ""
"Only commit directly to the development branch if you're confident your code"
" won't break anything badly and the changes are small and fairly trivial. "
"Otherwise, please create a ``pull request`` (more on that below)."
msgstr ""

# 46171fa072c04d50bc7b6416b4308c8f
#: ../develop/plone-coredev/intro.rst:141
msgid ""
"Please try to make one change per commit. If you are fixing three bugs, make"
" three commits. That way, it is easier to see what was done when, and easier"
" to ``roll back`` any changes if necessary. If you want to make large "
"changes cleaning up whitespace or renaming variables, it is especially "
"important to do so in a separate commit for this reason."
msgstr ""

# c66e0707c6ba4c098e1ff6794af0c59a
#: ../develop/plone-coredev/intro.rst:142
msgid ""
"We have a few angels that follow the changes and each commit to see what "
"happens to their favourite CMS! If you commit something REALLY sketchy, they"
" will politely contact you, most likely after immediately reverting changes."
" There is no official people assigned to this so if you are especially "
"nervous, jump into `#plone <http://webchat.freenode.net?channels=plone>`_ "
"and ask for a quick eyeball on your changes."
msgstr ""

# bc794994d73542508133da54107cc1db
# 40258019f014469ab2d7cfcb6eeff9cc
#: ../develop/plone-coredev/intro.rst:145
#: ../develop/plone-coredev/pt_BR/intro.rst:142
msgid "Committing to Products.CMFPlone"
msgstr ""

# ae166fe2c2dd41c183fad8f30a10fd51
#: ../develop/plone-coredev/intro.rst:146
msgid ""
"If you are working a bug fix on ``Products.CMFPlone``, there are a couple "
"other things to take notice of. First and foremost, you'll see that there "
"are several branches. At the time of writing this document, there are "
"branches for 4.1, 4.2, and master, which is the implied 4.3."
msgstr ""

# 2d556120ff78457b9bea9cc21abfe614
# 326ec7c9395a4def899ed18c4deb9042
#: ../develop/plone-coredev/intro.rst:153
#: ../develop/plone-coredev/pt_BR/intro.rst:150
msgid ""
"Still with me? So you have a bug fix for 4.x. If the fix is only for one "
"version, make sure to get that branch and party on. However, chances are the"
" bug is in multiple branches."
msgstr ""

# 6f9db8b5a2c349459ec4eb35094e4149
# 9cc9ac3b493048c68635d129198b24e3
#: ../develop/plone-coredev/intro.rst:158
#: ../develop/plone-coredev/pt_BR/intro.rst:155
msgid ""
"Let's say the bug starts in 4.1. Pull the 4.1 branch and fix and commit "
"there with tests."
msgstr ""

# a527956157d94026bc9461933956d14a
# 04559729c7d94a6ea65d1e0db91273ac
#: ../develop/plone-coredev/intro.rst:160
#: ../develop/plone-coredev/pt_BR/intro.rst:157
msgid ""
"If your fix only involved a single commit, you can use git's ``cherry-pick``"
" command to apply the same commit to a different branch."
msgstr ""

# 64752d520dde48c5aae137180b02be8e
# 49e596ea57e94e289c09eda2504775c8
#: ../develop/plone-coredev/intro.rst:164
#: ../develop/plone-coredev/pt_BR/intro.rst:161
msgid "First check out the branch::"
msgstr ""

# 4cc1772641fa4b8882af11f445fc774e
#: ../develop/plone-coredev/intro.rst:168
msgid ""
"And then ``cherry-pick`` the commit (you can get the SHA hash from git "
"log).::"
msgstr ""

# 86586360789b47db8100bc5e2b8b0614
#: ../develop/plone-coredev/intro.rst:172
msgid ""
"There may be conflicts; if so, resolve them and then follow the directions "
"git gives you to complete the ``cherry-pick``."
msgstr ""

# 2f79dede15de4b9392db438b4f91bf83
#: ../develop/plone-coredev/intro.rst:175
msgid ""
"If your fix involved multiple commits, ``cherry-picking`` them one by one "
"can get tedious. In this case things are easiest if you did your fix in a "
"separate feature branch."
msgstr ""

# 636841d14c2745c1b623213ff758b8d9
# 4ece98bb3c0440aca043fa7aafa5f441
#: ../develop/plone-coredev/intro.rst:178
#: ../develop/plone-coredev/pt_BR/intro.rst:175
msgid ""
"In that scenario, you first merge the feature branch to the 4.1 branch::"
msgstr ""

# d01db9b08a66472f907568dd7ae0baba
# 4e1826cdba7f4a0e85199e809360df72
#: ../develop/plone-coredev/intro.rst:183
#: ../develop/plone-coredev/pt_BR/intro.rst:180
msgid ""
"Then you return to the feature branch and make a branch for `rebasing` it "
"onto the 4.2 branch::"
msgstr ""

# 5575a7085c58448ba5934e54d0c4caf7
# 0064448a321e40e6b1c8705015b56ec0
#: ../develop/plone-coredev/intro.rst:189
#: ../develop/plone-coredev/pt_BR/intro.rst:186
msgid ""
"(ef978a happens to be the last commit in the feature branch's history before"
" it was branched off of 4.1. You can look at git log to find this.)"
msgstr ""

# 62966018009141d48eda7fe64c3a71ea
# c77f6ec8a43f4c218e01d7f95b5c7aa8
#: ../develop/plone-coredev/intro.rst:192
#: ../develop/plone-coredev/pt_BR/intro.rst:189
msgid ""
"At this point, the feature branch's history has been updated, but it hasn't "
"actually been merged to 4.2 yet. This lets you deal with resolving conflicts"
" before you actually merge it to the 4.2 release branch. Let's do that now::"
msgstr ""

# 2e41bb928a1b4e90a7b9ea0cc63fa095
# 41f290a916e745be9638438ee2d8e882
#: ../develop/plone-coredev/intro.rst:201
#: ../develop/plone-coredev/pt_BR/intro.rst:198
msgid "Branches and Forks and Direct Commits - Oh My!"
msgstr ""

# 5023c4d383ae4e86b4d2dc63c9a82182
#: ../develop/plone-coredev/intro.rst:202
msgid ""
"Plone used to be in an svn repository, so everyone is familiar and "
"accustomed to committing directly to the branches. After the migration to "
"github, the community decided to maintain this spirit. If you have signed "
"the :doc:`contributor agreement <contributors_agreement_explained>` form, "
"you can commit directly to the branch (for plone this would be the version "
"branch, for most other packages this would be ``master``)."
msgstr ""

# 9162c53235fc4b5abda91645e55d6a5b
# 3bc95d16d0a54ffabaa9608f4eb630a2
#: ../develop/plone-coredev/intro.rst:208
#: ../develop/plone-coredev/pt_BR/intro.rst:205
msgid ""
"HOWEVER, there are a few situations where a branch is appropriate. If you:"
msgstr ""

# 690efe228fda46acb09de5b22b0e5f31
# 52b14075ea5b4a90a23eb95636187b5d
#: ../develop/plone-coredev/intro.rst:205
#: ../develop/plone-coredev/pt_BR/intro.rst:202
msgid "are just getting started,"
msgstr ""

# 922cec03b595466ca092c8e7f3177ce3
# 5aad1725e3644196ab78046d6e7119cb
#: ../develop/plone-coredev/intro.rst:206
#: ../develop/plone-coredev/pt_BR/intro.rst:203
msgid "are not sure about your changes"
msgstr ""

# 23559f647adf440fb32516ae98204637
# 63818125b16f48d6adcd928eafc5e1a5
#: ../develop/plone-coredev/intro.rst:207
#: ../develop/plone-coredev/pt_BR/intro.rst:204
msgid "want feedback/code review"
msgstr ""

# 16d6511016514e3d82c04510c474348d
# a098c4807e374aa6ad4856bae8b0ea67
#: ../develop/plone-coredev/intro.rst:208
#: ../develop/plone-coredev/pt_BR/intro.rst:205
msgid "are implementing a non-trivial change"
msgstr ""

# 1bc14d1846dd4b00a6608c3574146ca4
#: ../develop/plone-coredev/intro.rst:210
msgid ""
"then you likely want to create a branch of whatever packages you are using "
"and then use the `pull request <https://help.github.com/articles/using-pull-"
"requests>`_ feature of github to get review. Everything about this process "
"would be the same except you need to work on a branch. Take the "
"``plone.app.caching`` example. After checking it out with ``mr.developer``, "
"create your own branch with::"
msgstr ""

# f887db8c514b4b918864ba6b3116870b
#: ../develop/plone-coredev/intro.rst:217
msgid ""
"Branching or forking is your choice. I prefer branching, and I'm writing the"
" docs so this uses the branch method. If you branch, it helps us because we "
"*know* that you have committer rights. Either way it's your call."
msgstr ""

# d0c600bae92f49f1a7677706b3e5034a
#: ../develop/plone-coredev/intro.rst:219
msgid ""
"Proceed as normal. When you are ready to ``push`` your fix, push to a remote"
" branch with::"
msgstr ""

# 91e3959f1e804d6b8d2f1d42161c62a1
#: ../develop/plone-coredev/intro.rst:223
msgid ""
"This will make a remote branch in github. Navigate to this branch in the "
"github UI and on the top right there will be a button that says **\"Pull "
"Request\"**. This will turn your request into a pull request on the main "
"branch. There are people who look once a week or more for pending pull "
"requests and will confirm whether or not its a good fix and give you "
"feedback where necessary. The reviewers are informal and very nice so don't "
"worry - they are there to help! If you want immediate feedback, jump into "
"IRC with the ``pull request`` link and ask for a review."
msgstr ""

# 390860ef6d4a40dd997092821a770c83
#: ../develop/plone-coredev/intro.rst:227
msgid ""
"you still need to update :file:`checkouts.cfg` file in the correct branches "
"of buildout.coredev!"
msgstr ""

# eec4ed184bcf464ab85023450f893fc0
# bb5a267848794c94ba8397d4f6ac95a7
#: ../develop/plone-coredev/intro.rst:231
#: ../develop/plone-coredev/pt_BR/intro.rst:224
msgid ""
"You STILL aren't done! Please check jenkins to make sure your changes "
"haven't borked things. It runs every half an hour and takes a while to run "
"so checking back in an hour is a safe bet. Have a beer and head over to the "
"`Jenkins control panel <https://jenkins.plone.org/>`_."
msgstr ""

# b321f131aa234bb18d4abc78468613a5
# f11d1c4231e84673ba34eaf2192c6306
#: ../develop/plone-coredev/intro.rst:234
#: ../develop/plone-coredev/pt_BR/intro.rst:227
msgid "Finalizing Tickets"
msgstr ""

# 7092490f85e24b718e39d7cc24415256
# b3723a41d9e64455a168affa2c70f563
#: ../develop/plone-coredev/intro.rst:235
#: ../develop/plone-coredev/pt_BR/intro.rst:228
msgid ""
"If you are working from a ticket, please don't forget to go back to the "
"ticket and add a link to the changeset. We don't have integration with "
"github yet so it's a nice way to track changes. It also lets the reporter "
"know that you care. If the bug is really bad, consider pinging the release "
"manager and asking him to make a release pronto."
msgstr ""

# 3e2535d6f9ad470aa0870af67d54d513
# 8a2332f107134d019d1c50b2139356c0
#: ../develop/plone-coredev/intro.rst:240
#: ../develop/plone-coredev/pt_BR/intro.rst:233
msgid "*How do I know when my package got made?*"
msgstr ""

# 6227cbafd7224909a9a289d2c6fd7967
#: ../develop/plone-coredev/intro.rst:240
msgid ""
"You can follow the project on github and watch its `timeline "
"<https://github.com/organizations/plone>`_. You can also check the "
":file:`CHANGES.txt` of every plone release for a comprehensive list of all "
"changes and validate that yours is present."
msgstr ""

# 697e884b9ba74e7ba00ef44829f7cc2f
# d6822c528738417db72fa020aae39365
#: ../develop/plone-coredev/issues.rst:5
#: ../develop/plone-coredev/pt_BR/issues.rst:5
msgid "Buildout Issues"
msgstr ""

# 9a2af789f9304efeadf2b985ba857ddb
# a6267fb8367c4badb3fd0ffa9cffac61
#: ../develop/plone-coredev/issues.rst:7
#: ../develop/plone-coredev/pt_BR/issues.rst:7
msgid ""
"Buildout can be frustrating for those unfamiliar with parsing through "
"autistic robot language. Fear not! These errors are almost always a quick "
"fix and a little bit of understanding goes a long ways."
msgstr ""

# b71072f1b7db4deba1bb9f765f25b51b
# fe14887b087b47d48d428eeedaf52010
#: ../develop/plone-coredev/issues.rst:10
#: ../develop/plone-coredev/pt_BR/issues.rst:10
msgid "Errors Running bootstrap.py"
msgstr ""

# 857f6ef18f9e41eba31b85e4da7d19c6
# dac7fcd715f54134a70d10ad8e13f5b9
#: ../develop/plone-coredev/issues.rst:11
#: ../develop/plone-coredev/pt_BR/issues.rst:11
msgid ""
"You may not even get to running buildout and then you will already have an "
"error. Let's take this one for example::"
msgstr ""

# 5659eaea2fd64e5d8fc4413d55599d3d
# e8bbb4c10b654ddbbb51dd6c4768b290
#: ../develop/plone-coredev/issues.rst:19
#: ../develop/plone-coredev/pt_BR/issues.rst:19
msgid ""
"You may think the buildout god is angry because it's been MONTHS since "
"you've made a human sacrifice to her but be strong and follow along. "
"Buildout has simply noticed that the version of buildout required by the "
"bootstrap.py file you are trying to run does not match the version of "
"buildout in your python library. In the error above, your system has "
"buildout 1.5.1 installed and the bootstrap.py file wants to run with 1.5.2."
msgstr ""

# c07256c09afb418092d7632ff2459bd5
# 6910d0d719be4fe19546044cae53b02e
#: ../develop/plone-coredev/issues.rst:21
#: ../develop/plone-coredev/pt_BR/issues.rst:21
msgid ""
"To fix, you have a couple options. First, you can force buildout to run with"
" the version you already have installed by invoking the version tag. This "
"tells your [Plone] bootstrap.py file to play nicely with the version that "
"you already have installed. In the case of the error pasted above, that "
"would be::"
msgstr ""

# e8b971fe36fe427594abe8ec30c7da6f
# d695e2b3586b4847ae48f53dc47d5f24
#: ../develop/plone-coredev/issues.rst:25
#: ../develop/plone-coredev/pt_BR/issues.rst:25
msgid ""
"I personally know that versions 1.4.4, 1.5.1, and 1.5.2 all work this way."
msgstr ""

# 9e3a6c392f554d8282ad46ae69122162
# 72174449a2da4a47be76cfc586a0d98d
#: ../develop/plone-coredev/issues.rst:27
#: ../develop/plone-coredev/pt_BR/issues.rst:27
msgid ""
"The other option is to delete your current egg and force the upgrade. In the"
" case of the error above, all you need to do is delete the egg the system "
"currently has. eg::"
msgstr ""

# 07c7cbfa32d34c9e9b3f89d29eb1770d
# a3b433b992d044bda9a5f0cb42f4fcb7
#: ../develop/plone-coredev/issues.rst:31
#: ../develop/plone-coredev/pt_BR/issues.rst:31
msgid ""
"When you rerun bootstrap, it will look for the buildout of the egg, note "
"that there isn't one, and then go fetch a new egg in the version that it "
"wants for you."
msgstr ""

# 55c94a23d33042af8292c184c4ae110f
# a975b798806b46db8a428cf4b8e501fc
#: ../develop/plone-coredev/issues.rst:33
#: ../develop/plone-coredev/pt_BR/issues.rst:33
msgid "Do one of those, say two hail marys, and re-run bootstrap. Tada!"
msgstr ""

# 792bbf0fed9246f7a43cf3f8465dc56a
# 628de3bbd5a84a5e8c4751ab938efd51
#: ../develop/plone-coredev/issues.rst:35
#: ../develop/plone-coredev/pt_BR/issues.rst:35
msgid ""
"One other thing of note is that running bootstrap effectively ties that "
"python executable and all of its libraries to your buildout. If you have "
"several python installs and want to switch which python is tied to your "
"buildout, simply rerun bootstrap.py with the new python (and then rerun "
"buildout). You may get the same error above again but now that you know how "
"to fix it, you can spend that time drinking beer instead of smashing your "
"keyboard."
msgstr ""

# 261eb2c05b704558ad9a722cc513902e
# a2d7e2c22a3240adb6146b1fd6e3634a
# 9673a2f169e44b89813180f0019c5a8b
# bab41c01dcf14a5bb8899b750dbf3364
#: ../develop/plone-coredev/issues.rst:37
#: ../develop/plone-coredev/issues.rst:72
#: ../develop/plone-coredev/pt_BR/issues.rst:37
#: ../develop/plone-coredev/pt_BR/issues.rst:72
msgid "Hooray!"
msgstr ""

# 1dae35472597447c9fcf8d12a939c027
# 521f56944f8f40f8b49557d7f02c74e4
#: ../develop/plone-coredev/issues.rst:40
#: ../develop/plone-coredev/pt_BR/issues.rst:40
msgid "When Mr. Developer is Unhappy"
msgstr ""

# 5b320a75c43942608b883763e06a88c7
#: ../develop/plone-coredev/issues.rst:41
msgid ""
"``mr.developer`` is never unhappy, except when it is. Although this "
"technically isn't a buildout issue, it happens when running buildout so I'm "
"putting it under buildout issues."
msgstr ""

# fe36c3651c7d40e2bc4ab23e7699c4fe
# e17f8b0259534f0690651d94898dd65a
#: ../develop/plone-coredev/issues.rst:43
#: ../develop/plone-coredev/pt_BR/issues.rst:43
msgid ""
"When working with the dev instance, especially with all the moving back and "
"forth between github and svn, you may have an old copy of a src package. The"
" error looks like::"
msgstr ""

# 757457c91e064bab9c8a4d8ac142437d
# cd6168fff88d4ad5ad8e72559d33bbe2
#: ../develop/plone-coredev/issues.rst:48
#: ../develop/plone-coredev/pt_BR/issues.rst:48
msgid ""
"As long as you don't have any pending commits, you just need to remove the "
"package from src/ and it will recheck it out for you when it updates."
msgstr ""

# 8ae0f88c8f7e485ab25e99835643eaac
# eeda2584f4084d6aa447c239e0cc2df9
#: ../develop/plone-coredev/issues.rst:51
#: ../develop/plone-coredev/pt_BR/issues.rst:51
msgid "You can also get such fun errors as::"
msgstr ""

# 34972e028efa448ea79efba286c54713
# 12b7db11ea2b4ce7b47aa67e2cf2b368
#: ../develop/plone-coredev/issues.rst:56
#: ../develop/plone-coredev/pt_BR/issues.rst:56
msgid "These are ok to ignore IF and ONLY IF the lines following it say::"
msgstr ""

# 086a2f5cd992460db770d0436d95d533
# 8db42373f18c41cdbc5cf75cb1af809a
#: ../develop/plone-coredev/issues.rst:62
#: ../develop/plone-coredev/pt_BR/issues.rst:62
msgid ""
"If buildout ends with warning you that some packages could not be "
"downloaded, then chances are that package wasn't downloaded. This is bad and"
" could cause all sorts of whack out errors when you start or try to run "
"things because it never actually downloaded the package."
msgstr ""

# eac1f83c52074333bf147bf5a8226d15
#: ../develop/plone-coredev/issues.rst:64
msgid ""
"There are two ways to get this error to go away. The first is to delete all "
"instances of host filtering. Comb through all the files and delete any lines"
" which say ``allow-hosts =`` and ``allow-hosts +=``. In theory, by "
"restricting which hosts you download from, buildout will go faster. Whether "
"that actually happens or not I can not judge. The point is that they are "
"safely deletable."
msgstr ""

# ae5c8661677540bdb0d430ef77a00c49
# 00f5ca24e9264b50bafda6f60249c0e5
#: ../develop/plone-coredev/issues.rst:66
#: ../develop/plone-coredev/pt_BR/issues.rst:66
msgid ""
"The second option is to allow the host that it is pointing to by adding "
"something like this to your .cfg::"
msgstr ""

# 519d964476ef492e973b36dac4b29653
# 097de112b035453f8604751cf99262f4
#: ../develop/plone-coredev/issues.rst:70
#: ../develop/plone-coredev/pt_BR/issues.rst:70
msgid "Again, this is only necessary if the package wasn't found in the end."
msgstr ""

# 8ad9f1ace77347bfba213ba70d2aced3
# 600462c659d5454c817d31fcb2e53f9a
#: ../develop/plone-coredev/issues.rst:75
#: ../develop/plone-coredev/pt_BR/issues.rst:75
msgid "mr.developer Path Errors"
msgstr ""

# 7078004c3f9f4df785c51eec0866db7e
#: ../develop/plone-coredev/issues.rst:79
msgid "When running any :command:`./bin/develop` command."
msgstr ""

# fe74fceb4d5745a08b17ac2dc7d642bb
# 6bff796587734bcfba91139138098492
#: ../develop/plone-coredev/issues.rst:81
#: ../develop/plone-coredev/pt_BR/issues.rst:81
msgid "To fix, simply do::"
msgstr ""

# b0802e4035b04913b9e469427bd37425
# de18d7d07e624d31adde7a87f3ff0085
#: ../develop/plone-coredev/issues.rst:88
#: ../develop/plone-coredev/pt_BR/issues.rst:88
msgid "Other Random Issues"
msgstr ""

# 96ae7d5d8c6c4a3b83f07473c5375f80
# 1444458ffa76440ab45cbf7970998411
#: ../develop/plone-coredev/issues.rst:92
#: ../develop/plone-coredev/pt_BR/issues.rst:92
msgid "Dirty Packages"
msgstr ""

# 32b76887ee63464cbb4435724cd1c765
# 24e2ea543a6749ca881812b6142562cb
# 20a9a23907e34cafbe527011dd006e8e
# 6315b7c526e145aaa63b3e60521fa87d
#: ../develop/plone-coredev/issues.rst:97
#: ../develop/plone-coredev/issues.rst:131
#: ../develop/plone-coredev/pt_BR/issues.rst:97
#: ../develop/plone-coredev/pt_BR/issues.rst:131
msgid "Fix"
msgstr ""

# d1940b5898fc43c9970703bb0cc52322
#: ../develop/plone-coredev/issues.rst:98
msgid ""
"``mr.developer`` is complaining because a file has been changed/added, but "
"not committed."
msgstr ""

# 1bdb15c6697145f6982ffc409f20948d
#: ../develop/plone-coredev/issues.rst:101
msgid ""
"Use :command:`bin/develop update --force`. Adding ``*.pyc *~.nib *.egg-info "
".installed.cfg *.pt.py *.cpt.py *.zpt.py *.html.py *.egg`` to your "
"subversion config's global-ignores has been suggested as a more permanent "
"solution."
msgstr ""

# 97f4ef97a64d42c9896896f5afaaecbe
#: ../develop/plone-coredev/issues.rst:110
msgid ""
"Appears to not actually be the case. Delete :file:`mkzopeinstance.py` from "
":file:`bin/` and rerun buildout to correct this if you're finding it "
"irksome."
msgstr ""

# 626b1209f18d488f93cb4f1ae924e543
# f0a405b863864a28b878b78ae7e4df05
#: ../develop/plone-coredev/issues.rst:114
#: ../develop/plone-coredev/pt_BR/issues.rst:114
msgid "Can't open file '/Startup/run.py'"
msgstr ""

# e48f25fb8ad54846944c483c088d30bf
#: ../develop/plone-coredev/issues.rst:115
msgid ""
"Two possible fixes, you are using Python 2.4 by mistake, so use 2.6 instead."
" Or, you may need to make sure you run :command:`bin/buildout …` after "
":command:`bin/develop …`. Try removing :file:`parts/*`, :file:`bin/*`, "
":file:`.installed.cfg`, then re-bootstrap and re-run buildout, develop, "
"buildout."
msgstr ""

# 51d364c42adf4f5a856d60d7b92392fc
# 74ebc3aa8045422180558992392ce4c7
#: ../develop/plone-coredev/issues.rst:118
#: ../develop/plone-coredev/pt_BR/issues.rst:118
msgid "Missing PIL"
msgstr ""

# 8c7799a04e7d4814a6d761e2aba13064
#: ../develop/plone-coredev/issues.rst:119
msgid ""
":file:`pil.cfg` is include within this buildout to aid in PIL installation. "
"Run :command:`bin/buildout -c pil.cfg` to install. This method does not work"
" on Windows, so we're unable to run it by default."
msgstr ""

# 54e9cd7ed22044d28996ed2eba1bad5d
# 2f72a197ae6d45e190fe41fe409977ee
#: ../develop/plone-coredev/issues.rst:125
#: ../develop/plone-coredev/pt_BR/issues.rst:125
msgid "Modified Egg Issues"
msgstr ""

# 9847b4392a0942b49585330765926e9e
#: ../develop/plone-coredev/issues.rst:126
msgid ""
":command:`bin/develop status` is showing that the "
"``Products.CMFActionIcons`` egg has been modified, but I haven't touched it."
"  And this is preventing bin/develop up from updating all the eggs."
msgstr ""

# f1e7b2bc62e94658ad94927d0829adf2
#: ../develop/plone-coredev/issues.rst:133
msgid ""
"Edit :file:`~/.subversion/config` and add eggtest*.egg to the list of "
"global-ignores"
msgstr ""

# 320c577de8c34038949fd732ed7c8ebd
#: ../develop/plone-coredev/mrdeveloper.rst:4
msgid ""
"This buildout uses mr.developer to manage package development. See "
"https://pypi.python.org/pypi/mr.developer for more information or run "
":command:`bin/develop help` for a list of available commands."
msgstr ""

# a5c1a804faa44d9d8706bd2dfe365fb7
#: ../develop/plone-coredev/mrdeveloper.rst:8
msgid "The most common workflow to get all the latest updates is::"
msgstr ""

# 81d0611c75814034a80b0a702663663b
#: ../develop/plone-coredev/mrdeveloper.rst:13
msgid ""
"This will get you the latest coredev configuration, checkout and update all "
"packages via Subversion in src and run buildout to configure the whole "
"thing."
msgstr ""

# 0f14826a65d949ca87c3bd495c60b49d
#: ../develop/plone-coredev/mrdeveloper.rst:16
msgid "From time to time you can check if some old cruft has accumulated::"
msgstr ""

# 0ed2bbf591b048819f7eb94ef564512e
#: ../develop/plone-coredev/mrdeveloper.rst:20
msgid ""
"If this prints any lines with a question mark in front, you can cleanup by::"
msgstr ""

# 9a9c203221bb4e6cbff1585073995b7f
#: ../develop/plone-coredev/mrdeveloper.rst:24
msgid ""
"This will remove packages from :file:`src/` which are no longer needed, as "
"they have been replaced by proper egg releases of these packages."
msgstr ""

# aee819174ea24b13895cc1812f3eda35
#: ../develop/plone-coredev/plipreview.rst:2
msgid "Reviewing PLIPs"
msgstr ""

# 590c7fc52e1c4dc4afb5f989c5600234
#: ../develop/plone-coredev/plipreview.rst:5
msgid "Expectations"
msgstr ""

# 6594792bc4dd4dce9ace5f85e163338d
#: ../develop/plone-coredev/plipreview.rst:6
msgid ""
"A good PLIP review takes about 4 hours so please plan accordingly. When you "
"are done, if you have access to core please commit the review to the plips "
"folder and reference the PLIP in your commit message. If you do not have "
"access, please attach your review to the PLIP ticket itself."
msgstr ""

# 130819c2816f47408d1bf0d91c32b4ce
#: ../develop/plone-coredev/plipreview.rst:9
msgid "Setting up the environment"
msgstr ""

# 080d1dc9581749a1b699e5c9e426fd0d
#: ../develop/plone-coredev/plipreview.rst:10
msgid ""
"Follow the instructions on `setting up a development environment "
"<https://dev.plone.org/wiki/DevelopmentEnvironment>`_ for \"Getting the "
"Code\". You will need to checkout the branch to which the PLIP is assigned. "
"Instead of running the buildout with the default buildout file, you will run"
" the config specific to that plip::"
msgstr ""

# b464989f02df42f3acfc2d4a54f037da
#: ../develop/plone-coredev/plipreview.rst:15
msgid "Functionality Review"
msgstr ""

# 6995f8a1d5f74ebebee28945516cc77d
#: ../develop/plone-coredev/plipreview.rst:16
msgid ""
"There are several things that could be addressed in a PLIP review depending "
"on the nature of the PLIP itself. This is by no means an exhaustive list, "
"but a place to start. Things to think about when reviewing:"
msgstr ""

# 0e249d34b296461f9a58ba0239a05b92
#: ../develop/plone-coredev/plipreview.rst:20
msgid ""
"Does the PLIP actually do what the implementors proposed? Are there "
"incomplete variations?"
msgstr ""

# 953303a424f34cefad3f8ed58f4bdb30
#: ../develop/plone-coredev/plipreview.rst:21
msgid "Were there any errors running buildout? Did the migration(s) work?"
msgstr ""

# 7c0535d2ebdb436a96096f564dd16094
#: ../develop/plone-coredev/plipreview.rst:22
msgid ""
"Do error and status messages make sense? Are they properly "
"internationalized?"
msgstr ""

# 4aeff6398d6a47939beeb9a6e123fcce
#: ../develop/plone-coredev/plipreview.rst:23
msgid ""
"Are there any performance considerations? Has the implementor addressed them"
" if so?"
msgstr ""

# 3633b8b012b041748aca6f2d8f2358e7
#: ../develop/plone-coredev/plipreview.rst:26
msgid "Bugs"
msgstr ""

# 0aa856cb6bf24a728010398b9a82b698
#: ../develop/plone-coredev/plipreview.rst:27
msgid "Are there any bugs? Nothing is too big nor small."
msgstr ""

# cca0d1d8b38b4c57bec9ba3c5b823aca
#: ../develop/plone-coredev/plipreview.rst:28
msgid ""
"Do fields handle whacky data? How about strings in date fields or nulls in "
"required?"
msgstr ""

# b1862143012b427483ad4b2489594c80
#: ../develop/plone-coredev/plipreview.rst:29
msgid ""
"Is validation up to snuff and sensical? Is it too restrictive or not "
"restrictive enough?"
msgstr ""

# ec0033b7221a43f0b489c3a53d7ed999
#: ../develop/plone-coredev/plipreview.rst:32
msgid "Usability Issues"
msgstr ""

# 61739ec6ecf34f29bc2444d99c5abf73
#: ../develop/plone-coredev/plipreview.rst:33
msgid "Is the implementation usable?"
msgstr ""

# 6a4fa7a3ac0d4e72922fcc1cd73b9da9
#: ../develop/plone-coredev/plipreview.rst:34
msgid "How will novice end users respond to the change?"
msgstr ""

# a9ce095965c64c22853b418d324068eb
#: ../develop/plone-coredev/plipreview.rst:35
msgid ""
"Does this PLIP need a usability review? If you think this PLIP needs a "
"usability review, please change the state to \"please review\" and add a "
"note in the comments."
msgstr ""

# 2b501091e97348858548994a5c13aa67
#: ../develop/plone-coredev/plipreview.rst:36
msgid ""
"Is the PLIP consistent with the rest of Plone? For example, if there is "
"control panel configuration, does the new form fit in with the rest of the "
"panels?"
msgstr ""

# 023cf3004ea04c49bd66b1a8aa9c404f
#: ../develop/plone-coredev/plipreview.rst:37
msgid ""
"Does everything flow nicely for novice and advanced users? Is there any "
"workflow that feels odd?"
msgstr ""

# 4f5743e9b90b453b9089dde279f4168d
#: ../develop/plone-coredev/plipreview.rst:38
msgid ""
"Are there any new permissions and do they work properly? Does their role "
"assignment make sense?"
msgstr ""

# 48c06ea1c7294bb496226cdc690ee752
#: ../develop/plone-coredev/plipreview.rst:41
msgid "Documentation Issues"
msgstr ""

# c7533e8874a34375b690d026378d2f48
#: ../develop/plone-coredev/plipreview.rst:42
msgid ""
"Is the corresponding documentation for the end user, be it developer or "
"plone user, sufficient?"
msgstr ""

# 3d97823018ee43a9bf5879bf47c286d5
#: ../develop/plone-coredev/plipreview.rst:43
msgid "Is the change itself properly documented?"
msgstr ""

# 27a095fe6f7c4ee39f7868c7be6c428f
#: ../develop/plone-coredev/plipreview.rst:45
msgid ""
"Please report bugs/issues in Trac as you would for any Plone bug. Reference "
"the PLIP in the bug, assign to its implementor, and add a tag for the PLIP "
"in the form of plip-xxx. This way the implementor can find help if he needs "
"it. Please also prioritize the ticket. The PLIP will not be merged until all"
" blockers and critical bugs are fixed."
msgstr ""

# 75fce6269d3e47efa5ebe270a811e0b2
#: ../develop/plone-coredev/plipreview.rst:48
msgid "Code Review"
msgstr ""

# e77dc3842c52434caf802cd987a0f14a
#: ../develop/plone-coredev/plipreview.rst:52
msgid "Is this code maintainable?"
msgstr ""

# a77b74c20918458d8b3ae8e3b798cd00
#: ../develop/plone-coredev/plipreview.rst:53
msgid "Is the code properly documented?"
msgstr ""

# 063a1a46d13a488680e51500fd0577b2
#: ../develop/plone-coredev/plipreview.rst:54
msgid "Does the code adhere to PEP8 standards (more or less)?"
msgstr ""

# 2730120c5fd5422cae0457a3e2a9d67e
#: ../develop/plone-coredev/plipreview.rst:55
msgid "Are they importing deprecated modules?"
msgstr ""

# 0a1c1cfe9ffb4f07aea52bb416e39caa
#: ../develop/plone-coredev/plipreview.rst:59
msgid ""
"Does the javascript meet our set of javascript standards? See "
":doc:`/develop/addons/javascript_standards`"
msgstr ""

# e5bf94f3c0094b8799d3c4b560a43fc5
#: ../develop/plone-coredev/plipreview.rst:60
msgid ""
"Does the Javascript work in all currently supported browsers? Is it "
"performant?"
msgstr ""

# 0ccaa7a530504e60865ee13fb9f92948
#: ../develop/plone-coredev/plipreview.rst:64
msgid "Does the PLIP use views appropriately and avoiding too much logic?"
msgstr ""

# b1cf30faf6ca4a7a81d613530a11d406
#: ../develop/plone-coredev/plipreview.rst:65
msgid ""
"Is there any code in a loop that could potentially be a performance issue?"
msgstr ""

# 2680e7294a6e4ddcbc10b1b0dacd907a
#: ../develop/plone-coredev/plipreview.rst:66
msgid ""
"Are there any deprecated or old style ME/TAL lines of code such as using "
"DateTime?"
msgstr ""

# 986fe29de0614a7cb1f6f445d09e4c6e
#: ../develop/plone-coredev/plipreview.rst:67
msgid ""
"Is the rendered html standards compliant? Are ids and classes used "
"appropriately?"
msgstr ""

# 24a1d7c481b249e6a4ee5f195a4ad6c7
#: ../develop/plone-coredev/plipreview.rst:70
msgid "Example PLIP Reviews"
msgstr ""

# c886dc74b4ce4624a6bbbcdce7bca54a
# c62d3aae9ce64843a7f5522234f629bf
#: ../develop/plone-coredev/plips.rst:2
#: ../develop/plone-coredev/pt_BR/plips.rst:2
msgid "Implementing PLIPS"
msgstr ""

# 3045ee0b3279443697999a323d32142e
# 46fc9e7a08364bbd9f1de0e6ac41c420
#: ../develop/plone-coredev/plips.rst:5
#: ../develop/plone-coredev/pt_BR/plips.rst:5
msgid "All about PLIPS"
msgstr ""

# ae1c268118264a42a64aca8f3fcdc1a4
#: ../develop/plone-coredev/plips.rst:7
msgid "**What is a PLIP?**"
msgstr ""

# 8aff2e6d46514634af753029ffcc0fd2
#: ../develop/plone-coredev/plips.rst:7
msgid ""
"A PLIP is a Plone Improvement Proposal. It is a change to a Plone package "
"that would affect everyone. PLIPs go through a different process than bug "
"fixes because of their broad reaching effect. The Plone 4.x Framework Team "
"reviews all PLIPs to be sure that it’s in the best interest of the broader "
"community to be implemented and that it is of high quality."
msgstr ""

# 15f9b1803b3c4713ae46c067eacca098
#: ../develop/plone-coredev/plips.rst:10
msgid "**Is it a PLIP or a bugfix?**"
msgstr ""

# 1c7863e2552a40ec9ae6236344e8eebd
#: ../develop/plone-coredev/plips.rst:10
msgid ""
"In general, anything that changes the API of Plone in the backend or UI on "
"the front end should be filed as a PLIP. When in doubt, submit it as a PLIP."
" The framework team is eager to reduce its own workload and will re-classify"
" it for you."
msgstr ""

# 4d25e46dac28496398bbb1ebaed21f83
#: ../develop/plone-coredev/plips.rst:15
msgid "**Who can submit PLIPs?**"
msgstr ""

# fba308078ba54bc58701aa1f1c6b1665
# 14eea3ddf461405abae64a2010b75d15
#: ../develop/plone-coredev/plips.rst:13
#: ../develop/plone-coredev/pt_BR/plips.rst:13
msgid ""
"Anyone who has signed a Plone core contributor agreement can work on a PLIP."
" Don’t let the wording freak you out: signing the agreement is easy and you "
"will get access almost immediately. You do not have to be the most amazing "
"coder in the entire world to submit a PLIP. The Framework Team is happy to "
"help you at any point in the process. Submitting a PLIP can be a great "
"learning process and we encourage people of all backgrounds to submit.  When"
" the PLIP is accepted, a Framework Team member will “champion” your PLIP and"
" be dedicated to seeing it completed. PLIPs are not just for code monkeys. "
"If you have ideas on new interactions or UI your ideas are more than "
"welcome. We will even help you pair up with implementors if needed."
msgstr ""

# 37d5bc3e888544faadf80a19942baa6c
#: ../develop/plone-coredev/plips.rst:27
msgid "**What is a PLIP champion?**"
msgstr ""

# a68ab0e4c7df48239bf8a6075c462306
# 97ea33e6c01943b3966063688f007131
#: ../develop/plone-coredev/plips.rst:18
#: ../develop/plone-coredev/pt_BR/plips.rst:18
msgid ""
"When you submit your PLIP and it is approved, 1 Framework Team member who is"
" especially excited about seeing the PLIP completed will be assigned to your"
" PLIP as a champion. They are there to push you through completion as well "
"as answer any questions and provide guidance."
msgstr ""

# d6b7ab6cb2d7431895af76270acb7f8c
#: ../develop/plone-coredev/plips.rst:20
msgid "A champion should:"
msgstr ""

# 716f09a2b4c549cbbdf2d5155ffd911b
# 73289f61130e4d8bbb80f8651027b823
#: ../develop/plone-coredev/plips.rst:22
#: ../develop/plone-coredev/pt_BR/plips.rst:22
msgid ""
"Answer any questions the PLIP implementor has, technically and otherwise"
msgstr ""

# 84ea889d89b04b41a13dbc736c1aaba2
# 1b80ad697c2844ce93d83dab512dd258
#: ../develop/plone-coredev/plips.rst:23
#: ../develop/plone-coredev/pt_BR/plips.rst:23
msgid ""
"Encourage the PLIP author by constantly giving feedback and encouragement"
msgstr ""

# 6ac023dcaff8442cba70e7c4c38fe3ee
# d1c67288c2874cb2b28a462b46675403
#: ../develop/plone-coredev/plips.rst:24
#: ../develop/plone-coredev/pt_BR/plips.rst:24
msgid ""
"Keep the implementor aware of timelines and push to get things done on time"
msgstr ""

# 64f716dbb9e6495388c2ae5675767fe2
# 4a0fa34a9c504217bc456149b5a40f0d
#: ../develop/plone-coredev/plips.rst:25
#: ../develop/plone-coredev/pt_BR/plips.rst:25
msgid ""
"Assist with finding additional help when needed to complete the "
"implementation in a timely matter"
msgstr ""

# 1c5e04d732ac45f49cb15958182272d2
# c804d9ba3c784715bf7ba652934105d4
#: ../develop/plone-coredev/plips.rst:27
#: ../develop/plone-coredev/pt_BR/plips.rst:27
msgid ""
"Keep in mind that champions are in passive mode by default. If you need help"
" or guidance, please reach out to them as soon as possible to activate help "
"mode."
msgstr ""

# 89717b346fed4903ae259ca9f5bdb587
#: ../develop/plone-coredev/plips.rst:31
msgid "**I’m still nervous. Can I get involved other ways at first?**"
msgstr ""

# e20f32367d974781b99f6a75d47b3307
#: ../develop/plone-coredev/plips.rst:30
msgid ""
"If you want to feel the process and how it works, help us review PLIPs as "
"the implementations finish up. Simply ask on  of the Framework Team members "
"what PLIPs are available for review or check the status of PLIPs at the "
"`following link <https://dev.plone.org/report/24>`_. Make sure to let us "
"know you intend to review the PLIP by joining the `Framework Team mailing "
"list <https://lists.plone.org/mailman/listinfo/plone-framework-team>`_ and "
"sending a quick email. Then, follow the simple instructions for "
":doc:`reviewing a PLIP <plipreview>`. Thank you in advance!"
msgstr ""

# c111e717f61b453f8d497a2e89eb7ce1
#: ../develop/plone-coredev/plips.rst:34
msgid "**When can I submit a PLIP?**"
msgstr ""

# 5aac196934494ce59a6423a12d68b9cc
# 9af1f21f494b4c6b8e41d0c5e3c0006e
#: ../develop/plone-coredev/plips.rst:34
#: ../develop/plone-coredev/pt_BR/plips.rst:34
msgid ""
"Today, tomorrow, any time! After the PLIP is accepted, the Framework Team "
"will try to judge complexity and time to completion and assign it to a "
"milestone. You can begin working immediately, and we encourage submitting "
"fast and furious."
msgstr ""

# 7f383878456f402aab9034cc1201f00b
#: ../develop/plone-coredev/plips.rst:39
msgid "**When is the PLIP due?**"
msgstr ""

# 6b42fa3f9f7249aeb362e4c6740571ba
#: ../develop/plone-coredev/plips.rst:37
msgid ""
"Summary: As soon as you get it done. Technically, we want to see it "
"completed for the release to which it’s assigned. We know that things get "
"busy and new problems make PLIPs more complicated and we will push it to the"
" next release. In general, we don’t want to track a PLIP for more than a "
"year. If your PLIP is accepted and we haven’t seen activity in over a year, "
"we will probably ask you to restart the whole process."
msgstr ""

# 37a6f637b9aa410999e5a4e996c3910e
#: ../develop/plone-coredev/plips.rst:42
msgid "**You don’t like my PLIP :( What now?**"
msgstr ""

# 60cc454f4114450982bcbb0051e8e418
# c9a0ecbc64db41288b1060eddacccfd3
#: ../develop/plone-coredev/plips.rst:42
#: ../develop/plone-coredev/pt_BR/plips.rst:42
msgid ""
"Just because a PLIP isn’t accepted in core doesn’t mean it’s a bad idea. It "
"is often the case that there are competing implementations and we want to "
"see it vetted as an add on before “blessing” a preferred implementation."
msgstr ""

# 132b547317584316b99dc146836ebdae
# b9606560614c41f68821b9234e2226da
#: ../develop/plone-coredev/plips.rst:45
#: ../develop/plone-coredev/pt_BR/plips.rst:45
msgid "Process Overview"
msgstr ""

# 9933825c3546433b9783853dcf9ee7ba
# 6e4b4198229d451b980470cc0004cb6c
#: ../develop/plone-coredev/plips.rst:46
#: ../develop/plone-coredev/pt_BR/plips.rst:46
msgid "Submit a PLIP (at any time)"
msgstr ""

# de5ef47667dc4cb5997ab16c0bb8a004
# 008c51282eb74bc1b0e778b431f434ca
#: ../develop/plone-coredev/plips.rst:47
#: ../develop/plone-coredev/pt_BR/plips.rst:47
msgid "PLIP is approved for inclusion into core for a given release"
msgstr ""

# b33891d127db47f7901a5a57af714745
# ba13c10a88de4ecd85459d8b458f954e
#: ../develop/plone-coredev/plips.rst:48
#: ../develop/plone-coredev/pt_BR/plips.rst:48
msgid "Developer implements PLIP (code, tests, documentation)"
msgstr ""

# 2afdd896994746caa9e60faede207642
# 059c29a70bb14f869ab53b832cc8ed65
#: ../develop/plone-coredev/plips.rst:49
#: ../develop/plone-coredev/pt_BR/plips.rst:49
msgid "PLIP is submitted for review by developer"
msgstr ""

# df2f05005d1a4c1db148ed935c734ff3
#: ../develop/plone-coredev/plips.rst:50
msgid "Framework Team reviews the PLIP and gives feedback"
msgstr ""

# daa8a78c8b0d437583f06ebf426e23a8
#: ../develop/plone-coredev/plips.rst:51
msgid ""
"Developer addresses concerns in feedback and re-submits if necessary. This "
"may go back and forth a few times until both the FWT and developer are happy"
" with the result."
msgstr ""

# e4766918bc3842419181338e26a87a0c
# 6cbf17e869774c09a7da1c20333124cd
#: ../develop/plone-coredev/plips.rst:52
#: ../develop/plone-coredev/pt_BR/plips.rst:52
msgid ""
"PLIP is approved for merge. In rare circumstances, a PLIP will be rejected. "
"This is usually the result of the developer not responding to feedback or "
"dropping out of the process.  Hang in there!"
msgstr ""

# b22a631506184724ad186aadb00eb153
#: ../develop/plone-coredev/plips.rst:53
msgid "After all other PLIPS are merged, a release is cut. Standby for bugs!"
msgstr ""

# 8cb8bc4703f546a2b429e86e50d26ef2
# 8fc71aaf52c442cb9a0e386605da3382
#: ../develop/plone-coredev/plips.rst:58
#: ../develop/plone-coredev/pt_BR/plips.rst:57
msgid "How to Submit a PLIP"
msgstr ""

# 536d48399def4bbaaebe77daa49d1934
#: ../develop/plone-coredev/plips.rst:59
msgid ""
"Whether you want to update the default theme or rip out a piece of "
"architecture, everyone should go through the PLIP process. If you need help "
"at any point in this process, please contact a member of the framework team "
"personally or ask for help on the `FWT mailing list "
"<https://lists.plone.org/mailman/listinfo/plone-framework-team>`_."
msgstr ""

# 8768f89d31f14a49baaa1f58ec25bfb0
# c0d3c02d42c7455da33e3ca1a831ef31
#: ../develop/plone-coredev/plips.rst:61
#: ../develop/plone-coredev/pt_BR/plips.rst:60
msgid ""
"A PLIP is just a ticket with a special template. To get started, `open a new"
" ticket <https://dev.plone.org/newticket>`_ and select \"PLIP\" as the "
"ticket type. A new ticket template will reload and you should plan to fill "
"in all of the fields."
msgstr ""

# 3edcc27252fb4c0eaaada455418c7ad7
#: ../develop/plone-coredev/plips.rst:63
msgid ""
"When writing a PLIP, be as specific and to-the-point as you can. Remember "
"your audience - to get support for your proposal, people will have to be "
"able to read it! A good PLIP is sufficiently clear for a knowledgeable Plone"
" user to be able to understand the proposed changes, and sufficiently "
"detailed for the release manager and other developers to understand the full"
" impact the proposal would have on the codebase. You don't have to list "
"every line of code that needs to be changed, but you should also give an "
"indication that you have some idea that how the change can be feasibly "
"implemented."
msgstr ""

# 877655cffda84ecf978bd95cdbc54f1f
# 563e919e06d44ef9b684eb4b5450d7f4
#: ../develop/plone-coredev/plips.rst:65
#: ../develop/plone-coredev/pt_BR/plips.rst:64
msgid ""
"If your change is minor then a ticket in the tracker will be sufficient, "
"added as an enhancement. The key point here is that each change needs "
"documentation so other users can see what it is. This can be in the form of "
"an issue tracker entry, or a PLIP in the case of a bigger change. A bug or "
"minor change does normally not need to go through a review process - a PLIP "
"does."
msgstr ""

# fb995491228641caa411a478a469ec08
#: ../develop/plone-coredev/plips.rst:67
msgid ""
"After your PLIP is written, solicit feedback on your idea on the plone-"
"developers mailing list. In this vetting process, you want to make sure that"
" the change won’t adversely affect other people on accident. Others may be "
"able to point out risks or even offer up better or existing solutions."
msgstr ""

# e11f1ae5eb14442f978e6df427a40652
#: ../develop/plone-coredev/plips.rst:69
msgid ""
"When you are happy with the feedback, :ref:`submit a PLIP "
"<how_submit_plip>`. Please use the template provided (XXX: put the template "
"here? Can we just have a custom ticket type?). Please note a few things. It "
"is very rare that the “Risks” section will be empty or none. If you find "
"this is the case and your PLIP is anything more than trivial, maybe some "
"more vetting should be done."
msgstr ""

# 4c098bd3b34842e7a285d11114b4d749
# a58df5a71f91490bb730da191018c561
#: ../develop/plone-coredev/plips.rst:71
#: ../develop/plone-coredev/pt_BR/plips.rst:70
msgid ""
"The seconder field is REQUIRED. We will send the PLIP back to you if it is "
"not filled in. Currently, this is just someone else who thinks your PLIP is "
"a good idea, a +1. In the near future, we will start asking that the "
"seconder is either a coding partner, or someone who is willing and able to "
"finish the PLIP should something happen to the implementor."
msgstr ""

# 35f5cc5be992439b97352ef9b68f4ef2
# 5d61df9f08984c609416e8d6a1a39e59
#: ../develop/plone-coredev/plips.rst:73
#: ../develop/plone-coredev/pt_BR/plips.rst:72
msgid ""
"Everything else should be self explanatory. That or I got lazy when writing "
"these docs. I'm betting on the latter."
msgstr ""

# d59a4284da884f4a8e81dd07d5224206
# 3047422e53634458b07d773b4be287bc
#: ../develop/plone-coredev/plips.rst:76
#: ../develop/plone-coredev/pt_BR/plips.rst:75
msgid "Evaluating PLIPs"
msgstr ""

# 3384c49200ee4838a1c9f423f69eb8c0
#: ../develop/plone-coredev/plips.rst:77
msgid ""
"After you submit your PLIP, the Framework Team will meet within a couple "
"weeks and let you know if the PLIP is accepted. If the PLIP is not accepted,"
" please don't be sad! We encourage most PLIPs to go through the add on "
"process at first if at all possible to make sure the majority of the "
"community uses it."
msgstr ""

# 350afc4b47d740ed9d408c5424063e02
# 5e0aa6434b814d0aae93a13efbe33d01
#: ../develop/plone-coredev/plips.rst:79
#: ../develop/plone-coredev/pt_BR/plips.rst:78
msgid ""
"All communication with you occurs on the PLIP ticket itself so please keep "
"your eyes and inbox open for changes."
msgstr ""

# aa6408b8131a491bb8460566e4f61a61
#: ../develop/plone-coredev/plips.rst:86
msgid ""
"These are the criteria by which the framework team will review your bundle:"
msgstr ""

# 10760f4ea9a744d0998759e1202733e4
# f3b3be1351f94b379e0f2ef08b34dc3d
#: ../develop/plone-coredev/plips.rst:82
#: ../develop/plone-coredev/pt_BR/plips.rst:81
msgid ""
"What is size and status of the work needed to be done? Is it already an add-"
"on and well established?"
msgstr ""

# 245836e19ede45c99e40919f96bc56ed
# b797638fa0ed4805acbcc25e62664a2d
#: ../develop/plone-coredev/plips.rst:83
#: ../develop/plone-coredev/pt_BR/plips.rst:82
msgid "Is this idea well baked and expressed clearly?"
msgstr ""

# c2b96c3c19714912a08414045513af8d
# c1c53bddf5074cb4af64d9cec0e76842
#: ../develop/plone-coredev/plips.rst:84
#: ../develop/plone-coredev/pt_BR/plips.rst:83
msgid "Does the work proposed belong in Plone now, in the future?"
msgstr ""

# bf9294594dfa48c09f4c696089d1c908
# d17c60dc76a64fa28720cce3a0cf7432
#: ../develop/plone-coredev/plips.rst:85
#: ../develop/plone-coredev/pt_BR/plips.rst:84
msgid "Is this PLIP more appropriate as a qualified add-on?"
msgstr ""

# fef2d22ac0ea44b8ada8250b63634b9b
# 1af306ba05324e2c9b3bcc2a4d1298da
#: ../develop/plone-coredev/plips.rst:86
#: ../develop/plone-coredev/pt_BR/plips.rst:85
msgid "Is this PLIP too risky?"
msgstr ""

# 23a3647551c94b21ab4495b2b4ee1a3f
#: ../develop/plone-coredev/plips.rst:88
msgid "See the :doc:`plipreview` page for more information."
msgstr ""

# 93c68d41daea42528e4268da734f71f5
# dfedbf1887904b72ab8253abeddd0273
#: ../develop/plone-coredev/plips.rst:91
#: ../develop/plone-coredev/pt_BR/plips.rst:88
msgid "Implementing Your PLIP"
msgstr ""

# c39b338072684d99bc9841dcb33cfca3
# 1d5dc28d01984c5ca932fa66c526574a
#: ../develop/plone-coredev/plips.rst:92
#: ../develop/plone-coredev/pt_BR/plips.rst:89
msgid ""
"You can start the development at any time - but if you are going to modify "
"Plone itself, you might want to wait to see if your idea is approved first "
"to save yourself some work if it isn't."
msgstr ""

# a5b18f76c8a841e9a5450983b7e96710
# 028f7d8b91bc452fb9130ab7d63b0897
#: ../develop/plone-coredev/plips.rst:95
#: ../develop/plone-coredev/pt_BR/plips.rst:92
msgid "General Rules"
msgstr ""

# d777b33f44ff4c019e50a7df7478226f
# 663ab8193f2649dfb6dc02ed97ed46e2
#: ../develop/plone-coredev/plips.rst:96
#: ../develop/plone-coredev/pt_BR/plips.rst:93
msgid ""
"Any new packages must be in a branch in the plone namespace in github. You "
"don't have to develop there, but it must be there when submitted. We "
"recommend using branches off of the github.com/plone repo and will detail "
"that below."
msgstr ""

# 4c3a2045effc49628720a2665551892c
# cf7b7387f34a48e780da91142be154f2
#: ../develop/plone-coredev/plips.rst:97
#: ../develop/plone-coredev/pt_BR/plips.rst:94
msgid ""
"Most importantly, the PLIP reviewers must be able run buildout and "
"everything should \"just work\" (tm)."
msgstr ""

# be303830fe0f43b6b06187ca391fa67e
# 58135a7ad32d44e882a189964c098d85
#: ../develop/plone-coredev/plips.rst:102
#: ../develop/plone-coredev/pt_BR/plips.rst:99
msgid "Any new code must:"
msgstr ""

# 1d8fe9c36b81479fad388f6c1669b234
# 9c2f18fc70934106a76f168512bf533f
#: ../develop/plone-coredev/plips.rst:99
#: ../develop/plone-coredev/pt_BR/plips.rst:96
msgid "Be :doc:`Properly Documented <documentation>`"
msgstr ""

# 42c2f9d48b6c40b7867597f4083b2bf5
# b1fab580b10c4943964ef34615180974
#: ../develop/plone-coredev/plips.rst:100
#: ../develop/plone-coredev/pt_BR/plips.rst:97
msgid "Have clear code"
msgstr ""

# bbb8570ed80a4e22b0e434edd5caf6ba
# 90843d58ccab48ea83e6f0ea419022d2
#: ../develop/plone-coredev/plips.rst:101
#: ../develop/plone-coredev/pt_BR/plips.rst:98
msgid "User the current idioms of development"
msgstr ""

# ee336cde67d445328bf662a1fc5144d7
#: ../develop/plone-coredev/plips.rst:102
msgid ""
"`Be tested <http://collective-"
"docs.plone.org/en/latest/testing_and_debugging/index.html>`_"
msgstr ""

# 5b44af2b74524061b4066c8d111498dc
# 8916e0c0d09540ebb79d77ef8638c6db
#: ../develop/plone-coredev/plips.rst:105
#: ../develop/plone-coredev/pt_BR/plips.rst:102
msgid "Creating a New PLIP Branch"
msgstr ""

# aa9b4912855a4fa4b8617584159886aa
#: ../develop/plone-coredev/plips.rst:108
msgid ""
"Create a buildout configuration file for your PLIP in the ``plips`` folder. "
"Give it a descriptive name, starting with the PLIP number; ``plip-1234"
"-widget-frobbing.cfg`` for example. This file will define the "
"branches/trunks you're working with in your PLIP. It should look something "
"like this:"
msgstr ""

# 0530bf8f141a4c16a7147456f3d067c7
#: ../develop/plone-coredev/plips.rst:114
msgid "In file ``plips/plip-1234-widget-frobbing.cfg``::"
msgstr ""

# 5aaee2eeab7e4aa0b9c6f1404530fd2e
# 6d35adb6c7504896a21dfac7b6bcabd2
#: ../develop/plone-coredev/plips.rst:134
#: ../develop/plone-coredev/pt_BR/plips.rst:131
msgid ""
"Use the same naming convention when branching existing packages, and you "
"should always be branching packages when working on PLIPs."
msgstr ""

# bd60188c1ce1480cadb15c52b1cbcffc
# baa20f13d9da49c4b3690d4ac17b7d1c
#: ../develop/plone-coredev/plips.rst:138
#: ../develop/plone-coredev/pt_BR/plips.rst:135
msgid "Finishing Up"
msgstr ""

# d2ad784ebad846589cbea75136b97742
# 5f9fa24f0df14fe8a731279e607336e1
#: ../develop/plone-coredev/plips.rst:139
#: ../develop/plone-coredev/pt_BR/plips.rst:136
msgid ""
"Before marking your PLIP as ready for review, please add a file to give a "
"set of instructions to the PLIP reviewer."
msgstr ""

# 8e29f71038214faaa139871340fb0bac
#: ../develop/plone-coredev/plips.rst:145
msgid ""
"This file should be called ``plip_<number>_notes.txt``. This should include "
"(but is not limited to):"
msgstr ""

# bcba2b6395654332ae0fb0ec3bf83d60
#: ../develop/plone-coredev/plips.rst:142
msgid "URLs pointing to all documentation created / updated"
msgstr ""

# f487fae837c94fedbb082c78308a794b
# e6caabf9bcd741979542e548ddda1113
#: ../develop/plone-coredev/plips.rst:143
#: ../develop/plone-coredev/pt_BR/plips.rst:140
msgid "Any concerns, issues still remaining"
msgstr ""

# 1fbb31a110db45769b7ce4118ad04030
# 6b0d8b0c68864508bafa90409eeb1cf0
#: ../develop/plone-coredev/plips.rst:144
#: ../develop/plone-coredev/pt_BR/plips.rst:141
msgid "Any weird buildout things"
msgstr ""

# 674d1995222d4cf1b92703850689b788
# 2b368ad91da54e9c90222bd4efea7e0a
#: ../develop/plone-coredev/plips.rst:145
#: ../develop/plone-coredev/pt_BR/plips.rst:142
msgid "XXX: What else?"
msgstr ""

# 501113ccc3e04d6b8c16954423865ac7
#: ../develop/plone-coredev/plips.rst:147
msgid ""
"Once you have finished, please update your PLIP ticket to indicate that it "
"is ready for review. The Framework Team will assign 2-3 people to review "
"your PLIP. They will follow the guidelines listed at :doc:`plipreview`."
msgstr ""

# f328bdd0f2d343758db4040d5933b181
#: ../develop/plone-coredev/plips.rst:149
msgid ""
"After the PLIP has been accepted by the framework team and the release "
"manager, you will be asked to merge your work into the main development "
"line. Merging the PLIP in is not the hardest part, but you must think about "
"it when you develop. You'll have to interact with a large number of people "
"to get it all set up. The merge may cause problems with other PLIPs coming "
"in. During the merge phase you must be prepared to help out with all the "
"features and bugs that arise."
msgstr ""

# a9fbc0b48ec64ab295b60dfb23b853ba
# 077aeeb4372346ed8a6f56a95aab1494
#: ../develop/plone-coredev/plips.rst:151
#: ../develop/plone-coredev/pt_BR/plips.rst:148
msgid ""
"If all went as planned the next Plone release will carry on with your PLIP "
"in it. You'll be expected to help out with that feature after it's been "
"released (within reason)."
msgstr ""

# f80e7e6f435f405783e893251ba88d56
#: ../develop/plone-coredev/pt_BR/agreement.rst:2
msgid "Acordo de Contribuição"
msgstr ""

# c5cb0dd73b0b4d18b6a3b5b198c5b9f3
#: ../develop/plone-coredev/pt_BR/agreement.rst:4
msgid ""
"Contribuidores em potencial para a base de código do núcleo do Plone devem "
"assinar o acordo de contribuição, que atribui os direitos autorais do código"
" para a Plone Foundation, a organização sem fins lucrativos que administra a"
" base de código do Plone. Este documento explica os objetivos do acordo, "
"assim como perguntas e respostas sobre o que isto significa."
msgstr ""

# 923872287a8241d997e4befa371bfb3d
#: ../develop/plone-coredev/pt_BR/agreement.rst:6
msgid ""
"O acordo de contribuição do Plone pode ser encontrado em: "
"http://plone.org/foundation/contributors-agreement/agreement.pdf"
msgstr ""

# 4b8d43f763fc4a3ead5c6f4c9cebd4f8
#: ../develop/plone-coredev/pt_BR/agreement.rst:9
msgid "Sobre o acordo de contribuição"
msgstr ""

# bdfa66fa14c6400ca837785c2615552f
#: ../develop/plone-coredev/pt_BR/agreement.rst:11
msgid ""
"A Fundação considera que é vantajoso para a comunidade uma única organização"
" manter os direitos sobre o Plone. Antes da Fundação, a propriedade "
"intelectual do Plone era mantida conjuntamente por desenvolvedores "
"individuais e por Alan Runyan e Limi Alexander. Os membros da comunidade que"
" formaram a Fundação entenderam que a Fundação manter esses direitos "
"ofereceria vários benefícios:"
msgstr ""

# 6025699bdce145e38a42b0a03b55800c
#: ../develop/plone-coredev/pt_BR/agreement.rst:13
msgid ""
"**Reduzir confusão/aumentar a compatibilidade de negócio** -- Organizações "
"que estejam considerando adotar o Plone recebem uma resposta simples para "
"\"A quem pertence o Plone?\", ao invés de uma resposta complexa que poderia "
"intimidar os mais legalistas."
msgstr ""

# fb56d1330ee2465b8279b79d11fd8591
#: ../develop/plone-coredev/pt_BR/agreement.rst:15
msgid ""
"**Proteção da marca** -- Como a Fundação mantém direitos sobre as marcas e "
"elementos do Plone, ela pode efetivamente protegê-los contra uso indevido."
msgstr ""

# 6da1f11a0c6b4ced88fd84d1bc6b46d5
#: ../develop/plone-coredev/pt_BR/agreement.rst:17
msgid ""
"**Garantia de futuras versões Open Source** -- O acordo de contribuição da "
"Fundação garante que **sempre** haverá uma versão do Plone aprovada pela OSI"
" (Open Source Iniciative - Iniciativa Open Source)."
msgstr ""

# 073473fa843847ef96fb100f10db5016
#: ../develop/plone-coredev/pt_BR/agreement.rst:20
msgid "Perguntas e Respostas"
msgstr ""

# b72539af6dd546749ae463c5487d86e3
#: ../develop/plone-coredev/pt_BR/agreement.rst:23
msgid "O que o acordo de contribuição cobre?"
msgstr ""

# b80d4d2e159d4a3fa6e86bf0d4c3406b
#: ../develop/plone-coredev/pt_BR/agreement.rst:23
msgid ""
"Este acordo se aplica somente ao núcleo do código do Plone, que é o código "
"mantido nos repositórios da versão núcleo do Plone e está localizado "
"atualmente em `http://dev.plone.org/plone`_ e `https://github.com/plone`_. "
"Contribuições para o \"Collective\", atualmente localizado em "
"`http://dev.plone.org/collective`_ e `https://github.com/collective`_, não "
"são atribuídas à Plone Foundation, e são disponibilizadas sob qualquer "
"licenciamento que o desenvolvedor do projeto deseje, embora produtos que "
"importem código do Plone sob a GPL estejam sujeitos aos termos da GPL, que "
"requer que trabalhos derivados também sejam licenciados sob a GPL."
msgstr ""

# 8f13d45dc91d452ca26239b3cb30e22b
#: ../develop/plone-coredev/pt_BR/agreement.rst:26
msgid "Que direitos manterei sobre minhas contribuições?"
msgstr ""

# 53eeb9b1d23b4c8593de67fe1081df4b
#: ../develop/plone-coredev/pt_BR/agreement.rst:26
msgid ""
"Contribuidores devem transferir seus direitos sobre a propriedade "
"intelectual para a Fundação. Em troca, eles receberão direitos irrevogáveis "
"de uso e distribução sobre suas contribuições, podendo inclusive ceder suas "
"contribuições para outros projetos Open Source, desde que os projetos sejam "
"compatíveis com a licença utilizada pelo Plone, ou utilizá-los em aplicações"
" comerciais não-Open Source, se estas forem compatíveis com a licença do "
"Plone."
msgstr ""

# 7fd0529e43434e7094e620781ab3eb4d
#: ../develop/plone-coredev/pt_BR/agreement.rst:29
msgid ""
"Eu preciso assinar o acordo de contribuição para poder fazer checkins na "
"base de código do Plone?"
msgstr ""

# 431326a67b0b48afa8d9a8b62119dbb1
#: ../develop/plone-coredev/pt_BR/agreement.rst:29
msgid "Sim."
msgstr ""

# a79ac1ffc5644a3a8cce3b20a37644f5
#: ../develop/plone-coredev/pt_BR/agreement.rst:32
msgid ""
"Eu preciso assinar o acordo de contribuição para poder enviar um patch para "
"a base de código do Plone?"
msgstr ""

# 5d8cdb47dfa1405898d5419bea6ecb9c
#: ../develop/plone-coredev/pt_BR/agreement.rst:32
msgid ""
"Patches são entusiasticamente bem-vindos, mas não poderemos mesclá-los até "
"que você assine e envie o acordo de contribuição. (Exceto caso o Gerenciador"
" de Release do Plone considere que o patch é tão pequeno que não constitua "
"um \"trabalho criativo\". Consulte a `Política para acordos de contribuição "
"e patches`_ (em inglês) para mais detalhes.)"
msgstr ""

# 5f5a6b5c71aa4be4b242fa33a923741b
#: ../develop/plone-coredev/pt_BR/agreement.rst:35
msgid ""
"Eu posso conceder à Plone Foundation uma licença não-exclusiva sobre minhas "
"contribuições, ao invés de uma licença exclusiva, para que eu possa "
"contribuir com o mesmo código em outros projetos com termos de uso "
"diferentes ou utilizar a contribuição em projetos comerciais?"
msgstr ""

# cf5a410c28fb4c1c9c7371dde7e3288d
#: ../develop/plone-coredev/pt_BR/agreement.rst:35
msgid "Não, de acordo com a versão atual do acordo de contribuição."
msgstr ""

# 7b0dac771ed64f83a20a25cfb4a7c81b
#: ../develop/plone-coredev/pt_BR/agreement.rst:38
msgid "A Fundação controla o uso da marca Plone?"
msgstr ""

# 4ec861a51ec84f24bdd0f9bc91907af4
#: ../develop/plone-coredev/pt_BR/agreement.rst:38
msgid ""
"Sim. Para manter a marca, a Fundação (ou qualquer outro proprietário de "
"marca) deve demonstrar que atuou de forma a protegê-la."
msgstr ""

# a75a208b815e488fbdab456c8632d83a
#: ../develop/plone-coredev/pt_BR/agreement.rst:41
msgid ""
"O Plone sempre estará disponível sob uma licença aprovada pela OSI/Open "
"Source? O Conselho não pode mudar de ideia sobre isso?"
msgstr ""

# 6af9a0958038436d89727f5e4726ab68
#: ../develop/plone-coredev/pt_BR/agreement.rst:41
msgid ""
"O Plone sempre estará disponível sob uma licença aprovada pela OSI; isto "
"está escrito no acordo de contribuição que cada desenvolvedor e a Fundação "
"assinam."
msgstr ""

# d30362690b854b54a994e0413f4fc81a
#: ../develop/plone-coredev/pt_BR/agreement.rst:44
msgid "O Plone será disponibilizado sob uma licença não-GPL?"
msgstr ""

# 199a5abe3f944a5988e0ee2195f60544
#: ../develop/plone-coredev/pt_BR/agreement.rst:44
msgid ""
"A abordagem atual do Plone define que as empresas podem negociar uma licença"
" não-GPL. Assim, a Fundação pode prover um esquema de licenciamento duplo "
"(GPL e não-GPL) - mas o Conselho ainda não criou quaisquer políticas sobre "
"este assunto. Esta é uma questão importante para a comunidade, é claro, e a "
"Fundação pretende tratar este assunto de forma transparente."
msgstr ""

# 77357e98127a49679b13387de6cfdc61
#: ../develop/plone-coredev/pt_BR/agreement.rst:47
msgid "Por que alguém iria querer um Plone não-GPL?"
msgstr ""

# 208bd0b5435a41e5adfeccbacc3cf55a
#: ../develop/plone-coredev/pt_BR/agreement.rst:47
msgid ""
"Duas razões possíveis: Algumas empresas relutam em fazer mudanças em "
"sistemas semelhantes a frameworks (como o Plone) licenciadas sob a GPL, "
"temendo serem forçadas a abrir seu trabalho interno em função de alguma "
"cláusula da GPL - podendo assim licenciá-las sob uma licença no estilo BSD, "
"por exemplo. Além disso, empresas podem desejar oferecer uma versão "
"comercial do Plone, sob uma licença hermética, sem a obrigação de revelar "
"seu código fonte ou compartilhar alterações."
msgstr ""

# e15c2283bfd44391926069ad5ac3785a
#: ../develop/plone-coredev/pt_BR/culture.rst:3
msgid "Cultura do desenvolvedor Plone"
msgstr ""

# 04afce3b0e044109bb08811172382e1c
#: ../develop/plone-coredev/pt_BR/culture.rst:5
msgid ""
"Se você deseja contribuir com o desenvolvimento do Plone, siga algumas "
"instruções:"
msgstr ""

# bba77799a6684fb69a105a2abe280f0f
#: ../develop/plone-coredev/pt_BR/culture.rst:7
msgid ""
"Cadastre-se na lista `plone-developers "
"<https://lists.sourceforge.net/lists/listinfo/Plone-developers>`_ e veja "
"como as pessoas trabalham e como costumam abordar as discussões no grupo."
msgstr ""

# 4e0e6806df3c49c59c5d775cc2c075cf
#: ../develop/plone-coredev/pt_BR/culture.rst:9
msgid ""
"Peça ajuda sobre configuração do ambiente no IRC. A maioria dos "
"desenvolvedores estão lá."
msgstr ""

# b937d2de7a234ff19d43ec117be6e078
#: ../develop/plone-coredev/pt_BR/culture.rst:11
msgid ""
"Baixe um cliente de IRC e acesse o canal #plone-framework ou #plone, ambos "
"no freenode. As pessoas no #plone-framework usam Plone há muito tempo e "
"ficam felizes em poder ajudar. Mais informações podem ser obtidas no "
"endereço http://plone.org/support/chat."
msgstr ""

# 034f38c06c9949d2961b138fc49dc5a4
#: ../develop/plone-coredev/pt_BR/culture.rst:13
msgid ""
"Se você está em um fuso horário em que o canal não esteja muito ativo, envie"
" um e-mail para a lista plone-developers ou pegue uma cerveja e espere o "
"pessoal acordar."
msgstr ""

# e7bdd245eb8b457dba26c565157ee0ab
#: ../develop/plone-coredev/pt_BR/culture.rst:15
msgid ""
"Quando tiver dúvidas, pode perguntar. O código do Plone é muito complicado e"
" todos estão empenhados em fazer a coisa certa acontecer. Apesar de uma ou "
"outra grosseria, a maioria dos desenvolvedores Plone irá deixar o que está "
"fazendo para lhe ajudar a achar o caminho certo."
msgstr ""

# 2eb2342472a0465f8a8cd3b49fcd10e1
#: ../develop/plone-coredev/pt_BR/documentation.rst:7
msgid "As a community, Plone maintains several types of documentation:"
msgstr ""

# 4d664cfe686b46bca7d6c97d149ec9dc
#: ../develop/plone-coredev/pt_BR/documentation.rst:9
msgid ""
"*Curated* documents. This is a limited set of documentation that is intended"
" to be carefully managed and regularly updated."
msgstr ""

# c6b1a5836c6340478534b28983e54cba
#: ../develop/plone-coredev/pt_BR/documentation.rst:11
msgid ""
"`User Manual <http://plone.org/documentation/manual/plone-4-user-manual>`_"
msgstr ""

# d514d285db704f5b9d34db932e20d0fe
#: ../develop/plone-coredev/pt_BR/documentation.rst:12
msgid ""
"`Installing Plone <http://plone.org/documentation/manual/installing-plone>`_"
msgstr ""

# e064cb63ecd34fc989d7fef524c9a9b5
#: ../develop/plone-coredev/pt_BR/documentation.rst:13
msgid ""
"`Theme Reference <http://plone.org/documentation/manual/theme-reference>`_"
msgstr ""

# b945d329259e4322892eb352161d7c83
#: ../develop/plone-coredev/pt_BR/documentation.rst:14
msgid ""
"`Developer Manual <http://plone.org/documentation/manual/developer-manual>`_"
msgstr ""

# 3ce39f2743e7466c8435ed04a6f5bc20
#: ../develop/plone-coredev/pt_BR/documentation.rst:16
msgid ""
"Improvements to the curated documents can be discussed on the `plone-docs "
"mailing list <https://lists.sourceforge.net/lists/listinfo/plone-docs>`_."
msgstr ""

# 33f833f9181f4b8994998b0461dba7c8
#: ../develop/plone-coredev/pt_BR/documentation.rst:18
msgid ""
"*Community-edited* documents. These are open for contributions by anyone. "
"This leads to a wealth of information that is of more widely ranging "
"quality."
msgstr ""

# a5b7ad868bb547dea812e9062c441af0
#: ../develop/plone-coredev/pt_BR/documentation.rst:20
msgid ""
"`Knowledgebase on plone.org <http://plone.org/documentation/kb>`_. Anyone "
"with a plone.org account is free to edit."
msgstr ""

# 02d27303ca0641bb98f97ca316a9f2bb
#: ../develop/plone-coredev/pt_BR/documentation.rst:21
msgid ""
"`Collective Plone developer documentation <http://collective-"
"docs.readthedocs.org/en/latest/index.html>`_. Anyone may `contribute <http"
"://collective-"
"docs.readthedocs.org/en/latest/introduction/developermanual.html>`_."
msgstr ""

# 67a031167b83428287286279b1f30b16
#: ../develop/plone-coredev/pt_BR/documentation.rst:40
msgid "``README.rst``"
msgstr ""

# 84642f7923284c3ab6ed00b07eaf9c17
#: ../develop/plone-coredev/pt_BR/documentation.rst:34
msgid "``README.rst`` should include:"
msgstr ""

# bcc2eaa6e7b041d987a05811f3d37644
#: ../develop/plone-coredev/pt_BR/documentation.rst:60
msgid ""
"Simple packages with limited functionality can get by with a single page of "
"narrative documentation. In this case it's simplest to include it in an "
"extended ``README.rst``. Some excellent examples of a single-page readme are"
" https://pypi.python.org/pypi/plone.outputfilters and "
"https://github.com/plone/plone.app.caching"
msgstr ""

# 1033de5f4e5e4d3093d505f4f642bd6c
#: ../develop/plone-coredev/pt_BR/documentation.rst:62
msgid ""
"If your project is moderately complex, you may want to set up your "
"documentation with multiple pages. The best way to do this is to add Sphinx "
"to your project and host your docs on readthedocs.org so that it rebuilds "
"the documentation whenever you push to github. If you do this, your "
"``README.rst`` must link off site to the documentation."
msgstr ""

# 3282c88465d3419f941c8342524a3003
#: ../develop/plone-coredev/pt_BR/documentation.rst:86
msgid "``CHANGES.txt``"
msgstr ""

# 56cf07a5bdff4a559fd7b3eb7cb9817c
#: ../develop/plone-coredev/pt_BR/documentation.rst:89
msgid ""
"Information about the open source license used for the package should be "
"placed within the ``docs`` directory."
msgstr ""

# 73bef4a32a1b4b79a5c14620fb7c6fa2
#: ../develop/plone-coredev/pt_BR/documentation.rst:91
msgid ""
"For Plone core packages, this includes ``LICENSE.txt`` and ``LICENSE.GPL``."
msgstr ""

# 2756a7aa87594939b7e4f8a785b50b25
#: ../develop/plone-coredev/pt_BR/documentation.rst:98
msgid ""
"`Plone Oriented Shpinx Documentation <http://collective-"
"docs.plone.org/en/latest/introduction/writing.html>`_"
msgstr ""

# 5ca4b901c24e41b3bae845dbbb4416d3
#: ../develop/plone-coredev/pt_BR/documentation.rst:101
msgid "To add Sphinx to your package..."
msgstr ""

# f00b65b5323b44758a666d7b1b22d0dc
#: ../develop/plone-coredev/pt_BR/index.rst:8
msgid "Introdução"
msgstr ""

# 5dcac9696f384699bd6b2946aa456c2b
#: ../develop/plone-coredev/pt_BR/index.rst:9
msgid ""
"Esta documentação descreve o processo para desenvolvimento usando o Plone e "
"é um recurso técnico para configurar seu core developer buildout, corrigir "
"erros e escrever PLIP's (PLone Improvement Proposal - Propostas de Melhoria "
"do Plone)."
msgstr ""

# 153b9fefc2ba44d599925529d10e4514
#: ../develop/plone-coredev/pt_BR/index.rst:12
msgid "ATENÇÃO!"
msgstr ""

# 947475249acf43279055437f050a2d0e
#: ../develop/plone-coredev/pt_BR/index.rst:13
msgid ""
"Legalmente, você NÃO pode contribuir com código sem que tenha assinado o "
":doc:`acordo de contribuição <agreement>`; sem ele, não podemos aceitar seus"
" pull requests. Enviar o acordo é fácil e será mais fácil em breve. Por "
"isto, não coloque os revisores do código em risco, de forma alguma. Se você "
"quiser acesso rápido e estiver familiarizado com a comunidade, acesse "
":doc:`irc <culture>` e peça para algum administrador do repositório lhe dar "
"acesso, enviando uma cópia escaneada do acordo. Eles permitirão que você "
"comece a contribuir o mais rápido possível."
msgstr ""

# e0a9b760550b4b74a5e30a47c086ec1f
#: ../develop/plone-coredev/pt_BR/index.rst:17
msgid "Sumário"
msgstr ""

# 1947ae8680324cd8972fa9f8d8c4e8f9
#: ../develop/plone-coredev/pt_BR/intro.rst:2
msgid "Como enviar correções para o Core do Plone"
msgstr ""

# a0dd7ec82efe485a8f590e282626ac02
#: ../develop/plone-coredev/pt_BR/intro.rst:3
msgid ""
"Este documento assume que você deseja corrigir um bug e irá detalhar o "
"processo completo. Para mais informações sobre PLIPS, :doc:`go here "
"<plips>`."
msgstr ""

# 28fdc909a24949fcba2eaf3020cd4b0e
#: ../develop/plone-coredev/pt_BR/intro.rst:6
msgid "Política de Versões Suportadas"
msgstr ""

# a66640e8faa44a05993cd448f230c257
#: ../develop/plone-coredev/pt_BR/intro.rst:7
msgid ""
"Se você estiver fazendo uma triagem ou corrigindo bugs, tenha em mente que o"
" Plone possui uma `Política de versões suportadas <http://plone.org/support"
"/version-support-policy>`_."
msgstr ""

# 421348979a154e36bf3ec5b0d9260b84
#: ../develop/plone-coredev/pt_BR/intro.rst:10
msgid "Dependências"
msgstr ""

# 21e648d633f64d949bf90f950e1f8f0b
#: ../develop/plone-coredev/pt_BR/intro.rst:13
msgid ""
"`Python <http://python.org/>`_ 2.6 or 2.7 incluindo as bibliotecas de "
"desenvolvimento."
msgstr ""

# 3fd0f9fdeaa04ad7854471a24d8f9877
#: ../develop/plone-coredev/pt_BR/intro.rst:14
msgid ""
"If you are on Mac OSX, you will need to install XCode. You can do this "
"through the app store or several other soul-selling methods. You will likely"
" want to install your own python 2.6 as well since they strip out all the "
"header files which makes compiling some extensions weird. You can ignore "
"this advice to start, but have faith, you'll come back to it later. They "
"always do..."
msgstr ""

# b604b70509f14b83877b1a6a0b125baa
#: ../develop/plone-coredev/pt_BR/intro.rst:15
msgid ""
"`Python Imaging Library (PIL) <http://www.pythonware.com/products/pil/>`_. "
"Certifique-se de instalar no ambiente Python adequado."
msgstr ""

# a433e546df52476d803cfbfcfff31369
#: ../develop/plone-coredev/pt_BR/intro.rst:16
msgid ""
"`VirtualEnv <http://www.virtualenv.org/en/latest/index.html>`_ No ambiente "
"Python adequado."
msgstr ""

# dfaf98f427554d3585f0c03495d1ecf2
#: ../develop/plone-coredev/pt_BR/intro.rst:17
msgid "`GCC <http://gcc.gnu.org/>`_ A fim de compilar ZODB, Zope e lxml."
msgstr ""

# 9ffeed964e7042fbad38e2f0f9c999f9
#: ../develop/plone-coredev/pt_BR/intro.rst:18
msgid ""
"`libxml2 and libxslt <http://xmlsoft.org/XSLT/downloads.html>`_, Incluíndo "
"as bibliotecas de desenvolvimento."
msgstr ""

# 006b2d7604ba4f7d8cf19a37b8922ea3
#: ../develop/plone-coredev/pt_BR/intro.rst:23
msgid ""
"The first step in fixing a bug is getting this buildout running. We "
"recommend fixing the bug on the latest branch and then backporting as "
"necessary. `Github <https://github.com/plone/buildout.coredev/>`_ by default"
" always points to the currently active branch. More information on switching"
" release branches is below."
msgstr ""

# 0348bb7db2814855aeee6f2f0fd57531
#: ../develop/plone-coredev/pt_BR/intro.rst:40
msgid "The default username/password for a dev instance is admin/admin."
msgstr ""

# 30eb4a184fff4cc0a5e43f858f31ec4b
#: ../develop/plone-coredev/pt_BR/intro.rst:44
msgid ""
"If your bug is specific to one branch or you think it should be backported, "
"you can easily switch branches. The first time you get a branch, you must "
"do::"
msgstr ""

# 867bfd96ad04411380078d1e9fd87107
#: ../develop/plone-coredev/pt_BR/intro.rst:61
msgid ""
"For more information on buildout, please see the `collective developer "
"manual documentation on buildout <http://collective-"
"docs.plone.org/en/latest/tutorials/buildout/index.html>`_."
msgstr ""

# 5894448c2fc34a21974e212b85bca567
#: ../develop/plone-coredev/pt_BR/intro.rst:66
msgid ""
"Most packages are not in src/ by default, so you can user mr.developer to "
"get the latest and make sure you are always up to date. It can be a little "
"daunting at first to find out which packages are causing the bug in "
"question, but just ask on irc if you need some help. Once you [think you] "
"know which package(s) you want, we need to pull the source."
msgstr ""

# f593ea96a2004219863874acd838f873
#: ../develop/plone-coredev/pt_BR/intro.rst:68
msgid ""
"You can get the source of the package with mr.developer and the checkout "
"command, or you can go directly to editing checkouts.cfg. We recommend the "
"latter but will describe both. In the end, checkouts.cfg must be configured "
"either way so you might as well start there."
msgstr ""

# d228be951f3c4d0a872d7a3a108208d7
#: ../develop/plone-coredev/pt_BR/intro.rst:70
msgid ""
"At the base of your buildout, open checkouts.cfg and add your package if "
"it's not already there::"
msgstr ""

# b029f2489b7b4cda9f4dd1ef4f52ae65
#: ../develop/plone-coredev/pt_BR/intro.rst:83
msgid ""
"Altternatively, we can manage checkouts from the command line, by using "
"mr.developer's ``bin/develop`` command to get the latest source. For "
"example, if the issue is in plone.app.caching and plone.caching::"
msgstr ""

# 5765da7948b546dc95da6571a59670ab
#: ../develop/plone-coredev/pt_BR/intro.rst:89
msgid ""
"Don't forget to rerun buildout! In both methods, mr.developer will download "
"the source from github (or otherwise) and put the package in the src "
"directory. You can repeat this process with as many or as few packages as "
"you need. For some more tips on working with mr.developer, please :doc:`read"
" more here <mrdeveloper>`."
msgstr ""

# ac4aa29b15fd4a568768dd39032827f6
#: ../develop/plone-coredev/pt_BR/intro.rst:107
msgid ""
"*Note*: Tests take a long time to run. Once you become a master of bugfixes,"
" you may just let jenkins do this part for you. More on that below."
msgstr ""

# 72424a4a954b4677807cb7da2288b2fd
#: ../develop/plone-coredev/pt_BR/intro.rst:111
msgid ""
"Once all the tests are running locally on your machine, you are ALMOST ready"
" to commit the changes. A couple housekeeping things before moving on."
msgstr ""

# c03eadc1633549698c0522a3f486c891
#: ../develop/plone-coredev/pt_BR/intro.rst:113
msgid ""
"First, please edit CHANGES.rst (or CHANGES.txt) in each pakage you have "
"modified and add a summary of the change. This change note will be collated "
"for the next Plone release and is important for integrators and developers."
msgstr ""

# 54da4100ce3f427785e2f78f7ff429ae
#: ../develop/plone-coredev/pt_BR/intro.rst:115
msgid ""
"*Most importantly*, if you didn't do it earlier, edit checkouts.cfg in the "
"buildout directory and add your changes package to the auto-checkout list. "
"This lets the release manager know that the package has been updated so that"
" when the next release of Plone is cut a new egg will be released and Plone "
"will need to pin to the next version of that package. READ: this is how your"
" fix becomes an egg!"
msgstr ""

# 42634837ebe94e5396196c997fc6b95b
#: ../develop/plone-coredev/pt_BR/intro.rst:119
msgid ""
"Modifying checkouts.cfg also triggers the buildbot, jenkins, to pull in the "
"egg and run all the tests against the changes you just made. Not that you "
"would ever skip running all tests of course... More on that below."
msgstr ""

# d53e78b02c4042cba650b463b6d6cad5
#: ../develop/plone-coredev/pt_BR/intro.rst:121
msgid ""
"If your bug is in more than one release (e.g. 4.1 and 4.2), please checkout "
"both branches and add to the checkouts.cfg."
msgstr ""

# db21395e30a7454c9506cf13cf5c3313
#: ../develop/plone-coredev/pt_BR/intro.rst:132
msgid "Did you update CHANGES.rst in each packages you touched?"
msgstr ""

# 9ef36e24ae9f45e4babf5202074ea3bd
#: ../develop/plone-coredev/pt_BR/intro.rst:133
msgid "Did you add your changed packages to checkouts.cfg?"
msgstr ""

# e43bb24a5465451b87d627d8ae6fa296
#: ../develop/plone-coredev/pt_BR/intro.rst:135
msgid ""
"If you answered YES to all of these questions, you are ready to push your "
"changes! A couple quick reminders:"
msgstr ""

# 4e7ccdb4b0db480f976c06c082271111
#: ../develop/plone-coredev/pt_BR/intro.rst:137
msgid ""
"Only commit directly to the development branch if you're confident your code"
" won't break anything badly and the changes are small and fairly trivial. "
"Otherwise, please create a pull request (more on that below)."
msgstr ""

# 35ba90d1462849e6b17772123a83a7bf
#: ../develop/plone-coredev/pt_BR/intro.rst:138
msgid ""
"Please try to make one change per commit. If you are fixing three bugs, make"
" three commits. That way, it is easier to see what was done when, and easier"
" to roll back any changes if necessary. If you want to make large changes "
"cleaning up whitespace or renaming variables, it is especially important to "
"do so in a separate commit for this reason."
msgstr ""

# eb30f327b7f848938f6c459ad9d11a0f
#: ../develop/plone-coredev/pt_BR/intro.rst:139
msgid ""
"We have a few angels that follow the changes and each commit to see what "
"happens to their favourite CMS! If you commit something REALLY sketchy, they"
" will politely contact you, most likely after immediately reverting changes."
" There is no official people assigned to this so if you are especially "
"nervous, jump into #plone and ask for a quick eyeball on your changes."
msgstr ""

# 9c9f9488a20a42759de4c07d78996291
#: ../develop/plone-coredev/pt_BR/intro.rst:143
msgid ""
"If you are working a bug fix on Products.CMFPlone, there are a couple other "
"things to take notice of. First and foremost, you'll see that there are "
"several branches. At the time of writing this document, there are branches "
"for 4.1, 4.2, and master, which is the implied 4.3."
msgstr ""

# 9b23ec0c3ef6428da1ab2a83aefdf581
#: ../develop/plone-coredev/pt_BR/intro.rst:165
msgid ""
"And then cherry-pick the commit (you can get the SHA hash from git log)."
msgstr ""

# e95bdedac7734e08836becc397e6cad5
#: ../develop/plone-coredev/pt_BR/intro.rst:167
msgid "> git cherry-pick b6ff4309"
msgstr ""

# a3c36bae66f240e296ad709f6f00d801
#: ../develop/plone-coredev/pt_BR/intro.rst:169
msgid ""
"There may be conflicts; if so, resolve them and then follow the directions "
"git gives you to complete the cherry-pick."
msgstr ""

# 79d41882bffc43388e3689956b2c7d95
#: ../develop/plone-coredev/pt_BR/intro.rst:172
msgid ""
"If your fix involved multiple commits, cherry-picking them one by one can "
"get tedious. In this case things are easiest if you did your fix in a "
"separate feature branch."
msgstr ""

# 004c6a05911f42f796d4dee69f575df3
#: ../develop/plone-coredev/pt_BR/intro.rst:199
msgid ""
"Plone used to be in an svn repository, so everyone is familiar and "
"accustomed to committing directly to the branches. After the migration to "
"github, the community decided to maintain this spirit. If you have signed "
"the contributor agreement, you can commit directly to the branch (for plone "
"this would be the version branch, for most other packages this would be "
"master)."
msgstr ""

# 12d999d7bf2c43e582691d0e8a0c8ed2
#: ../develop/plone-coredev/pt_BR/intro.rst:207
msgid ""
"then you likely want to create a branch of whatever packages you are using "
"and then use the pull request feature of github to get review. Everything "
"about this process would be the same except you need to work on a branch. "
"Take the plone.app.caching example. After checking it out with mr.developer,"
" create your own branch with::"
msgstr ""

# 80fd7af5846a418d8f51209475aee438
#: ../develop/plone-coredev/pt_BR/intro.rst:212
msgid ""
"*Note*: Branching or forking is your choice. I prefer branching, and I'm "
"writing the docs so this uses the branch method. If you branch, it helps us "
"because we *know* that you have committer rights. Either way it's your call."
msgstr ""

# 0970c12c9d9d48cd83a692fb25ce363c
#: ../develop/plone-coredev/pt_BR/intro.rst:214
msgid ""
"Proceed as normal. When you are ready to push your fix, push to a remote "
"branch with::"
msgstr ""

# d67474e8e5d8406599248ac5809358b8
#: ../develop/plone-coredev/pt_BR/intro.rst:218
msgid ""
"This will make a remote branch in github. Navigate to this branch in the "
"github UI and on the top right there will be a button that says \"Pull "
"Request\". This will turn your request into a pull request on the main "
"branch. There are people who look once a week or more for pending pull "
"requests and will confirm whether or not its a good fix and give you "
"feedback where necessary. The reviewers are informal and very nice so don't "
"worry - they are there to help! If you want immediate feedback, jump into "
"IRC with the pull request link and ask for a review."
msgstr ""

# 180acbf2919d45cdb4d27e03528b2e22
#: ../develop/plone-coredev/pt_BR/intro.rst:220
msgid ""
"*Note*: you still need to update checkouts.cfg in the correct branches of "
"buildout.coredev!"
msgstr ""

# a2d9b76b987b413fa93cb3567160971b
#: ../develop/plone-coredev/pt_BR/intro.rst:233
msgid ""
"You can follow the project on github and watch its timeline. You can also "
"check the CHANGES.txt of every plone release for a comprehensive list of all"
" changes and validate that yours is present."
msgstr ""

# d31080eb87b0414a95ac1d7ec9a16721
#: ../develop/plone-coredev/pt_BR/issues.rst:41
msgid ""
"mr.developer is never unhappy, except when it is. Although this technically "
"isn't a buildout issues, it happens when running buildout so I'm putting it "
"under buildout issues."
msgstr ""

# f427d57e4146472088f424d3c442faf3
#: ../develop/plone-coredev/pt_BR/issues.rst:64
msgid ""
"There are two ways to get this error to go away. The first is to delete all "
"instances of host filtering. Comb through all the files and delete any lines"
" which say \"allow-hosts =\" and \"allow-hosts +=\". In theory, by "
"restricting which hosts you download from, buildout will go faster. Whether "
"that actually happens or not I can not judge. The point is that they are "
"safely deletable."
msgstr ""

# ebe81b86974a4d30bb646008ac18fbb3
#: ../develop/plone-coredev/pt_BR/issues.rst:77
msgid ""
"``ERROR: You are not in a path which has mr.developer installed "
"(.mr.developer.cfg not found).``"
msgstr ""

# e7f539cd6c77498987364d3b3b950f61
#: ../develop/plone-coredev/pt_BR/issues.rst:79
msgid "When running any ``./bin/develop`` command."
msgstr ""

# bfb46efda1fb48ce90506cc62a7e74ae
#: ../develop/plone-coredev/pt_BR/issues.rst:98
msgid ""
"mr.developer is complaining because a file has been changed/added, but not "
"committed."
msgstr ""

# 79e79e4805a24c97a2fe0dac3c2c7081
#: ../develop/plone-coredev/pt_BR/issues.rst:101
msgid ""
"Use ``bin/develop update --force``. Adding ``*.pyc *~.nib *.egg-info "
".installed.cfg *.pt.py *.cpt.py *.zpt.py *.html.py *.egg`` to your "
"subversion config's global-ignores has been suggested as a more permanent "
"solution."
msgstr ""

# 9e729abd7d764f7f843aafbc9e23fd1d
#: ../develop/plone-coredev/pt_BR/issues.rst:110
msgid ""
"Appears to not actually be the case. Delete 'mkzopeinstance.py' from bin/ "
"and rerun buildout to correct this if you're finding it irksome."
msgstr ""

# eb7c497070ad44afaf227935b8abef01
#: ../develop/plone-coredev/pt_BR/issues.rst:115
msgid ""
"Two possible fixes, you are using Python 2.4 by mistake, so use 2.6 instead."
" Or, you may need to make sure you run 'bin/buildout …' after 'bin/develop "
"…'. Try removing parts/*, bin/*, .installed.cfg, then re-bootstrap and re-"
"run buildout, develop, buildout."
msgstr ""

# 5494a8be8f4840d28ea3450b7f5e5a25
#: ../develop/plone-coredev/pt_BR/issues.rst:119
msgid ""
"pil.cfg is include within this buildout to aid in PIL installation. Run "
"bin/buildout -c pil.cfg to install. This method does not work on Windows, so"
" we're unable to run it by default."
msgstr ""

# a7c9f240a7d24581a96ebf70e93c58d6
#: ../develop/plone-coredev/pt_BR/issues.rst:126
msgid ""
"bin/develop status is showing that the Products.CMFActionIcons egg has been "
"modified, but I haven't touched it.  And this is preventing bin/develop up "
"from updating all the eggs."
msgstr ""

# 66e33c17d2d047de827fdaca0ee6bcb7
#: ../develop/plone-coredev/pt_BR/issues.rst:133
msgid ""
"Edit ~/.subversion/config and add eggtest*.egg to the list of global-ignores"
msgstr ""

# 8decc89e17b64411b45601e975bb177c
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:4
msgid ""
"Esse buildout usa o mr.developer para gerenciar o desenvolvimento do pacote."
" Veja https://pypi.python.org/pypi/mr.developer para maiores informações ou "
"execute 'bin/develop help' para obter uma lista de comandos disponíveis."
msgstr ""

# bbbb8f86991942a0987de7cd5f5f5a89
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:8
msgid "A forma mais comum de obter as últimas atualizações é:"
msgstr ""

# 9151604ab86d43479c62940cbd8f66e5
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:10
msgid "$ git pull $ bin/develop rb"
msgstr ""

# 56ed76743a48493dbda6368c6e6adc07
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:13
msgid ""
"Isto lhe trará a versão mais recente da configuração do coredev, faça o "
"checkout, atualize todos os pacotes do Subversion na pasta src e execute "
"buildout para configurar tudo."
msgstr ""

# 1065229d86da4cca8042f8bf76f6b735
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:15
msgid ""
"De vez em quando você pode verificar se existem modificações não comitadas "
"nos repositórios baixados pelo mr.developer:"
msgstr ""

# 80ded8968bf844efb2aede5336ff2c51
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:17
msgid "$ bin/develop st"
msgstr ""

# 283d9a40a1ae434bace58a23f7472694
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:19
msgid ""
"Se alguma linha for impressa com um ponto de interrogação na frente, você "
"pode limpar a lista com o seguinte comando:"
msgstr ""

# 58f2cab088454a3686506a0661a69440
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:21
msgid "$ bin/develop purge"
msgstr ""

# 49e3269fa6d14b3389fc3ea010c6be4b
#: ../develop/plone-coredev/pt_BR/mrdeveloper.rst:23
msgid ""
"Isso irá remover os pacotes desnecessários de src/, já que foram "
"substituídos por versões de eggs mais adequadas."
msgstr ""

# c8f49e4dac2f4672aa482ec668b1109a
#: ../develop/plone-coredev/pt_BR/plipreview.rst:2
msgid "Revisando PLIP's"
msgstr ""

# ccc8d0d67dd546aa9cbcd5313af83229
#: ../develop/plone-coredev/pt_BR/plipreview.rst:6
msgid ""
"Uma boa revisão de PLIP leva aproximadamente 4 horas, então se programe "
"corretamente. Quando terminar, se tiver acesso ao núcleo, comite a revisão "
"no diretório de PLIP's e referencie a PLIP na mensagem do seu commit. Se não"
" tiver acesso, anexe sua revisão ao ticket aberto da PLIP."
msgstr ""

# 004b36d810434e5aa6b7cd90041be482
#: ../develop/plone-coredev/pt_BR/plipreview.rst:9
msgid "Configurando o ambiente"
msgstr ""

# 1eda4563fa6348a6b59d6d2b86225920
#: ../develop/plone-coredev/pt_BR/plipreview.rst:10
msgid ""
"Siga as instruções em [wiki:DevelopmentEnvironment setting up a development "
"environment], \"Obtendo o Código\". Você deverá fazer o checkout do branch "
"ao qual a PLIP está vinculada. Ao invés de rodar o buildout usando o arquivo"
" de buildout padrão, você deverá rodar a configuração específica para a "
"PLIP::"
msgstr ""

# 97482fdac43f4f198d57ae836e8c4173
#: ../develop/plone-coredev/pt_BR/plipreview.rst:15
msgid "Revisão de funcionalidade"
msgstr ""

# e04080f666aa4243ad8ef2d35415851c
#: ../develop/plone-coredev/pt_BR/plipreview.rst:16
msgid ""
"Existem várias coisas que podem ser abordadas em uma revisão de PLIP, "
"dependendo da sua natureza. A lista abaixo não é, absolutamente, uma lista "
"completa, mas um ponto de partida sobre o que pode ser observado em uma "
"revisão:"
msgstr ""

# 0e8aea13fe52447c8126316a7c7e532a
#: ../develop/plone-coredev/pt_BR/plipreview.rst:19
msgid "Geral"
msgstr ""

# 3af4860a9b0340bcaca9801a27a7fa36
#: ../develop/plone-coredev/pt_BR/plipreview.rst:20
msgid ""
"A PLIP realmente faz o que os implementadores propuseram? Existem variações "
"incompletas?"
msgstr ""

# 72b1ec426fcd4988a50efcf22cbd10cb
#: ../develop/plone-coredev/pt_BR/plipreview.rst:21
msgid ""
"Ocorreram erros durante a execução do buildout? As migrações funcionaram?"
msgstr ""

# e4818f3333fb467aad37a19241f4a7ac
#: ../develop/plone-coredev/pt_BR/plipreview.rst:22
msgid ""
"Os erros e mensagens de status fazem sentido? Estão internacionalizados "
"corretamente?"
msgstr ""

# 5ecf84fe02df40e989a3b8a7d450d7ff
#: ../develop/plone-coredev/pt_BR/plipreview.rst:23
msgid ""
"Existem considerações sobre a performance? O implementador as observou?"
msgstr ""

# 526fe8a823c9434e88c0511dca893107
#: ../develop/plone-coredev/pt_BR/plipreview.rst:26
msgid "Erros"
msgstr ""

# fce3c2d4cf724964b2106d272e3f2aca
#: ../develop/plone-coredev/pt_BR/plipreview.rst:27
msgid "Existem erros? Nada é muito grande ou muito pequeno."
msgstr ""

# 7c599175854743b7afb9aa005d68096e
#: ../develop/plone-coredev/pt_BR/plipreview.rst:28
msgid ""
"Os campos manipulam dados estranhos? E situações como strings em campos de "
"data ou campos obrigatórios deixados em branco?"
msgstr ""

# 65aec0ae8bf7483aaa0b7e21ff6360e1
#: ../develop/plone-coredev/pt_BR/plipreview.rst:29
msgid "A validação não está pouco exigente nem exigente demais?"
msgstr ""

# e37ecf5821e249b287d3439101d342de
#: ../develop/plone-coredev/pt_BR/plipreview.rst:32
msgid "Qestões de usabilidade"
msgstr ""

# 82ca6de901c247f7977aeda76a8ac559
#: ../develop/plone-coredev/pt_BR/plipreview.rst:33
msgid "A implementação está usável?"
msgstr ""

# cf90e93bcf01420193a7b542ae495d52
#: ../develop/plone-coredev/pt_BR/plipreview.rst:34
msgid "Como usuários finais iniciantes reagirão à mudança?"
msgstr ""

# f1c1329a7dd94c9fa8e358f724804801
#: ../develop/plone-coredev/pt_BR/plipreview.rst:35
msgid ""
"A PLIP necessita de uma revisão de usabilidade? Se você considerar que sim, "
"altere o estado para \"please review\" e adicione uma nota nos comentários."
msgstr ""

# 875c69cd00f44faab505776609142ce7
#: ../develop/plone-coredev/pt_BR/plipreview.rst:36
msgid ""
"A PLIP está consistente com o resto do Plone? Por exemplo, se existe uma "
"configuração no painel de controle, o novo formulário se adequa aos outros "
"painéis?"
msgstr ""

# 264a9495de3143b68cdc15209184a384
#: ../develop/plone-coredev/pt_BR/plipreview.rst:37
msgid ""
"Tudo está fluindo bem para usuários iniciantes e avançados? Existem fluxos "
"que parecem estranhos?"
msgstr ""

# 3e8bbf63a0e9484a92fe63fce386e3bd
#: ../develop/plone-coredev/pt_BR/plipreview.rst:38
msgid ""
"Existem permissões novas e elas funcionam apropriadamente? A atribuição de "
"papéis (roles) faz sentido?"
msgstr ""

# a906fc53bdb5403bac24fd8cb3040399
#: ../develop/plone-coredev/pt_BR/plipreview.rst:41
msgid "Questões de documentação"
msgstr ""

# c601f1dbdb8a4b0cbaf64c8bb3907a3f
#: ../develop/plone-coredev/pt_BR/plipreview.rst:42
msgid ""
"A documentação correspondente é suficiente para usuários finais, seja ele "
"desenvolvedor ou usuário Plone?"
msgstr ""

# 5af6a41ddf6a435290e0151c1f5e1a37
#: ../develop/plone-coredev/pt_BR/plipreview.rst:43
msgid "A mudança está bem documentada?"
msgstr ""

# dbaed03d293941f4a4ab936c88fa14f3
#: ../develop/plone-coredev/pt_BR/plipreview.rst:45
msgid ""
"Reporte erros/solicitações no Trac, como faria com qualquer outro erro do "
"Plone. Referencie a PLIP no erro, atribua a seu desenvolvedor e adicione uma"
" tag para a PLIP como plip-xxx, pois fica mais fácil do desenvolvedor "
"encontrar, se precisar. Também coloque prioridade no ticket. A PLIP não será"
" mesclada até que os erros sejam corrigidos."
msgstr ""

# 58678a599e774111a4d34fc98292d2d6
#: ../develop/plone-coredev/pt_BR/plipreview.rst:48
msgid "Revisão de Código"
msgstr ""

# 6ad0c740bfd2439bb7b32e50da7749b6
#: ../develop/plone-coredev/pt_BR/plipreview.rst:52
msgid "O código é possível de manter?"
msgstr ""

# cbb11b7ac2ea47ee9e44e19099135e44
#: ../develop/plone-coredev/pt_BR/plipreview.rst:53
msgid "O código está documentado corretamente?"
msgstr ""

# 2bc8a31d91d44f03aa0a6af9aa7576d8
#: ../develop/plone-coredev/pt_BR/plipreview.rst:54
msgid "O código segue os padrões da PEP8? Quanto?"
msgstr ""

# 59c7559eb53d4de3a2b264c871b1901c
#: ../develop/plone-coredev/pt_BR/plipreview.rst:55
msgid "Está importando módulos obsoletos?"
msgstr ""

# 28193fdd94894f1b9abeb6bfebdeb7f5
#: ../develop/plone-coredev/pt_BR/plipreview.rst:59
msgid ""
"O javascript segue os padrões utilizados? Veja a referência em "
"http://plone.org/documentation/manual/developer-manual/client-side-"
"functionality-javascript/javascript-standards/referencemanual-all-pages"
msgstr ""

# fba2fbed52ec4ec4a2e41ba0ceeb9557
#: ../develop/plone-coredev/pt_BR/plipreview.rst:60
msgid ""
"O javascript funciona em todas os navegadores suportados atualmente? Como "
"está o desempenho?"
msgstr ""

# a61cdfbece734c6d8af5f455e660c1fa
#: ../develop/plone-coredev/pt_BR/plipreview.rst:64
msgid "A PLIP usa views apropriadas e evita implementar muita lógica?"
msgstr ""

# 7324a7b0557c406db9140405354c1a81
#: ../develop/plone-coredev/pt_BR/plipreview.rst:65
msgid ""
"Existe algum loop no código que pode ter, potencialmente, problema de "
"desempenho?"
msgstr ""

# 10ce1888176e4302a8b6a076cb4aa3c7
#: ../develop/plone-coredev/pt_BR/plipreview.rst:66
msgid "Existem linhas de código obsoletas ou no estilo antigo, como DateTime?"
msgstr ""

# 7d1f5f66c01346be85d9b9ec50841423
#: ../develop/plone-coredev/pt_BR/plipreview.rst:67
msgid ""
"O HTML renderizado é compatível com as normas? Os ids e classes são usadas "
"apropriadamente?"
msgstr ""

# fa5b4cf999a84b308ff42cf0377c0a71
#: ../develop/plone-coredev/pt_BR/plipreview.rst:70
msgid "Exemplos de revisões de PLIP"
msgstr ""

# f240b849fc294e03acfe6b86ff0a4146
#: ../develop/plone-coredev/pt_BR/plips.rst:7
msgid "What is a PLIP?"
msgstr ""

# 345383fb9a3c4146884d8b57829c2d6f
#: ../develop/plone-coredev/pt_BR/plips.rst:7
msgid ""
"A PLIP is a PLone Improvement Proposal. It is a change to a Plone package "
"that would affect everyone. PLIPs go through a different process than bug "
"fixes because of their broad reaching effect. The Plone 4.x Framework Team "
"reviews all PLIPs to be sure that it’s in the best interest of the broader "
"community to be implemented and that it is of high quality."
msgstr ""

# 60929ab90225424c94ad134224fd331b
#: ../develop/plone-coredev/pt_BR/plips.rst:10
msgid "Is it a PLIP or a bugfix?"
msgstr ""

# f23617feaa064aa08eccede50c2ee0da
#: ../develop/plone-coredev/pt_BR/plips.rst:10
msgid ""
"In general, anything that changes the API of Plone in the backend or UI on "
"the front end should be filed as a PLIP. When in doubt, submit it as a PLIP."
" The framework team is eager to reduce it’s own workload and will re-"
"classify it for you."
msgstr ""

# 94a982b535e2417c9b599ef1a5ef5828
#: ../develop/plone-coredev/pt_BR/plips.rst:15
msgid "Who can submit PLIPs?"
msgstr ""

# f2ec96e9e02f48238f381acea65b694a
#: ../develop/plone-coredev/pt_BR/plips.rst:27
msgid "What is a PLIP champion?"
msgstr ""

# 5ed370ea4c15446f8deff5f3b83a0251
#: ../develop/plone-coredev/pt_BR/plips.rst:20
msgid "A champion should"
msgstr ""

# bd15b941ff764ddc8ee09f0b173fbfe6
#: ../develop/plone-coredev/pt_BR/plips.rst:31
msgid "I’m still nervous. Can I get involved other ways at first?"
msgstr ""

# c6eb2f68cd8c439f932c5fa5db3d8902
#: ../develop/plone-coredev/pt_BR/plips.rst:30
msgid ""
"If you want to feel the process and how it works, help us review PLIPs as "
"the implementations finish up. Simply ask on  of the Framework Team members "
"what PLIPs are available for review or check the status of PLIPs at "
"XXX:Link. Make sure to let us know you intend to review the PLIP by joining "
"the Framework Team mailing list (XXX:link) and sending a quick email. Then, "
"follow the simple instructions for reviewing a PLIP (XXX:link). Thank you in"
" advance!"
msgstr ""

# f1bbd563eb6149f49e823ff234dbb71b
#: ../develop/plone-coredev/pt_BR/plips.rst:34
msgid "When can I submit a PLIP?"
msgstr ""

# 7ba0a88dee044e71bfba721de134a8d0
#: ../develop/plone-coredev/pt_BR/plips.rst:39
msgid "When is the PLIP due?"
msgstr ""

# 8acb28f957b64f8b8c1f6101204797e6
#: ../develop/plone-coredev/pt_BR/plips.rst:37
msgid ""
"Summary: As soon as you get it done. &tldr; Technically, we want to see it "
"completed for the release to which it’s assigned. We know that things get "
"busy and new problems make PLIPs more complicated and we will push it to the"
" next release. In general, we don’t want to track a PLIP for more than a "
"year. If your PLIP is accepted and we haven’t seen activity in over a year, "
"we will probably ask you to restart the whole process."
msgstr ""

# 57d5e79496c747e29942cadc6ab19b0e
#: ../develop/plone-coredev/pt_BR/plips.rst:42
msgid "You don’t like my PLIP :( What now?"
msgstr ""

# ab29319859db48778478ba4c4214fe95
#: ../develop/plone-coredev/pt_BR/plips.rst:50
msgid "Framework Team reviews plip and givea feedback"
msgstr ""

# 4603bd1514de42f1b83cc776c5fca683
#: ../develop/plone-coredev/pt_BR/plips.rst:51
msgid ""
"Developer addresses concerns in feedback and resubmits if necessary. This "
"may go back and forth a few times until both the FWT and developer are happy"
" with the result."
msgstr ""

# 42ebade09d4b47b3b4965e1f449357a7
#: ../develop/plone-coredev/pt_BR/plips.rst:53
msgid "After all other PLIPS are merged, a release is cut. Standy for bugs!"
msgstr ""

# 371d64314ae44faab8eeec23cb93c36d
#: ../develop/plone-coredev/pt_BR/plips.rst:58
msgid ""
"Whether you want to update the default theme or rip out a piece of "
"architecture, everyone should go through the PLIP process. If you need help "
"at any point in this process, please contact a member of the framework team "
"personally or ask for help on the FWT mailing list XXX: link here."
msgstr ""

# 0864c7986a3e4c6083e057d9a0114c06
#: ../develop/plone-coredev/pt_BR/plips.rst:62
msgid ""
"When writing a PLIP, be as specific and to-the-point as you can. Remember "
"your audience - to get support for your proposal, people will have to be "
"able to read it! A good PLIP is sufficiently clear for a knowlegable Plone "
"user to be able to understand the proposed changes, and sufficiently "
"detailed for the release manager and other developers to understand the full"
" impact the proposal would have on the codebase. You don't have to list "
"every line of code that needs to be changed, but you should also give an "
"indication that you have some idea that how the change can be feasibly "
"implemented."
msgstr ""

# 9e588a26dd1543c28f1e59650f5e6d65
#: ../develop/plone-coredev/pt_BR/plips.rst:66
msgid ""
"After your plip is written, solicit feedback on your idea on the plone-"
"developers mailing list. In this vetting process, you want to make sure that"
" the change won’t adversely affect other people on accident. Others may be "
"able to point out risks or even offer up better or existing solutions."
msgstr ""

# 6761ab820c784cc6bece31315132f2a7
#: ../develop/plone-coredev/pt_BR/plips.rst:68
msgid ""
"When you are happy with the feedback, submit a PLIP. XXX: Link here. Please "
"use the template provided (XXX: put the template here? Can we just have a "
"custom ticket type?). Please note a few things. It is very rare that the "
"“Risks” section will be empty or none. If you find this is the case and your"
" PLIP is anything more than trivial, maybe some more vetting should be done."
msgstr ""

# 8965b35989d84efa87823c43b93fab6d
#: ../develop/plone-coredev/pt_BR/plips.rst:76
msgid ""
"After you submit your PLIP, the Framework Team will meet within a couple "
"weeks and let you know if the PLIP is accepted. If the PLIP is not accepted,"
" please don't be sad! We encourage most PLIPs to go through the add on "
"process at first if at all possible to make sure the majority of the "
"comunity uses it."
msgstr ""

# 7fd7ab9afb3149ec8b5c1129a63b97c5
#: ../develop/plone-coredev/pt_BR/plips.rst:85
msgid ""
"These are the criterias by which the framework team will review your review "
"bundle:"
msgstr ""

# 65c15be1b8e5448a83a4cf7021bfa210
#: ../develop/plone-coredev/pt_BR/plips.rst:99
msgid "Be tested (XXX: link here?)"
msgstr ""

# 5ecd1662e02f4ce5934d0fd8cd3ccfeb
#: ../develop/plone-coredev/pt_BR/plips.rst:105
msgid ""
"Create a buildout configuration file for your plip in the 'plips' folder. "
"Give it a descriptive name, starting with the plip number; 'plip-1234"
"-widget-frobbing.cfg' for example. This file will define the branches/trunks"
" you're working with in your PLIP. It should look something like this:"
msgstr ""

# beda3eba9df5482786f6fd4a2162efb8
#: ../develop/plone-coredev/pt_BR/plips.rst:111
msgid "In file plips/plip-1234-widget-frobbing.cfg...::"
msgstr ""

# cf71f3028f94493aa4ab6a680afe58d1
#: ../develop/plone-coredev/pt_BR/plips.rst:142
msgid ""
"This file should be called plip_<number>_notes.txt. This should include (but"
" is not limited to):"
msgstr ""

# a4ef482bba474ecdbdc97249ba5c902b
#: ../develop/plone-coredev/pt_BR/plips.rst:139
msgid "URLs pointing to all documentation created/updated"
msgstr ""

# 227785d37cb64ab585b2e782754c9fff
#: ../develop/plone-coredev/pt_BR/plips.rst:144
msgid ""
"Once you have finished, please update your PLIP ticket to indicate that it "
"is ready for review. The Framework Team will assign 2-3 people to review "
"your PLIP. They will follow the guildelines listed at :doc:`plipreview`."
msgstr ""

# c0d02659612446d5b955b231bc88bb3f
#: ../develop/plone-coredev/pt_BR/plips.rst:146
msgid ""
"After the PLIP has been accepted by the framework team and the release "
"manager, you will be asked to merge your work into the main development "
"line. Merging the PLIP in is not the hardest part, but you must think about "
"it when you develop. You'll have to interact with a large number of people "
"to get it all set up. The merge may cause problems with other PLIP's coming "
"in. During the merge phase you must be prepared to help out with all the "
"features and bugs that arise."
msgstr ""

# e0b631784e244228972316e2fcd47e43
# edd64beea945419ea299888efe5946ba
#: ../develop/plone-coredev/pt_BR/style.rst:2
#: ../develop/plone-coredev/style.rst:2
msgid "Style Guide"
msgstr ""

# 7ba229f36cf14da385397037c907b96d
# d71f4ec80b9047fc8073e9c304c64919
#: ../develop/plone-coredev/pt_BR/style.rst:4
#: ../develop/plone-coredev/style.rst:4
msgid ""
"Python, like any programming language, can be written in a number of styles."
" We're the first to admit that Zope and Plone are not the finest examples of"
" stylistic integrity, but that doesn't stop us from trying!"
msgstr ""

# 93afc7186c094da9af3ecd995a772ddf
# fdcf5d5355e743cb9f74e1935cbb1d0b
#: ../develop/plone-coredev/pt_BR/style.rst:6
#: ../develop/plone-coredev/style.rst:6
msgid ""
"If you are not familiar with `PEP 8 "
"<http://www.python.org/dev/peps/pep-0008>`_ - the python style guide, please"
" take a moment to read and get up to date. We don't require it but we as a "
"community really, really appreciate it."
msgstr ""

# 9be7e2e824b24644a9ef1d1d9cbbf762
# 4fd64307f8084d0498838c820d85e1fd
#: ../develop/plone-coredev/pt_BR/style.rst:9
#: ../develop/plone-coredev/style.rst:9
msgid "Naming Conventions"
msgstr ""

# 5a1bdf78f4bf439a972f986824c6656d
# 1a13db86b89543ccba7ac4ef8907c6cc
#: ../develop/plone-coredev/pt_BR/style.rst:10
#: ../develop/plone-coredev/style.rst:10
msgid ""
"Above all else, be consistent with any code your are modifying! Historically"
" the code is all camel case, but many new libraries are in the PEP8 "
"convention. The mailing list is exploding with debate over what is better so"
" we'll leave the excersize of deciding what to do with the user."
msgstr ""

# 25ab30a8b2da4891bba277bf4c48aac5
# 62e24828c7a24d9fb7a60ac4d3e6e5ce
#: ../develop/plone-coredev/pt_BR/style.rst:13
#: ../develop/plone-coredev/style.rst:13
msgid "File Conventions"
msgstr ""

# 2afccfdf293945569f984f7b524b93f5
# 3b78dc587b9a4d48969dd4fa33b503b6
#: ../develop/plone-coredev/pt_BR/style.rst:14
#: ../develop/plone-coredev/style.rst:14
msgid ""
"In Zope 2, file names used to be MixedCase. In Python, and thus in Plone "
"going forward, we prefer all-lowercase filenames. This has the advantage "
"that you can instantly see if you refer to a module / file or a class::"
msgstr ""

# d3d87a3c6ff3419ab58e2bbc2f9a1827
# b0af1dc3aeca49529bbde86b7be45820
# f14a3bb5212c4865834cf1b574abf683
# 8eca5c63c9a846589620c6a4b836f910
#: ../develop/plone-coredev/pt_BR/style.rst:18
#: ../develop/plone-coredev/pt_BR/style.rst:26
#: ../develop/plone-coredev/style.rst:18 ../develop/plone-coredev/style.rst:26
msgid "compare that to::"
msgstr ""

# 40540e6df7ce45a2845df4adb6c61d15
# 4b80eeb1d3d347fb9198967250189eb1
#: ../develop/plone-coredev/pt_BR/style.rst:22
#: ../develop/plone-coredev/style.rst:22
msgid ""
"Filenames should be short and descriptive. Think about how an import would "
"read::"
msgstr ""

# 70563bbdf3fe43de98a75c321f041240
# 34bfaaac38344332bd95591a28fe26f6
#: ../develop/plone-coredev/pt_BR/style.rst:30
#: ../develop/plone-coredev/style.rst:30
msgid ""
"The former is obviously much easier to read, less redundant and generally "
"more aesthetically pleasing."
msgstr ""

# 90bdb97db2e9486ca7887a4cd7a35a00
#: ../develop/plone-coredev/pt_BR/style.rst:32
msgid ""
"**Note** This example is just about as terrible as they come. We need a "
"better one."
msgstr ""

# f20c11f15537418e9c16a9e7ec9bb91a
# d1005aa021af422e967c8629b44d3810
#: ../develop/plone-coredev/pt_BR/style.rst:35
#: ../develop/plone-coredev/style.rst:36
msgid "Concrete Rules"
msgstr ""

# f9a70bb388794eb6b624ea529330f6ee
#: ../develop/plone-coredev/pt_BR/style.rst:36
msgid ""
"Do not use tabs in Python code! Use spaces as indenting, 4 spaces for each "
"level. We don't \"require\" `PEP8 "
"<http://www.python.org/dev/peps/pep-0008/>`_, but most people use it and "
"it's good for you."
msgstr ""

# 68266707abe64bc7b50690f59efd10bc
# 960611cf9384485b91c9e5534001e781
#: ../develop/plone-coredev/pt_BR/style.rst:37
#: ../develop/plone-coredev/style.rst:38
msgid "Indent properly, even in HTML."
msgstr ""

# 51a08704bcd649d7a0fdba88d3b85a14
#: ../develop/plone-coredev/pt_BR/style.rst:38
msgid ""
"Never use a bare except. Anything like 'except: pass' will likely be "
"reverted instantly"
msgstr ""

# 84c7673062534142a7dbae223c19f249
#: ../develop/plone-coredev/pt_BR/style.rst:39
msgid "Avoid tal:on-error, since this swallows exceptions"
msgstr ""

# 82e7f721f1024587a351b7fd838f1f22
#: ../develop/plone-coredev/pt_BR/style.rst:40
msgid ""
"Don't use hasattr() - this swallows exceptions, use getattr(foo, 'bar', "
"None) instead. The problem with swallowed exceptions is not just poor error "
"reporting. This can also mask ConflictErrors, which indicate that something "
"has gone wrong at the ZODB level!"
msgstr ""

# 26e504a5a32f42419845a4a11a604ac6
# 62a0e5c7a1e64a398ab2ba54dc1bb713
#: ../develop/plone-coredev/pt_BR/style.rst:41
#: ../develop/plone-coredev/style.rst:42
msgid "Never, ever put any HTML in Python code and return it as a string"
msgstr ""

# eccebe483d3147fda10507f9552447e0
#: ../develop/plone-coredev/pt_BR/style.rst:42
msgid ""
"Do not acquire anything unless absolutely necessary, especially tools. For "
"example, instead of using 'context.plone_utils', use::"
msgstr ""

# 754f72b4ef244ba79391483129b00cd8
#: ../develop/plone-coredev/pt_BR/style.rst:47
msgid "Do not put too much logic in ZPT (use Views instead!)"
msgstr ""

# 941293d621d34ba2b36bd06058b4e25f
#: ../develop/plone-coredev/pt_BR/style.rst:48
msgid "Remember to add i18n tags in ZPTs and Python code"
msgstr ""

# bfde79dd7507498eaf57ca2435ac7118
#: ../develop/plone-coredev/pt_BR/updateme.rst:2
msgid "Como atualizar estes documentos"
msgstr ""

# 3cfccde52f0c45dcaf643ff04f26db1d
#: ../develop/plone-coredev/pt_BR/updateme.rst:4
msgid ""
"Estes documentos são armazenados com o buildout coredev no github em /docs. "
"Para atualizá-los, por favor, faça o checkout do buildout coredev e "
"atualize. Para verificar as alterações localmente, execute novamente o "
"buildout e depois::"
msgstr ""

# a3215c82402e4bee8d9c00c4df1717b5
#: ../develop/plone-coredev/pt_BR/updateme.rst:9
msgid ""
"O Sphinx irá gerar um diretório com arquivos HTML, que você pode conferir "
"com o seu navegador. Por favor, verifique todos os avisos e erros antes de "
"comitar para garantir que os documentos continuam válidos."
msgstr ""

# 0f8ca9c5a9844851bc25945e4edf8561
#: ../develop/plone-coredev/style.rst:33
msgid ""
"This example is just about as terrible as they come. We need a better one."
msgstr ""

# aad65dc8cd3e4942b7bd58e93191201b
#: ../develop/plone-coredev/style.rst:37
msgid ""
"Do not use tabs in Python code! Use spaces as indenting, 4 spaces for each "
"level. We don't **\"require\"** `PEP8 "
"<http://www.python.org/dev/peps/pep-0008/>`_, but most people use it and "
"it's good for you."
msgstr ""

# 26e541c4024649c9a0072350af977495
#: ../develop/plone-coredev/style.rst:39
msgid ""
"Never use a bare except. Anything like ``except: pass`` will likely be "
"reverted instantly"
msgstr ""

# ba369e7b494d47feac2bc27467f22810
#: ../develop/plone-coredev/style.rst:40
msgid "Avoid ``tal:on-error``, since this swallows exceptions"
msgstr ""

# d0d5cbcec5404d899a36555b2302d2c4
#: ../develop/plone-coredev/style.rst:41
msgid ""
"Don't use ``hasattr()`` - this swallows exceptions, use ``getattr(foo, "
"'bar', None)`` instead. The problem with swallowed exceptions is not just "
"poor error reporting. This can also mask ``ConflictErrors``, which indicate "
"that something has gone wrong at the :doc:`ZODB level "
"</manage/troubleshooting/transactions>`!"
msgstr ""

# a3a9630b4c5f415090abe1af79d2a68b
#: ../develop/plone-coredev/style.rst:43
msgid ""
"Do not acquire anything unless absolutely necessary, especially tools. For "
"example, instead of using ``context.plone_utils``, use::"
msgstr ""

# c7bfd2a0046447b498c6408b8e1c201f
#: ../develop/plone-coredev/style.rst:48
msgid ""
"Do not put too much logic in ZPT (use :doc:`Views "
"</develop/plone/views/index>` instead!)"
msgstr ""

# 28cdc01549ca49ec95804f8638352b78
#: ../develop/plone-coredev/style.rst:49
msgid ""
"Remember to add :doc:`i18n </develop/plone/i18n/index>` tags in ZPTs and "
"Python code"
msgstr ""

# 4209b7470e644efa816973975c68bd80
#: ../develop/plone-coredev/updateme.rst:2
msgid "How to Update these Docs"
msgstr ""

# 545b927142844cedaefee845e741361c
#: ../develop/plone-coredev/updateme.rst:4
msgid ""
"These documents are currently stored with the coredev buildout in github in "
":file:`/docs`. To update them, please checkout the coredev buildout and "
"update there. Make the changes on the latest version branch (as of this "
"writing ``4.4``)::"
msgstr ""

# 8b63f5028f8648b2b12607355629ec1b
#: ../develop/plone-coredev/updateme.rst:10
msgid "To test your changes locally, re-run buildout and then::"
msgstr ""

# 0a768a0ba3334d668cbc06328246716a
#: ../develop/plone-coredev/updateme.rst:14
msgid ""
"Sphinx will poop out a directory that you can put in your browser to "
"validate. For example: "
"``file:///home/user/buildout.coredev/docs/build/index.html``"
msgstr ""

# 790ad9f9a7034348b791a2e74a75efd8
#: ../develop/plone-coredev/updateme.rst:16
msgid ""
"Please make sure to validate all warnings and errors before committing to "
"make sure the documents remain valid. Once everything is ready to go, commit"
" and push changes."
msgstr ""

# 8f7caaaae0714ecdbfcd3d2d221dfbb9
#: ../develop/plone-coredev/updateme.rst:18
msgid ""
"Cherry pick commits on the latest branch to the currently released branch "
"(as of this writing ``4.3``) if these changes apply to that version (you can"
" get the SHA hash from :command:`git log`)::"
msgstr ""

# 6c7c12fdac2d4560b40416320e68caba
#: ../develop/plone-coredev/updateme.rst:23
msgid ""
"There may be conflicts; if so, resolve them and then follow the directions "
"git gives you to complete the :command:`git cherry-pick`."
msgstr ""

# e7080323e51e4dc99d12016a9724f805
#: ../develop/plone/content/archetypes/archetypes_references.rst:3
msgid "Archetypes ReferenceFields"
msgstr ""

# 2fa84979ce8440578950ab9c20b065ea
#: ../develop/plone/content/archetypes/archetypes_references.rst:7
msgid ""
"Using ReferenceField to have references to other Archetypes content items in"
" Plone."
msgstr ""

# 65463688f20548948237c5d50c50c9f0
#: ../develop/plone/content/archetypes/archetypes_references.rst:15
msgid ""
"Archetypes comes with a kind of field called ReferenceField which is used to"
" store references to other Archetypes objects, or any object providing the "
"IReferenceable interface."
msgstr ""

# a30c00545aaf4ffb9d70a7dc57c12d81
#: ../develop/plone/content/archetypes/archetypes_references.rst:19
msgid ""
"References are maintained in the ``uid_catalog`` and ``reference_catalog`` "
"catalogs.  You can find both at the root of your Plone site. Check them to "
"see their indexes and metadata."
msgstr ""

# a5121514444048c9b3fed9de5d1f6b72
#: ../develop/plone/content/archetypes/archetypes_references.rst:23
msgid ""
"Although you could use the ZCatalog API to manage Archetypes references, "
"these catalogs are rarely used directly. A ``ReferenceField`` and its API is"
" used instead."
msgstr ""

# 6b82ebb6d7cf40a8b38bcc2e5181d4c7
#: ../develop/plone/content/archetypes/archetypes_references.rst:27
msgid "Example declaration of a ``ReferenceField`` inside a schema::"
msgstr ""

# cc800ac06d054f7fa7e7663757f35b9f
#: ../develop/plone/content/archetypes/archetypes_references.rst:37
msgid ""
"Check the *Fields Reference* section in the *Archetypes Developer Manual* at"
" http://plone.org to learn about the ``ReferenceField`` available options."
msgstr ""

# 2063c64a068a49a8a43d9987d9604a20
#: ../develop/plone/content/archetypes/archetypes_references.rst:40
msgid ""
"Archetypes reference fields just store the UID (Universal Object Identifier)"
" of an object providing the ``IReferenceable`` interface. Continuing with "
"the example above, you will usually use the regular field API "
"(getters/setters)."
msgstr ""

# d8270a726e5e46069dad6b71d98e5cfe
#: ../develop/plone/content/archetypes/archetypes_references.rst:44
msgid "You can get the UID of a referenceable object easily::"
msgstr ""

# b813e7268824499b9ea91f077f0acd56
#: ../develop/plone/content/archetypes/archetypes_references.rst:48
msgid ""
"To set a reference, you can use the the setter method with either a list of "
"UIDs or one UID string, or one object or a list of objects (in the case the "
"``ReferenceField`` is multi-valued) to which you want to add a reference to."
" ``None`` and ``[]`` are equal."
msgstr ""

# 98a78a4c627e4f9ab474573f3e250411
#: ../develop/plone/content/archetypes/archetypes_references.rst:53
msgid ""
"In this example we set a reference from the ``myct1`` object to the "
"``areferenceableobject`` object::"
msgstr ""

# 5d6b42e3fc524a56a26e87c7376f61e4
#: ../develop/plone/content/archetypes/archetypes_references.rst:58
msgid ""
"To get the object(s) referenced, just use the getter. Note that what you get"
" is the objects themselves, not their \":doc:`brains "
"</develop/plone/searching_and_indexing/query>`\"::"
msgstr ""

# 55b6e7f8b2214821a0654bc22db12d00
# b695f2953fc247ddb41dca3a91630ec6
#: ../develop/plone/content/archetypes/archetypes_references.rst:64
#: ../develop/plone/sessions/cookies.rst:144
msgid ""
":doc:`More info in Varnish section of this manual "
"</manage/deploying/caching/varnish>`."
msgstr ""

# a76686d59f9f444d8a8a1b9a74d14012
#: ../develop/plone/content/archetypes/archetypes_references.rst:71
msgid ""
"Code to exercise the ``IReferenceable`` API, including relationships and "
"back-references."
msgstr ""

# d76889448f7d42129e64ee66b401f193
#: ../develop/plone/content/archetypes/converting-content-types.rst:3
msgid "Converting one Content Type into another"
msgstr ""

# 238e5658ff8e48589906f254266679db
#: ../develop/plone/content/archetypes/converting-content-types.rst:7
msgid ""
"It is possible to 'convert' one content type into another by extracting "
"content from the source content type and adding it to the new content type."
msgstr ""

# 4ef29665b9104be18900a73dd7bc26cb
# b23fe2b84ac0457e89ddc8d5dd6db960
# 93543afee06f475cb9a209088ece9188
# f3fd0388478349a0a3df24777415d90f
# 24afb0fe1572440fbf619b865b784afb
# 5fe796fb5425462a8f55098a2d7aefb6
# bf81452130aa455e85403ec033d4a6a1
#: ../develop/plone/content/archetypes/converting-content-types.rst:0
#: ../develop/plone/content/archetypes/files.rst:0
#: ../develop/plone/content/archetypes/templates.rst:0
#: ../develop/plone/content/timestamps.rst:0
#: ../develop/plone/functionality/rss.rst:0
#: ../develop/plone/security/permission_lists.rst:0
#: ../develop/plone/security/sandboxing.rst:0
msgid "local"
msgstr ""

# 5035b92d3f324e85ba615328b2a1c822
#: ../develop/plone/content/archetypes/converting-content-types.rst:14
msgid "Converting Pages into News Items"
msgstr ""

# a8d2363a3ff8427aabe8d2ca14c43253
#: ../develop/plone/content/archetypes/converting-content-types.rst:16
msgid ""
"In this example we take a folder of *Pages* (meta type: ``Document``) and "
"create *News Items* from them::"
msgstr ""

# 5122ebc9d08f41c38dd93806ca47c631
#: ../develop/plone/content/archetypes/converting-content-types.rst:38
msgid "content type \"Service\"?"
msgstr ""

# 4f807866d1d3436282e86be0ad7767a9
#: ../develop/plone/content/archetypes/converting-content-types.rst:41
msgid "Converting Images into News Items"
msgstr ""

# 4b30b75b105648f1ac38179b424e1eb3
#: ../develop/plone/content/archetypes/converting-content-types.rst:43
msgid ""
"This is similar to the example of converting pages into news items. Notice "
"that when we pass the image data to ``invokeFactory`` we need to make it "
"into a string::"
msgstr ""

# ccba559fa23c43f99923046f995206ee
#: ../develop/plone/content/archetypes/datagridfield.rst:3
msgid "DataGridField"
msgstr ""

# 8fbb24c13b024d94aaf6f247a1da0a9e
#: ../develop/plone/content/archetypes/datagridfield.rst:5
msgid ""
"This document contains miscellaneous notes about DataGridField_ field and "
"DataGridWiget widget."
msgstr ""

# 9141eca67eb4443c9b715d46b6af4181
#: ../develop/plone/content/archetypes/datagridfield.rst:7
msgid ""
"DataGridField is an Archetypes field and widget to add tabular structures to"
" your custom content types."
msgstr ""

# 62efee4a7a9d440cbec3211028a97bea
# f5878c009a2c4d88bbdbd9553d9bbfa3
#: ../develop/plone/content/archetypes/datagridfield.rst:10
#: ../develop/plone/members/membrane.rst:31
msgid "Basics"
msgstr ""

# 907dbf65a97b489f868b92e99b269b2d
#: ../develop/plone/content/archetypes/datagridfield.rst:12
msgid "DataGridField acts as any other Archetypes based field."
msgstr ""

# 44742903c5df49c0a952917bfc7729a0
#: ../develop/plone/content/archetypes/datagridfield.rst:14
msgid "To read DGF content use *accessor* function::"
msgstr ""

# d6fd3720c14d4d95af99b0b5076125fb
#: ../develop/plone/content/archetypes/datagridfield.rst:18
msgid ""
"Data is a Python list of dictionaries. Each dictionary presents one row. "
"Dictionary keys are column ids and dictionary values are cell values."
msgstr ""

# 987a73a11c9d492684c0b3628ce96d07
#: ../develop/plone/content/archetypes/datagridfield.rst:21
msgid "To set DGF content you must replace all rows at once::"
msgstr ""

# 67be3938eefc4bb1bbc37b11605974f0
#: ../develop/plone/content/archetypes/datagridfield.rst:30
msgid ""
"To append a row to DFG, you need to read it, manipulate the list, and then "
"reset the value::"
msgstr ""

# c756fc9660fc4453b8cb7637f14c2c5a
#: ../develop/plone/content/archetypes/datagridfield.rst:37
msgid "Modify cell value in DGF::"
msgstr ""

# fc0bfb2ec0c74052ad0bc23807f0fdd1
#: ../develop/plone/content/archetypes/datagridfield.rst:44
msgid "CheckboxColumn"
msgstr ""

# c7f7656d781e4a30bd2ef090f992513f
#: ../develop/plone/content/archetypes/datagridfield.rst:46
msgid "Checkbox column values are handled specially::"
msgstr ""

# 136be35cdc0c460398820739080eb0e7
# 46b7dd59bd17494eab3cd4a6294e1213
# 38f29c6879d44b53892240237cf0e3bb
# 56db6a2e3a9f42f190367492c983e899
#: ../develop/plone/content/archetypes/datagridfield.rst:67
#: ../develop/plone/content/dynamic_views.rst:331
#: ../develop/plone/misc/annotations.rst:324
#: ../develop/plone/serving/traversing.rst:640
msgid "Other resources"
msgstr ""

# db1ddc85b4fb4b29afaa546a55add099
#: ../develop/plone/content/archetypes/datagridfield.rst:69
msgid ""
"Please enable DEBUG in "
"https://github.com/collective/Products.DataGridField/blob/master/Products/DataGridField/config.py"
" on your local computer. After this setting has been changed, you can run "
"unit tests and install example types on your computer."
msgstr ""

# 24ee422093a941228e82dcd2e4d29aba
#: ../develop/plone/content/archetypes/datagridfield.rst:73
msgid ""
"Refer `unit tests "
"<https://github.com/collective/Products.DataGridField/blob/master/Products/DataGridField/tests/test_columns.py>`_"
" for more code examples."
msgstr ""

# 47bd80ba35a641e48d0e7820c1296067
#: ../develop/plone/content/archetypes/datagridfield.rst:75
msgid ""
"Refer `Archetypes manual <http://plone.org/documentation/manual/archetypes-"
"developer-manual>`_ for basics Archetypes developer information."
msgstr ""

# aab5013da57040369b9e7118d5801c63
#: ../develop/plone/content/archetypes/editing.rst:3
msgid "Customizing editing interface"
msgstr ""

# fefc0874909f4e948d9c872ca395616b
#: ../develop/plone/content/archetypes/editing.rst:6
msgid "Remove metadata tabs"
msgstr ""

# aae943c7cd584cfda48475705c4d63c5
#: ../develop/plone/content/archetypes/editing.rst:8
msgid ""
"Remove *Manage properties* permissions from the users who should not see "
"metadata fields. Do this for all fields under the schema."
msgstr ""

# 3e12f93f7bf64496ab0649cba9875fe6
#: ../develop/plone/content/archetypes/fields.rst:3
msgid "Fields and widgets"
msgstr ""

# 725698f60c7d45fe81264debe7a6857a
#: ../develop/plone/content/archetypes/fields.rst:7
msgid ""
"How to read, add, remove and create fields and widgets available for "
"Archetypes content types."
msgstr ""

# 0f6c4212bb92429f91e634099513f995
#: ../develop/plone/content/archetypes/fields.rst:14
msgid ""
"This document contains instructions how to manipulate Archetypes schema "
"(data model for content items) and fields and widgets it consists of."
msgstr ""

# 4bf4b0c8f5894bcc982a213da8ef254c
#: ../develop/plone/content/archetypes/fields.rst:17
msgid ""
"*Schema* is list of fields associated with a content type. Each field can "
"belong to one *schemata* which corresponds to one Edit tab sub-tab in Plone "
"user interface."
msgstr ""

# 79c27b3734b048fc9e15b1f3b0994755
#: ../develop/plone/content/archetypes/fields.rst:21
msgid "Field schemata is chosen by setting field's ``schemata`` attribute."
msgstr ""

# 2f2c312b07ae46b486a7edfb98c03aee
#: ../develop/plone/content/archetypes/fields.rst:24
msgid "Getting hold of schema objects"
msgstr ""

# 2d136bf29ff84b5e8d755f4a767dd9f7
#: ../develop/plone/content/archetypes/fields.rst:26
msgid ""
"Archetypes based data model is defined as Schema object, which is a list of "
"fields."
msgstr ""

# a9a4fd1628244679a231365e138ca0e1
#: ../develop/plone/content/archetypes/fields.rst:29
msgid "During application start-up"
msgstr ""

# 39e93217e39849a6a1fc1ddea804bdf1
#: ../develop/plone/content/archetypes/fields.rst:31
msgid ""
"When your class is being constructed you can refer the schema simply in "
"Python::"
msgstr ""

# 7151b5e097d1432f97447baff6308f05
#: ../develop/plone/content/archetypes/fields.rst:44
msgid "During HTTP request processing"
msgstr ""

# 32dbc475c29f4aeea288fb109369ba1e
#: ../develop/plone/content/archetypes/fields.rst:46
msgid "You can access context schema object by using Schema() accessor."
msgstr ""

# 2af4b96dae734dc3a26d54cec517cdfa
#: ../develop/plone/content/archetypes/fields.rst:50
msgid ""
"Run-time schema patching is possible, so Schema() output might differ what "
"you put in to your content type during the construction."
msgstr ""

# c9ae8a76f51c4de2ab8446821ecca21a
# e2c4ad73d2e9499aa1aaebc99a0c7176
#: ../develop/plone/content/archetypes/fields.rst:59
#: ../develop/plone/forms/schemas.rst:188
msgid "Schema introspection"
msgstr ""

# ab48f36a6ef94625ba72cf919b8f902f
#: ../develop/plone/content/archetypes/fields.rst:61
msgid "How to know what fields are available on content items."
msgstr ""

# f1b4b937bbf24f07af118fceffed443d
#: ../develop/plone/content/archetypes/fields.rst:64
msgid "Out of box schema source code"
msgstr ""

# 7a145fbfb02b4d99a27de0054a5a89e0
#: ../develop/plone/content/archetypes/fields.rst:66
msgid "The default Plone schemas are defined"
msgstr ""

# e99c5dda4e7f461f89c99d8295984cc6
#: ../develop/plone/content/archetypes/fields.rst:68
msgid "Id and title fields:"
msgstr ""

# 217912b98b844e9ba39ec366bb9db725
#: ../develop/plone/content/archetypes/fields.rst:70
msgid ""
"https://github.com/plone/Products.Archetypes/blob/master/Products/Archetypes/BaseObject.py"
msgstr ""

# 3a3381f6cd7f4530839895dce628dff5
#: ../develop/plone/content/archetypes/fields.rst:72
msgid "Category and owners schemata: Dublin core metadata"
msgstr ""

# 91e15916d166457cbd1be3f31813c809
#: ../develop/plone/content/archetypes/fields.rst:74
msgid ""
"https://github.com/plone/Products.Archetypes/blob/master/Products/Archetypes/ExtensibleMetadata.py"
msgstr ""

# b898953f2cc74f7aaa1f753ce4cd9e85
#: ../develop/plone/content/archetypes/fields.rst:76
msgid ""
"Settings schemata: Exclude from navigation, related items and next/previous "
"navigation"
msgstr ""

# e53d0822ed4542e1b39c2501434233be
#: ../develop/plone/content/archetypes/fields.rst:78
msgid ""
"https://github.com/plone/Products.ATContentTypes/blob/master/Products/ATContentTypes/content/schemata.py"
msgstr ""

# 4e6529cda8b2491288378ba44647b968
#: ../develop/plone/content/archetypes/fields.rst:80
msgid "Document content"
msgstr ""

# 321f1105cec9455a8c3cb0d04e59e4e8
#: ../develop/plone/content/archetypes/fields.rst:82
msgid ""
"https://github.com/plone/Products.ATContentTypes/blob/master/Products/ATContentTypes/content/document.py"
msgstr ""

# 31928406659342c183c404d1b0c23a19
#: ../develop/plone/content/archetypes/fields.rst:84
msgid "Image content"
msgstr ""

# 9cc0ce8b42e94ee2b8bd1f52b9a35833
# 0fb150cf80f84cf1b4df85bfe172870e
# 8148b0a1490248aa99cb0293f80b88d1
# c875bb06b7e94b0ba35550589673c7d7
#: ../develop/plone/content/archetypes/fields.rst:86
#: ../develop/plone/images/content.rst:72
#: ../develop/plone/images/content.rst:97
#: ../develop/plone/images/templates.rst:146
msgid ""
"https://github.com/plone/Products.ATContentTypes/blob/master/Products/ATContentTypes/content/image.py"
msgstr ""

# dc6e6f092b3e41be882009962c4028ca
#: ../develop/plone/content/archetypes/fields.rst:88
msgid "News content"
msgstr ""

# 18ce60dfe4c440b4a3ab5c2dd7b22298
#: ../develop/plone/content/archetypes/fields.rst:90
msgid ""
"https://github.com/plone/Products.ATContentTypes/blob/master/Products/ATContentTypes/content/newsitem.py"
msgstr ""

# 78448e2f34d9405fa3d8757061599980
#: ../develop/plone/content/archetypes/fields.rst:93
msgid "Run-time introspection"
msgstr ""

# fe1ebb324f2d41b3b02ce9fdc717f8c5
#: ../develop/plone/content/archetypes/fields.rst:95
msgid ""
"You can get hold of content item schema and its fields as in the example "
"below."
msgstr ""

# 0ba77d1bda374914ac6a2a2b58493a1f
#: ../develop/plone/content/archetypes/fields.rst:97
msgid "You can do this either in"
msgstr ""

# 5377024467b44afda2ffdc480f3c7d42
#: ../develop/plone/content/archetypes/fields.rst:99
msgid ""
":doc:`Your own BrowserView Python code </develop/plone/views/browserviews>`"
msgstr ""

# 8e24c12c01b64f32a09cdc7447cb74ad
#: ../develop/plone/content/archetypes/fields.rst:101
msgid ""
":doc:`pdb breakpoint "
"</manage/deploying/testing_tuning/testing_and_debugging/pdb>`"
msgstr ""

# 1ae664415f154342825f79b9c0c79dfe
#: ../develop/plone/content/archetypes/fields.rst:103
msgid ""
":doc:`Command line Zope debug console </develop/plone/misc/commandline>`"
msgstr ""

# 8d9dba66de9e4a9f9a3c30ef4dff1632
#: ../develop/plone/content/archetypes/fields.rst:110
msgid "Field can be also accessed by name::"
msgstr ""

# 2ca603b8536f43ce91027ac09a8813d7
# a4001bc7a1e144829c60e5f8b77ee920
# 292d635f767446f7abda344ac44a4294
# 2131e9768def4da284230749cda91e32
# c7f3fd56452d4115907a425336d3ffa6
# 1b436f859c4b4696987cda1b7f483f28
#: ../develop/plone/content/archetypes/fields.rst:114
#: ../develop/plone/content/importexport.rst:226
#: ../develop/plone/forms/z3c.form.rst:550 ../develop/plone/misc/seo.rst:35
#: ../develop/plone/serving/http_request_and_response.rst:397
#: ../develop/plone/views/viewlets.rst:320
msgid "See"
msgstr ""

# 4a8da0b6be9546baa45911fd2a8f38ba
#: ../develop/plone/content/archetypes/fields.rst:116
msgid ""
"https://github.com/plone/Products.Archetypes/blob/master/Products/Archetypes/Schema/__init__.py"
msgstr ""

# 4b1532d6da9647048f30fa3a27c08e10
#: ../develop/plone/content/archetypes/fields.rst:119
msgid "Field name"
msgstr ""

# 3a7fddd58e4e40b7b08a6e7880bc264a
#: ../develop/plone/content/archetypes/fields.rst:121
msgid "Field exposes its name through getName() attribute::"
msgstr ""

# 52e79d40c7ac4111b79abcf65dec44f6
#: ../develop/plone/content/archetypes/fields.rst:127
msgid "Accessing Archetypes field value"
msgstr ""

# a59ec42e888b42218ff017052ae4234f
#: ../develop/plone/content/archetypes/fields.rst:130
msgid "Accessor method"
msgstr ""

# 4714057b67ca4889b31abc5d3bdd119a
#: ../develop/plone/content/archetypes/fields.rst:132
msgid "Each field has accessor method. Accessor method is"
msgstr ""

# bd4685f63d444a08b48f27c863cba168
#: ../develop/plone/content/archetypes/fields.rst:134
msgid "In your content type class"
msgstr ""

# 670bbbae91ff48ba9ae531abcb647a9f
#: ../develop/plone/content/archetypes/fields.rst:136
msgid "Automatically generated if you don't give it manually"
msgstr ""

# ade407505fd542b4b932511220391f2e
#: ../develop/plone/content/archetypes/fields.rst:138
msgid ""
"Has name ``get`` + schema field name with first letter uppercase. E.g. "
"``yourfield`` has accessor method ``context.getYourfield()`` There are a few"
" exceptions to this rule, for fields that correspond to Dublin Core "
"metadata. To conform to the Dublin Core specification, the accessor method "
"for the ``title`` field is ``Title()`` and ``Description()`` for the "
"``description`` field."
msgstr ""

# 194b60bf57b648cf827d83815ac5ff4c
#: ../develop/plone/content/archetypes/fields.rst:146
msgid "Raw access"
msgstr ""

# 158e6e4c49744e74ba3c10bd95794b39
#: ../develop/plone/content/archetypes/fields.rst:148
msgid "Archetypes has two kinds of access methods:"
msgstr ""

# 911afd5799c849a8a65c0b07e9d13a9e
#: ../develop/plone/content/archetypes/fields.rst:150
msgid "normal, ``getSomething()``, which filters output;"
msgstr ""

# f6494acfbf1343fba551f6cf292b9b44
#: ../develop/plone/content/archetypes/fields.rst:152
msgid ""
"raw, the so-called *edit* accessor, ``getRawSomething()`` which does not "
"filter output."
msgstr ""

# e5e87ce0aa0a4271b47bf112c6b4c886
#: ../develop/plone/content/archetypes/fields.rst:155
msgid ""
"If you use direct attribute access, i.e. ``obj.something`` you can get a "
"`BaseUnit "
"<https://github.com/plone/Products.Archetypes/blob/master/Products/Archetypes/BaseUnit.py>`_"
" object. ``BaseUnit`` is an encapsulation of raw data for long text or file."
" It contains information about mimetype, filename, encoding. To get the raw "
"value of a ``BaseUnit`` object you can use the ``getRaw`` method, or more "
"simply ``str(baseunit)`` (but take care that you don't mess up the "
"encoding)."
msgstr ""

# 11ec8a6841fd4a7286cc28ba28fa4c53
#: ../develop/plone/content/archetypes/fields.rst:164
msgid "Indirect access"
msgstr ""

# 5f135e5ffd324a6e9e0ff11ceae3c29f
#: ../develop/plone/content/archetypes/fields.rst:166
msgid ""
"You can use field.get(context) to read values of fields indirectly, without "
"knowing the accessor method."
msgstr ""

# f8a6f058deaf4c23a46268d881ba1307
#: ../develop/plone/content/archetypes/fields.rst:168
msgid ""
"This example shows how to read and duplicate all values of lc object to nc::"
msgstr ""

# 10583c78576444dfa2aad0924d9e298a
#: ../develop/plone/content/archetypes/fields.rst:193
msgid "Validating objects"
msgstr ""

# 22482ea5bf234b86846e0e13d4660083
#: ../develop/plone/content/archetypes/fields.rst:195
msgid "Example for *nc* AT object::"
msgstr ""

# 5638300debde496e886c68fda17d583d
#: ../develop/plone/content/archetypes/fields.rst:203
msgid "Checking permissions"
msgstr ""

# 4f55d91719c54837ad65d3c77ef854c1
#: ../develop/plone/content/archetypes/fields.rst:205
msgid ""
"field.writable() provides a short-cut whether the currently logged in user "
"can change the field value."
msgstr ""

# 4d3125f42ae74416879f4c67278d7ed7
#: ../develop/plone/content/archetypes/fields.rst:213
msgid ""
"There is also a verbose debugging version which will print the reason to log"
" if the writable condition is not effective::"
msgstr ""

# 83b59199c88945269649df7cc96a1d2c
#: ../develop/plone/content/archetypes/fields.rst:220
msgid "Modifying all fields in schema"
msgstr ""

# c5e761e279cc45c1982afce7ac8025b7
#: ../develop/plone/content/archetypes/fields.rst:222
msgid "You might want to modify all schema fields based on some criteria."
msgstr ""

# 5353e23c24db4c1d908c8807897783a9
#: ../develop/plone/content/archetypes/fields.rst:224
msgid "Example how to hide all metadata fields::"
msgstr ""

# 2b521b4463fc4eee941b8cb3725eb811
#: ../develop/plone/content/archetypes/fields.rst:229
msgid "Reordering fields"
msgstr ""

# e2fe8f7c43bd429181eabc7bf5b329e3
#: ../develop/plone/content/archetypes/fields.rst:231
msgid ""
"See moveField() in `Schema/__init__.py "
"<https://github.com/plone/Products.Archetypes/blob/master/Products/Archetypes/Schema/__init__.py>`_."
msgstr ""

# 4cdf417c4c124705911506bc763471f9
#: ../develop/plone/content/archetypes/fields.rst:268
msgid "Hiding widgets"
msgstr ""

# 76e7c2e747cd40c9af249e62b2637ba3
#: ../develop/plone/content/archetypes/fields.rst:270
msgid ""
"You should not remove core Plone fields (Title, Description) as they are "
"used by Plone internally e.g. in the navigation tree"
msgstr ""

# de6fc8e9439841739fd66c6495a5d2fa
#: ../develop/plone/content/archetypes/fields.rst:273
msgid ""
"But you can override their accessor functions ``Title()`` and "
"``Description()``"
msgstr ""

# c15a01077b0245ecb043d42126320ea8
#: ../develop/plone/content/archetypes/fields.rst:276
msgid "You can also hide the widgets"
msgstr ""

# 39d58edf390249239d0b72909930f8ee
#: ../develop/plone/content/archetypes/fields.rst:278
msgid ""
"The recommended approach is to hide the widgets, then update the field "
"contents when the relevant data is update. E.g. you can generate title value"
" from fields firstname and lastname."
msgstr ""

# 2eeb4c2559fe42d9ba72ff775025b7a6
#: ../develop/plone/content/archetypes/fields.rst:283
msgid ""
"Below is an example which uses custom JSON field as input, and then sets "
"title and description based on it::"
msgstr ""

# cf58c696fa8449989665d4558b9df9dc
#: ../develop/plone/content/archetypes/fields.rst:445
msgid "Rendering widget"
msgstr ""

# 26edd1fb0b3540319c2e00992764e9f5
#: ../develop/plone/content/archetypes/fields.rst:447
msgid ""
"Archetypes is hardwired to render widgets from viewless TAL page templates."
msgstr ""

# 421a9802b00f43108b802cf25d68e0f9
#: ../develop/plone/content/archetypes/fields.rst:449
msgid "Example how to render widget for field 'maintext'::"
msgstr ""

# 7c71163fc88a4a05967c7f93e18f14c4
#: ../develop/plone/content/archetypes/fields.rst:463
msgid "Creating your own Field"
msgstr ""

# 79377337fa1645adae2563d800b53304
#: ../develop/plone/content/archetypes/fields.rst:465
msgid "Here is an example how to create a custom field based on TextField."
msgstr ""

# 80aa04be8c2b4cb9ba5137a15837cf6c
#: ../develop/plone/content/archetypes/fields.rst:467
msgid "Example (mfabrik/rstpage/archetypes/fields.py)::"
msgstr ""

# 162e5ebfe11e471698a8cc9d796aaa6d
#: ../develop/plone/content/archetypes/fields.rst:514
msgid "Automatically generating description based on body text"
msgstr ""

# 211ee2a5507747d78276826d8e17032c
#: ../develop/plone/content/archetypes/fields.rst:516
msgid ""
"Below is a sample through-the-web Python Script which you can drop to any "
"Plone through Zope Management Interface."
msgstr ""

# a9040845f6ad4c5bbc029da2844869bb
#: ../develop/plone/content/archetypes/fields.rst:519
msgid ""
"Use case: People are lazy to write descriptions (as in Dublin Core "
"metadata). You can generate some kind of description by taking the few first"
" sentences of the text. This is not perfect, but this is way better than "
"empty description."
msgstr ""

# f3687c56e0614984b89c5d631d410a8f
#: ../develop/plone/content/archetypes/fields.rst:524
msgid ""
"This script will provide one-time operation to automatically generate "
"content item descriptions based on their body text by taking the first three"
" sentences."
msgstr ""

# 4af4c18d1f39493eac3e395e3e3cdd2b
#: ../develop/plone/content/archetypes/fields.rst:528
msgid ""
"The script will provide logging output to standard Plone log (var/log and "
"stdout if Plone is run in the debug mode)."
msgstr ""

# 5bb2d4b300484405b9ba8d2feb17eb5e
# 70d1e7c68760498a84092213331731fe
# 9b636dbd368b4fe99f01878d88fd356e
# 2e3c9479ed3d466cb8e97f8a55b3a429
#: ../develop/plone/content/archetypes/fields.rst:531
#: ../develop/plone/content/listing.rst:692
#: ../develop/plone/forms/z3c.form.rst:438
#: ../develop/plone/functionality/portlets.rst:276
msgid "Example code::"
msgstr ""

# 17ac6fc2bd2f4c2da83462b4143e0546
#: ../develop/plone/content/archetypes/fields.rst:592
msgid ""
"http://blog.mfabrik.com/2010/06/04/automatically-generating-description-"
"based-on-body-text/"
msgstr ""

# 9a48ec7bfc384c158b810dbb07688b3a
#: ../develop/plone/content/archetypes/fields.rst:597
msgid ""
"Archetypes has its own vocabulary infrastructure which is not compatible "
"with :doc:`zope.schema vocabularies </develop/plone/forms/vocabularies>`."
msgstr ""

# bee8aefdf730467a89f817116b89fd47
#: ../develop/plone/content/archetypes/fields.rst:602
msgid ""
"http://www.universalwebservices.net/web-programming-resources/zope-plone"
"/dynamic-vocabularies-in-plone-archetypes"
msgstr ""

# 0418a81768fe46abbe53371dcd9f3f43
#: ../develop/plone/content/archetypes/fields.rst:605
msgid "Rendering single field"
msgstr ""

# 856dbb18ed504866990a7352a2a4f40d
#: ../develop/plone/content/archetypes/fields.rst:612
msgid "Hiding widgets conditionally"
msgstr ""

# 7a694745885b40b68b8215ea03ae4769
#: ../develop/plone/content/archetypes/fields.rst:614
msgid ""
"AT widgets have ``condition`` :doc:`expression "
"</develop/plone/functionality/expressions>`."
msgstr ""

# 078308abea214223ad56912cacd39ba2
#: ../develop/plone/content/archetypes/fields.rst:616
msgid ""
"Example how to set a condition for multiple widgets to call a BrowserView to"
" ask whether the widget should be visible or not::"
msgstr ""

# 6767caa784a545168f9f0ed3dd2ec257
#: ../develop/plone/content/archetypes/fields.rst:623
msgid "The related view with some sample code::"
msgstr ""

# 9bb73b3d22724c75ade0e8b498de7467
#: ../develop/plone/content/archetypes/fields.rst:644
msgid "Dynamic field definitions"
msgstr ""

# 6cf896554a614840b905d116c6fe0a86
#: ../develop/plone/content/archetypes/fields.rst:646
msgid ""
"You can override ``Schema()`` and ``Schemata()`` methods in your content "
"type class to poke the schema per HTTP request access basis."
msgstr ""

# 51363eb3ba2e437d90a524f63d4894d3
#: ../develop/plone/content/archetypes/files.rst:3
msgid "Files"
msgstr ""

# e0b0f87b1c844774b8b8cebbf8b7aba0
#: ../develop/plone/content/archetypes/files.rst:7
msgid "Using files with Archetype field"
msgstr ""

# e6fb73c0606e4e6782803d540f653a09
#: ../develop/plone/content/archetypes/files.rst:12
msgid "Download URL for files for ATFile content"
msgstr ""

# 7af1312fcd9a490ba1f63ca178ed8499
#: ../develop/plone/content/archetypes/files.rst:14
msgid "Append ``@@download`` view to URL."
msgstr ""

# 499b03f1911542519e21c083eb89a492
#: ../develop/plone/content/archetypes/files.rst:17
msgid "Checking whether a File field has uploaded content"
msgstr ""

# 2f6d804e088a45fa9dbcb0d559e674e9
#: ../develop/plone/content/archetypes/files.rst:19
msgid "Calling AT File field accessor will return a ``File`` object::"
msgstr ""

# a09d1cca94ad4afdaa5d77e0a8226a77
#: ../develop/plone/content/archetypes/files.rst:24
msgid ""
"Note that this may return ``None`` if the content item has been constructed "
"but the form has not been properly saved."
msgstr ""

# b9e3a73bee094c5589a1000bedb6a653
#: ../develop/plone/content/archetypes/files.rst:27
msgid "If the size is ``0``, the file is not yet uploaded::"
msgstr ""

# 0112bf1587a74992a69994289c6af6a3
#: ../develop/plone/content/archetypes/files.rst:32
msgid "Example how to check in a view whether AT context file size exists::"
msgstr ""

# 93f816b4942e4581bed2668b2c206c1a
#: ../develop/plone/content/archetypes/files.rst:50
msgid "Setting max file size to FileField and ImageField"
msgstr ""

# 21d0e844630b4e269ef4c619899ed14d
#: ../develop/plone/content/archetypes/files.rst:52
msgid "TODO"
msgstr ""

# 9ad886ead0fc4646a7ffab4b420ce721
#: ../develop/plone/content/archetypes/files.rst:54
msgid ""
"http://stackoverflow.com/questions/11347200/setting-max-upload-size-for-"
"archetypes-filefield"
msgstr ""

# 9e330705a81a40a1b6aaf2b2930a7c34
#: ../develop/plone/content/archetypes/files.rst:57
msgid "Old, deprecated, info"
msgstr ""

# f42ee07bf1364f65bf853a01f0123da6
#: ../develop/plone/content/archetypes/files.rst:59
msgid "http://keeshink.blogspot.fi/2009/09/how-to-limit-file-upload-size.html"
msgstr ""

# 0acddac16e85451984f4990f0da86fa0
# 52ae9985b89d417ca2d2a447b6a983ae
# dce2b3d7c0184775a92b8c3ec92ec69a
# aa91a808237549849da21ccef7fe450f
# a16e9af5b24e4b7d9fa662b15f84befd
#: ../develop/plone/content/archetypes/index.rst:3
#: ../develop/plone/content/uid.rst:140 ../develop/plone/forms/wysiwyg.rst:130
#: ../develop/plone/i18n/translating_content.rst:532
#: ../develop/plone/i18n/translating_content.rst:549
msgid "Archetypes"
msgstr ""

# 19345a2be8f945398afddb630ea122e5
#: ../develop/plone/content/archetypes/index.rst:5
msgid ""
"Archetypes is a subsystem to create content types in Plone 2.x, 3.x and 4.x."
" Dexterity is replacing it, and is available in 4.1+, becoming the default "
"content type system in Plone 5. Archetypes will remain available through the"
" Plone 5 series."
msgstr ""

# 7e9584bda53b4bdfb9aeac1175c58059
#: ../develop/plone/content/archetypes/references.rst:3
msgid "References"
msgstr ""

# 3d04c20a5bb643b7b8af4beea4ac4d52
#: ../develop/plone/content/archetypes/references.rst:7
msgid ""
"Inter-content references in Plone are done using the ``reference_catalog`` "
"tool."
msgstr ""

# dcb7ada874e14d7c87c66609f15736ff
#: ../develop/plone/content/archetypes/references.rst:16
msgid ""
"Plone uses a persistent tool called ``reference_catalog`` to store "
"(Archetypes) object references.  It is used by the out-of-the-box \"Related "
"items\" and you can use it in your own content types with "
"``ReferenceField``."
msgstr ""

# a204856169eb4e16aea09574a4953a21
#: ../develop/plone/content/archetypes/references.rst:20
msgid "``reference_catalog`` references can be bidirectional."
msgstr ""

# 768b06e4fa124d718aa355bb469e1e06
#: ../develop/plone/content/archetypes/references.rst:22
msgid ""
"The ``reference_catalog`` is a catalog just like the :doc:`portal_catalog "
"</develop/plone/searching_and_indexing/catalog>` |---| it just uses "
"different indexes and metadata."
msgstr ""

# 4c991aa05aee4d7b8b6fedddedf8590d
#: ../develop/plone/content/archetypes/references.rst:26
msgid ""
"The ``reference_catalog`` is defined in `ReferenceEngine.py "
"<https://github.com/plone/Products.Archetypes/blob/master/Products/Archetypes/ReferenceEngine.py>`_."
msgstr ""

# 90f0c9d97c5044d1a66ff272373631ac
#: ../develop/plone/content/archetypes/references.rst:29
msgid "Using references"
msgstr ""

# 562008db7aaa42809d0cabbc2cf7491a
#: ../develop/plone/content/archetypes/references.rst:31
msgid ""
"Here is an example how to use reference field to make *programme* -> "
"*researcher* references, and how to do reverse look-ups for the "
"relationship."
msgstr ""

# 25e3af41bde44d5ea5c05d6c2b3fc5e6
#: ../develop/plone/content/archetypes/references.rst:35
msgid ""
"You use ``getReferences()`` and ``getBackReferences()`` methods to look up "
"relationships."
msgstr ""

# 37ad52202f454b7a9d70d84e3b650aa1
#: ../develop/plone/content/archetypes/storages.rst:3
msgid "Field storages"
msgstr ""

# 94d241893eb34439a121dd51edf69ed9
#: ../develop/plone/content/archetypes/storages.rst:5
msgid "Field storage tells how the value of schema field is stored."
msgstr ""

# 4fbe843b8b3b4cd3a2e8e1a6832af76b
#: ../develop/plone/content/archetypes/storages.rst:8
msgid "AttributeStorage"
msgstr ""

# 5fc0e9e009de404fa1366fba66ca2684
#: ../develop/plone/content/archetypes/storages.rst:10
msgid "``Products.Archetypes.storage.AttributeStorage``"
msgstr ""

# 74f04cf6320542e9af6933311eadb016
#: ../develop/plone/content/archetypes/storages.rst:12
msgid ""
"This is recommended for data which is *always* read when the object is "
"accessed:``title``, ``description``, etc."
msgstr ""

# 5e07460fa976449294785684793f5d8b
#: ../develop/plone/content/archetypes/storages.rst:17
msgid "AnnotationStorage"
msgstr ""

# ec85a4172c2d40078b34e36bd5c72988
#: ../develop/plone/content/archetypes/storages.rst:19
msgid "``Products.Archetypes.storage.annotation.AnnotationStorage``"
msgstr ""

# ec294ab35f804b03a4ee1194e5454ea8
#: ../develop/plone/content/archetypes/storages.rst:21
msgid ""
"``AnnotationStorage`` creates an object attribute ``__annotations__`` which "
"is an ``OOBTree`` object.  An ``OOBTree`` uses *buckets* as the smallest "
"persistent entity. A bucket usually holds a small number of items. Buckets "
"are loaded on request and as needed compared to using native Python "
"datatypes."
msgstr ""

# 00e4a097f8bb4e189ead89e7779fb3c8
#: ../develop/plone/content/archetypes/storages.rst:27
msgid ""
"It is safe to assume that you can fit few variables to one bucket easily."
msgstr ""

# d781188f889d4457a9aaf5f7cd4edabe
#: ../develop/plone/content/archetypes/storages.rst:29
msgid ""
"You also might want to define ``ATFieldProperty`` accessor if you are using "
"this storage.  This allows you to read the object value using standard "
"Python attribute access notation."
msgstr ""

# 3c57f6d4f48a4ed0a54689c19d1d19cb
#: ../develop/plone/content/archetypes/storages.rst:33
msgid ""
"Note that in this case the access goes through AT accessor and mutator "
"functions.  This differs from raw storage value access: for example the AT "
"accessor encodes strings to UTF-8 before returning them."
msgstr ""

# cb637bbb76974b04bcf9cd0cc83caae1
#: ../develop/plone/content/archetypes/storages.rst:56
msgid "SQLStorage"
msgstr ""

# 4b32cbbc1cee42d1b14980d293d4b774
#: ../develop/plone/content/archetypes/storages.rst:58
msgid "This stores field values in an external SQL database."
msgstr ""

# aac8d9041b514c4e99a489c61bd02630
#: ../develop/plone/content/archetypes/storages.rst:60
msgid ""
"`An old documentation how to use SQL storage "
"<http://plone.sourceforge.net/archetypes/sqlstorage-howto.html>`_."
msgstr ""

# e0a1a6e8cae54f738cc7bd189254965e
#: ../develop/plone/content/archetypes/storages.rst:63
msgid "FSSStorage"
msgstr ""

# c13d3a22e7464b14bd0c45765e20106b
#: ../develop/plone/content/archetypes/storages.rst:65
msgid "Store the raw values of fields on the file system."
msgstr ""

# ede407a6b0694583bdf133d0bf53c1c7
#: ../develop/plone/content/archetypes/storages.rst:83
msgid ""
"`Official documentation of fss <https://pypi.python.org/pypi/iw.fss/>`_."
msgstr ""

# 7559c45224314b1c8e7dd8193fc08f57
#: ../develop/plone/content/archetypes/templates.rst:3
msgid "Templates"
msgstr ""

# 81e3f3d9ae6344d3b01f2ca23edce33e
#: ../develop/plone/content/archetypes/templates.rst:7
msgid "Overriding templates with Archetypes"
msgstr ""

# 603043abc25445868ed723f246e84409
#: ../develop/plone/content/archetypes/templates.rst:14
msgid ""
"This document will tell how to create custom templates for Plone and "
"Archetypes based content."
msgstr ""

# 908cc816a0924d5ab41f31c20ca05c48
#: ../develop/plone/content/archetypes/templates.rst:17
msgid "This does not deal with"
msgstr ""

# 87df6e5e9bbc438da1960651fb15416e
#: ../develop/plone/content/archetypes/templates.rst:19
msgid ":doc:`browser views </develop/plone/views/browserviews>`"
msgstr ""

# 9eec434f3a8e41d78ad32a109a5a817e
#: ../develop/plone/content/archetypes/templates.rst:21
msgid ""
":doc:`generic old style template overrides </adapt-and-"
"extend/theming/templates_css/skin_layers>`"
msgstr ""

# 8532b1809814400e9b5883719059ca31
#: ../develop/plone/content/archetypes/templates.rst:24
msgid "The template loading mechanism"
msgstr ""

# f90d9102c8bb4a81b88671f55b1e5f1a
#: ../develop/plone/content/archetypes/templates.rst:26
msgid "Archetypes tries to look up a template with name"
msgstr ""

# c960e00b953a49629e1edc17d5e8a810
#: ../develop/plone/content/archetypes/templates.rst:28
msgid "*Content type name lowercased* + *_view.pt*"
msgstr ""

# 2de36179fb7a4b3eab6e7c2023bedd7f
#: ../develop/plone/content/archetypes/templates.rst:30
msgid "*Content type name lowercased* + *_edit.cpt*"
msgstr ""

# 4ae0a67f6d054ade8354528614cc4d0f
#: ../develop/plone/content/archetypes/templates.rst:32
msgid "from portal_skins."
msgstr ""

# 0604979611e84ee6ae8c00b252b06d12
#: ../develop/plone/content/archetypes/templates.rst:34
msgid "Example controlled page template (cpt) file yourcontenttype.cpt:"
msgstr ""

# 0d1ce71a5dd444cfbe0d9821fd5714e9
#: ../develop/plone/content/archetypes/templates.rst:36
msgid "Check More info links"
msgstr ""

# 340b69cb15e14ead96aeaefbd8e19371
#: ../develop/plone/content/archetypes/templates.rst:38
msgid ""
"For cpt files (controlled page template) you'll also need corresponding "
".metadata file::"
msgstr ""

# aa2d54ed681b455d8807b1c33e0f64c1
#: ../develop/plone/content/archetypes/templates.rst:59
msgid ""
"http://plone.org/documentation/manual/theme-"
"reference/buildingblocks/skin/templates/how-to-customise-view-or-edit-on-"
"archetypes-content-items"
msgstr ""

# 068f12c89b394c05bf16e708dcc4e7dc
# b93577f683a04f5aafb69d71c2a5bd24
#: ../develop/plone/content/archetypes/validators.rst:3
#: ../develop/plone/forms/z3c.form.rst:2142
msgid "Validators"
msgstr ""

# 78468151e04b4ab9a440d1fef05bfe3b
#: ../develop/plone/content/archetypes/validators.rst:10
msgid ""
"This page has tips how to validate fields defined in Archetypes schema."
msgstr ""

# 88f767023c1d4bdd85679768d7171cce
#: ../develop/plone/content/archetypes/validators.rst:13
msgid "List of default validators"
msgstr ""

# 0b825bb853284d4ea468f118a4069056
#: ../develop/plone/content/archetypes/validators.rst:15
msgid ""
"https://github.com/plone/Products.validation/blob/master/Products/validation/validators/BaseValidators.py"
msgstr ""

# e5b4b56cf88042e0995fa74856fd1d34
#: ../develop/plone/content/archetypes/validators.rst:18
msgid "Creating a validator"
msgstr ""

# 6f9c9f4aff0047419891b538489f590f
#: ../develop/plone/content/archetypes/validators.rst:20
msgid ""
"http://play.pixelblaster.ro/blog/archive/2006/08/27/creating-an-archetypes-"
"validator"
msgstr ""

# c6a00479bc6f411fb7b68d62ec383f48
#: ../develop/plone/content/archetypes/validators.rst:22
msgid ""
"http://www.pererikstrandberg.se/blog/index.cgi?page=PloneArchetypesFieldValidator"
msgstr ""

# 0e1f82e574644b4da4dadc444ddb3037
#: ../develop/plone/content/behaviors.rst:3
msgid "Behaviors"
msgstr ""

# fe8af4ee986645d0b0b46a025c413f42
#: ../develop/plone/content/behaviors.rst:5
msgid "Behaviors allow you the extend the functionality of existing content."
msgstr ""

# 5ba4a22424f6483f9272e3b3d9160bf5
#: ../develop/plone/content/behaviors.rst:7
msgid ""
"`Tutorial "
"<http://plone.org/products/dexterity/documentation/manual/behaviors>`_"
msgstr ""

# 44bd75aa0ac0474388a27ac02439acb3
#: ../develop/plone/content/behaviors.rst:9
msgid ""
"`Source code "
"<https://github.com/plone/plone.behavior/blob/master/plone/behavior/>`_"
msgstr ""

# 01dcaf764f9e4ec79393cb98394bb251
#: ../develop/plone/content/behaviors.rst:11
msgid ""
"`Good known component version set for plone.behavior <http://good-"
"py.appspot.com/release/dexterity/1.0a1>`_"
msgstr ""

# f2855c56bc1146ada66f038d61813b5b
#: ../develop/plone/content/behaviors.rst:16
msgid "For Archetypes-based content:"
msgstr ""

# 3364d49123184672861b5b6cf8b380fe
#: ../develop/plone/content/behaviors.rst:18
msgid ""
"`plone.app.headerimage "
"<https://svn.plone.org/svn/collective/plone.app.headeranimation/trunk/plone/app/headeranimation/behaviors.py>`_."
msgstr ""

# e156db45c06e4a4e9bd094e887aa72cb
#: ../develop/plone/content/behaviors.rst:20
msgid ""
"`gomobile.mobile "
"<https://plonegomobile.googlecode.com/svn/trunk/gomobile/gomobile.mobile/gomobile/mobile/behaviors.py>`_."
msgstr ""

# 51f9e17bf5d3424ca7f21034e0298682
#: ../develop/plone/content/behaviors.rst:22
msgid ""
"`gomobile.convergence "
"<https://plonegomobile.googlecode.com/svn/trunk/gomobile/gomobile.convergence/gomobile/convergence/behaviors.py>`_."
msgstr ""

# c1a2a5b3672a4d71b2117b12610034d7
#: ../develop/plone/content/content_rules.rst:3
msgid "Content rules"
msgstr ""

# 99b031357d774b3688179783666e2b65
#: ../develop/plone/content/content_rules.rst:5
msgid ""
"`User manual <http://plone.org/documentation/tutorial/creating-content-rule-"
"conditions-and-actions/>`_"
msgstr ""

# fc303b6217864bf8a452575f094185f3
#: ../develop/plone/content/content_rules.rst:7
msgid ""
"`Developer manual <http://plone.org/documentation/how-to/content-rules>`_"
msgstr ""

# be471f5d21a54fb9b038149239a17a51
#: ../develop/plone/content/creating.rst:3
msgid "Creating objects"
msgstr ""

# f977b7c5820a405ab17a2a1d28ef5056
#: ../develop/plone/content/creating.rst:7
msgid ""
"Creating and controlling creation of Plone content items programmatically."
msgstr ""

# 63faa60b9bb441b2b1386927205dc558
#: ../develop/plone/content/creating.rst:13
msgid "Creating content objects"
msgstr ""

# 706ac7403fd24c4dafdec97890d99d72
#: ../develop/plone/content/creating.rst:16
msgid "Permission-aware way (Dexterity)"
msgstr ""

# 0ca57ecf7b8a4aec9b79412011c242c4
#: ../develop/plone/content/creating.rst:18
msgid ""
"These instructions apply for :doc:`Dexterity "
"</develop/plone/content/dexterity>` content types."
msgstr ""

# 9516ac20ff7c490e8d28c63108edb3f3
#: ../develop/plone/content/creating.rst:31
msgid "Permission-aware way (Archetypes and Dexterity)"
msgstr ""

# 1d9c25c0be89455aad77dddd0b8716eb
#: ../develop/plone/content/creating.rst:33
msgid ""
"``invokeFactory()`` is available on all folderish content objects. "
"``invokeFactory()`` calls the ``portal_factory`` persistent utility to "
"create content item."
msgstr ""

# ab4d7cfd9ec842329138ff03ce36abd0
#: ../develop/plone/content/creating.rst:69
msgid "Example (from unit tests)::"
msgstr ""

# 9393d7e2c39649d999fd5ed0b3b6fd01
#: ../develop/plone/content/creating.rst:76
msgid ""
"``invokeFactory()`` will raise an ``Unauthorized`` exception if the logged-"
"in user does not have permission to create content in the folder (lacks type"
" specific creation permission and ``Add portal content`` permissions).  This"
" exception can be imported as follows::"
msgstr ""

# e9ba4a2b30ee4cf18129b278e016b004
#: ../develop/plone/content/creating.rst:85
msgid ""
"If the content class has  ``_at_rename_after_creation = True`` (Archetypes-"
"based content) the next call to ``obj.update()`` (edit form post) will "
"automatically generate a friendly id for the object based on the title of "
"the object."
msgstr ""

# a1e98e0b5d04480795d78ea1e6638f9e
#: ../develop/plone/content/creating.rst:92
msgid "Bypassing permissions when creating content item"
msgstr ""

# 41dc2df800984abebdbbe0856be445ef
#: ../develop/plone/content/creating.rst:94
msgid ""
"If you need to have special workflows where you bypass the workflow and "
"logged in users when creating the content item, do as follows::"
msgstr ""

# 67aa40a4b8694f859f681020f1ee2301
#: ../develop/plone/content/creating.rst:121
msgid ""
"The function above only bypasses the content item construction permission "
"check.  It does not bypass checks for setting field values for initially "
"created content."
msgstr ""

# 14fd8358e6a04eff9d6c96d5ff162421
#: ../develop/plone/content/creating.rst:125
msgid "There is also an alternative way::"
msgstr ""

# 744e8156b16e4abebd1c644536e67e1c
#: ../develop/plone/content/creating.rst:134
msgid "Manual friendly id generation"
msgstr ""

# b598bb506cef440d90e582ab0c179a55
#: ../develop/plone/content/creating.rst:136
msgid ""
"If you are creating Plone objects by hand e.g. in a batch job and Plone "
"automatic id generation does not kick in, you can use the following example "
"to see how to create friendly object ids manually::"
msgstr ""

# 4ded935937414523b4cf1f1c26b14f26
#: ../develop/plone/content/creating.rst:187
msgid "PortalFactory"
msgstr ""

# e12f97efc03444d6ad725f28fd9fec2c
#: ../develop/plone/content/creating.rst:189
msgid ""
"``PortalFactory`` (only for Archetypes) creates the object in a temporary "
"folder and only moves it to the real folder when it is first saved."
msgstr ""

# 06bd0704be2545179bf25e9c0a97f123
#: ../develop/plone/content/creating.rst:194
msgid ""
"To see if content is still temporary, use "
"``portal_factory.isTemporary(obj)``."
msgstr ""

# 7eb1f16f28544b04b691a81bdb263d74
#: ../develop/plone/content/creating.rst:198
msgid "Restricting creating on content types"
msgstr ""

# 3fe9fa0df5d74715903765275b3a90f9
#: ../develop/plone/content/creating.rst:200
msgid ""
"Plone can restrict which content types are available for creation in a "
"folder via the :guilabel:`Add...` menu."
msgstr ""

# 781e47adc05e4fc3ac28d436ca331819
#: ../develop/plone/content/creating.rst:204
msgid "Restricting available types per content type"
msgstr ""

# a168797ca5bd4aceb1a84aad3723507e
#: ../develop/plone/content/creating.rst:206
msgid ""
"``portal_types`` defines which content types can be created inside a "
"folderish content type.  By default, all content types which have the "
"``global_allow`` property set can be added."
msgstr ""

# 7b788480321b465b8526ce7bf0d7427d
#: ../develop/plone/content/creating.rst:210
msgid "The behavior can be controlled with ``allowed_content_types`` setting."
msgstr ""

# bc5f504dee07475982b975a1f96f903d
#: ../develop/plone/content/creating.rst:212
msgid "You can change it through the ``portal_types`` management interface."
msgstr ""

# b3045c6466814027839a89d63eb2370f
#: ../develop/plone/content/creating.rst:214
msgid ""
"You can change it in your add-on installer :doc:`GenericSetup "
"</develop/addons/components/genericsetup>` profile."
msgstr ""

# 129e685aa80a411f94113eb4d168b4b8
#: ../develop/plone/content/creating.rst:217
msgid ""
"Example for :doc:`Dexterity content type "
"</develop/plone/content/dexterity>`. The file would be something like "
"``profiles/default/types/yourcompany.app.typeid.xml``::"
msgstr ""

# 3615c9f109e946c6a7b4902c161bfa66
#: ../develop/plone/content/creating.rst:229
msgid ""
"Example for :doc:`Archetypes content "
"</develop/plone/content/archetypes/index>`. The file would be something like"
" ``profiles/default/types/YourType.xml``::"
msgstr ""

# 4354a738f90d41748b6d55efc35fd7b8
#: ../develop/plone/content/creating.rst:242
msgid "Restricting available types per folder instance"
msgstr ""

# 0bab19fd689443a9a4b07fbe8c58452c
#: ../develop/plone/content/creating.rst:244
msgid ""
"In the UI, you can access this feature via the :guilabel:`Add...` menu "
":guilabel:`Restrict` option."
msgstr ""

# 0de4a03392794a2d9c7a6d4bb9432a84
#: ../develop/plone/content/creating.rst:247
msgid "Type contraining is managed by the ``ATContentTypes`` product:"
msgstr ""

# 02e0ecebbd644105b9e239124fd4a1dc
#: ../develop/plone/content/creating.rst:249
msgid ""
"https://github.com/plone/Products.ATContentTypes/blob/master/Products/ATContentTypes/lib/constraintypes.py"
msgstr ""

# 9ad2c1e411a049ffac67b29fc4f889f5
#: ../develop/plone/content/creating.rst:266
msgid ""
"You can also override the ``contraintypes`` accessor method to have "
"programmable logic regarding which types are addable and which not."
msgstr ""

# 448c0912f30e485dad58a4d26438dcd0
#: ../develop/plone/content/creating.rst:272
msgid "Other restrictions"
msgstr ""

# a0bf00c1cd054efbb385e05234906ee0
#: ../develop/plone/content/creating.rst:274
msgid "See this discussion thread:"
msgstr ""

# f42a2f58ebd940a6a73077458d4a663f
#: ../develop/plone/content/creating.rst:276
msgid ""
"http://plone.293351.n2.nabble.com/Folder-constraints-not-applicable-to-"
"custom-content-types-tp6073100p6074327.html"
msgstr ""

# 314b253d3b4046b9851a18370be0a633
#: ../develop/plone/content/creating.rst:279
msgid "Creating OFS objects"
msgstr ""

# e7f31645e3574164aebe0dcbba13f5b2
#: ../develop/plone/content/creating.rst:281
msgid ""
"Zope has facilities for basic folder and contained objects using the OFS_ "
"subsystem. You do not need to work with raw objects unless you are doing "
"your custom lightweight, Plone-free, persistent data."
msgstr ""

# 5fcbb9555d224abd9cf928072a59733d
#: ../develop/plone/content/creating.rst:285
msgid "More examples in:"
msgstr ""

# 535f765e1c2f4848924fa6d54d30b841
#: ../develop/plone/content/creating.rst:287
msgid ""
"`Singing & Dancing "
"<https://svn.plone.org/svn/collective/collective.dancing/trunk/collective/dancing/channel.py>`_."
msgstr ""

# e71e950cab9247588dcdd723edf80bca
#: ../develop/plone/content/creating.rst:292
msgid "Object construction life cycle"
msgstr ""

# 5e741bf83f434d1589245c7e64767552
#: ../develop/plone/content/creating.rst:296
msgid ""
"The following applies to Archetypes-based objects only. The process might be"
" different for Dexterity-based content."
msgstr ""

# 5e49b82ca6174e79a7a369fa564a705f
#: ../develop/plone/content/creating.rst:299
msgid "Archetypes content construction has two phases:"
msgstr ""

# 34cb5c49205f449298bbe308b4927bca
#: ../develop/plone/content/creating.rst:301
msgid ""
"The object is created using a ``?createType=`` URL or a "
"``Folder.invokeFactory()`` call.  If ``createType`` is used then the object "
"is given a temporary id. The object has an \"in creation\" flag set."
msgstr ""

# 4d4441cb76d249739b1eae2ebfe8fd1e
#: ../develop/plone/content/creating.rst:306
msgid ""
"The object is saved for the first time and the final id is generated based "
"on the object title. The object is renamed. The creation flag is cleared."
msgstr ""

# 623ce1c6243a4b37b721e10c36d8520f
#: ../develop/plone/content/creating.rst:310
msgid ""
"You are supposed to call either ``object.unmarkCreationFlag()`` or "
"``object.processForm()`` after content is created manually using "
"``invokeFactory()``."
msgstr ""

# ac3ed7a8e14048c5afb9eb1316afcdd7
#: ../develop/plone/content/creating.rst:314
msgid "``processForm()`` will perform the following tasks:"
msgstr ""

# 2699035901e241b08fc24773b8c66af9
#: ../develop/plone/content/creating.rst:316
msgid "unmarks creation flag;"
msgstr ""

# a37b25fa8e934ea2b51238f51256f98b
#: ../develop/plone/content/creating.rst:317
msgid "renames object according to title;"
msgstr ""

# f271424bb278428391078eca6499ae99
#: ../develop/plone/content/creating.rst:318
msgid "reindexes object;"
msgstr ""

# e296c9bbd9be406abcf8f57e3991cb0c
#: ../develop/plone/content/creating.rst:319
msgid ""
"invokes the ``after_creation`` script and fires the ``ObjectInitialized`` "
"event."
msgstr ""

# ba02472031d046998f321ca3dd921f2b
#: ../develop/plone/content/creating.rst:322
msgid ""
"If you don't want some particular step to be executed, study "
"``Archetypes/BaseObject.py`` and call only what you really want.  But unless"
" ``unmarkCreationFlag()`` is called, the object will behave strangely after "
"the first edit."
msgstr ""

# 20618d6de0854561ab55efc27bc34fb2
#: ../develop/plone/content/creating.rst:328
msgid "Rename after creation"
msgstr ""

# f6f2fc1fa7c24f0898c385601ece14ba
#: ../develop/plone/content/creating.rst:330
msgid ""
"To prevent the automatic rename on the first through-the-web save, add the "
"following attribute to your class::"
msgstr ""

# df6792927c92439c946404aff43bf1fd
#: ../develop/plone/content/creating.rst:338
msgid "Factory type information"
msgstr ""

# b055c3b6697b48d2a68a52e23157a437
#: ../develop/plone/content/creating.rst:340
msgid ""
"Factory type information (FTI) is responsible for content creation in the "
"portal.  It is independent from content type (Archetypes, Dexterity) "
"subsystems."
msgstr ""

# 2edf767ec7aa4fbeb3b77fdb0360dda4
#: ../develop/plone/content/creating.rst:346
msgid ""
"The FTI codebase is old (updated circa 2001). Useful documentation might be "
"hard to find."
msgstr ""

# f36f9277f48043b5b3ad018086d1a4c2
#: ../develop/plone/content/creating.rst:349
msgid "FTI is responsible for:"
msgstr ""

# f4e191752ccc4b6c91f748ce829f7c3f
#: ../develop/plone/content/creating.rst:351
msgid "Which function is called when new content type is added;"
msgstr ""

# fcd88b6dc52c4a09a5e054b97b03ba46
#: ../develop/plone/content/creating.rst:352
msgid "icons available for content types;"
msgstr ""

# 74f924df48c14d0098d792a3a4cf92a5
#: ../develop/plone/content/creating.rst:353
msgid "creation views for content types;"
msgstr ""

# 0d0824e13a9745149abab76a7b0bf2f8
#: ../develop/plone/content/creating.rst:354
msgid "permission and security;"
msgstr ""

# 2c9823c7f787427b99bdc1eec4b18b87
#: ../develop/plone/content/creating.rst:355
msgid "whether discussion is enabled;"
msgstr ""

# 5d8958c9c79b4807be061da98862398e
#: ../develop/plone/content/creating.rst:356
msgid ""
"providing the ``factory_type_information`` dictionary. This is used "
"elsewhere in the code (often in ``__init__.py`` of a product) to set the "
"initial values for a *ZODB Factory Type Information* object (an object in "
"the ``portal_types`` tool)."
msgstr ""

# 869fb07502d5454fb39d3935008051c4
# fe44da19c2f743669bc2e54080f0f438
# 5e0a265605f44fc0b12a4c791814756b
#: ../develop/plone/content/creating.rst:361
#: ../develop/plone/functionality/collections.rst:73
#: ../develop/plone/i18n/internationalisation.rst:385
msgid "See:"
msgstr ""

# e7b562f6123d4234bd64e71bad85d718
#: ../develop/plone/content/creating.rst:363
msgid ""
"`FTI source code "
"<http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/TypesTool.py?rev=101748&view=auto>`_."
msgstr ""

# 23066f5ab1014c068f3832e6f99929ee
#: ../develop/plone/content/creating.rst:365
msgid ""
"`Scriptable Types Information HOW TO "
"<http://www.zope.org/Products/CMF/docs/devel/using_scriptable_type_info/view>`_"
msgstr ""

# fb61bbb5411c41418aa2abd5790bdb7e
#: ../develop/plone/content/creating.rst:367
msgid ""
"`Notes Zope types mechanism "
"<http://www.zope.org/Products/CMF/docs/devel/taming_types_tool/view>`_"
msgstr ""

# 985894c47d3f4a1985efce0503c766f0
#: ../develop/plone/content/creating.rst:370
msgid ""
"Content does not show in :guilabel:`Add` menu, or ``Unauthorized`` errors"
msgstr ""

# 84e05c6cc3fe4f5aad3d0e4051b6238f
#: ../develop/plone/content/creating.rst:372
msgid ""
"These instructions are for Archetypes content to debug issues when creating "
"custom content types which somehow fail to become creatable."
msgstr ""

# b04969aeec6446b6a1b948e5ef7cea0f
#: ../develop/plone/content/creating.rst:375
msgid ""
"When creating new content types, many things can silently fail due to human "
"errors in the complex content type setup chain and security limitations. The"
" consequence is that you don't see your content type in the :guilabel:`Add` "
"drop-down menu.  Here are some tips for debugging."
msgstr ""

# d09fb308dcad4332bdd8b02c61969816
#: ../develop/plone/content/creating.rst:380
msgid ""
"Is your product broken due to Python import time errors? Check :term:`ZMI`: "
":guilabel:`Control panel` -> :guilabel:`Products`. Turn on Zope debugging "
"mode to trace import errors."
msgstr ""

# fbd066d34bbc4d7bbf97785a20fd3d87
#: ../develop/plone/content/creating.rst:384
msgid ""
"Have you rerun the quick installer (``GenericSetup``) after "
"creating/modifying the content type?"
msgstr ""

# 47e6ebdc5f3846139ddb486f405e0cb6
#: ../develop/plone/content/creating.rst:387
msgid ""
"Do you have a correct :guilabel:`Add` permission for the product? Check "
"``__init__.py`` ``ContentInit()`` call."
msgstr ""

# 149240fcbf9c47d2bbc4626b1f119d7b
#: ../develop/plone/content/creating.rst:390
msgid ""
"Does it show up in the portal factory? Check :term:`ZMI`: "
":guilabel:`portal_factory` and ``factorytool.xml``."
msgstr ""

# 8d6061330c2b4e28a474f49406052351
#: ../develop/plone/content/creating.rst:393
msgid ""
"Is it corretly registered as a portal type and implictly addable? Check "
":term:`ZMI`: :guilabel:`portal_types`. Check "
"``default/profiles/type/yourtype.xml``."
msgstr ""

# 849803a5ad0d406381814dae2f4e0df3
#: ../develop/plone/content/creating.rst:397
msgid ""
"Does it have correct product name defined? Check :term:`ZMI`: "
":guilabel:`portal_types`."
msgstr ""

# ab8705f96bc34f44b2e79135496376d2
#: ../develop/plone/content/creating.rst:400
msgid ""
"Does it have a proper factory method? Check :term:`ZMI`: "
":guilabel:`portal_types`. Check Zope logs for ``_queryFactory`` and import "
"errors."
msgstr ""

# 7e0f6cc348764bc09e3c984491e43e58
#: ../develop/plone/content/creating.rst:404
msgid ""
"Does it register itself with Archetypes? Check :term:`ZMI`: "
":guilabel:`archetypes_tool`. Make sure that you have ``ContentInit`` "
"properly run in your ``__init__.py``. Make sure that all modules having "
"Archetypes content types defined and ``registerType()`` call are imported in"
" ``__init__py``."
msgstr ""

# e2cad1c7b4154d3ca511bf5e8ea8bf23
#: ../develop/plone/content/creating.rst:411
msgid "Link to creation page"
msgstr ""

# c9af4e80d1e14b488466c476360abb20
#: ../develop/plone/content/creating.rst:413
msgid ""
"The :guilabel:`Add...` menu contains links for creating individual content "
"types. Copy the URLs that you see there."
msgstr ""

# f2e252991b074bda90a01019a9263a37
#: ../develop/plone/content/creating.rst:416
msgid ""
"If you want to the user to have a choice about which content type to create,"
" you can link to ``/folder_factories`` page. (This is also the creation page"
" when Javascript is disabled)."
msgstr ""

# c1f7307282f047be80b2591b0450afe8
#: ../develop/plone/content/creating.rst:421
msgid "Populating folder on creation"
msgstr ""

# 16adba9c118c429aa1642e8acf8da952
#: ../develop/plone/content/creating.rst:423
msgid ""
"Archetypes have a hook called ``initializeArchetype()``. Your content type "
"subclass can override this."
msgstr ""

# 52561182d594422e8532ca71b8952108
#: ../develop/plone/content/creating.rst:449
msgid "Creating content from PloneFormGen"
msgstr ""

# b80949f11d384a68ab89d220ed87bc9a
#: ../develop/plone/content/creating.rst:451
msgid "PloneFormGen is a popular add-on for Plone."
msgstr ""

# 7904badedfd9427092744d2a023080e6
#: ../develop/plone/content/creating.rst:453
msgid ""
"Below is a snippet for a ``Custom Script Adapter`` which allows to create "
"content straight out of PloneFormGen in the *pending* review state (it is "
"not public and will appear in the review list)::"
msgstr ""

# 2374c5d00f58466ebe94adcf129ad15d
# 2cb25d3395f545238718760c99d6be5d
#: ../develop/plone/content/creating.rst:497
#: ../develop/plone/content/creating.rst:499
msgid ""
"http://plone.org/products/ploneformgen/documentation/how-to/creating-"
"content-from-pfg"
msgstr ""

# 639d53c31b7542188816e256b1d02e1d
#: ../develop/plone/content/creating.rst:502
msgid "Creating content using Generic Setup"
msgstr ""

# 43576af8ced64f39b6ca2b3e12efd66d
#: ../develop/plone/content/creating.rst:505
msgid "Purpose"
msgstr ""

# d52a721a732241159348d51cfa41d804
#: ../develop/plone/content/creating.rst:507
msgid ""
"You want your product to create default content in the site.  (For example, "
"because you have a product which adds a new content type, and you want to "
"create a special folder to put these items in.)"
msgstr ""

# d45f356a70b84dda9ad97f1e2f7add7f
#: ../develop/plone/content/creating.rst:511
msgid ""
"You could do this programmatically, but if you don't want anything fancy "
"(see \"Limitations\" below), Generic Setup can also take care of it."
msgstr ""

# 75f60c2eca224da89f989ceca3b1ce83
#: ../develop/plone/content/creating.rst:515
msgid "Step by step"
msgstr ""

# 770af46085fa4c9e90c252024c8201b4
#: ../develop/plone/content/creating.rst:517
msgid ""
"In your product's ``profiles/default`` folder, create a directory called "
"``structure``."
msgstr ""

# c8a09e4715984efea13b34e04ffa02b3
#: ../develop/plone/content/creating.rst:519
msgid ""
"To create a top-level folder with id ``my-folder-gs-created``, add a "
"directory of that name to the structure folder."
msgstr ""

# 81ad5212098347d3b11d1c6d781f0709
#: ../develop/plone/content/creating.rst:521
msgid "Create a file called .objects in the ``structure`` directory"
msgstr ""

# eea5028f14464a6688781f4939bae311
#: ../develop/plone/content/creating.rst:523
msgid ""
"Create a file called .properties in the ``my-folder-gs-created`` directory"
msgstr ""

# 9f2b5769d9974457bf2680436b0a60e5
#: ../develop/plone/content/creating.rst:525
msgid "Create a file called .preserve in the ``structure`` directory"
msgstr ""

# 59f7d7cbb2e4427c997146aea58aa508
#: ../develop/plone/content/creating.rst:527
msgid "``.objects`` registers the folder to be created::"
msgstr ""

# 125acaf019be46acae4ac2b705d362a1
#: ../develop/plone/content/creating.rst:531
msgid "``.properties`` sets properties of the folder to be created::"
msgstr ""

# e2351a14464441c8a92f839ef0d8573f
#: ../develop/plone/content/creating.rst:537
msgid ""
"``.preserve`` will make sure the folder isn't overwritten if it already "
"exists::"
msgstr ""

# 2a145f0ac22045ccb69bf039d360ce14
#: ../develop/plone/content/creating.rst:542
msgid "Limitations"
msgstr ""

# d24c4a884af2433a99bf744af587e35d
#: ../develop/plone/content/creating.rst:544
msgid "This will only work for Plone's own content types"
msgstr ""

# 540c6ec5f76c4e9280f6fd6ff68c1620
#: ../develop/plone/content/creating.rst:546
msgid "Items will be in their initial workflow state"
msgstr ""

# be22e14a6cb6469283bb611f20404c5b
#: ../develop/plone/content/creating.rst:548
msgid ""
"If you want to create objects of a custom content type, or manipulate them "
"more, you'll have to write a setuphandler. See below under \"Further "
"Information\"."
msgstr ""

# 2fbc8dd4743b4337a70d52484dd40a14
#: ../develop/plone/content/creating.rst:556
msgid "I don't see titles in the navigation, only ids"
msgstr ""

# 353bb0499eaf411896d00de6a4a96d2e
#: ../develop/plone/content/creating.rst:558
msgid ""
"You may notice that the new generated content's title appears to be set to "
"its id. In this case, the catalog needs to be updated. You can do this "
"through the ZMI, in ``portal_catalog``."
msgstr ""

# 9256b56ce53b4d7895245abf7120d5d1
#: ../develop/plone/content/creating.rst:562
msgid ""
"You could automate this process by adding a GS import step in "
"configure.zcml, which looks like this::"
msgstr ""

# 58fd63ea359d4965a2b8b471f774f02c
#: ../develop/plone/content/creating.rst:572
msgid ""
"This is the preferred way to define dependencies for import profiles: The "
"import step declares its dependency on the content import step. 'content' is"
" the name for the step which creates content from "
"``profiles/default/structure``. You could then add a method which updates "
"the catalog in the product's ``setuphandlers.py``::"
msgstr ""

# 4604041475764a45ad05563870ce18fa
#: ../develop/plone/content/creating.rst:590
msgid "Further information"
msgstr ""

# cc5c479126344a768a02b491fc370e00
#: ../develop/plone/content/creating.rst:592
msgid ""
"Original manual: http://vanrees.org/weblog/creating-content-with-"
"genericsetup"
msgstr ""

# 42a5e6ab953a427893ea1818cdaae8d9
#: ../develop/plone/content/creating.rst:594
msgid ""
"If you want to do things like workflow transitions or setting default views "
"after creating, read http://keeshink.blogspot.de/2011/05/creating-plone-"
"content-when-installing.html"
msgstr ""

# baaf891ebce14a11b3378eebbf10c81c
#: ../develop/plone/content/deleting.rst:3
msgid "Deleting"
msgstr ""

# b2725f2a00d2457f829ec862184cf5fd
#: ../develop/plone/content/deleting.rst:7
msgid ""
"Deleting content items in Plone programmatically. How link integrity checks "
"work and how (and when!) to avoid them."
msgstr ""

# b95cd6a3771d4a58b0e85efc65e4bb8f
#: ../develop/plone/content/deleting.rst:15
msgid ""
"This document explains how to programmatically delete objects in Plone."
msgstr ""

# caa03ff785014a2c8771a0697cbe27a8
#: ../develop/plone/content/deleting.rst:18
msgid "Deleting content by id"
msgstr ""

# aefc93a4269c4f68a799639c089377cf
#: ../develop/plone/content/deleting.rst:20
msgid "Deleting content objects is done by IObjectManager."
msgstr ""

# bd1227778cf8498b869b6e8be151a89e
#: ../develop/plone/content/deleting.rst:22
msgid ""
"`IObjectManager definition "
"<http://svn.zope.org/Zope/trunk/src/OFS/interfaces.py?rev=96262&view=auto>`_."
msgstr ""

# f399fc0be53d419ba5506c8f90b9935c
# e824a5720ad3406199d217357dc1648c
#: ../develop/plone/content/deleting.rst:29 ../develop/plone/images/pil.rst:55
msgid "Or::"
msgstr ""

# 33d337cd1e7e4de0aa6e57d8f1a39359
# 28f0d6f119f94dacb8b2a61c00b736c9
# a98d42a7cc694627bdab03f400c084de
#: ../develop/plone/content/deleting.rst:35
#: ../develop/plone/security/permission_lists.rst:0
#: ../develop/plone/security/permissions.rst:3
msgid "Permissions"
msgstr ""

# 19026d9c28694fd4b7c503edc4595e1e
#: ../develop/plone/content/deleting.rst:37
msgid ""
"The user must have Zope 2 *Delete objects* permission on the *content item* "
"being deleted. This is checked in "
"``Products.CMFPlone.PloneFolder.manage_delObjects()``."
msgstr ""

# f3c91dd32e81469a8ba43264cd050a9f
#: ../develop/plone/content/deleting.rst:40
msgid "Otherwise an ``Unauthorized`` exception is raised."
msgstr ""

# 0d76175678ee460c8e5b3e968d3eb5e0
#: ../develop/plone/content/deleting.rst:42
msgid "Example how to check for this permission::"
msgstr ""

# 6fe37f6d34f34a17be611b2a55ee0ef3
#: ../develop/plone/content/deleting.rst:57
msgid "Bypassing permissions"
msgstr ""

# 1a302f75e08b4162bfaf103a0761690c
#: ../develop/plone/content/deleting.rst:59
msgid ""
"This is handy if you work e.g. in a :doc:`debug shell "
"</develop/plone/misc/commandline>` and you are deleting badly behaved "
"objects::"
msgstr ""

# 0f7ecb126ca142ea895703f03fec383b
#: ../develop/plone/content/deleting.rst:70
msgid "Deleting all content in a folder"
msgstr ""

# d1434531d91142e5bc0360709718ad18
#: ../develop/plone/content/deleting.rst:72
msgid "This can be a bit tricky. An example::"
msgstr ""

# bf359da315c94451acbe43e0877cc3a1
#: ../develop/plone/content/deleting.rst:84
msgid "Bypassing link integrity check"
msgstr ""

# 6bb7438c41634e718803b77134acf98b
#: ../develop/plone/content/deleting.rst:86
msgid ""
"If link integrity checks has been enabled in the site setup, you cannot "
"delete objects which themselves are link targets or if their children are "
"link targets."
msgstr ""

# 051b85b4daab449fad13a90121675b01
#: ../develop/plone/content/deleting.rst:90
msgid ""
"Instead, a ``LinkIntegrityException`` will be raised. The "
"``LinkIntegrityException`` contains information identifying the content "
"which could not be deleted."
msgstr ""

# a908fa507a014df39ebe346dc7581cef
#: ../develop/plone/content/deleting.rst:94
msgid ""
"The ``plone.app.linkintegrity.browser.remote`` module contains code which "
"allows you to delete the object in any case. It catches the exception, "
"modifies the HTTP request to contain a marker interface allowing delete to "
"happen and then replays the transaction."
msgstr ""

# d9204b3efc8d426ca20e1bc4619f408f
#: ../develop/plone/content/deleting.rst:100
msgid ""
"In case the link integrity check fails for ``manage_delObjects()``, you will"
" be shown a confirmation dialog. The original request payload gets pickled "
"and is stored encoded in the HTML form."
msgstr ""

# 573cb579fb6a4083b441e725db0ad681
#: ../develop/plone/content/deleting.rst:104
msgid ""
"When the user presses confirm, the original request gets unpickled from the "
"``HTTP POST`` payload. Then the view modifies the Zope publisher so that it "
"will play the original unpickled ``HTTP POST`` with the marker interface "
"\"Do not care about link integrity breaches\" turned on."
msgstr ""

# 7cf12807f18b42c489a049081e090331
#: ../develop/plone/content/deleting.rst:110
msgid ""
"Here is an sample batch delete code which tries to work around the link "
"integrity check::"
msgstr ""

# cb571d1ac32b42f7b7eb05acdf5eeb39
#: ../develop/plone/content/deleting.rst:148
msgid "Fail safe deleting"
msgstr ""

# 48fc81de0e5d43b8a3b11adc77e415fa
#: ../develop/plone/content/deleting.rst:150
msgid ""
"Sometimes deletion might fail because it dispatches events which might raise"
" exception due to bad broken objects or badly behaving code."
msgstr ""

# 4c21e0d575b840d1b32b77ba2efb2a6a
#: ../develop/plone/content/deleting.rst:154
msgid ""
"`OFS.ObjectManager "
"<http://svn.zope.org/Zope/trunk/src/OFS/ObjectManager.py?rev=115507&view=auto>`_,"
" the base class for Zope folders, provides an internal method to delete "
"objects from a folder without firing any events::"
msgstr ""

# 351b4bbd7e2f4cd4a903bd3223b2a216
#: ../develop/plone/content/deleting.rst:161
msgid ""
"The best way to clean up bad objects on your site is via a :doc:`command "
"line script </develop/plone/misc/commandline>`, in which case remember to "
"commit the transaction after removing the broken objects."
msgstr ""

# 741e0cd7af3a42bfbb61a87ec69db35a
#: ../develop/plone/content/deleting.rst:167
msgid "Purging site from old content"
msgstr ""

# be3a47aa765c4c3397c8f3a09f4e2bda
#: ../develop/plone/content/deleting.rst:169
msgid ""
"This term:`ZMI` script allows you to find content items of certain type and "
"delete them if they are created too long ago::"
msgstr ""

# 2d5e7b67b1284a019e993ba57d05fee7
#: ../develop/plone/content/deleting.rst:203
msgid ""
"Below is an advanced version for old item-date-based deletion code which is "
"suitable for huge sites. This snippet is from the ``Products.feedfeeder`` "
"package. It will look for ``Feedfeeder`` items (automatically generated from"
" RSS) which are older than X days and delete them."
msgstr ""

# 9a38dfdf40f1442f9ff69a1079778ec7
#: ../develop/plone/content/deleting.rst:210
msgid ""
"It's based on Zope 3 page registration (sidenote: I noticed that views do "
"not need to be based on BrowserView page class)."
msgstr ""

# 0c64ac00b6434ef0b6459b3682a84efe
#: ../develop/plone/content/deleting.rst:213
msgid ""
"Transaction thresholds make sure the code runs faster and does not run out "
"of RAM"
msgstr ""

# 9b978a062e4a4a2aa502cbb9f0d004fc
#: ../develop/plone/content/deleting.rst:216
msgid "Logging to Plone event log files"
msgstr ""

# d792cbccc1dc4487af66b3f6f5321100
#: ../develop/plone/content/deleting.rst:218
msgid "Number of days to look into past is not hardcoded"
msgstr ""

# 5651f107d8b84c5d9cfda785c0f6f7c0
#: ../develop/plone/content/deleting.rst:220
msgid "Manage rights needed to execute the code"
msgstr ""

# 445525f476724caea5b6ccbffc91afcc
#: ../develop/plone/content/deleting.rst:222
msgid "You can call this view like::"
msgstr ""

# 1e04f2ef58fe4d12828406187f8e4133
#: ../develop/plone/content/deleting.rst:226
msgid "Here is the view Python source code::"
msgstr ""

# 16b36c2a8c464e7a8f2488cd8faf4920
#: ../develop/plone/content/deleting.rst:307
msgid "Then we have the view ZCML registration:"
msgstr ""

# 7370f697f3e84d38b4285108357eca6e
# a0f53c4974a947c8ad1439fa9eade79b
# acb3da94bf9846709fd9c09fdc5f3070
# d6d868279a7f498590f3741f1af7f26d
# 8b34fc167fde4302a65bfe7a46faa925
#: ../develop/plone/content/dexterity.rst:3
#: ../develop/plone/content/types.rst:185
#: ../develop/plone/forms/wysiwyg.rst:125
#: ../develop/plone/i18n/translating_content.rst:538
#: ../develop/plone/i18n/translating_content.rst:563
msgid "Dexterity"
msgstr ""

# b974f69036dc40dba1d0551faf46f139
#: ../develop/plone/content/dexterity.rst:7
msgid "Dexterity content subsystem for Plone: info for the developers."
msgstr ""

# 0269ce96b139482c8f7c79be6f33193b
#: ../develop/plone/content/dexterity.rst:14
msgid ""
"Dexterity is a subsystem for content objects. It is intended to replace the "
"default Archetypes system from Plone 5 and onward and can be already used "
"with Plone 4."
msgstr ""

# 157e331b5b90468c87325c3c4ca1ac73
#: ../develop/plone/content/dexterity.rst:19
msgid ""
":doc:`Dexterity developer manual </external/plone.app.dexterity/docs/index>`"
msgstr ""

# d0ac5ab234914f1e97e39d849203dca3
#: ../develop/plone/content/dexterity.rst:21
msgid ""
":doc:`How Dexterity is related to Archetypes "
"</external/plone.app.dexterity/docs/intro>`"
msgstr ""

# 4acb0e44fae24852bd04e054c3afd700
#: ../develop/plone/content/dexterity.rst:24
msgid "ZopeSkel templates"
msgstr ""

# 2a1fad84ca124b12ab6382ef5d2299b4
#: ../develop/plone/content/dexterity.rst:26
msgid ""
"Please see :doc:`ZopeSkel page </develop/addons/paste>` for project skeleton"
" templates for Dexterity."
msgstr ""

# 50159bf3f5b3480e8d230407ae91e907
#: ../develop/plone/content/dexterity.rst:29
msgid ""
"Here is an example how to create your own add-on using the buildout below"
msgstr ""

# 37a924a93f504f2a86be7f204eff773b
#: ../develop/plone/content/dexterity.rst:36
msgid "Edit ``buildout.cfg`` and add::"
msgstr ""

# ca75f94f47174b7abdcd8ff7b68fc692
#: ../develop/plone/content/dexterity.rst:44
msgid ""
"Then rerun buildout to get your new add-on skeleton included in the "
"configuration"
msgstr ""

# f1557d1623d146c7890ced51cb9d0a2d
#: ../develop/plone/content/dexterity.rst:52
msgid "Now you can start adding content into your add-on"
msgstr ""

# 0d9164b6f67b4318b527fc6b07f5a4c8
#: ../develop/plone/content/dexterity.rst:62
msgid "Buildout example"
msgstr ""

# 7ec0721ccff3480bb7e3a3bf347eb99b
#: ../develop/plone/content/dexterity.rst:64
msgid "Below is a sample example which will install"
msgstr ""

# 41e8112756f6424a8671efea5544469b
#: ../develop/plone/content/dexterity.rst:66
msgid "Plone 4.1 beta 1"
msgstr ""

# 920cb3746a134081a0d5ce776054e261
#: ../develop/plone/content/dexterity.rst:67
msgid "Dexterity 1.0 beta 7"
msgstr ""

# 591b4c5e15a04fc8a01bc9b296487f45
#: ../develop/plone/content/dexterity.rst:68
msgid "Paster command + Dexterity templates"
msgstr ""

# 4e8a21f9a74a478b84a426edde61eae5
#: ../develop/plone/content/dexterity.rst:70
msgid "Please tune the versions according the latest available releases."
msgstr ""

# 153633f35b914a93967c1bf96a50c6cf
#: ../develop/plone/content/dexterity.rst:72
msgid "``buildout.cfg``::"
msgstr ""

# cc1ed6ab31e748709ca472b0be1eef32
#: ../develop/plone/content/dexterity.rst:186
msgid "Content creation permissions"
msgstr ""

# eb3215764bd94c7fada9a43ebc640735
#: ../develop/plone/content/dexterity.rst:188
msgid ""
"By default, (global) Dexterity content types are addable to a folder if the "
"editor has the ``cmf.AddPortalContent`` permission."
msgstr ""

# 0baaf90a92d34410a43dd8c5b345c8bc
#: ../develop/plone/content/dexterity.rst:191
msgid ""
"You might want to fine-tune permissions so that only certain privileged "
"members are allowed to create certain content types."
msgstr ""

# bd779ae89e4b45abb3214325c48989b1
#: ../develop/plone/content/dexterity.rst:194
msgid ""
"This behavior differs from Archetypes behavior where each content type was "
"automatically assigned a permission for controlling its creation."
msgstr ""

# 1f110b188a654e0b95a1a4a11c7710f6
#: ../develop/plone/content/dexterity.rst:198
msgid ""
"Create a permission with :doc:`collective.autopermission "
"</develop/plone/security/permissions>` in ``configure.zcml``"
msgstr ""

# b4262aa59dee485dbedc4a0285313944
#: ../develop/plone/content/dexterity.rst:207
msgid ""
"Make sure that this permission becomes available on your site by adding the "
"following to ``rolemap.xml``"
msgstr ""

# 2dcab3e3e2864f2c871e84001b07d0f3
#: ../develop/plone/content/dexterity.rst:222
msgid "Add in your content type GenericSetup XML"
msgstr ""

# f18a147de4384b0194790a5eacae6dce
# 7615421387c5416db82a869335fe2f97
#: ../develop/plone/content/dexterity.rst:229
#: ../develop/plone/content/listing.rst:914
msgid "Reinstall your add-on."
msgstr ""

# cd43dcf6f53c41469781429a96d70da4
#: ../develop/plone/content/dexterity.rst:231
msgid ""
"Confirm that the new permission appears on the :guilabel:`Security` tab in "
"the :term:`ZMI` root."
msgstr ""

# 56f8280bd4644938835fba7cb6edd8d2
#: ../develop/plone/content/dexterity.rst:235
msgid "Exclusion from navigation"
msgstr ""

# d8ea884cba344957ac5221512a2a717a
#: ../develop/plone/content/dexterity.rst:237
msgid ""
"This must be enabled separately for Dexterity content types with a behavior."
msgstr ""

# 88109570c567453eb3ed179ba3b7112d
#: ../develop/plone/content/dexterity.rst:247
msgid "Then you can manually also check this property::"
msgstr ""

# ea1f5cf64fd64dbbb10ab280de05172a
#: ../develop/plone/content/dexterity.rst:262
msgid "Custom add form/view"
msgstr ""

# da300543f765480ba215d0a864c4d29b
#: ../develop/plone/content/dexterity.rst:264
msgid ""
"Dexterity relies on ``++add++yourcontent.type.name`` traverser hook defined "
"in ``Products/CMFCore/namespace.py``."
msgstr ""

# 6436a2e28787498dbdca4b21a98bc173
#: ../develop/plone/content/dexterity.rst:267
msgid "It will look up a multi-adapter using this expression::"
msgstr ""

# c20fce15a5994e4faadd2fd09792aa2a
#: ../develop/plone/content/dexterity.rst:275
msgid ""
"The ``name`` parameter is the ``portal_types`` id of your content type."
msgstr ""

# 41628d1dac3f43358ad4d3b723f42f00
#: ../develop/plone/content/dexterity.rst:277
msgid "You can register such an adapter in ``configure.zcml``"
msgstr ""

# d777951c3ee44ca59628730ac353e030
#: ../develop/plone/content/dexterity.rst:298
msgid ""
"Then you can inherit from the proper ``plone.dexterity`` base classes::"
msgstr ""

# 89d86650148548a2827e1c755ec1652d
# 5101bd61f7b244be962a17827ae11a5c
#: ../develop/plone/content/dexterity.rst:317
#: ../develop/plone/members/member_basics.rst:295
msgid "See also:"
msgstr ""

# 08440dd85cf04104a70ada9b29d93e3e
#: ../develop/plone/content/dexterity.rst:319
msgid ":doc:`FTI </develop/plone/content/types>`"
msgstr ""

# c15beb090b7948dbac0f531fb80badc1
#: ../develop/plone/content/dexterity.rst:321
msgid ":doc:`z3c.form </develop/plone/forms/z3c.form>`"
msgstr ""

# be0ce5989773416c9716327942f048bf
#: ../develop/plone/content/dexterity.rst:325
msgid "Custom edit form"
msgstr ""

# bb5e745acd2c4040a14f3cc2b9c83574
#: ../develop/plone/content/dexterity.rst:342
msgid "Registering an edit form works by registering a normal browser page."
msgstr ""

# f19cc8601f7e441689cdc1ff6256fdd1
#: ../develop/plone/content/dexterity.rst:359
msgid ""
"In the example above it is important, that you give the browser page the "
"name \"edit\"."
msgstr ""

# f8dede0e52de4b448282dc45c4305ee2
#: ../develop/plone/content/dynamic_views.rst:3
msgid "Dynamic views"
msgstr ""

# c5c38129bb5342dba0b07e422c7b4d89
#: ../develop/plone/content/dynamic_views.rst:9
msgid "How to programmatically change the active view of a Plone content item"
msgstr ""

# 0a5283c516054a56b824a0e67f19724d
#: ../develop/plone/content/dynamic_views.rst:14
msgid ""
"Dynamic views are views which the content editor can choose for his or her "
"content from the :guilabel:`Display...` drop-down menu in the green edit "
"frame."
msgstr ""

# c2c41fe6c26541aba143ec01608687aa
#: ../develop/plone/content/dynamic_views.rst:18
msgid "By default, Plone comes with dynamic views for:"
msgstr ""

# 4f75f05f37e84527a919b39a2584d3d9
# 083ec20cc8a84db2b095d9827cd9c0dc
#: ../develop/plone/content/dynamic_views.rst:20
#: ../develop/plone/content/listing.rst:386
msgid "Folder listing"
msgstr ""

# 20c7170c82964ced800243636ece8b23
#: ../develop/plone/content/dynamic_views.rst:21
msgid "Summary"
msgstr ""

# d34e295d1f174537af52f046458ecb0e
#: ../develop/plone/content/dynamic_views.rst:22
msgid "Photo album"
msgstr ""

# eb9ef982c103453db8f340a4058cad28
#: ../develop/plone/content/dynamic_views.rst:25
msgid ""
"The default view can be also a content item picked from the folder. "
"Available content item types can be managed from the :term:`ZMI` at "
":guilabel:`portal_properties` -> :guilabel:`site_properties` -> "
":guilabel:`default_page_types`."
msgstr ""

# 8ca2b998ff884bb7bead7c816fa9fa0a
#: ../develop/plone/content/dynamic_views.rst:32
msgid ""
"http://stackoverflow.com/questions/9432229/enabling-folder-as-one-of-"
"default-content-item-views"
msgstr ""

# 3960a07fd62545839058f092915949d1
#: ../develop/plone/content/dynamic_views.rst:35
msgid "Permission for changing the view template of an item"
msgstr ""

# 892c5f49e93845bc98a5bc435132b404
#: ../develop/plone/content/dynamic_views.rst:37
msgid ""
"A user needs the :guilabel:`Modify view template` permission to use the "
"dynamic view dropdown. If you want to restrict this ability, grant or revoke"
" this permission as appropriate."
msgstr ""

# a5113462217b47e497cb529007a8a7e2
#: ../develop/plone/content/dynamic_views.rst:42
msgid ""
"This can be useful for some content-types like Dexterity ones, where dynamic"
" views are enabled by default, and the easiest way to disable them is using "
"this permission."
msgstr ""

# 1dcd594449f34d17b492ba18d9285e79
#: ../develop/plone/content/dynamic_views.rst:48
msgid "Default dynamic views"
msgstr ""

# 53a363f2587748e7b38af186456c0446
#: ../develop/plone/content/dynamic_views.rst:50
msgid "Plone supports a few dynamic views for folders out of the box:"
msgstr ""

# bf9b8800a9a9469080a21a12a2d0e806
#: ../develop/plone/content/dynamic_views.rst:52
msgid "Summary view (``folder_summary_view``)"
msgstr ""

# 3f968703a7db454381e6d325e8ac5779
#: ../develop/plone/content/dynamic_views.rst:53
msgid "Tabular view (``folder_tabular_view``)"
msgstr ""

# 528dc53d2b334180a06f326361f0953e
#: ../develop/plone/content/dynamic_views.rst:54
msgid "Album view (``atct_album_view``)"
msgstr ""

# dcb11439e5574b55b6c180b70c6da315
#: ../develop/plone/content/dynamic_views.rst:55
msgid "Listing (``folder_listing``)"
msgstr ""

# f5a220fd3a6848febbabe558a75c198a
#: ../develop/plone/content/dynamic_views.rst:56
msgid "Full view (``folder_full_view``)"
msgstr ""

# 694d48dd6ee8490fb0c2e7c5eab4be48
#: ../develop/plone/content/dynamic_views.rst:58
msgid ""
"These are defined in :doc:`portal_types information "
"</develop/plone/content/types>` for the *Folder* content type and mapped to "
"the *Display* menu all over in ZCML using ``browser:menuItem`` as described "
"below."
msgstr ""

# 91b25898400c4a3ab4d4a3e0d74360de
#: ../develop/plone/content/dynamic_views.rst:62
msgid "Newly created folders have this dynamic view applied:"
msgstr ""

# adb87a9959ad447892459f31108cf443
#: ../develop/plone/content/dynamic_views.rst:64
msgid ""
"``Products.CMFPlone/skins/plone_content/folder_summary_view.pt`` (a non-view"
" based old style Zope 2 page template)"
msgstr ""

# db1a5aae696642598459f1d5ea6239dd
#: ../develop/plone/content/dynamic_views.rst:69
msgid ":doc:`Overriding views </develop/plone/views/browserviews>`"
msgstr ""

# 284ab67931524e28b2caf67850fb3f06
#: ../develop/plone/content/dynamic_views.rst:72
msgid "Creating a dynamic view"
msgstr ""

# 25595a0f25d3400a9d820f43ba2a3eb6
#: ../develop/plone/content/dynamic_views.rst:74
msgid "Here are instructions how to create your own dynamic view."
msgstr ""

# 8dc517d50cdd4e04ae4fd41a82b0a8fb
#: ../develop/plone/content/dynamic_views.rst:76
msgid ""
"There is also an example product `Listless view "
"<https://github.com/miohtama/listlessview>`_, which provides \"no content "
"listing\" view for Folder content types."
msgstr ""

# d03d8f30934e40a69c052111a23620e9
#: ../develop/plone/content/dynamic_views.rst:81
msgid "Registering a dynamic view menu item"
msgstr ""

# 4cdc811359ad43ae829d130ab6788bff
#: ../develop/plone/content/dynamic_views.rst:83
msgid ""
"In order to be able to register dynamic views, your content type must "
"support them."
msgstr ""

# 02b2af99f63f414aaf7b3db390a92049
#: ../develop/plone/content/dynamic_views.rst:86
msgid ""
"To do this, the content type should subclass "
"``Products.CMFDynamicViewFTI.browserdefault.BrowserDefaultMixin``."
msgstr ""

# 17e43ef13e794caf8caf2dc90135f26c
#: ../develop/plone/content/dynamic_views.rst:89
msgid ""
"Then, you need to register a dynamic view menu item with the corresponding "
"view in your ``configure.zcml``:"
msgstr ""

# 6adfd81e0dee425a8e09b162a57461e7
#: ../develop/plone/content/dynamic_views.rst:103
msgid ""
"``Products.ATContentTypes`` uses a non-standard name for the ``interfaces`` "
"package. There, it is ``interface``, while all other packages use "
"``interfaces``."
msgstr ""

# b5012ec838364b99b72250654906af16
#: ../develop/plone/content/dynamic_views.rst:107
msgid ""
"The view must be listed in ``portal_types`` for the content type. In this "
"case, we should enable it for Archetypes folders using the following "
"GenericSetup XML: ``profiles/default/types/Folder.xml``."
msgstr ""

# b6127f732ea44930bc86d10868690740
#: ../develop/plone/content/dynamic_views.rst:111
msgid ""
"Note that you don't need to copy the whole ``Folder.xml`` / ``Topic.xml`` "
"from ``Products/CMFPlone/profiles/default/types``. Including the changed "
"``view_methods`` in the XML code is enough."
msgstr ""

# 39961e4c44e74378b29a4dcb0ad9d746
#: ../develop/plone/content/dynamic_views.rst:115
msgid "You can also change this through portal_types in the ZMI."
msgstr ""

# cd0707f5ba3941398e60e0f8ab9d6db4
#: ../develop/plone/content/dynamic_views.rst:119
msgid ""
"``view_methods`` must not have the ``@@view`` signature in their method "
"name."
msgstr ""

# 835fe52dc98041fa86b9be3bba7e58e2
#: ../develop/plone/content/dynamic_views.rst:135
msgid ""
"Also, if you want :guilabel:`Collection`\\s to have this listing, you need "
"to add the following ``profiles/default/types/Topic.xml``."
msgstr ""

# ced6ffa29f6943f59cb7d91899da6634
#: ../develop/plone/content/dynamic_views.rst:159
msgid "Working around broken default view"
msgstr ""

# ba7b980e6bd349218a1ee0c47a0ea3d2
#: ../develop/plone/content/dynamic_views.rst:161
msgid "If you manage to:"
msgstr ""

# f8042990d15a49dc80876bad0490f84d
#: ../develop/plone/content/dynamic_views.rst:163
msgid "Create a new view"
msgstr ""

# e5b7853e5dff431590f4ad5af58027fc
#: ../develop/plone/content/dynamic_views.rst:164
msgid "set it to the default as a folder"
msgstr ""

# 098ecd539f094b968126f1ad5de7bc7b
#: ../develop/plone/content/dynamic_views.rst:165
msgid "and this view has a bug"
msgstr ""

# 142af187281f4762b0fc629c32429b62
#: ../develop/plone/content/dynamic_views.rst:167
msgid ""
"... you cannot access the folder anymore, because you are taken to the "
"broken view stack trace instead instead of rendering the green edit menubar."
msgstr ""

# bbd37620710a4d55804faf34615d8382
#: ../develop/plone/content/dynamic_views.rst:170
msgid ""
"The fix is to reset the view by browsing to the ``select_default_view`` "
"directly. Access your folder like this::"
msgstr ""

# d7a3c25d7a6c429fa8386bfdbc817b1f
#: ../develop/plone/content/dynamic_views.rst:177
msgid "Checking that your view is available"
msgstr ""

# ebce903d843944b0a589c4b8a5541a90
#: ../develop/plone/content/dynamic_views.rst:179
msgid ""
"``Products.CMFDynamicViewFTI.browserdefault.BrowserDefaultMixin.getAvailableLayouts()``"
" returns the list of known layouts in the following format::"
msgstr ""

# 7497f55ee66d49dfa402640c1039692b
#: ../develop/plone/content/dynamic_views.rst:188
msgid ""
"So to see if your view is available, check it against the ids from that "
"result::"
msgstr ""

# b5b0d3e02bb1452880638db5d7146019
#: ../develop/plone/content/dynamic_views.rst:195
msgid "Getting active layout"
msgstr ""

# 335d4b22b94e4f50b5f722c77e65ceea
#: ../develop/plone/content/dynamic_views.rst:204
msgid "Changing default view programmatically"
msgstr ""

# 843f7bdd8d8a4e72a15c8fdedf76fcd6
#: ../develop/plone/content/dynamic_views.rst:211
msgid "Default page"
msgstr ""

# 6366d4a3b94b4de4b0f4bf0d4835ac01
#: ../develop/plone/content/dynamic_views.rst:213
msgid ""
"The default page is a *content item* chosen to be displayed when the visitor"
" arrives at a URL without any subpages or views selected."
msgstr ""

# 63a9184de30b4fce9091d5edf2d97e1f
#: ../develop/plone/content/dynamic_views.rst:216
msgid ""
"This is useful if you are doing the folder listing manually and you want to "
"replace the default view."
msgstr ""

# 4a2968e36c62464fa0f50e01f325e450
#: ../develop/plone/content/dynamic_views.rst:219
msgid ""
"The ``default_page`` helper view can be used to manipulate default pages."
msgstr ""

# aef5ffd40855484695bb1d11eff55658
#: ../develop/plone/content/dynamic_views.rst:221
msgid "Getting the default page::"
msgstr ""

# 9513d71c3840412bb9fe5a4f5cea2e3e
#: ../develop/plone/content/dynamic_views.rst:231
msgid "Another example how to use this::"
msgstr ""

# d15dbbbce9334f30a518bdba8871915a
#: ../develop/plone/content/dynamic_views.rst:258
msgid "Bare except?"
msgstr ""

# ecadb6df39b04d8e8e7018aa61fe90c8
#: ../develop/plone/content/dynamic_views.rst:260
msgid ""
"Setting the default page can be done as simply as setting a ``default_page``"
" attribute on the folder to the id of the default page::"
msgstr ""

# 47ccccdaeed4439c9139d8c4baa64353
#: ../develop/plone/content/dynamic_views.rst:265
msgid "More information can be found in"
msgstr ""

# 3913c3ddc6294935a04cfcf2294e9342
#: ../develop/plone/content/dynamic_views.rst:267
msgid ""
"https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/globals/context.py"
msgstr ""

# df6241ba13d74793aed4aeeb3c3b01b3
#: ../develop/plone/content/dynamic_views.rst:269
msgid ""
"https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/navigation/defaultpage.py"
msgstr ""

# dfe8814dd4ed4c32844b94bfbd0c3971
#: ../develop/plone/content/dynamic_views.rst:272
msgid "Disabling dynamic views"
msgstr ""

# 7a381e0e5a8f48be882bbf708fa5b37e
#: ../develop/plone/content/dynamic_views.rst:274
msgid "Add to your content type class::"
msgstr ""

# 696c1f43f7e140bc90ea0726d559d793
#: ../develop/plone/content/dynamic_views.rst:284
msgid "Setting a view using marker interfaces"
msgstr ""

# 838a20a748c7432b8eceec0aefe99105
#: ../develop/plone/content/dynamic_views.rst:286
msgid ""
"If you need to have a view for few individual content items only, it is best"
" to do this using marker interfaces."
msgstr ""

# 8929551a1a9d46edbceb9865af0d2b02
#: ../develop/plone/content/dynamic_views.rst:289
msgid "Register a view against a marker interface"
msgstr ""

# 7902748ab1a3411f889255402bcac46e
#: ../develop/plone/content/dynamic_views.rst:291
msgid ""
"Assign this marker interface to a content item using the Zope Management "
"Interface (:term:`ZMI`)"
msgstr ""

# 5658c98ea02e4bb69467f381a00802fe
#: ../develop/plone/content/dynamic_views.rst:294
msgid "For more info, see"
msgstr ""

# 82e0d5fda64843bcb2859155ad05a12c
#: ../develop/plone/content/dynamic_views.rst:296
msgid ""
"http://www.netsight.co.uk/blog/2010/5/21/setting-a-default-view-of-a-folder-"
"in-plone"
msgstr ""

# eb1f535fd6f94eedbbb87ee0fc3ad726
#: ../develop/plone/content/dynamic_views.rst:298
msgid ":doc:`marker interfaces </develop/addons/components/interfaces>`"
msgstr ""

# b72d14c9814a4ed7956366204bca4c35
#: ../develop/plone/content/dynamic_views.rst:302
msgid "Migration script from default view to another"
msgstr ""

# c788cde108bf44d8b92d1cbb532addda
#: ../develop/plone/content/dynamic_views.rst:304
msgid ""
"Below is a script snippet which allows you to change the default view for "
"all folders to another type. You can execute the script through the "
":term:`ZMI` as a Python Script."
msgstr ""

# 16c7a7a60034421aa980ab33ffa31bca
#: ../develop/plone/content/dynamic_views.rst:308
msgid "Script code::"
msgstr ""

# 45241e87b1c74466abc1886109c50d69
#: ../develop/plone/content/dynamic_views.rst:321
msgid ""
"This will allow you to migrate from ``collective.fancyzoom`` to Plone 4's "
"default album view or ``Products.PipBox``."
msgstr ""

# b57d0c28679d4a05a78e77de33688801
#: ../develop/plone/content/dynamic_views.rst:325
msgid "Method aliases"
msgstr ""

# c5761a56fb2c4e7abd779e676849c6f2
#: ../develop/plone/content/dynamic_views.rst:327
msgid ""
"Method aliases allow you to redirect basic actions (view, edit) to content-"
"type specific views.  Aliases are configured in ``portal_types``."
msgstr ""

# 1a36bb8146604848a76cd0d4a9b4a429
#: ../develop/plone/content/dynamic_views.rst:333
msgid ""
"http://plone.org/documentation/how-to/how-to-create-and-set-a-custom-"
"homepage-template-using-generic-setup"
msgstr ""

# 7033a027c80e48f495a97bc0306012be
#: ../develop/plone/content/dynamic_views.rst:335
msgid ""
"`CMFDynamicView plone.org product page "
"<http://plone.org/products/cmfdynamicviewfti/>`_"
msgstr ""

# e878ea4eeae646f98705babcba78e91b
#: ../develop/plone/content/events.rst:3
msgid "Eventish content types"
msgstr ""

# 8bfbbe0c5ced4a52b738f727b2a14bc4
#: ../develop/plone/content/events.rst:7
msgid "Creating and programming event and eventish content types in Plone"
msgstr ""

# 07dc79cf7ad749f5baefe9a72f4f6676
#: ../develop/plone/content/events.rst:14
msgid ""
"Plone supports events as content. Events have a start time, end time and "
"other fields. They can be exported to standard ``vCal`` (compatible with "
"Outlook) and ``iCal`` (compatible with OSX) formats. A default calendar "
"shows published events in a calendar view."
msgstr ""

# 6872f34d1e7545ff94226c170c26f77a
#: ../develop/plone/content/events.rst:21
msgid ""
"Recurring events (events repeating with an interval) are not supported out-"
"of-the-box on Plone 4.0 or older."
msgstr ""

# aa9c925565794572823b44e78f479570
#: ../develop/plone/content/events.rst:28
msgid "`vs.event <http://plone.org/products/vs.event>`_"
msgstr ""

# e167da6be0f7473cb21b96abfeb1f108
#: ../develop/plone/content/events.rst:28
msgid "recurring events for Plone 3 and 4.0"
msgstr ""

# ae6f311eedbc4bce9033681313402c64
#: ../develop/plone/content/events.rst:31
msgid "`plone.app.event <http://www.zopyx.com/blog/plone.app.event>`_"
msgstr ""

# fac70385e8ad4977b71e3f98e2dab76f
#: ../develop/plone/content/events.rst:31
msgid "recurring events for Plone 4.1+"
msgstr ""

# 7edad7de81914c87894722507cca946d
#: ../develop/plone/content/events.rst:34
msgid "`Dateable <http://plone.org/products/dateable>`_"
msgstr ""

# 4443a1b7bdc74a7a83b6008e24f8a370
#: ../develop/plone/content/events.rst:34
msgid "Plone code to bring all the different calendar extensions together"
msgstr ""

# bd335ad47edc49c5b292e25fdf247521
#: ../develop/plone/content/events.rst:36
msgid ""
"http://www.inigo-tech.com/blog/customizing-p4a.calendar-and-the-power-of-"
"collections-and-views"
msgstr ""

# f312c47b4a234ef6bd2070c796718c8f
#: ../develop/plone/content/events.rst:37
msgid ""
"http://regebro.wordpress.com/2009/01/28/ui-help-needed-recurring-events-"
"form-usability/"
msgstr ""

# df339726778b405c9bb83f71e3048660
#: ../develop/plone/content/events.rst:40
msgid "``portal_calendar``"
msgstr ""

# 7599ab024c0b4b57a593fd403b3da943
#: ../develop/plone/content/events.rst:42
msgid ""
"The ``portal_calendar`` service is provided by ``Products.CMFCalendar``. It "
"provides facilities to query the event calendar conveniently."
msgstr ""

# 8d77340aa4bb4f6584ff6964cf0f2a18
#: ../develop/plone/content/events.rst:45
msgid ""
"The most useful ``portal_calendar`` call is "
"``portal_calendar.getEventsForCalendar(month, year, "
"path=navigation_root_path)`` to get the event listing of a certain month."
msgstr ""

# 4093a83a624b4f35915be09d59c74f7c
#: ../develop/plone/content/events.rst:50
msgid "Adding a new event type to the calendar"
msgstr ""

# b6bcec7f3b174137af265fdfb9ae4496
#: ../develop/plone/content/events.rst:52
msgid ""
"Use-case: you've created a content type and want it to be shown in the "
"calendar portlet."
msgstr ""

# 659edefc5e5242d59b7967b9a6bff010
#: ../develop/plone/content/events.rst:55
msgid ""
"First add a custom import step. In ``profiles/default/import_steps.xml``"
msgstr ""

# d30ef70f7bce413f807c9e3b294dd69b
#: ../develop/plone/content/events.rst:69
msgid ""
"Then in this custom step call the ``portal_calendar`` service. Note that you"
" might want to preserve the existing event types. Plone's default event type"
" is called ``Event``."
msgstr ""

# 79897c7360ce4902a98353fc0779deee
# 85118e5f20704f1fb0831a756619de00
#: ../develop/plone/content/events.rst:73
#: ../develop/plone/functionality/expressions.rst:343
msgid "``setuphandlers.py``::"
msgstr ""

# 7911c81baf75416682099deabc13b24d
#: ../develop/plone/content/events.rst:92
msgid "Credits: ecarloshanson, optilude."
msgstr ""

# 010459dc0820458fa42f81b6c242524d
#: ../develop/plone/content/events.rst:95
msgid "Getting eventish content types"
msgstr ""

# 36c5adf8438948d39e4cabc2720e382e
#: ../develop/plone/content/events.rst:97
msgid ""
"``portal_calendar`` maintains the list of eventish content types appearing "
"in Plone calendar services."
msgstr ""

# 5cd6d59dc100463eb386da1438fcef41
#: ../develop/plone/content/events.rst:106
msgid "Getting calendar publishing states"
msgstr ""

# 5c747e24a6ae4fcf9ac5704dca8ab9aa
#: ../develop/plone/content/events.rst:108
msgid "Workflow states in which events appear in the calendar::"
msgstr ""

# 0cc703fe4f7843549a97dd027cf638b2
#: ../develop/plone/content/events.rst:113
msgid "iCal export"
msgstr ""

# 5a21cda138e442e5a481a080e7047119
#: ../develop/plone/content/events.rst:115
msgid "Plone 3+ provides ``ics_view`` which applies to:"
msgstr ""

# 2076682c985d4a40b67d3257d499ff1a
#: ../develop/plone/content/events.rst:117
msgid "Single :guilabel:`Event` content items"
msgstr ""

# 58e81e62418d449dba533b1944bd5ccf
#: ../develop/plone/content/events.rst:118
msgid ":guilabel:`Folder`\\s"
msgstr ""

# 130a40a5e48c4f5b8f93f6b7aa850a00
#: ../develop/plone/content/events.rst:120
msgid ""
"The view creates an ``iCal`` export of the content. A single exported "
"``iCal`` file (mimetype: ``text/calendar``) can contain several events. When"
" applied to a folder, the view exports all items that provide the "
"``Products.ATContentTypes.interfaces.ICalendarSupport`` interface."
msgstr ""

# 656f268d0dc04d2faf7aefd422ae88af
#: ../develop/plone/content/events.rst:128
msgid "http://stackoverflow.com/q/11862095/315168"
msgstr ""

# cae2644d4c8a4e6698e46d30dcb23dc4
#: ../develop/plone/content/events.rst:130
msgid ""
"https://github.com/plone/Products.ATContentTypes/blob/master/Products/ATContentTypes/browser/calendar.py#L25"
msgstr ""

# 5dcc95e9e20a44769f25c1ca69f551d1
#: ../develop/plone/content/events.rst:133
msgid "Purging old events"
msgstr ""

# 7bdfc55b4697430098bb191f0cbd7464
#: ../develop/plone/content/events.rst:135
msgid "After the event end day the event stays visible in Plone listings."
msgstr ""

# 8671fe29049c48e696c38c3e7dc86632
#: ../develop/plone/content/events.rst:137
msgid ""
"You need to have a special janiator script / job if you want to get old "
"events deleted from your site after they have been passed."
msgstr ""

# 04efff1fe4f74629ba014b31a889b856
#: ../develop/plone/content/events.rst:140
msgid ""
"Below is a ZMI script which will delete events which are more than 30 days "
"past their ending date::"
msgstr ""

# d27ed8c1c8ba451c893b566e6693eea2
#: ../develop/plone/content/events.rst:176
msgid "Recurrence calendar support in Plone 3"
msgstr ""

# 1876523dc6574a5884286fe3688a90e3
#: ../develop/plone/content/events.rst:178
msgid ""
"``vs.event`` has an index ``recurrence_days`` which stores the dates when "
"the recurrent event appears five years ahead of the time when the event is "
"saved."
msgstr ""

# f7d322d08e1e4e08889e8e51532882f2
#: ../develop/plone/content/events.rst:182
msgid ""
"Below is the glue code which is needed to support the recurrent event in the"
" Plone 3 calendar portlet. It combines ``vs.event``, ``plone.app.portlets`` "
"and ``Products.CMFCalendar`` bits to pull the necessary stuff together (a "
"task which was not trivial)."
msgstr ""

# c7417946e2ab4b7c8ed5f1b35c4247b8
#: ../develop/plone/content/events.rst:189
msgid "Making recurrent event appear in the calendar portlet"
msgstr ""

# d53f2356f4c0495c906b58d726ffa559
#: ../develop/plone/content/events.rst:191
msgid ""
"Below is a calendar portlet ``Renderer`` code which can be used to make "
"recurrent events appear in the standard Plone calendar portlet::"
msgstr ""

# 393e6ae775a642ebbd3576eee6026beb
#: ../develop/plone/content/events.rst:440
msgid "Beta code notice"
msgstr ""

# 116d4147a240404fb70770e1dae61e7f
#: ../develop/plone/content/events.rst:442
msgid ""
"Make sure that the ``recurrence_days`` index from ``vs.event`` is working - "
"if it isn't, check :doc:`Custom indexing example "
"</develop/plone/searching_and_indexing/indexing>` how to create your own "
"recurrency indexer. After you save your ``vs.event`` content item, you "
"should see data in the ``recurrence_days`` index through ``portal_catalog`` "
"browsing interface."
msgstr ""

# 87fa1267690f4d918145e18cfd56d64d
#: ../develop/plone/content/events.rst:453
msgid ""
"http://plone.293351.n2.nabble.com/what-s-dateable-chronos-how-to-render-"
"recurrence-events-in-a-calendar-portlet-tp5282788p5287261.html"
msgstr ""

# 5d43849a07774dddbe9037e8e172b052
#: ../develop/plone/content/events.rst:455
msgid ""
"``vs.event`` has ``KeywordIndex`` ``recurrence_days`` which contains a * "
"value created by "
"``vs.event.content.recurrence.VSRecurrenceSupport.getOccurrenceDays()``. "
"This value is a list of dates 5 years ahead when the event occurs."
msgstr ""

# efd5d465bbcf4847b6b0695fb544f045
#: ../develop/plone/content/events.rst:461
msgid ""
"Plone 3 provides a view called ``calendar_view`` (configured in * "
"``Products.CMFPlone/deprecated.zcml``) but this view is not used - do not it"
" let fool you."
msgstr ""

# 8c539512d0a94197915191bdb3f8bfbb
#: ../develop/plone/content/events.rst:465
msgid "Required :term:`ZCML` for the indexing::"
msgstr ""

# b1738e0791c44b7cabb23bab2371c8aa
#: ../develop/plone/content/history.rst:3
msgid "History and versioning"
msgstr ""

# b0305270a6ff4859b1388fa9d0af652d
#: ../develop/plone/content/history.rst:10
msgid ""
"Plone versioning allows you to go back between older edits of the same "
"content object."
msgstr ""

# 1a775612a7874c6bbc56b5d069040eb6
#: ../develop/plone/content/history.rst:12
msgid ""
"`Versioning allows you to restore and diff previous copies of the same "
"content <http://plone.org/documentation/manual/plone-3-user-manual/managing-"
"content/versioning-plone-v3.0-plone-v3.2>`_. More about `CMFEditions here "
"<http://plone.org/products/cmfeditions/documentation/refmanual/cmfeditionoverview>`_."
msgstr ""

# b8024c0461a34a90b0847310b519bc7a
#: ../develop/plone/content/history.rst:17
msgid ""
"`Versioning tutorial for custom content types "
"<http://www.uwosh.edu/ploneprojects/docs/how-tos/how-to-enable-versioning-"
"history-tab-for-a-custom-content-type/>`_."
msgstr ""

# 88db58ae1b8145c09febb10873144046
#: ../develop/plone/content/history.rst:20
msgid "Enabling versioning on your custom content type (Plone 3 ONLY)"
msgstr ""

# d3b01f5b0d05447b8ba6949c8523efa1
#: ../develop/plone/content/history.rst:24
msgid "This information applies for Plone 3 only."
msgstr ""

# c6cbbfdd8dbd42fa91f1f67bda13c21d
#: ../develop/plone/content/history.rst:26
msgid ""
"By default, version history is not enabled for custom content types. Below "
"are some notes how to enable it."
msgstr ""

# 1fb7e856f536408c8f8d54a253c6f9ca
#: ../develop/plone/content/history.rst:29
msgid "Inherit HistoryAwareMixin in your content type class::"
msgstr ""

# 3b8cab9286874e609b30b534cbe185a6
#: ../develop/plone/content/history.rst:37
msgid ""
"Add versioning migration code to your setuphandlers.py / custom import "
"steps::"
msgstr ""

# 9db0b02daf7349aea9d61d601752a941
#: ../develop/plone/content/history.rst:72
msgid ""
"To see which fields differ between versions, diff tool must be configured to"
" support your custom content types. GenericSetup support is available after "
"Plone 3.2. For older you must manually create entries in portal_diff_tool. "
"Example GenericSetup difftool.xml::"
msgstr ""

# 474bc1e47f7d4b4ea3e9c39f3897ae48
#: ../develop/plone/content/history.rst:90
msgid ""
"If you have customized the edit process of your content type, make sure that"
" your edit action traverses to update_version_before_edit.cpt. For hints how"
" to do this, see portal_form_controller actions tab. Example::"
msgstr ""

# e390bd6c5eb840d1a0c5a84575b17cad
#: ../develop/plone/content/history.rst:130
msgid ""
"If you are using custom roles you need to have at least CMFEditions: Save "
"new version permission enabled for the roles or you'll get exception::"
msgstr ""

# ace5d6d6b023435da5b2004f4647bd66
#: ../develop/plone/content/history.rst:144
msgid ""
"If your content type contains blob fields you want to version, you will need"
" to edit portal_modifier/CloneBlobs entry and add your portal type to the "
"condition field."
msgstr ""

# 78d1873ceeb14a6084443f65a38646fe
#: ../develop/plone/content/history.rst:147
msgid "For more information"
msgstr ""

# cd85c79637fa4ff0b8900afb14ca9584
#: ../develop/plone/content/history.rst:149
msgid ""
"http://plone.org/documentation/manual/developer-manual/archetypes/appendix-"
"practicals/enabling-versioning-on-your-custom-content-types"
msgstr ""

# 1af0eefd4221405a8903e7904253cdb9
#: ../develop/plone/content/history.rst:152
msgid "Checking whether versioning is enabled"
msgstr ""

# f2245d419c59423d87c6cfdc857b2d32
#: ../develop/plone/content/history.rst:154
msgid ""
"The following check is performed by update_versioning_before_edit and "
"update_versioning_on_edit scripts::"
msgstr ""

# b6f5cd8baaa042a09e0d1884a6a3743a
#: ../develop/plone/content/history.rst:168
msgid "Inspecting versioning policies"
msgstr ""

# 4fb1372182d74ff884f00b1737b3edf4
#: ../develop/plone/content/history.rst:176
msgid "Will output (inc. some custom content types)::"
msgstr ""

# cfb7e1385c7c4af2b5f4ef2442cf1267
#: ../develop/plone/content/history.rst:189
msgid "How versioning (CMFEditions) works"
msgstr ""

# 88b117147fe94ed29d563cf91d741ad8
#: ../develop/plone/content/history.rst:191
msgid ""
"http://svn.zope.de/plone.org/collective/Products.CMFEditions/trunk/doc/DevelDoc.html"
msgstr ""

# c65a61f77e6642d980e336d4cf61097b
#: ../develop/plone/content/history.rst:195
msgid ""
"You might actually want to check out the package to get your web browser to "
"properly read the file."
msgstr ""

# c8300ab03cc44d6499702e16f0ab7bea
#: ../develop/plone/content/history.rst:199
msgid "Getting the complete revision history for an object"
msgstr ""

# 7b40429d785f42f1a8452bdf140247f8
#: ../develop/plone/content/history.rst:201
msgid ""
"You may find yourself needing to (programmatically) get some/all of a "
"content object's revision history. The content history view can be utilised "
"to do this; this view is the same one that is visible through Plone's web "
"interface at ``@@contenthistory`` (or indirectly on ``@@historyview``).  "
"This code works with Plone 4.1 and has been utilised for exporting raw "
"content modification information:"
msgstr ""

# e2e543a6a2ce42cfb5f0ab7ee05252c6
#: ../develop/plone/content/history.rst:214
msgid ""
"If you want to run this from somewhere without a ``REQUEST`` available, such"
" as the *Plone/Zope debug console*, then you'll need to fake a request and "
"access level accordingly. Note the subtle change to using "
"``ContentHistoryViewlet`` rather than ``ContentHistoryView`` - we need to "
"avoid initialising an entire view because this involves component lookups "
"(and thus, pain).  We also need to fake our security as well to avoid "
"anything being left out from the history."
msgstr ""

# 354bc16e47f24681866e4af9be0508c6
#: ../develop/plone/content/history.rst:238
msgid ""
"The end result should look something like this, which has plenty of tasty "
"morsels to pull apart and use::"
msgstr ""

# e067b63ac01f4bb492fda5269ca22067
#: ../develop/plone/content/history.rst:292
msgid ""
"For instance, you can determine who the last person to modify this Plone "
"content was by looking at the first list element (and get all their details "
"from the actor information). Refer to the source of "
"``plone.app.layout.viewlets.content`` for more information about "
"``ContentHistoryView``, ``ContentHistoryViewlet`` and "
"``WorkflowHistoryViewlet``.  Using these other class definitions, you can "
"see that you can get just the workflow history using ``.workflowHistory()`` "
"or just the revision history using ``.revisionHistory()``."
msgstr ""

# 03b597ae1ee844e792233b0c968f304f
#: ../develop/plone/content/history.rst:302
msgid "Purging history"
msgstr ""

# 2da444fdeff549d5aa15539b8c66d3f0
#: ../develop/plone/content/history.rst:304
msgid ""
"http://stackoverflow.com/questions/9683466/purging-all-old-cmfeditions-"
"versions"
msgstr ""

# bf857737228c465697d47679a4d1589d
#: ../develop/plone/content/importexport.rst:3
msgid "Importing and exporting content"
msgstr ""

# 11449d4a632348699d84c5f191fef755
#: ../develop/plone/content/importexport.rst:7
msgid ""
"Importing and exporting content between Plone sites and other CMS systems"
msgstr ""

# 0184ba171f0b4d5da538a2b0fe21a8ec
#: ../develop/plone/content/importexport.rst:14
msgid "Goal: you want to import and export content between Plone sites."
msgstr ""

# 555e268ebbb247b09678a78be0c6ce60
#: ../develop/plone/content/importexport.rst:16
msgid ""
"If both sites have identical version and add-on product configuration you "
"can use Zope Management Interface export/import"
msgstr ""

# c2d00db0b9384442bd46253eb483a9a7
#: ../develop/plone/content/importexport.rst:18
msgid ""
"If they don't (e.g. have different Plone version on source and target site),"
" you need to use add-on products to export and import the content to a "
"common format, e.g. JSON files."
msgstr ""

# 1b2f438ed743417189559b0a8466b13b
#: ../develop/plone/content/importexport.rst:23
msgid "Zope 2 import / export"
msgstr ""

# 907bcd626a794a30872750665f2f9986
#: ../develop/plone/content/importexport.rst:25
msgid ""
"Zope 2 can import/export parts of the site in .zexp format which is "
"basically a Python pickle data of the exported objects. Data is raw dump of "
"Python internal data structures which means that the source and the target "
"Plone versions must be compatible regarding the data e.g. no export from "
"Plone 3 to Plone 4."
msgstr ""

# 034b76ccf75e4b2a9dda132cd81c37ba
#: ../develop/plone/content/importexport.rst:30
msgid "To export a folder from a site to another do"
msgstr ""

# e574cf465aee4abe86d5f83fc758ae46
#: ../develop/plone/content/importexport.rst:32
msgid "Go to Zope Management Interface root"
msgstr ""

# 918432927186403fb1d8a3675aa4a32a
#: ../develop/plone/content/importexport.rst:34
msgid "Checkbox a folder"
msgstr ""

# ff533005b5924ab8832ab8a4fa832388
#: ../develop/plone/content/importexport.rst:36
msgid "Press *Import / Export*"
msgstr ""

# 6fb23ec6645b4e0da552ec70d876b681
#: ../develop/plone/content/importexport.rst:38
msgid "Export as .zexp"
msgstr ""

# c3b27c60df314bd983d6dbb1c8509d9f
#: ../develop/plone/content/importexport.rst:40
msgid "Zope 2 will tell you the path where .zexp was created on the server"
msgstr ""

# 92b6678003c64ec18f9af2c09cded5df
#: ../develop/plone/content/importexport.rst:42
msgid "Zope .zexp to *youranothersite*/var/instance folder"
msgstr ""

# 3f206bb31f9846f09c9bd774bed22d39
#: ../develop/plone/content/importexport.rst:44
msgid "Go to ZMI root of your another site"
msgstr ""

# 7ae3fe8598f44c38a394318038c86f20
#: ../develop/plone/content/importexport.rst:46
msgid "Press Import / Export"
msgstr ""

# 805a1b0ecb15481d89d4960be80179a8
#: ../develop/plone/content/importexport.rst:48
msgid "In *Import from file* you should see now your .zexp file"
msgstr ""

# 6e9c49fde3e34f088270b7d2dbbcaade
#: ../develop/plone/content/importexport.rst:50
msgid "Import it"
msgstr ""

# 750a77b580ce403a94139627aa7c7e4d
#: ../develop/plone/content/importexport.rst:52
msgid ""
"Go to portal_catalog -> Advanced tab. *Clear and Rebuild* the catalog (raw "
"Zope pickle does not know about anything living inside the catalog)"
msgstr ""

# 23d0e3685bd8497688f2583129c3415c
#: ../develop/plone/content/importexport.rst:57
msgid ""
"On it's own `collective.transmogrifier "
"<https://pypi.python.org/pypi/collective.transmogrifier>`_ isn't an import "
"tool, rather a generic framework for creating pipelines to process data. "
"Pipeline configs are .ini-style files that join together blueprints to "
"quickly create a tool for processing data."
msgstr ""

# 329418edfd404a5c94e891e0b1a3a15b
#: ../develop/plone/content/importexport.rst:61
msgid "The following add-ons make it useful in a Plone context:"
msgstr ""

# 007a8f0eb76146528f01e560b1e413b1
#: ../develop/plone/content/importexport.rst:63
msgid ""
"`plone.app.transmogrifier "
"<https://pypi.python.org/pypi/plone.app.transmogrifier>`_ provides "
"integration with GenericSetup, so you can run pipelines as part of import "
"steps, and some useful blueprints."
msgstr ""

# 433870a061234b6cb37c319131f1055e
#: ../develop/plone/content/importexport.rst:66
msgid ""
"`quintagroup.transmogrifier "
"<http://projects.quintagroup.com/products/wiki/quintagroup.transmogrifier>`_"
" also provides it's own Plone integration, and some useful blueprints. See "
"the site for some example configs for migration."
msgstr ""

# a9126cb0ae78402890aea18920534f7a
#: ../develop/plone/content/importexport.rst:69
msgid ""
"`transmogrify.dexterity "
"<https://github.com/collective/transmogrify.dexterity>`_ provides some "
"blueprints relevant to Dexterity types, and has some default pipelines for "
"you to use."
msgstr ""

# 57d05681c72746a09676d3281d7be6d5
#: ../develop/plone/content/importexport.rst:73
msgid "transmogrify.dexterity: CSV import"
msgstr ""

# 765b865920be41798d8a0b61dd6af9e2
#: ../develop/plone/content/importexport.rst:75
msgid ""
"``transmogrify.dexterity`` will register the pipeline "
"``transmogrify.dexterity.csvimport``, which can be used to import from CSV "
"to dexterity objects."
msgstr ""

# 0227a76e80a54524956ac53a5635aac7
#: ../develop/plone/content/importexport.rst:78
msgid ""
"For more information on using, see `the package documentation "
"<https://github.com/collective/transmogrify.dexterity>`_."
msgstr ""

# 0db0f89100fc4e329babb069a7b91fd0
#: ../develop/plone/content/importexport.rst:81
msgid "transmogrify.dexterity: JSON import/export"
msgstr ""

# c0e653501ffb4f56a120ab30f8c94e96
#: ../develop/plone/content/importexport.rst:83
msgid ""
"``transmogrify.dexterity`` also contains some ``quintagroup.transmogrifier``"
" pipeline configs. To use these, first install both "
"``quintagroup.transmogrifier`` and ``transmogrify.dexterity``, then add the "
"following to your ZCML::"
msgstr ""

# 75ace75dc4fa407f939e7aae687ac561
#: ../develop/plone/content/importexport.rst:89
msgid ""
"Then the \"Content (transmogrifier)\" generic setup import / export will "
"import / export site content to JSON files."
msgstr ""

# 5d9f543d073d46249f7f54ee38c78f26
#: ../develop/plone/content/importexport.rst:91
msgid ""
"For more information on using, see `this transmogrify blog post "
"<http://shuttlethread.com/blog/development-with-transmogrify.dexterity>`_."
msgstr ""

# 5957b23930e542d0a1cdffa24603673a
#: ../develop/plone/content/importexport.rst:94
msgid "quintagroup.transmogrifier: Exporting single folder only"
msgstr ""

# 0e847ee7a0a44e278d3f26bfb541e6b7
#: ../develop/plone/content/importexport.rst:96
msgid ""
"Here is explained how to export and import `Plone CMS <http://plone.org>`_ "
"folders between different Plonen versions, or different CMS systems, using  "
"XML based content marshalling and `quintagroup.transmogrifier "
"<http://projects.quintagroup.com/products/wiki/quintagroup.transmogrifier>`_."
msgstr ""

# 4f9ec75b0e0a44fdb6f703a05ecb508c
#: ../develop/plone/content/importexport.rst:101
msgid ""
"This overcomes some problems with Zope management based export/import which "
"uses `Python pickles <http://docs.python.org/library/pickle.html>`_ and thus"
" needs identical codebase on the source and target site. Exporting and "
"importing between Plone 3 and Plone 4 is possible."
msgstr ""

# f783527f42754686991805593ca19e25
#: ../develop/plone/content/importexport.rst:105
msgid ""
"You can limit export to cover source content to with arbitrary "
":doc:`portal_catalog </develop/plone/searching_and_indexing/query>` "
"conditions. If you limit source content by path you can effectively export "
"single folder only."
msgstr ""

# 964faaa039be4ae5a2ca2fcc45fa25ee
#: ../develop/plone/content/importexport.rst:108
msgid ""
"The recipe described here assumes the exported and imported site have the "
"same path for the folder. Manually rename or move the folder on source or "
"target to change its location."
msgstr ""

# 455e4812948846b7a495ef99dd186efd
#: ../develop/plone/content/importexport.rst:113
msgid ""
"The instructions here requires quintagroup.transmogrify version 0.4 or "
"later."
msgstr ""

# cc5a8438f12f41c49a1463e2d719b429
#: ../develop/plone/content/importexport.rst:116
msgid "Source site"
msgstr ""

# 8d84ae321846431f86dbbe27187c7333
#: ../develop/plone/content/importexport.rst:118
msgid "Execute these actions on the source Plone site."
msgstr ""

# 3d6cb096095f40728455f268e2e1ee7b
# ece612b91a01408ba4e029f5a0c2361c
#: ../develop/plone/content/importexport.rst:120
#: ../develop/plone/content/importexport.rst:179
msgid ""
"Install ``quintagroup.transmogrifier`` via buildout and Plone add-on control"
" panel."
msgstr ""

# 07f2c7226b6345e4b459bd5b97d65d95
#: ../develop/plone/content/importexport.rst:122
msgid "Go to *Site setup* > *Content migration*."
msgstr ""

# 4e2088b99e384c8eafe948b7c20bbeb2
#: ../develop/plone/content/importexport.rst:124
msgid ""
"Edit export settings. Remove unnecessary pipeline entries by looking the "
"example below. Add a new ``catalogsource`` blueprint. The ``exclude-"
"contained`` option makes sure we do not export unnecessary items from the "
"parent folders::"
msgstr ""

# 9afb27db803b40a3a6beea33a4c664ad
#: ../develop/plone/content/importexport.rst:141
msgid ""
"Also we need to include some field-level excluding bits for the folders, "
"because the target site does not necessary have the same content types "
"available as the source site and this may prevent setting up folderish "
"content settings::"
msgstr ""

# 9f52be5b683546b894e9c2724ccf7d8d
#: ../develop/plone/content/importexport.rst:151
msgid ""
"You might want to remove other, unneeded blueprints from the export "
"``pipeline``. For example, ``portletexporter`` may cause problems if the "
"source and target site do not have the same portlet code."
msgstr ""

# ff220971b7c54f2b98195f649c63f908
#: ../develop/plone/content/importexport.rst:155
msgid ""
"Go to *Zope Management Interface* > *portal_setup* > *Export* tab. Check "
"Content (transmogrifier) step. Press *Export Selected Steps* at the bottom "
"of the page. Now a .tar.gz file will be downloaded."
msgstr ""

# 03dc6ae07318453abce9fe4cfcf5e064
#: ../develop/plone/content/importexport.rst:158
msgid ""
"During the export process ``instance.log`` file is updated with status info."
" You might want to follow it in real-time from UNIX command line"
msgstr ""

# b461bdc7532b44898d7c40a136dab229
#: ../develop/plone/content/importexport.rst:165
msgid "In log you should see entries running like::"
msgstr ""

# f73e7bbe29a74267977ea56e651837a3
#: ../develop/plone/content/importexport.rst:175
msgid "Target site"
msgstr ""

# fd9601a3e5f045c48eba37fd8ade0009
#: ../develop/plone/content/importexport.rst:177
msgid "Execute these actions on the target Plone site."
msgstr ""

# e486f508c5bb4ecdba6f89c2eb9b8d91
#: ../develop/plone/content/importexport.rst:181
msgid ""
"Open target site ``instance.log`` file for monitoring the import process"
msgstr ""

# bbfedb52602a41d699344e9172ebd657
#: ../develop/plone/content/importexport.rst:187
msgid "Go to *Zope Management Interface* > *portal_setup* > *Import* tab."
msgstr ""

# 2692d0a6896d490a807b1aff8ea74b9d
#: ../develop/plone/content/importexport.rst:189
msgid ""
"Choose downloaded ``setup_toolxxx.tar.gz`` file at the bottom of the page, "
"for *Import uploaded tarball* input."
msgstr ""

# ea1ff6d4e4ab49f3bfa11e9a47ae440b
#: ../develop/plone/content/importexport.rst:192
msgid ""
"Run import and monitoring log file for possible errors. Note that the import"
" completes even if the target site would not able to process incoming "
"content. If there is a serious problem the import seems to complete "
"successfully, but no content is created."
msgstr ""

# 376b357a009e4e3aaeb1fc04a8f9feb1
#: ../develop/plone/content/importexport.rst:199
msgid ""
"Currently export/import is not perfect. For example, ZMI content type icons"
"  are currently lost in the process. It is recommended to do a test run on a"
" staging server before doing this process on a production server. Also, the "
"item order in the folder is being lost."
msgstr ""

# 1d52e7aa1b3a4b419b25249349d03471
#: ../develop/plone/content/importexport.rst:207
msgid ""
":doc:`How to perform portal_catalog queries "
"</develop/plone/searching_and_indexing/query>`"
msgstr ""

# 1daea209daca42248163b89ff715550c
#: ../develop/plone/content/importexport.rst:209
msgid ""
"http://webteam.medsci.ox.ac.uk/integrators-developers/transmogrifier-i-want-"
"to-.../"
msgstr ""

# df9b429b2a034d66b1f4fd4681e2b141
#: ../develop/plone/content/importexport.rst:211
msgid ""
"https://svn.plone.org/svn/collective/quintagroup.transmogrifier/trunk/quintagroup/transmogrifier/catalogsource.py"
msgstr ""

# 00ba98737b6749ba8189e85e8a5f8228
#: ../develop/plone/content/importexport.rst:214
msgid "Fast content import"
msgstr ""

# 0479754b4a034d0380b99a2b89c35005
#: ../develop/plone/content/importexport.rst:217
msgid ""
"For specific use-cases, you can create 'brains' first and import later * See"
" `this blog post <http://blog.redturtle.it/redturtle-blog/fast-content-"
"import>`_"
msgstr ""

# 17bc3240947f421fa4fc24bcf8fb2118
#: ../develop/plone/content/importexport.rst:222
msgid "collective.jsonmigrator"
msgstr ""

# d4ce561c9e2d4cb4b7a003ab1226c56b
#: ../develop/plone/content/importexport.rst:224
msgid "Convert Plone content to JSON and move it between sites."
msgstr ""

# fc7fb9fc10fe47a5b197397d73b5835f
#: ../develop/plone/content/importexport.rst:228
msgid "https://github.com/collective/collective.jsonmigrator"
msgstr ""

# 23f9089e72114352beba3bd2beba32af
#: ../develop/plone/content/importexport.rst:230
msgid "https://github.com/collective/collective.jsonify"
msgstr ""

# f9d7ea1098b64383a5b442c552df7266
#: ../develop/plone/content/importexport.rst:232
msgid ""
"http://stackoverflow.com/questions/13721016/exporting-plone-archetypes-data-"
"in-json"
msgstr ""

# c17b984bdc1444169894f67af8bb28ba
#: ../develop/plone/content/importexport.rst:235
msgid "Simple JSON export"
msgstr ""

# 1734786196e44eb1833ec281f21eca50
#: ../develop/plone/content/importexport.rst:237
msgid ""
"Below is a simple helper script / BrowserView for a JSON export of Plone "
"folder content. Works Plone 3.3+. It handles also binary data and nested "
"folders."
msgstr ""

# 11547f4c547047c79e1444171fc168fc
#: ../develop/plone/content/importexport.rst:240
msgid "export.py::"
msgstr ""

# 3232633802a24289948de7cd598a92fd
#: ../develop/plone/content/index.rst:3
msgid "Content management"
msgstr ""

# 5dea02db9c97499f9797ecb020f0edc8
#: ../develop/plone/content/index.rst:5
msgid ""
"In Plone, User editable objects are content objects. Content objects have "
"different flavours depending on their type."
msgstr ""

# c488765bfad54161a3e5ead51be4800e
# 53c3dec7345f462f9bf8edad3601b423
# 7d162ed8264b45e7bf1b5c70012743ca
# 1f27f9aa65fb49a5a5c26b67577328b9
#: ../develop/plone/content/index.rst:8
#: ../develop/plone/i18n/internationalisation.rst:389
#: ../develop/plone/serving/http_request_and_response.rst:549
#: ../develop/plone/views/layers.rst:18
msgid "Examples:"
msgstr ""

# 919b83117ac74bb1bf9feaf466028365
#: ../develop/plone/content/index.rst:10
msgid "Pages (ATDocument class)"
msgstr ""

# 4193fb4611a248ddb27b27d45ab32078
#: ../develop/plone/content/index.rst:12
msgid "Images (ATImage class)"
msgstr ""

# ee2fd1b0cea749c7b39093a9325a9c3a
#: ../develop/plone/content/index.rst:14
msgid "News items"
msgstr ""

# a26b537646e3471e932ed9184e0649d9
#: ../develop/plone/content/index.rst:20
msgid "There are two different subsystems to create content objects in Plone"
msgstr ""

# f0de56bcc1d0477c8e036d51ff7cdd1f
#: ../develop/plone/content/index.rst:22
msgid "Archetypes (Plone 2.x and Plone 3.x)"
msgstr ""

# b06427d6e4bf43c594ebbfe6a6825740
#: ../develop/plone/content/index.rst:24
msgid "Dexterity (Plone 4.x and Plone 3.x)"
msgstr ""

# f8ac94a145ce4b97bc791c2a0d93f370
#: ../develop/plone/content/listing.rst:3
msgid "Listing objects"
msgstr ""

# 4fe10456e6d94a3c9fc67352ea50ef99
#: ../develop/plone/content/listing.rst:7
msgid "How to programmatically generate folder listings in Plone."
msgstr ""

# cf031238383c44d78eb501c205f095a8
#: ../develop/plone/content/listing.rst:14
msgid ""
"Plone has several methods of getting the list of folder items, depending on "
"whether:"
msgstr ""

# 15d94fdd0fa140aab9055acdc1709f1c
#: ../develop/plone/content/listing.rst:17
msgid ""
"you want to get all items, or only items visible for the currently logged in"
" user;"
msgstr ""

# a80b5aa36a5340b8a4d1ac7af1c7417d
#: ../develop/plone/content/listing.rst:19
msgid ""
"you want to get hold of the item objects themselves or just indexed metadata"
" (the latter is faster);"
msgstr ""

# 2b85c5c02f574140a942d1130015c4c1
#: ../develop/plone/content/listing.rst:23
msgid ""
"you want to get Plone's contentish items only (``contentItems``) or Zope 2 "
"management objects too (``objectIds``); the latter covers various site "
"utilities found in the portal root and otherwise hidden magical items."
msgstr ""

# 588a9f7c30d941cabeb55db6e19eaa77
#: ../develop/plone/content/listing.rst:28
msgid ""
"Special attention must be paid also to object ids. Zope locates all objects "
"by traversing the site graph using ids. The id mapping is usually a property"
" of a *parent* object, not the child. Thus most of the listing methods tend "
"to return ``(id, object)`` tuples instead of plain objects."
msgstr ""

# 6f77fdb151d34b6c911320105f5dcb7b
#: ../develop/plone/content/listing.rst:35
msgid "Ensuring that the content item is a folder"
msgstr ""

# 18360aefc3524c6686f74b3b26c29262
#: ../develop/plone/content/listing.rst:37
msgid ""
"All Plone folderish content types provide the ``IFolderish`` interface. "
"Check that this is present to make sure that a content item is a folder, and"
" that ``contentItems()`` and the other methods are available::"
msgstr ""

# 593fba775b4a4899847e1799b5529ef9
#: ../develop/plone/content/listing.rst:64
msgid "Getting all content objects inside a folder"
msgstr ""

# 67f7ffef5f2144b9ae8117480eb62244
#: ../develop/plone/content/listing.rst:66
msgid ""
"The ``contentItems`` method is defined in ``CMFCore/PortalFolder.py``. From "
"Plone 4 and later, you can also use ``folder.items()`` instead (this applies"
" to the whole section below). See source code for details, e.g. filtering "
"and other forms of listing."
msgstr ""

# 95073cdeb417485ca7b310933d7b8f35
#: ../develop/plone/content/listing.rst:72
msgid "Querying folder through catalog"
msgstr ""

# 9adfb3c194f84998b9c31c65551a5a02
#: ../develop/plone/content/listing.rst:74
msgid "These methods apply for real folders, and not for collections."
msgstr ""

# 51aeca4c29dd4f90bc91703bf49f2966
#: ../develop/plone/content/listing.rst:77
msgid "Getting indexed objects"
msgstr ""

# fe8301eac4cf4aa48e1060e0d14530f2
#: ../develop/plone/content/listing.rst:79
msgid ""
"This is a faster method. ``portal_catalog`` must be up-to-date for the "
"folder. This will return :doc:`brain objects "
"</develop/plone/searching_and_indexing/query>`::"
msgstr ""

# aeffe40e2b9b40efa71ad2aaff17ca96
#: ../develop/plone/content/listing.rst:85
msgid "Getting full objects"
msgstr ""

# 522f2709de304a259ed1f4fa68c0165b
#: ../develop/plone/content/listing.rst:93
msgid ""
"The ``contentItems()`` call may be costly, since it will return the actual "
"content objects, not the indexed metadata from the ``portal_catalog``. You "
"should avoid this method if possible."
msgstr ""

# bb1f0678187f4d22b2e352c0ac41b28d
#: ../develop/plone/content/listing.rst:100
msgid ""
"``folder.contentItems()`` returns all items regardless of the user security "
"context."
msgstr ""

# e4cbd9826a6c499497aa5a2052dbe4ea
#: ../develop/plone/content/listing.rst:103
msgid "Getting folder objects filtered"
msgstr ""

# 1761196a130e4a4d9f218046b92c8948
#: ../develop/plone/content/listing.rst:105
msgid ""
"The ``listFolderContents()`` method retrieves the content objects from the "
"folder. It takes ``contentFilter`` as an argument to specify filtering of "
"the results. ``contentFilter`` uses the same syntax as ``portal_catalog`` "
"queries, but does not support all the same parameters; e.g. "
"``object_provides`` is not supported. See the `ContentFilter class "
"<http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/PortalFolder.py?view=markup>`_"
" for details."
msgstr ""

# 1e88a51fe81c4b1ba584172b0427afe3
#: ../develop/plone/content/listing.rst:123
msgid ""
"Security warning: ``listFolderContents()`` honors the currently logged-in "
"user roles."
msgstr ""

# 3349be3a248c4342b1a14da7e026990d
#: ../develop/plone/content/listing.rst:128
msgid ""
"Performance warning: slow for large folders. Rather use ``portal_catalog`` "
"and path-based queries to query items in a large folder."
msgstr ""

# 7ada1acfce3b4ff28e4b80e15a27f9d3
#: ../develop/plone/content/listing.rst:133
msgid "Rules for filtering items"
msgstr ""

# 5a0cb1c6ac9f42e1a6ee269c418398b4
#: ../develop/plone/content/listing.rst:135
msgid "Plone applies some default rules for ``listFolderContents()``"
msgstr ""

# 3b04695abed444f8a402a19757b73cef
#: ../develop/plone/content/listing.rst:137
msgid ""
"``portal_properties.nav_tree_properties.metaTypesNotToQuery``: folders "
"(large folders) don't generate listing."
msgstr ""

# 6f6f3c0c21a845a8a737c20e2902883b
#: ../develop/plone/content/listing.rst:140
msgid ""
":doc:`default_page </develop/plone/content/dynamic_views>` are not listed."
msgstr ""

# 1dc2a2ccb3314db5afd6f67ead058e0f
#: ../develop/plone/content/listing.rst:142
msgid ""
"``portal_properties.nav_tree_properties``: meta types marked here do not "
"appear in the listing."
msgstr ""

# 2516d8722d28428c879d763d0d7707ed
#: ../develop/plone/content/listing.rst:146
msgid "Why does ``folder_listing`` not list my contents?"
msgstr ""

# 27ef845544b948e9b3148318206cafa9
#: ../develop/plone/content/listing.rst:148
msgid ""
"The site search settings (*Site Setup*--> *Search*) modifies the way "
"``folder_listing`` works."
msgstr ""

# 6d4f89ff001d44e1807fe52ea9897aaf
#: ../develop/plone/content/listing.rst:151
msgid ""
"So for example, if you specifify that you do not want to search objects of "
"type *Page*, they will not appear in ``folder_listing`` anymore."
msgstr ""

# ea0131d4dc894a12bc1c9b2151459463
#: ../develop/plone/content/listing.rst:154
msgid ""
"From `this thread <http://lists.plone.org/pipermail/plone-product-"
"developers/2012-March/thread.html#11436>`_."
msgstr ""

# 6d2b8034204d46d5aa76f7cf8ea28d49
#: ../develop/plone/content/listing.rst:158
msgid ""
"orderObjects() to set a key for ordering the items in a particular folder"
msgstr ""

# 405dc8c269524974ab1bdfd6257c6124
#: ../develop/plone/content/listing.rst:160
msgid ""
"With Plone 4+ an adapter can be registered and used to apply a custom order "
"to a particular folder: see ``setOrdering``. The ``DefaultOrdering`` adapter"
" allows a key to be set for a particular folder, and optionally to reverse "
"the order. This can be adjusted via a method on the folder::"
msgstr ""

# a9114399e5504a40b7144c6eb3252091
#: ../develop/plone/content/listing.rst:170
msgid ""
"Unlike the python sort() and sorted() methods, the key parameter expects an "
"attribute, not a function."
msgstr ""

# 7efd5f53756248ff81658284d8c8cf6c
#: ../develop/plone/content/listing.rst:176
msgid "Enforcing manual sort order"
msgstr ""

# 28a8d0e9f38c48da80876598c2ce998f
#: ../develop/plone/content/listing.rst:178
msgid ""
"Below is an example of how to order content items by their manual sort order"
" (the one you create via drag and drop on the contents tab)::"
msgstr ""

# 85f4f1a4564d44d798c7eae42ec2dcf2
#: ../develop/plone/content/listing.rst:207
msgid "Getting object ids"
msgstr ""

# cf0f14ad891e42c0996346ce209d84d5
#: ../develop/plone/content/listing.rst:209
msgid ""
"If you need to get ids only, use the ``objectIds()`` method, or ``keys()`` "
"in Plone 4. This is a fast method::"
msgstr ""

# ef2f1fd8ee5d4fa6a3dc6063c978046f
#: ../develop/plone/content/listing.rst:219
msgid ""
"``objectIds()`` and ``keys()`` will return ids for raw Zope 2 objects too, "
"not just Plone content.  If you call ``objectIds()`` on the portal root "
"object, you will get objects like ``acl_users``, ``portal_workflow`` and so "
"on ..."
msgstr ""

# 88a49352d55e480bb062e05abc5b8180
#: ../develop/plone/content/listing.rst:226
msgid "Getting non-contentish Zope objects"
msgstr ""

# e7df6af5ca084c45b0810b1464a1650d
#: ../develop/plone/content/listing.rst:228
msgid ""
"In some special cases, it is necessary to manipulate non-contentish Zope "
"objects."
msgstr ""

# f91261b44ee74a84b0f336ab7426f7a8
#: ../develop/plone/content/listing.rst:230
msgid ""
"This listing method applies to all `OFS.Folder.Folder objects "
"<http://svn.zope.org/Zope/trunk/src/OFS/interfaces.py?rev=96262&view=auto>`_,"
" not just Plone content objects::"
msgstr ""

# b1f380a16cb048988fedcdb5bd7a4349
#: ../develop/plone/content/listing.rst:241
msgid "Checking for the existence of a particular object id"
msgstr ""

# 37d74ad9a52849b2931adce0863e9485
#: ../develop/plone/content/listing.rst:243
msgid ""
"If you want to know whether the folder has a certain item or not, you can "
"use the following snippet."
msgstr ""

# 13b8ac3221a2475dba33986cb35d26f0
# 119314d6f8ea48d8a7286e1a67f8343a
#: ../develop/plone/content/listing.rst:247
#: ../develop/plone/i18n/internationalisation.rst:278
msgid "Plone 4"
msgstr ""

# b8b6e11ea4864e78a228a48cf7104f9e
#: ../develop/plone/content/listing.rst:249
msgid "Use ``has_key``::"
msgstr ""

# 1a84ab65ff8249209d7ab75d919c138b
# 2792c54a55d646a68ab65da8184653b5
#: ../develop/plone/content/listing.rst:257
#: ../develop/plone/i18n/internationalisation.rst:297
msgid "Plone 3"
msgstr ""

# b381929c919a4c2e92c77824efa87fd5
#: ../develop/plone/content/listing.rst:259
msgid ""
"There is a special case for Large Plone Folders (BTree-based). The following"
" is optimal code, but you can simplify it if you don't need to check if the "
"folder is a ``BTreeFolder``::"
msgstr ""

# 73a3fff51c4e48ca8891b5d4ec33b667
#: ../develop/plone/content/listing.rst:277
msgid "Listing the folder items using ``portal_catalog``"
msgstr ""

# c1e77017a9c54812a8120040b1a59193
#: ../develop/plone/content/listing.rst:279
msgid ""
"This should be your preferred method for querying folder items. "
"``portal_catalog`` searches are fast, because they return catalog brain "
"objects instead of the real content objects (less database look ups)."
msgstr ""

# 8dc99041363547b6b536a03405f93580
#: ../develop/plone/content/listing.rst:286
msgid ""
"Returned catalog brain data, such as ``Title``, will be UTF-8 encoded. You "
"need to call ``brain[\"title\"].decode(\"utf-8\")`` or similar on all text "
"you want to extract from the data."
msgstr ""

# c9bf002329ee4be389272d700e2c0986
#: ../develop/plone/content/listing.rst:290
msgid "Simple example how to get all items in a folder::"
msgstr ""

# 83a12d64586b4458bc0de33647b7a3cd
#: ../develop/plone/content/listing.rst:307
msgid ""
"Here's a complex example of how to perform various filtering operations, "
"honouring some default Plone filtering rules. This example is taken from "
"``Products.CMFPlone/skins/plone_scripts/getFolderContents``::"
msgstr ""

# 48c45ee94d8a40e5bc8102eaf9247cee
#: ../develop/plone/content/listing.rst:351
msgid "Count of content items"
msgstr ""

# 3fe1ca1b63e84e03882ac9c9c2fd0745
#: ../develop/plone/content/listing.rst:354
msgid "Counting items using ``getFolderContents``"
msgstr ""

# 653df0aa89124a4e93d68dae84959638
#: ../develop/plone/content/listing.rst:356
msgid ""
"The least expensive call for this, if you have tens of items, is to call "
"``len()`` on the result of calling ``getFolderContents()``, which is a "
"``portal_catalog`` based query::"
msgstr ""

# 885f8015819c469f8ee850bedb5c0686
#: ../develop/plone/content/listing.rst:363
msgid "Counting items using ``contentItems``"
msgstr ""

# 0ef012f3196248dca50e2ff49f7dd3b2
#: ../develop/plone/content/listing.rst:365
msgid ""
"Alternatively, if you know there are not many objects in in the folder, you "
"can call ``contentItems()`` (or simply ``items()`` in Plone 4 or newer), as "
"this will potentially wake fewer items than a complex catalog query."
msgstr ""

# dfbf47a8d33d460b8ae6b132f1392282
#: ../develop/plone/content/listing.rst:371
msgid "Security: This method does not consider access rights."
msgstr ""

# 6c846dbfa87245e68ef5854f06ed95b7
#: ../develop/plone/content/listing.rst:373
msgid "Example (AT content class method)::"
msgstr ""

# eb580bbf66d94365bef444eabe84c4b2
#: ../develop/plone/content/listing.rst:382
msgid "Navigational view URL"
msgstr ""

# b9b8de80a4d7473bade11bf9bd72cc91
#: ../develop/plone/content/listing.rst:384
msgid "Plone has a special default navigation URL which is used in"
msgstr ""

# 9248a47469664af697ecb104d28c37cd
#: ../develop/plone/content/listing.rst:388
msgid "Navigation tree"
msgstr ""

# 9478cc38b887430eb67c1a9318999727
#: ../develop/plone/content/listing.rst:390
msgid ""
"It is not necessarily the object URL itself (``/folder/item``), but can be "
"e.g. ``/folder/item/@@yourcustomview``"
msgstr ""

# d584f7de96504dcf850f18afbea6ace8
#: ../develop/plone/content/listing.rst:393
msgid ""
"The view action URL must be configured in ``portal_types`` and separately "
"enabled for the content type in ``site_properties``."
msgstr ""

# ea355fc3a25a4a7fb7ca4a6744538b12
# 997330dec83a458a878031de2412f22d
# 68ba2ca6dd16435e828c4972f98c5b1b
#: ../develop/plone/content/listing.rst:396
#: ../develop/plone/searching_and_indexing/indexing.rst:216
#: ../develop/plone/serving/xmlrpc.rst:31
msgid "For more information see"
msgstr ""

# 05f3ace28eb14deaa82a37638805a595
#: ../develop/plone/content/listing.rst:398
msgid ""
"http://stackoverflow.com/questions/12033414/change-link-in-contents-listing-"
"for-custom-content-type#comment16065296_12033414"
msgstr ""

# 14ae04b54952454b88a2a4747a609913
#: ../develop/plone/content/listing.rst:401
msgid "Custom folder listing"
msgstr ""

# abb55625a2fc488e9f3375d5a6dd260e
#: ../develop/plone/content/listing.rst:403
msgid ""
"Here is an example how to create a view which will render a custom listing "
"for a folder or a collection (``ATTopic``)."
msgstr ""

# a6f01ec6a69541e392670410f60d9a9d
#: ../develop/plone/content/listing.rst:406
msgid ""
"The view is called ``ProductSummaryView`` and it is registered with the name"
" ``productsummary``. This example is not suitable for your add-on product as"
" is: you need to tailor it for your specific needs."
msgstr ""

# 77673f3a769d4463abe3b30491b1439a
#: ../develop/plone/content/listing.rst:413
msgid ""
"If you are going to call ``item/getObject`` on a catalog brain, it might "
"cause excessive database load as it causes a new database query per object. "
"Try use information available in the catalog or add more catalog indexes. To"
" know more about the issue read about waking up database objects."
msgstr ""

# 8da096ef7a704b97b386f19c7e5aafb3
#: ../develop/plone/content/listing.rst:420
msgid ""
"First, let's register our view. We could limit content types for which the "
"view is enabled by specifying "
"``Products.ATContentTypes.interface.IATFolder`` or "
"``Products.ATContentTypes.interface.IATTopic`` in the ``for`` attribute. Cf."
" the ``configure.zcml`` snippet below:"
msgstr ""

# 56e2082b230c40b7b554428c781fab83
#: ../develop/plone/content/listing.rst:437
msgid ""
"Below is the example view code, named as ``productcardsummaryview.py``::"
msgstr ""

# a09dccd391904ed892cc653e41fb7059
#: ../develop/plone/content/listing.rst:519
msgid ""
"Below is the corresponding page template skeleton "
"``productcardsummaryview.pt``:"
msgstr ""

# fe44a1bbdfcb407697699fddde15eb7e
#: ../develop/plone/content/listing.rst:624
msgid "Go to view page by adding ``/@@productsummary`` to your folder URL."
msgstr ""

# b43bda79b6fe47f1bdd751c4f3d2e54a
#: ../develop/plone/content/listing.rst:627
msgid "Making view available in the :guilabel:`Display...` menu"
msgstr ""

# 0f085cf6338f41bd989fa11e25713302
#: ../develop/plone/content/listing.rst:629
msgid ""
"You need to add the ``browser:menuItem`` entry to make your view appear in "
"the :guilabel:`Display...` menu from which folders and topics can choose the"
" style of the display."
msgstr ""

# 9d60f25ac37a416694259898147ed82a
#: ../develop/plone/content/listing.rst:633
msgid "See :doc:`dynamic views </develop/plone/content/dynamic_views>`."
msgstr ""

# c04504760bb14182925368b0d34e579d
#: ../develop/plone/content/listing.rst:635
msgid "You need to add:"
msgstr ""

# 476825e473964b47b6cfb7cae10dfcc2
#: ../develop/plone/content/listing.rst:637
msgid ""
"``<browser:menuItem>`` configuration directive with view id (e.g. "
"``@@productsummary``)"
msgstr ""

# e1f3e88f2c1d4f3393d453d18ab7566f
#: ../develop/plone/content/listing.rst:640
msgid ""
"New properties to ``Folder.xml`` or ``Topic.xml`` so that the view becomes "
"available"
msgstr ""

# 123ebe3e8faf4361b9c32944d358b711
#: ../develop/plone/content/listing.rst:644
msgid "Preventing folder listing"
msgstr ""

# a53669eb0c4140f2ab8cc6c6dfe8aa82
#: ../develop/plone/content/listing.rst:646
msgid ""
"If the users can access the content items they can usually also list them."
msgstr ""

# 489c7753f2cc488aa1a83404c1e08d5e
#: ../develop/plone/content/listing.rst:648
msgid ""
"Here is a no-warranty hack how to prevent ``folder_listing`` if needed::"
msgstr ""

# 143be26ead294b4194ce5797ca5cd990
#: ../develop/plone/content/listing.rst:675
msgid "Complex folder listings and filtering"
msgstr ""

# 9314d5182cf24ae0b6625c2ce02a61b7
#: ../develop/plone/content/listing.rst:677
msgid ""
"The following example is for a very complex folder listing view. You can "
"call view methods to returns the listed items themselves and render the HTML"
" in another view --- this allows you to recycle this listing code easily."
msgstr ""

# 3440320211cf494590d368d0d3b29a3e
#: ../develop/plone/content/listing.rst:682
msgid ""
"The view does the various sanity checks that normal Plone item listings do:"
msgstr ""

# 942c985ca9054ec1a9e544c1af583b29
#: ../develop/plone/content/listing.rst:684
msgid "no meta items,"
msgstr ""

# 53e6fa63aa54444baacaaa7abdb4f6df
#: ../develop/plone/content/listing.rst:685
msgid "no large folders,"
msgstr ""

# db334159afab485fb576b5883ea7f41f
#: ../develop/plone/content/listing.rst:686
msgid "no default views,"
msgstr ""

# de5c39edd0d141c18c287cf855d6a0ce
#: ../develop/plone/content/listing.rst:687
msgid "filter by active language,"
msgstr ""

# bfb883b8c4d847b98dd62a6cc6a12c9c
#: ../develop/plone/content/listing.rst:688
msgid "do not list items where you do not have the ``View`` permission,"
msgstr ""

# 93d30a4409d84274a356c0539d36346a
#: ../develop/plone/content/listing.rst:689
msgid ""
"perform the listing on the parent container if the context itself is not "
"folderish."
msgstr ""

# c4c8899a0f524198bf0a3167cf446b83
#: ../develop/plone/content/listing.rst:861
msgid "Empty listing view"
msgstr ""

# 4a75a34aa9174cc2ac6d73882532ea40
#: ../develop/plone/content/listing.rst:863
msgid ""
"Sometimes you want a show folder without listing its content. You can create"
" a :doc:`dynamic view </develop/plone/content/dynamic_views>` in your add-on"
" which is available from *Display...* menu."
msgstr ""

# 8daeadd296b14619988f2ae9108c525b
#: ../develop/plone/content/listing.rst:867
msgid "Example ``configure.zcml`` bit"
msgstr ""

# e6d00e1010af457ba1f823a38f0750aa
#: ../develop/plone/content/listing.rst:879
msgid "Example ``empty-listing.pt``"
msgstr ""

# 4bf142cd9ead4de0818eadff1afeb823
#: ../develop/plone/content/listing.rst:899
msgid "Example ``profiles/default/types/Folder.xml``"
msgstr ""

# 738fc97cf36f4ced9541f22bde6a7835
#: ../develop/plone/content/listing.rst:916
msgid "*empty-listing* should appear in *Display...* menu."
msgstr ""

# 7a7af6b0c5ce420c8dd8933f9b5aeaa6
#: ../develop/plone/content/manipulating.rst:3
msgid "Manipulating objects"
msgstr ""

# 2e698f289ea544aea14a147e8dbc054a
#: ../develop/plone/content/manipulating.rst:10
msgid ""
"Manipulating objects depends on whether they are based on the Archetypes "
"subsystem or on the Dexterity subsystem."
msgstr ""

# 272ddb9f80704201a91faead94268962
#: ../develop/plone/content/manipulating.rst:13
msgid "For more information, consult the manual of the relevant subsystem:"
msgstr ""

# d7d35fa232d14dbc93a85e132962573c
#: ../develop/plone/content/manipulating.rst:15
msgid ":doc:`Archetypes examples </old-reference-manuals/archetypes/index>`."
msgstr ""

# a3a60fedbb3d479e84b8ce1f2a17addc
#: ../develop/plone/content/manipulating.rst:17
msgid ""
"See :doc:`Manipulating Content Objects "
"</external/plone.app.dexterity/docs/reference/manipulating-content-objects>`"
" in the Dexterity manual"
msgstr ""

# 337de2158446457f8202e2cd0fb8ef7d
#: ../develop/plone/content/manipulating.rst:20
msgid "Reindexing modified objects"
msgstr ""

# 4a208581d40f4518a46b5a1f96ca1596
#: ../develop/plone/content/manipulating.rst:22
msgid ""
"After modifying the object, you need to reindex it in the ``portal_catalog``"
" to update the search and listing information."
msgstr ""

# a045f274d93c42cca233d6f47d368f9a
#: ../develop/plone/content/manipulating.rst:25
msgid ""
"Cataloging has a quirk regarding the ``modified`` metadata: when calling "
"``reindexObject`` on an object, the value for ``modified`` in "
"``portal_catalog`` will be set to the time of the reindex, regardless of the"
" value of the modified property of the object."
msgstr ""

# 4df653cb2a044140a5c5043b3de54c09
#: ../develop/plone/content/manipulating.rst:30
msgid ""
"In order to store the correct value you can do an extra reindex of the "
"object with the ``modified`` index as parameter."
msgstr ""

# 4ca24b51b58546688a75b1dd43703b92
#: ../develop/plone/content/manipulating.rst:33
msgid ""
"First do a normal ``reindexObject``, then call it with the modified index "
"explicitly::"
msgstr ""

# 45fe5362f67146f6a08993c5e3540ad2
#: ../develop/plone/content/manipulating.rst:39
msgid ""
"For more information, see :doc:`\\** How to update this document "
"</develop/plone/searching_and_indexing/indexing>`."
msgstr ""

# ea84940f61a845fc90a0af73a8d932d2
#: ../develop/plone/content/ownership.rst:3
msgid "Ownership of content"
msgstr ""

# 1f814453ba164d7fbea076ce4bbf1b3f
#: ../develop/plone/content/ownership.rst:9
msgid "Programmatically manipulate Plone content item's ownership"
msgstr ""

# 4e3ee1977ed64ac995b92674b51c65e0
#: ../develop/plone/content/ownership.rst:14
msgid "Each content item has an owner user."
msgstr ""

# 5e5d090d3d8245279c823b4276836f3c
#: ../develop/plone/content/ownership.rst:16
msgid "Owned item instances are of subclass of AccessControl.Owned"
msgstr ""

# a015e0cfc012404fa619ad6735382008
#: ../develop/plone/content/ownership.rst:18
msgid ""
"http://svn.zope.org/Zope/trunk/src/AccessControl/Owned.py?rev=96262&view=auto"
msgstr ""

# 4f05767ae80942468c5ec81e21458c2f
#: ../develop/plone/content/ownership.rst:21
msgid "Getting the owner of the item"
msgstr ""

# 111b494d2bed47f69c082479ec2c3a2f
#: ../develop/plone/content/ownership.rst:30
msgid "Changing ownership of content"
msgstr ""

# 2f86d30c8f7c4fbf95858a6104fb8cf9
#: ../develop/plone/content/ownership.rst:32
msgid "You can use AccessControl.Owner.changeOwnership::"
msgstr ""

# 26bd3e0beb964e60af01bb89e1131054
#: ../develop/plone/content/ownership.rst:36
msgid "User is PropertiedUser object."
msgstr ""

# c51ce145b8864478812303bec1564563
#: ../develop/plone/content/ownership.rst:49
msgid ""
"This only changes the owner attribute, not the role assignments. You need to"
" change those too."
msgstr ""

# b9649a116add472e9e3f87ff6afe5296
#: ../develop/plone/content/ownership.rst:52
msgid "Example how to add ownership for additional user using local roles::"
msgstr ""

# 56d911ffc3864869a347e580a62ca3cc
#: ../develop/plone/content/ownership.rst:59
msgid "This does not update Dublin Core metadata fields like creator."
msgstr ""

# 2cfa9453f5a747328cae32d09117d044
#: ../develop/plone/content/ownership.rst:63
msgid "Contributors"
msgstr ""

# 28fcf4260a454a1c9328d8f375531ef0
#: ../develop/plone/content/ownership.rst:65
msgid ""
"Contributors is an automatically managed list where persons, who have been "
"editing in the past, real names are listed. Contributors data is available "
"as Python list of real names."
msgstr ""

# c5aa2d5cfb474d99a51d129f74b3ef16
#: ../develop/plone/content/ownership.rst:70
msgid ""
"Contributors does not store user references, because one might want to "
"maintain contributor data even after the user has been deleted."
msgstr ""

# c6e9cd98946146d0b40c74d1adf0779a
#: ../develop/plone/content/ownership.rst:73
msgid "Some sample code::"
msgstr ""

# 1484486feb24457cb5845d8afe679018
#: ../develop/plone/content/rename.rst:3
msgid "Renaming content"
msgstr ""

# 66b98c9cbd2c453c8a74c1de6ba8c4d0
#: ../develop/plone/content/rename.rst:7
msgid "How to programmatically rename Plone content items"
msgstr ""

# 41282c88b0514cb6906123f8738a139c
#: ../develop/plone/content/rename.rst:14
msgid ""
"This page tells how to rename Plone content objects and change their ids."
msgstr ""

# b69593d597e64cc88ea4c303f480ca5c
#: ../develop/plone/content/rename.rst:16
msgid "This only concerns URL path ids"
msgstr ""

# 842a0a50d44243d391f8e8d83c40399f
#: ../develop/plone/content/rename.rst:18
msgid "Archetypes' Unique ID (UID) is not affected by the rename operation"
msgstr ""

# 9db93fac576945bb9c6f24bb0067a987
#: ../develop/plone/content/rename.rst:20
msgid ""
"Title can be changed using ``setTitle()`` (Archetypes) or related mutator"
msgstr ""

# 6a317f26860f4113803e31c4416457a4
#: ../develop/plone/content/rename.rst:23
msgid "Renaming objects"
msgstr ""

# 6a5b5e4082824370969d7ac30d317326
#: ../develop/plone/content/rename.rst:25
msgid "OFS interface has facilities to rename objects"
msgstr ""

# d770dda65c104f74b950870f213031af
#: ../develop/plone/content/rename.rst:27
msgid ""
"http://svn.zope.org/Zope/trunk/src/OFS/interfaces.py?rev=105745&view=auto"
msgstr ""

# 02e21e4c8a1744d8b85746843f4410a3
#: ../develop/plone/content/rename.rst:29
msgid "``manage_renameObject(oldid, newid)`` for one item"
msgstr ""

# 0240b067f8cf43d79400aaaab8118f3e
#: ../develop/plone/content/rename.rst:31
msgid ""
"``manage_renameObject([oldid, oldid2], [newid, newid2])`` for rename many "
"items"
msgstr ""

# 542eca6fb7554ea79f53f596c93522c5
#: ../develop/plone/content/rename.rst:33
msgid ""
"Products.CMFPlone.PloneFolder overrides manage_renameObject() to have hooks "
"to reindex the new object path"
msgstr ""

# 5046bd3b4d2146fa9ad3d36d16df4b7b
#: ../develop/plone/content/rename.rst:39
msgid ""
"Security warning: \"Copy or Move\" permission is needed on the object by the"
" logged in user."
msgstr ""

# 6d95e93587104c86a0ec83f6f9f42c6d
#: ../develop/plone/content/rename.rst:44
msgid ""
"New id must be a 8-bit string, not unicode. The system might accept values "
"in invalid format."
msgstr ""

# 17ae5eb3e9244f27aa201a9562566721
#: ../develop/plone/content/rename.rst:47
msgid "Example how to rename object *lc* to have *-old* suffix::"
msgstr ""

# adf4229ce8bb44ccb906be63942fef70
#: ../develop/plone/content/rename.rst:57
msgid "These checks performed before rename by the manage_renameObject()::"
msgstr ""

# 9f78cf77b76f43aebe62db8ab61e635f
#: ../develop/plone/content/rename.rst:71
msgid ""
"Testing warning: Rename mechanism relies of Persistent attribute called "
"_p_jar to be present on the content object. By default, this is not the case"
" on unit tests. You need to call transaction.savepoint() to make _p_jar "
"appear on persistent objects."
msgstr ""

# 149b6a99af664d16a357ca5e9cc7328b
#: ../develop/plone/content/rename.rst:75
msgid ""
"If you don't do this, you'll receive a \"CopyError\" when calling "
"manage_renameObjects that the operation is not supported."
msgstr ""

# ddf5de874ef74438b20a6b21686736ba
#: ../develop/plone/content/timestamps.rst:3
msgid "Timestamps"
msgstr ""

# 01ca0f0d90b74c869e100363eb11cd3c
#: ../develop/plone/content/timestamps.rst:7
msgid ""
"How to read created and modified timestamps on Plone content items "
"programmatically"
msgstr ""

# ff5282641bde4e1bbc4ba0c85498bc8f
#: ../develop/plone/content/timestamps.rst:15
msgid ""
"Here are some useful timestamps you can extract from content objects and "
"examples how to use them."
msgstr ""

# 92f71334189344d394181f135842b6e6
#: ../develop/plone/content/timestamps.rst:18
msgid ""
"Timestamps are part of metadata. For Archetypes, metadata is defined in "
"`ExtensibleMetadata "
"<https://github.com/plone/Products.Archetypes/blob/master/Products/Archetypes/ExtensibleMetadata.py>`_."
msgstr ""

# 16cc4b67b0f54ab18a7ec8cabe9cf039
#: ../develop/plone/content/timestamps.rst:21
msgid ""
":doc:`Zope 2 DateTime </develop/plone/misc/datetime>` date objects are used."
msgstr ""

# 6e586b38cd3f420fb43f867357ee54dc
#: ../develop/plone/content/timestamps.rst:24
msgid "Last modification date"
msgstr ""

# b2f936348ac5484282b3a93fe0ec72c5
#: ../develop/plone/content/timestamps.rst:26
msgid ""
"Products.Archetypes.ExtensibleMetadata.modified() function will give the "
"last modification date as Zope DateTime object. This is part of Dublin Core "
"metadata."
msgstr ""

# aa80e0e2ba8d4bb8bcf04bc7257fd554
# b008849164d74c658bf6e727fba5baf8
#: ../develop/plone/content/timestamps.rst:29
#: ../develop/plone/content/timestamps.rst:123
msgid "Example (Zope console debug mode)::"
msgstr ""

# cda8b1b7c8314d5988e35e9683a1ccc9
#: ../develop/plone/content/timestamps.rst:35
msgid "Setting modification date explicitly"
msgstr ""

# ab3be0dc8030469cb5aee2cf0634fc18
#: ../develop/plone/content/timestamps.rst:37
msgid "You might want to manual set modification date"
msgstr ""

# 2be00d86e729424cb55bab5a569308a6
#: ../develop/plone/content/timestamps.rst:39
msgid "When you migrate content"
msgstr ""

# 494d6614286c4b329e8325d7443e7067
#: ../develop/plone/content/timestamps.rst:41
msgid ""
"When you edit content subobjects and want to update the timestamp of parent "
"object to reflect this changes"
msgstr ""

# 08a131315c314fcd9d50bfc2e2d15cbd
#: ../develop/plone/content/timestamps.rst:43
msgid ""
"Example (Zope console debug mode, assume obj is Archetypes content item)::"
msgstr ""

# db0aba925a424387af3dd06406d17f26
#: ../develop/plone/content/timestamps.rst:59
msgid "Viewlet example"
msgstr ""

# 2ef7e55d28df41e9b02c47d13555420a
#: ../develop/plone/content/timestamps.rst:61
msgid "Below is an example how to create a custom last modified viewlet."
msgstr ""

# 9e017cde03474a62b3f703f507e4cedd
# 7f7c381c22934a368b5e9b223c3fbb7b
# 24073c78c58a42308a4788829abb659a
#: ../develop/plone/content/timestamps.rst:63
#: ../develop/plone/i18n/translating_content.rst:319
#: ../develop/plone/views/viewlets.rst:442
msgid "Viewlet code::"
msgstr ""

# 1926ebac4c544dd6979d43c7fe45bbf1
#: ../develop/plone/content/timestamps.rst:88
msgid "Template (lastmodified.py)::"
msgstr ""

# 0f944be7ebc947de96ce25cb07d3dff3
#: ../develop/plone/content/timestamps.rst:94
msgid "Viewlet registration::"
msgstr ""

# 763d2c09dde549e985cc43b19b40b2bf
#: ../develop/plone/content/timestamps.rst:107
msgid "CSS::"
msgstr ""

# c6635fe8a28c4e779c769d476318ba79
#: ../develop/plone/content/timestamps.rst:118
msgid "Creation date"
msgstr ""

# 007b9b36bce44824986259b57d1f99ec
#: ../develop/plone/content/timestamps.rst:120
msgid ""
"Products.Archetypes.ExtensibleMetadata.created() function will give the "
"creation date as Zope DateTime object. This is part of Dublin Core metadata."
msgstr ""

# 29fc5f8665544efe832b1f4e2a25590b
#: ../develop/plone/content/timestamps.rst:130
msgid "IsExpired()"
msgstr ""

# c67f3d332a094b19a6ec8415e6ac5a49
#: ../develop/plone/content/timestamps.rst:132
msgid ""
"https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/utils.py#L112"
msgstr ""

# 942d9db47e034143ae8b6658c4caddda
#: ../develop/plone/content/types.rst:3
msgid "Content types"
msgstr ""

# 63ec3b46576d40bca363c187067c89c3
#: ../develop/plone/content/types.rst:7
msgid ""
"Plone's content type subsystems and creating new content types "
"programmatically."
msgstr ""

# 7754af2da97a4565a2724d44dbf491e1
#: ../develop/plone/content/types.rst:14
msgid "Plone has two kind of content types subsystems:"
msgstr ""

# b6c2daaec5ef434cb0c9757764794039
#: ../develop/plone/content/types.rst:16
msgid ":doc:`Archetypes </develop/plone/content/archetypes/index>`-based"
msgstr ""

# 04de2ce91d8448f1b68fa12fe971ae96
#: ../develop/plone/content/types.rst:18
msgid ":doc:`Dexterity </develop/plone/content/dexterity>`-based (new)"
msgstr ""

# bb35b77cd795454286359819315b423a
#: ../develop/plone/content/types.rst:20
msgid "See also Plomino (later in this document)."
msgstr ""

# a22ebc14db5749b292d82bbd2cc90c96
#: ../develop/plone/content/types.rst:22
msgid ""
"Flexible architecture allows other kinds of content type subsystems as well."
msgstr ""

# f2852415e7d94854962640c7ef90a98a
#: ../develop/plone/content/types.rst:25
msgid "Type information registry"
msgstr ""

# 06279cd0b9c34e489e1a1f329dd117ad
#: ../develop/plone/content/types.rst:27
msgid "Plone maintains available content types in the ``portal_types`` tool."
msgstr ""

# b6eaa7e4dbd5431587713c47c9d940a3
#: ../develop/plone/content/types.rst:29
msgid ""
"``portal_types`` is a folderish object which stores type information as "
"child objects, keyed by the ``portal_type`` property of the types."
msgstr ""

# feb0fa036d9d4635ad720ba581095f76
#: ../develop/plone/content/types.rst:33
msgid ""
"``portal_factory`` is a tool responsible for creating the persistent object "
"representing the content."
msgstr ""

# bdd3bbc191de45cd8b94a6a8f1e6e6ad
#: ../develop/plone/content/types.rst:35
msgid ""
"`TypesTool source code "
"<http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/TypesTool.py?rev=101748&view=auto>`_."
msgstr ""

# 648844afcd3e4314ac0d2235df76ef3f
#: ../develop/plone/content/types.rst:38
msgid "Listing available content types"
msgstr ""

# fb4ca8aebe5e4cd0b24a7d0b8d265252
#: ../develop/plone/content/types.rst:40
msgid "Often you need to ask the user to choose specific Plone content types."
msgstr ""

# 791d170db2f54ccaacc59b32e9b076fb
#: ../develop/plone/content/types.rst:42
msgid "Plone offers two Zope 3 vocabularies for this purpose:"
msgstr ""

# 29f465fd5eac414ead0eea886e45b76e
#: ../develop/plone/content/types.rst:44
msgid "``plone.app.vocabularies.PortalTypes``"
msgstr ""

# d32e50fd856d407f8b10bec1760e3c74
#: ../develop/plone/content/types.rst:45
msgid "a list of types installed in ``portal_types``"
msgstr ""

# 0bc7acf507684ada8ffc83af56dc6234
#: ../develop/plone/content/types.rst:47
msgid "``plone.app.vocabularies.ReallyUserFriendlyTypes``"
msgstr ""

# 9b2a6e5cba1d4d05a668e48b71fa5120
#: ../develop/plone/content/types.rst:47
msgid "a list of those types that are likely to mean something to users."
msgstr ""

# 0ecde75f78e043578458a16de5b5619a
#: ../develop/plone/content/types.rst:49
msgid ""
"If you need to build a vocabulary of user-selectable content types in Python"
" instead, here's how::"
msgstr ""

# c2b91b46900a4f6bae878ce5e446fc6b
#: ../develop/plone/content/types.rst:85
msgid "Creating a new content type"
msgstr ""

# aeba3cd55c5441448529b3026a3c2338
#: ../develop/plone/content/types.rst:87
msgid ""
"These instructions apply to "
":doc:`Archetypes</develop/plone/content/archetypes/index>`-based content "
"types."
msgstr ""

# 6699d08c77bb48568bf3d7c10efdfc1e
#: ../develop/plone/content/types.rst:93
msgid "Add ZopeSkel to your buildout.cfg and run buildout::"
msgstr ""

# b96171b1b1034fc9a3b3b04ffab80dd8
#: ../develop/plone/content/types.rst:109
msgid "Create an archetypes product"
msgstr ""

# a669e1da41194935ac4bc0451b28a536
#: ../develop/plone/content/types.rst:111
msgid ""
"Run the following command and answer the questions e.g. for the project name"
" use my.product::"
msgstr ""

# be2d6a44c50c46439be1bbad04487556
#: ../develop/plone/content/types.rst:117
msgid "Install the product"
msgstr ""

# f9f1232ee64b4ef5b0fbcc388b218251
#: ../develop/plone/content/types.rst:119
msgid "Adjust your buildout.cfg and run buildout again::"
msgstr ""

# ae33c0afc50040d081b3a62573e66190
#: ../develop/plone/content/types.rst:134
msgid ""
"You need to install your new product using buildout before you can add a new"
" content type in the next step. Otherwise paster complains with the "
"following message: \"Command 'addcontent' not known\"."
msgstr ""

# cb96f694ec0c4b55b00dd45f18503341
#: ../develop/plone/content/types.rst:140
msgid "Create a new content type"
msgstr ""

# 95d1d1a0c5f94b9098606380b82fb363
#: ../develop/plone/content/types.rst:142
msgid ""
"Change into the directory of the new product and then use paster to add a "
"new content type::"
msgstr ""

# 872feb7060494a8a8c41fe86bc20f2a1
#: ../develop/plone/content/types.rst:149
msgid "Related how-tos:"
msgstr ""

# f3cd30eaa2d6443780d2fc01ae2df20c
#: ../develop/plone/content/types.rst:151
msgid ""
"http://lionfacelemonface.wordpress.com/tutorials/zopeskel-archetypes-howto/"
msgstr ""

# f9415492bf774d54b2dc33dbdf6100da
#: ../develop/plone/content/types.rst:153
msgid ""
"http://docs.openia.com/howtos/development/plone/creating-a-site-archetypes-"
"object-and-contenttypes-with-paster?set_language=fi&cl=fi"
msgstr ""

# 853d6e72fa234ddda095536b14ecde44
#: ../develop/plone/content/types.rst:155
msgid "http://www.unc.edu/~jj/plone/"
msgstr ""

# 0247e29ea307461f8407f64ce5ef5f57
#: ../develop/plone/content/types.rst:159
msgid ""
"Creating types by hand is not worth the trouble. Please use a code generator"
" to create the skeleton for your new content type."
msgstr ""

# ddfd8db4f1184d22a020c319bcb58994
#: ../develop/plone/content/types.rst:164
msgid ""
"The content type name must not contain spaces. Neither the content type name"
" or the description may contain non-ASCII letters. If you need to change "
"these please create a translation catalog which will translate the text to "
"one with spaces or international letters."
msgstr ""

# 5eb44362abf54c0b9378715455c9c6b3
#: ../develop/plone/content/types.rst:172
msgid "Debugging new content type problems"
msgstr ""

# bfea6ee45dba4a0aad3f79347d539a2f
#: ../develop/plone/content/types.rst:174
msgid "Creating types by hand is not worth the trouble."
msgstr ""

# 14a49845be8441cb9182f2cf5bf68b8a
#: ../develop/plone/content/types.rst:176
msgid ""
"`Why doesn't my custom content type show up in add menu "
"<http://plone.org/documentation/faq/why-doesnt-my-custom-content-type-show-"
"up-in-add-menu/>`_ checklist."
msgstr ""

# 4eaf6ac838ff4a4ab3b3237b9aba5c8a
#: ../develop/plone/content/types.rst:179
msgid "Creating new content types through-the-web"
msgstr ""

# 6091f7abaae64849b02cce712a01461a
#: ../develop/plone/content/types.rst:181
msgid ""
"There exist solutions for non-programmers and Plone novices to create their "
"content types more easily."
msgstr ""

# 5105f9e738654e80a7b7a6bc1c93b496
#: ../develop/plone/content/types.rst:187
msgid "http://plone.org/products/dexterity"
msgstr ""

# 4c4b680c61c9462a8aef14e80f5ef1e3
#: ../develop/plone/content/types.rst:189
msgid "Core feature"
msgstr ""

# 291349bee52b44168644e43f4fada9bc
#: ../develop/plone/content/types.rst:191
msgid "Use Dexterity control panel in site setup"
msgstr ""

# 85b9edda8a65467485c24a3c5cc6c3fd
#: ../develop/plone/content/types.rst:194
msgid "Plomino (Archetypes-based add-on)"
msgstr ""

# 8067c83cc25b402686d1b2ae1c45ad66
#: ../develop/plone/content/types.rst:196
msgid ""
"With Plomino you can make an entire web application that can organize & "
"manipulate data with very limited programming experience."
msgstr ""

# 881c6c02cc8f4dad817e61f564a12fef
#: ../develop/plone/content/types.rst:199
msgid "http://www.plomino.net/"
msgstr ""

# e67a942219b64e2996430cbbec6f5336
#: ../develop/plone/content/types.rst:201
msgid "http://www.youtube.com/view_play_list?p=469DE37C742F31D1"
msgstr ""

# 84107b3895664078b0f77ccee49bf154
#: ../develop/plone/content/types.rst:204
msgid "Implicitly allowed"
msgstr ""

# 071adce188524ef59c3cd0a7ea5c5fc0
#: ../develop/plone/content/types.rst:206
msgid ""
":guilabel:`Implictly allowed` is a flag specifying whether the content is "
"globally addable or must be specifically enabled for certain folders."
msgstr ""

# 15809d21d2134629b470dd7b3d7fdfc4
#: ../develop/plone/content/types.rst:210
msgid ""
"The following example allows creation of :guilabel:`Large Plone Folder` "
"anywhere at the site (it is disabled by default). For available properties, "
"see ``TypesTool._advanced_properties``."
msgstr ""

# 5d30b640659b4b5482d2dcca4e610ffa
#: ../develop/plone/content/types.rst:223
msgid "Constraining the addable types per type instance"
msgstr ""

# 90cc6449a3964d7889809755ea64214e
#: ../develop/plone/content/types.rst:225
msgid ""
"For the instances of some content types, the user may manually restrict "
"which kinds of objects may be added inside. This is done by clicking the "
":guilabel:`Add new...` link on the green edit bar and then choosing "
":guilabel:`Restrictions...`."
msgstr ""

# 9834b0111c94427abfa4270afabfcc61
#: ../develop/plone/content/types.rst:230
msgid ""
"This can also be done programmatically on an instance of a content type that"
" supports it."
msgstr ""

# c22152445b964468b96adde80dda3a73
#: ../develop/plone/content/types.rst:233
msgid "First, we need to know whether the instance supports this."
msgstr ""

# c49d162d2016481e9eecdb9bab455d4d
#: ../develop/plone/content/types.rst:243
msgid ""
"If ``setConstrainTypesMode`` is ``1``, then only the types enabled by using "
"``setLocallyAllowedTypes`` will be allowed."
msgstr ""

# 780959ba83324610ae111fbc95317d1d
#: ../develop/plone/content/types.rst:246
msgid ""
"The types specified by ``setLocallyAllowedTypes`` must be a subset of the "
"allowable types specified in the content-type's FTI (Factory Type "
"Information) in the ``portal_types`` tool."
msgstr ""

# ee48bca4569f4e4d8b8271e7da72e8d6
#: ../develop/plone/content/types.rst:251
msgid ""
"If you want the types to appear in the :guilabel: ``Add new..`` dropdown "
"menu, then you must also set the immediately addable types. Otherwise, they "
"will appear under the :guilabel:`more` submenu of :guilabel:`Add new..`."
msgstr ""

# eade6bd743804a2490d8e6da1b918b07
#: ../develop/plone/content/types.rst:260
msgid ""
"The immediately addable types must be a subset of the locally allowed types."
msgstr ""

# 1affd150573a4dd992fb6f45dff85009
#: ../develop/plone/content/types.rst:262
msgid ""
"To retrieve information on the constrained types, you can just use the "
"accessor equivalents of the above methods."
msgstr ""

# b71ac9a94ca64861ae5d6963c50a765e
#: ../develop/plone/content/types.rst:273
msgid ""
"**Be careful of Acquisition**. You might be acquiring these methods from the"
" current instance's parent. It would be wise to first check whether the "
"current object has this attribute, either by using ``shasattr`` or by using "
"``hasattr`` on the object's base (access the base object using ``aq_base``)."
msgstr ""

# e2f43a88e2884e2d9ddcf221009bb9e9
#: ../develop/plone/content/types.rst:279
msgid ""
"The default addable types are the types that are addable when "
"``constrainTypesMode`` is ``0`` (i.e not enabled)."
msgstr ""

# ca3b2f4063c84b8386cac283476c934f
#: ../develop/plone/content/types.rst:282
msgid ""
"For more information, see **Products/CMFPlone/interfaces/constraints.py**"
msgstr ""

# f7892b5acfee43d3b58807c0556f06cf
#: ../develop/plone/content/uid.rst:3
msgid "Content identification (ids)"
msgstr ""

# b02dbd2571fa4e0c9908b299156914b1
#: ../develop/plone/content/uid.rst:7
msgid ""
"Different ids, UIDs, integer ids or whatever can identify your Plone content"
" and give access to it."
msgstr ""

# d463b25927b0483986e38a1facf9e59e
#: ../develop/plone/content/uid.rst:16
msgid "Id"
msgstr ""

# 4b7bc0a3c7964092ad61e150931a84bf
#: ../develop/plone/content/uid.rst:18
msgid ""
"Content id generally refers the item id **within the folder**. Together with"
" folder path this identifies the content in unique way."
msgstr ""

# 8453ee3632664b4ebdfca3bc695bfdd4
#: ../develop/plone/content/uid.rst:21
msgid "Naturally, this id changes when the content is renamed or moved."
msgstr ""

# 096c768bbd46411098cb3de91e8c475f
#: ../develop/plone/content/uid.rst:23
msgid ""
"Use :doc:`traversing </develop/plone/serving/traversing>` to resolve object "
"by path+id."
msgstr ""

# 1c305ee6d17042c390564df4edabbf5c
#: ../develop/plone/content/uid.rst:26
msgid "UID and UUID"
msgstr ""

# 4aaf4c7dbac845a59051c513f3242c37
#: ../develop/plone/content/uid.rst:28
msgid ""
"UID is a unique, non-human-readable identifier for a content object which "
"stays on the object even if the object is moved."
msgstr ""

# 52a42ca19dc446d7b0132f49432b2391
#: ../develop/plone/content/uid.rst:31
msgid "Plone uses UUIDs for"
msgstr ""

# 90c524b492984b058ee79174abb3179f
#: ../develop/plone/content/uid.rst:33
msgid "Storing content-to-content references (Archetypes, ReferenceField)"
msgstr ""

# 86a0d4ebede349aaa127f3b7c7a1be36
#: ../develop/plone/content/uid.rst:35
msgid ""
"Linking by UIDs (Kupu) - this enables persistent links even though the "
"object is moved"
msgstr ""

# c6cedce0182d4508bae2378767756b0c
#: ../develop/plone/content/uid.rst:37
msgid ""
"Plain UID is supported by Archetypes only and is based on reference_catalog"
msgstr ""

# 662ad8c7a101408b88ad6e5b7d49d8eb
#: ../develop/plone/content/uid.rst:39
msgid ""
"UUID is supported by Archetypes and Dexterity both and you should use this "
"for new projects"
msgstr ""

# c1e991a8a70342f1a42b9180f4857222
#: ../develop/plone/content/uid.rst:41
msgid ""
"UIDs are available for Archetypes content and unified UUIDs for both "
"Archetypes and Dexterity content items since ``plone.app.dexterity`` version"
" 1.1."
msgstr ""

# 6a64e1ded1904f38a992ee0c2c7b6d0d
#: ../develop/plone/content/uid.rst:46
msgid ""
"If you have pre-Dexterity 1.1 content items you must run a migration step in"
" portal_setup to give them UUIDs."
msgstr ""

# e0b2c19a7f1644cdbe9189abb67472b0
#: ../develop/plone/content/uid.rst:49
msgid ""
"To get object UUID you can use `plone.app.uuid "
"<https://pypi.python.org/pypi/plone.app.uuid/>`_ package."
msgstr ""

# 43852ea11d594f1ebe2f53cfbdc5c11b
#: ../develop/plone/content/uid.rst:51
msgid "Getting object UUID::"
msgstr ""

# 72ff9d85d1aa4b13a5060d5dec7cbc67
#: ../develop/plone/content/uid.rst:66
msgid "Looking up object by UUID:"
msgstr ""

# ad10365ddb7b40f8965344c776334a00
#: ../develop/plone/content/uid.rst:68
msgid ""
"Use `plone.app.uuid.utils.uuidToObject "
"<https://github.com/plone/plone.app.uuid/blob/master/plone/app/uuid/utils.py>`_::"
msgstr ""

# 5d8725755fc345bca4667f6db4106fe4
#: ../develop/plone/content/uid.rst:81
msgid ""
"http://stackoverflow.com/questions/8618917/portal-catalog-unique-ids-for-"
"both-archetypes-and-dexterity-content"
msgstr ""

# 0c17cdeaa8854ff29bda8589cd04c485
#: ../develop/plone/content/uid.rst:85
msgid "UUID Acquisition problem with Dexterity Content Types"
msgstr ""

# e2db3b5e84694dc09a338b71f91471fe
#: ../develop/plone/content/uid.rst:87
msgid ""
"Make sure your Dexterity content type has the "
"`plone.app.referenceablebehavior.interfaces.IReferenceable "
"<https://github.com/plone/plone.app.referenceablebehavior/blob/master/plone/app/referenceablebehavior/interfaces.py>`_"
" behavior enabled. If not, when querying for an object's UUID, you will get "
"its parent UUID. Then you can end up with a lot of objects with the same "
"UUID as their parent."
msgstr ""

# b9c944d844374cd3a6babd9293c8ac0a
#: ../develop/plone/content/uid.rst:89
msgid "If you run into this issue, here's an easy upgrade step to fix it::"
msgstr ""

# 1ea88530096044c0bcb88cc755d8d190
#: ../develop/plone/content/uid.rst:123
msgid ""
"Make sure to have the IReferenceable behavior listed in the content type XML"
" definition before running the upgrade step. Also note that this upgrade "
"step will recalculate the UUID for all \"my.custom.content.type\" objects."
msgstr ""

# 67747e2fa18f467782e3a9aa0554101d
#: ../develop/plone/content/uid.rst:128
msgid "intids"
msgstr ""

# 02f85f79f59f49cf9f12619491eb4f70
#: ../develop/plone/content/uid.rst:130
msgid ""
"Integer ids (\"intids\") are fast look-up ids provided by "
"``plone.app.intid`` and ``five.intid`` packages.  Instead of relying on "
"globally unique identifier strings (UIDs) they use 64-bit integers, making "
"low-level resolution faster."
msgstr ""

# c1437851a3964c369c18e1d6167314d3
#: ../develop/plone/content/uid.rst:135
msgid "https://github.com/plone/plone.app.intid"
msgstr ""

# 386c4d20f207470182157526c891630d
#: ../develop/plone/content/uid.rst:137
msgid "http://stackoverflow.com/questions/8629390/how-to-use-intids"
msgstr ""

# bf87a48a14ef4653856c7abcc7847e7e
#: ../develop/plone/content/uid.rst:142
msgid "This info only for Plone 3.x projects."
msgstr ""

# 4dbd9a8ebb7241dcb3a4296a0bd5df98
#: ../develop/plone/content/uid.rst:145
msgid "Getting the object's UID"
msgstr ""

# dae3a2f4942944a2a3c8ee98d9b652c7
#: ../develop/plone/content/uid.rst:147
msgid "Use UID() accessor function"
msgstr ""

# af4e059069634ec59f829e79fc1d9f49
#: ../develop/plone/content/uid.rst:149
msgid "Example how to get UID of *events* folder::"
msgstr ""

# 34a30368496a4cddadacf04a12640b8a
#: ../develop/plone/content/uid.rst:156
msgid "Looking up object by UID"
msgstr ""

# 58a47e22099942559174e349ad6a910e
#: ../develop/plone/content/uid.rst:158
msgid "Use lookupObject() in reference catalog."
msgstr ""

# 19fbe9996410443d86839eca73e04d43
#: ../develop/plone/content/uid.rst:163
msgid ""
"*None* will be returned if there is content item with matching UID (the item"
" has been deleted)."
msgstr ""

# 2fe8daba7fc44ffeb668d91842f903e5
#: ../develop/plone/content/workflow.rst:3
msgid "Workflows"
msgstr ""

# ec39337a45fe4ae6acc259d52713c66e
#: ../develop/plone/content/workflow.rst:7
msgid "Programming workflows in Plone."
msgstr ""

# 4b891ed9516647db954d42a723f4763c
#: ../develop/plone/content/workflow.rst:14
msgid "The DCWorkflow product manages the default Plone workflow system."
msgstr ""

# f50d8529d4f24276865b4526e69f3950
#: ../develop/plone/content/workflow.rst:16
msgid ""
"A workflow state is not directly stored on the object. Instead, a separate "
"portal_workflow tool must be used to access a workflow state. Workflow look-"
"ups involve an extra database fetch."
msgstr ""

# b08b781b69c94e3ea73d434ac00a809d
# 541c7a30a9a647d78e92e97f938a38fc
# 34b5b59aee9a4838894f747ff99ad166
# d23458c647724e9793db9f6ad506e777
# 83263bbfbb354616a452c2cbabf0e60c
# efac408727064dc7a4f2cf4cb98dfae1
# 0325cdeff6314f72a8627ad6d3c9a851
#: ../develop/plone/content/workflow.rst:20
#: ../develop/plone/forms/wysiwyg.rst:376
#: ../develop/plone/i18n/internationalisation.rst:341
#: ../develop/plone/persistency/persistent.rst:66
#: ../develop/plone/persistency/persistent.rst:222
#: ../develop/plone/searching_and_indexing/query.rst:253
#: ../develop/plone/views/browserviews.rst:597
msgid "For more information, see"
msgstr ""

# 06287e5e31d74806a8c8f65c6f630c10
#: ../develop/plone/content/workflow.rst:22
msgid "http://www.martinaspeli.net/articles/dcworkflows-hidden-gems"
msgstr ""

# aadbe42b5da44308ae45dbc78275d01c
#: ../develop/plone/content/workflow.rst:25
msgid "Creating workflows"
msgstr ""

# cbe2035214a94985b7bb1f1160a39e5e
#: ../develop/plone/content/workflow.rst:27
msgid ""
"The recommended method is to use the portal_workflow user interface in the "
"Zope Management Interface to construct the workflow through-the-web and then"
" you can export it using GenericSetup's portal_setup tool."
msgstr ""

# 6b2b70c58324497280e0c53001a28973
#: ../develop/plone/content/workflow.rst:30
msgid ""
"Include necessary parts from exported workflows.xml and workflows folder in "
"your add-on product GenericSetup profile (add-on folder profiles/default)."
msgstr ""

# 86a28150df744a2889dce74401a744a3
#: ../develop/plone/content/workflow.rst:34
msgid "Model the workflow online"
msgstr ""

# 6e36bd025d93407cb4ee231711e2df95
#: ../develop/plone/content/workflow.rst:36
msgid ""
"Go to "
"'http:yourhost.com:8080/yourPloneSiteName/portal_workflows/manage_main', "
"copy and paste 'simple_publication_workflow', to have a skeleton for start-"
"off, rename 'copy_of_simple_publication_workflow' to 'your_workflow' or add "
"a new workflow via the dropdwon-menu and have a tabula rasa."
msgstr ""

# ed87a9556f9f4471ae70fb4d0c6d4f1d
#: ../develop/plone/content/workflow.rst:40
msgid "Add and remove states and transitions, assign permissions etc."
msgstr ""

# a38a7e65693740fb8f0dacc9c384251c
#: ../develop/plone/content/workflow.rst:45
msgid "Putting it in your product"
msgstr ""

# ccd892bd080e44f3a2415ef64d930c3d
#: ../develop/plone/content/workflow.rst:46
msgid ""
"Go to "
"'http:yourhost.com:8080/yourPloneSiteName/portal_setup/manage_exportSteps', "
"check 'Workflow Tool' and hit 'Export selected steps', unzip the downloaded "
"file and put the definitions.xml-file in "
"'your/product/profiles/default/workflows/your_workflow/' (you'll need to "
"create the latter two directories)."
msgstr ""

# e91e615ef1c949c58ec6609cecd3a96d
#: ../develop/plone/content/workflow.rst:52
msgid "Configure workflow via GenericSetup"
msgstr ""

# b4bc3d22adfb466195e2460bb3f5c4fd
#: ../develop/plone/content/workflow.rst:55
msgid "Assign a workflow"
msgstr ""

# 3ec989a36e214867b2bbd5747aa73537
#: ../develop/plone/content/workflow.rst:57
msgid "In your/product/profiles/default/workflows.xml, insert:"
msgstr ""

# 8ec8414ffb9f416c87f174b49de19bdb
#: ../develop/plone/content/workflow.rst:70
msgid "Assigning a workflow globally as default"
msgstr ""

# dfc5578f28b04852a140c30b8832d62d
#: ../develop/plone/content/workflow.rst:72
msgid "In your/product/profiles/default/workflows.xml, add:"
msgstr ""

# cfe418d629174e2386778cb7b9614f2c
#: ../develop/plone/content/workflow.rst:86
msgid "Binding a workflow to a content type"
msgstr ""

# b5c3cc149911493cab5a6f0a4ddb3b7a
#: ../develop/plone/content/workflow.rst:88
msgid "Example with GenericSetup *workflows.xml*"
msgstr ""

# 3de1a83718b24cd1a443d59a3ce6322a
#: ../develop/plone/content/workflow.rst:102
msgid "Disabling workflow for a content type"
msgstr ""

# d787acda9fb14a9f80480597bfc5812b
#: ../develop/plone/content/workflow.rst:103
msgid ""
"If a content type doesn't have a workflow it uses its parent container "
"security settings. By default, content types Image and File have no "
"workflow."
msgstr ""

# bf9e59b939da4525b217b724ce343ce7
#: ../develop/plone/content/workflow.rst:106
msgid ""
"Workflows can be disabled by setting the workflow setting empty in "
"portal_workflow in ZMI."
msgstr ""

# 7941242ef67a464b8707a3a93585f877
#: ../develop/plone/content/workflow.rst:108
msgid "Example how to do it with GenericSetup *workflows.xml*"
msgstr ""

# 37e16e7c5f154262b7fdc9daa5bc111e
#: ../develop/plone/content/workflow.rst:125
msgid "Updating security settings after changing workflow"
msgstr ""

# c5b0cc9b76b3479cb86db69ef8937e73
#: ../develop/plone/content/workflow.rst:127
msgid ""
"Through the web this would be done by going to ZMI > portal_workflow > "
"update security settings"
msgstr ""

# 120381258dd24174adfe8b5de5a0738b
#: ../develop/plone/content/workflow.rst:130
msgid ""
"To update security settings programmatically use the method "
"updateRoleMappings. The snippet below demonstrates this::"
msgstr ""

# 9a7999c57dd64ed8921abb410311c71e
#: ../develop/plone/content/workflow.rst:140
msgid "Programatically"
msgstr ""

# 294d5ce0252b48b5a114c563e8a3d9ca
#: ../develop/plone/content/workflow.rst:143
msgid "Getting the current workflow state"
msgstr ""

# 5fec1dd01d964993b449d4a833c356aa
#: ../develop/plone/content/workflow.rst:156
msgid "Filtering content item list by workflow state"
msgstr ""

# 6d303d49d0474e09a8de98bb56e3e439
#: ../develop/plone/content/workflow.rst:158
msgid ""
"Here is an example how to iterate through content item list and let through "
"only content items having certain state."
msgstr ""

# 40c2d661a88d453687d775f306a2c2c0
#: ../develop/plone/content/workflow.rst:163
msgid ""
"Usually you don't want to do this, but use content aware folder listing "
"method or portal_catalog query which does filtering by permission check."
msgstr ""

# 7fa3a746a78841439ca9f21d3ee0d93a
#: ../develop/plone/content/workflow.rst:184
msgid "Changing workflow state"
msgstr ""

# 43edbe01e44940a4ab9d04e0748fc12e
#: ../develop/plone/content/workflow.rst:186
msgid ""
"You cannot directly set the workflow to any state, but you must push it "
"through legal state transitions."
msgstr ""

# d540ada01bc547c4a8d9fa7fde59d6b9
#: ../develop/plone/content/workflow.rst:189
msgid ""
"**Security warning**: Workflows may have security assertations which are "
"bypassed by admin user. Always test your workflow methods using a normal "
"user."
msgstr ""

# 9987fee266384916ad2915e1d9129c04
#: ../develop/plone/content/workflow.rst:192
msgid "Example how to publish content item ``banner``::"
msgstr ""

# f158948ea0184cb98b01349ac8f36d2f
#: ../develop/plone/content/workflow.rst:207
msgid "Example how to submit to review::"
msgstr ""

# 4cad24f35b324b1ebe6e470f866ccd97
#: ../develop/plone/content/workflow.rst:222
msgid ""
"Example how to cause specific transitions based on another event (e.g. a "
"parent folder state change). This code must be part of your product's "
"trusted code not a workflow script because of the permission issues "
"mentioned above. See also see :doc:`/develop/addons/components/events` ::"
msgstr ""

# 037690db1c2d488da924ee167788824b
#: ../develop/plone/content/workflow.rst:254
msgid "Gets the list of ids of all installed workflows"
msgstr ""

# 15f4acd3a038448ba3132d6c6892c332
#: ../develop/plone/content/workflow.rst:256
msgid "Useful to test if a particular workflow is installed::"
msgstr ""

# fa11615ec7d347ab992151603d40b6ea
#: ../develop/plone/content/workflow.rst:263
msgid "Getting default workflow for a portal type"
msgstr ""

# bcebcce811f041dcb1ed5a5a392c1604
#: ../develop/plone/content/workflow.rst:265
msgid "Get default workflow for the type::"
msgstr ""

# be27df5a5bbd4fcd8b95b1567570e5b0
#: ../develop/plone/content/workflow.rst:271
msgid "Getting workflows for an object"
msgstr ""

# 97e4ba79916e41c6ab321ac0e3acba79
#: ../develop/plone/content/workflow.rst:273
msgid "How to test which workflow the object has::"
msgstr ""

# 4bf645b0ab9a4f33abd9c126035a61c2
#: ../develop/plone/content/workflow.rst:288
msgid "Via HTTP"
msgstr ""

# de12cd0119124523acfbd7a2d8e79955
#: ../develop/plone/content/workflow.rst:290
msgid ""
"Plone provides a ``workflow_action`` script which is able to trigger the "
"status modification through an HTTP request (browser address bar)."
msgstr ""

# c8d80e2198a54944b8a67a43971be25b
#: ../develop/plone/forms/files.rst:3
msgid "Files and images"
msgstr ""

# 69afd64d835d4d10b78b22088518ea02
#: ../develop/plone/forms/files.rst:7
msgid ""
"How to program files and image fields for ``z3c.forms`` and Dexterity "
"content types"
msgstr ""

# b4c5e873edb4431480192eee10ab0214
#: ../develop/plone/forms/files.rst:15
msgid ""
"This chapter discuss about file uploads and downloads using zope.schema "
"based forms and content with :doc:`Dexterity content subsystem "
"</develop/plone/content/dexterity>`."
msgstr ""

# 2286cdeae0564011a437888b283b85b3
#: ../develop/plone/forms/files.rst:20
msgid ""
"These instructions apply for Plone 4 and forward. These instructions does "
"not apply for Archetypes content or PloneFormGen."
msgstr ""

# f6a544adc8a44f4c807a632dba4ba1a2
#: ../develop/plone/forms/files.rst:23
msgid ""
"Plone uses \"blobs\" (large binary objects) to store file-like data in the "
"ZODB. The ZODB writes these objects to the filesystem as separate files, but"
" due to security, performance and transaction consideration, the original "
"filename is not visible. The files are stored in a distributed tree."
msgstr ""

# 4389e1791f75410ebbb4f83f951c01cf
#: ../develop/plone/forms/files.rst:28
msgid "For more introduction information, see:"
msgstr ""

# 9b77053e335441a0ade4c8c12415b150
# 25ddd80e278e4761b14fb7d4b385f63e
#: ../develop/plone/forms/files.rst:30 ../develop/plone/forms/files.rst:35
msgid ""
":doc:`Dexterity developer manual "
"</external/plone.app.dexterity/docs/advanced/files-and-images>`"
msgstr ""

# d1a2a7bc084848f28d8e1fccecfbafc7
#: ../develop/plone/forms/files.rst:33
msgid "Simple content item file or image field"
msgstr ""

# 4d9fe61a4bbd4f669472317d85b49cfa
#: ../develop/plone/forms/files.rst:38
msgid "Simple upload form example"
msgstr ""

# 2318fc1b91d040789bdf63a4ccb0119f
#: ../develop/plone/forms/files.rst:40
msgid ""
"The example below uses :doc:`five.grok </develop/addons/components/grok>` to"
" declare the form schema and form."
msgstr ""

# 40e4dc9141354064a2556bb1b62dcdd5
#: ../develop/plone/forms/files.rst:43
msgid ""
"We use `plone.namedfile <https://pypi.python.org/pypi/plone.namedfile>`_ for"
" the upload field, which is a CSV file. We accept the upload and then "
"process the file."
msgstr ""

# 58763463c6eb4dd3bc785f422590f1f0
#: ../develop/plone/forms/files.rst:47
msgid ""
"You need to declare an ``extends`` directive to pin down required dependency"
" versions in ``buildout.cfg``. For more information, see :doc:`buildout "
"troubleshooting </manage/troubleshooting/buildout>`."
msgstr ""

# 42323017915e4de991010f0045e808ce
#: ../develop/plone/forms/files.rst:51
msgid ""
"You also need to declare the following packages as dependencies in the "
"``install_dependencies`` directive of your ``setup.py`` file:"
msgstr ""

# 28c7354b1d5c4083a45300a2211a25b0
#: ../develop/plone/forms/files.rst:54
msgid "``five.grok``,"
msgstr ""

# 64173fc7bfff493ab5fcbd1ae580bff3
#: ../develop/plone/forms/files.rst:55
msgid "``plone.autoform``,"
msgstr ""

# 81c5e7a89a15433e8b9f36539ceaa379
#: ../develop/plone/forms/files.rst:56
msgid "``plone.directives.form``."
msgstr ""

# a4dadf0d76e84c63bf9da624f5b9db64
#: ../develop/plone/forms/files.rst:58
msgid ""
"After doing this, rerunning ``buildout`` will pull in these packages for you"
" and you will be able to import them successfully. For more information, see"
" `plone.directives.form README "
"<https://pypi.python.org/pypi/plone.directives.form>`_."
msgstr ""

# 7390df1a51e24097aff389b17c1a7c8c
#: ../develop/plone/forms/files.rst:62
msgid "Code::"
msgstr ""

# 47cf32bbccef4c7485be1e2551ebccd8
#: ../develop/plone/forms/files.rst:193
msgid "File field contents"
msgstr ""

# 4bc5ce3299544795a6b19b2e98856906
#: ../develop/plone/forms/files.rst:244
msgid "Connstring download URLs"
msgstr ""

# 988f79e39ccf4a1b9f2db277636c0a49
#: ../develop/plone/forms/files.rst:247
msgid "Simple example"
msgstr ""

# 11f671385c264669ae2134aa8942fb80
#: ../develop/plone/forms/files.rst:249
msgid "In Dexterity you can specify a ``@@download`` field for content types:"
msgstr ""

# 115c4e3a863140a39c73bed6f647ba95
#: ../develop/plone/forms/files.rst:260
msgid "Complex example"
msgstr ""

# cf30432042cd4683b71dc962cb9df4fe
#: ../develop/plone/forms/files.rst:262
msgid ""
"You need to expose file content to the site user through a view and then "
"refer to the URL of the view in your HTML template. There are some tricks "
"you need to keep in mind:"
msgstr ""

# 10bbcc30b16246f28e25e0f441e0f399
#: ../develop/plone/forms/files.rst:266
msgid ""
"All file download URLs should be timestamped, or the reupload file change "
"will not be reflected in the browser."
msgstr ""

# c96f3932fd094e42b0b3a3369d5034df
#: ../develop/plone/forms/files.rst:269
msgid ""
"You might want to serve different file types from different URLs and set "
"special HTTP headers for them."
msgstr ""

# 441b683a08fe44a49eafcb8ba60d6ee4
#: ../develop/plone/forms/files.rst:272
msgid "Complex example (``plone.app.headeranimations``)::"
msgstr ""

# a2da48586d6747c19369c4feb0550538
#: ../develop/plone/forms/files.rst:324
msgid "Streaming file data"
msgstr ""

# c9b33ed6e046490ab2c982d515860a09
#: ../develop/plone/forms/files.rst:326
msgid ""
"File data is delivered to the browser as a stream. The view function returns"
" a streaming iterator instead of raw data. This greatly reduces the latency "
"and memory usage when the file should not be buffered as a whole to memory "
"before sending."
msgstr ""

# f44a75be5fea4e2995126bc48b6cf53b
#: ../develop/plone/forms/files.rst:331
msgid "Example (``plone.app.headeranimation``)::"
msgstr ""

# 90f6fcab42b44633aabc3eb39d836322
#: ../develop/plone/forms/files.rst:402
msgid "``POSKeyError`` on missing blob"
msgstr ""

# 4ba0048c0bbb4aaeb2ea659d3fd83c74
#: ../develop/plone/forms/files.rst:404
msgid ""
"A ``POSKeyError`` is raised when you try to access blob *attributes*, but "
"the actual file is not available on the disk. You can still load the blob "
"object itself fine (as it's being stored in the ZODB, not on the "
"filesystem)."
msgstr ""

# 18c32728b7064c449c1a88606fa98dbc
#: ../develop/plone/forms/files.rst:423
msgid ""
"This might occur for example because you have copied the ``Data.fs`` file to"
" another computer, but not blob files."
msgstr ""

# e5e2de057bfd43d5b814c3755414acb1
#: ../develop/plone/forms/files.rst:426
msgid ""
"You probably want to catch ``POSKeyError`` s and return something more sane "
"instead::"
msgstr ""

# f26a2287a4624c7a89f1de58aadb5a28
#: ../develop/plone/forms/files.rst:463
msgid "https://pypi.python.org/pypi/experimental.gracefulblobmissing/"
msgstr ""

# e744e97969b04b3a91e2097568c4a3cd
#: ../develop/plone/forms/files.rst:466
msgid "Widget download URLs"
msgstr ""

# 8de320516cb74b83b553d340dfa7fb4b
#: ../develop/plone/forms/files.rst:468
msgid ""
"Some things you might want to keep in mind when playing with forms and "
"images:"
msgstr ""

# 7455a8f37fee4adb8730f6e81d29d171
#: ../develop/plone/forms/files.rst:471
msgid ""
"Image data might be incomplete (no width/height) during the first ``POST``."
msgstr ""

# bb539f3c667d46438dc44f71bac5b96a
#: ../develop/plone/forms/files.rst:473
msgid "Image URLs might change in the middle of request (image was updated)."
msgstr ""

# adfc192fbfe1448fb48006a8f581dbdd
#: ../develop/plone/forms/files.rst:475
msgid ""
"If your form content is something else than traversable context object then "
"you must fix file download URLs manually."
msgstr ""

# 02c66525278f4ebca1f35b18022382c9
#: ../develop/plone/forms/files.rst:478
msgid ""
"See `example in plone.app.headeranimations "
"<https://svn.plone.org/svn/collective/plone.app.headeranimation/trunk/plone/app/headeranimation/browser/widgets.py>`_."
msgstr ""

# ef959a95cffa44ab9f1c72f7be72a08c
#: ../develop/plone/forms/files.rst:481
msgid "Migrating custom content for blobs"
msgstr ""

# 87a8e6602ebd4a78b4c8c1c9eed920e8
#: ../develop/plone/forms/files.rst:483
msgid "Some hints how to migrate your custom content:"
msgstr ""

# 003d68274ece4600afc82a0cbfac19e9
#: ../develop/plone/forms/files.rst:485
msgid ""
"http://plone.293351.n2.nabble.com/plone-4-upgrade-blob-and-large-files-"
"tp5500503p5500503.html"
msgstr ""

# 000b5d0554da4435a2122a4a831b8e0d
#: ../develop/plone/forms/files.rst:488
msgid "Form encoding"
msgstr ""

# a7bed45e6baa4467b794dbe5c1dbdd09
#: ../develop/plone/forms/files.rst:492
msgid ""
"Make sure that all forms containing file content are posted as "
"``enctype=\"multipart/form-data\"``.  If you don't do this, Zope decodes "
"request ``POST`` values as string input and you get either empty strings or "
"filenames as your file content data. The older ``plone.app.z3cform`` "
"templates do not necessarily declare ``enctype``, meaning that you need to "
"use a custom page template file for forms doing uploads."
msgstr ""

# 06117fd98de64d18a21256f6e422f232
#: ../develop/plone/forms/files.rst:499
msgid "Example correct form header:"
msgstr ""

# 9525ec041a7d4ce5ac98f36c135fa773
#: ../develop/plone/forms/files.rst:507
msgid "File-system access in load-balanced configurations"
msgstr ""

# d85dc61bf77a456f8a7f562f3a5a9ddc
#: ../develop/plone/forms/files.rst:509
msgid ""
"The `plone.namedfiled <http://plone.org/products/plone.app.blob>`_ product "
"page contains configuration instructions for ``plone.namedfile`` and ZEO."
msgstr ""

# 7e61796ee0564e92bcea11f82594b55e
#: ../develop/plone/forms/index.rst:3
msgid "Models, forms, fields and widgets"
msgstr ""

# a3b9c120d7a841d1804ec031d880145b
#: ../develop/plone/forms/index.rst:5
msgid "Plone includes several alternative form mechanisms:"
msgstr ""

# a5e4c6e823fe46a1b5f00dce4865e62a
#: ../develop/plone/forms/index.rst:7
msgid "For content-oriented forms:"
msgstr ""

# 859e26d3da8c4bd0acb5d2ffa870b1c5
#: ../develop/plone/forms/index.rst:9
msgid ":doc:`Dexterity </develop/addons/dexterity>` for Plone 4.1+"
msgstr ""

# 3d24dca81ba5426bba27dcc4f62ab095
#: ../develop/plone/forms/index.rst:11
msgid ""
":doc:`Archetypes </old-reference-manuals/archetypes/index>` is used for "
"content types in Plone 3.x"
msgstr ""

# 1d566203024c4b1cb2ce64a752360ae5
#: ../develop/plone/forms/index.rst:13
msgid ""
"For convenience forms built and maintained through-the-web and where the "
"results are stored in CSV sheet or emailed:"
msgstr ""

# 887f3026dc2d45cab0c86eea402b33c9
#: ../develop/plone/forms/index.rst:15
msgid ""
":doc:`PloneFormGen </working-with-content/managing-"
"content/ploneformgen/index>`"
msgstr ""

# de31dc1a38694201a550828be09af494
#: ../develop/plone/forms/index.rst:17
msgid ""
"For application and utility forms where custom logic is added by writing "
"Python code:"
msgstr ""

# 39f7f61c3f8849b9acaf5400229a43d3
#: ../develop/plone/forms/index.rst:19
msgid "z3c.form for Plone 4.x"
msgstr ""

# 21fe63ed03a24c3bb2d486dc8b459ad6
#: ../develop/plone/forms/index.rst:21
msgid "zope.formlib is used for stock forms in Plone 3.x"
msgstr ""

# b18fe81a30434941b719e6cd23ea1fd0
#: ../develop/plone/forms/index.rst:23
msgid "This documentation applies only for form libraries."
msgstr ""

# 56673b42363a41e6a755922264f0b7a5
#: ../develop/plone/forms/index.rst:25
msgid ""
"You need to identify which form library you are dealing with and read the "
"form library specific documentation."
msgstr ""

# f493ca8506ea4405bd53915149f643a5
#: ../develop/plone/forms/index.rst:28
msgid ""
"Zope 3 schema (zope.schema package) is database-neutral and framework-"
"neutral way to describe Python data models."
msgstr ""

# 43ba5818bcdc48259b8688d0cdca6b9d
#: ../develop/plone/forms/index.rst:31
msgid "Modelling data"
msgstr ""

# a6349386272b4dc5a47d15458721257e
#: ../develop/plone/forms/index.rst:40
msgid "Forms, fields and widgets"
msgstr ""

# b175cf6e54ed4961b180f2d0bfb746b1
#: ../develop/plone/forms/index.rst:51
msgid "Creating forms through-the-web without programming"
msgstr ""

# bde1fcb552534373bd4f4826063d5d26
#: ../develop/plone/forms/manual.rst:3
msgid "Processing raw HTTP post requests"
msgstr ""

# 5d981d93aa2d4d11b81af6e8d14de134
#: ../develop/plone/forms/manual.rst:7
msgid "How to read incoming HTTP POST values without form frameworks"
msgstr ""

# add0cee828d842d6a3aa168ca923d88d
#: ../develop/plone/forms/manual.rst:12
msgid ""
"See :doc:`HTTP request object "
"</develop/plone/serving/http_request_and_response>` for basics."
msgstr ""

# 7514c93c957846dd8aa457c5172a59c4
#: ../develop/plone/forms/manual.rst:14
msgid ""
"Here is an example view which checks if a form button has been pressed, and "
"takes action accordingly. The view is implemented using :doc:`grok framework"
" </develop/addons/components/grok>`."
msgstr ""

# 34a3ce5afeff4f7f92e264a0ffc3f433
#: ../develop/plone/forms/manual.rst:18
msgid "View code::"
msgstr ""

# b0c4999dcff54363a32e0e87b19f640c
# 80b4b95e097f42a3a2ebabc99644a6cb
#: ../develop/plone/forms/manual.rst:49 ../develop/plone/misc/facebook.rst:25
msgid "Page template code:"
msgstr ""

# d2ae53cfe5324c9baf92ed5648563d17
#: ../develop/plone/forms/manual.rst:84
msgid "Magical Zope form variables"
msgstr ""

# d7cf4253486b4d31b5b6a9cdf4e07686
#: ../develop/plone/forms/manual.rst:87
msgid ""
"Zope provides some magical HTTP POST variable names which are automatically "
"converted to native Python primitives by ZPublisher."
msgstr ""

# 78f725bdcf1249159e9364562b216743
#: ../develop/plone/forms/manual.rst:91
msgid "Quick explanation"
msgstr ""

# 2c10e4bf0f424cd69a831f80e242ad59
#: ../develop/plone/forms/manual.rst:93
msgid "If you have HTML::"
msgstr ""

# a792b5a322d4402783a55fb37cbce1d8
#: ../develop/plone/forms/manual.rst:97
msgid "Then::"
msgstr ""

# 936e9f956d914ee3b78fcb76a23e6b3e
#: ../develop/plone/forms/manual.rst:101
msgid "will return integer 30 instead of string \"30\"."
msgstr ""

# af5bcd8586e9458081a460a48a595044
#: ../develop/plone/forms/manual.rst:105
msgid ""
"This behavior is hard-coded to ZPublisher and cannot be extended or "
"disabled. The recommendation is not to use it, but do the conversion of "
"data-types yourself or use a more high-level form framework like z3c.form."
msgstr ""

# 0c65b9643bfe4892884f3cc1330113a0
#: ../develop/plone/forms/manual.rst:112
msgid "http://www.zope.org/Members/Zen/howto/FormVariableTypes"
msgstr ""

# 3e97f93f687a45e1a271b5ca39bdab06
#: ../develop/plone/forms/ploneformgen.rst:3
msgid "PloneFormGen"
msgstr ""

# 5c0784c256db4b9fa658e31807c2b445
#: ../develop/plone/forms/ploneformgen.rst:7
msgid ""
"PloneFormGen allows you to build and maintain convenience forms through "
"Plone edit interface."
msgstr ""

# 74d7d59e794043c2a4588b9a86691bf4
#: ../develop/plone/forms/ploneformgen.rst:12
msgid ""
"*PloneFormGen* is a Plone add-on Product that provides a generic Plone form "
"generator using fields, widgets and validators from Archetypes. Use it to "
"build simple, one-of-a-kind, web forms that save or mail form input."
msgstr ""

# 16d04c2dcec04891a1deac1d71a190c8
#: ../develop/plone/forms/ploneformgen.rst:14
msgid ""
"To build a web form, create a form folder, then add form fields as contents."
" Individual fields can display and validate themselves for testing purposes."
" The form folder creates a form from all the contained field content "
"objects."
msgstr ""

# 88847c30b2724cf7acea789226297ea2
#: ../develop/plone/forms/ploneformgen.rst:16
msgid ""
"Final disposition of form input is handled via plug-in action products. "
"Action adapters included with this release include a mailer, a save-data "
"adapter that saves input in tab-separated format for later download, and a "
"custom-script adapter that makes it possible to script simple actions "
"without recourse to the Zope Management Interface."
msgstr ""

# a26effdc79db4a88b8848ad5f4f9dab8
#: ../develop/plone/forms/ploneformgen.rst:18
msgid ""
"To make it easy to get started, newly created form folders are pre-populated"
" to act as a simple e-mail response form."
msgstr ""

# a0b05c66e683427982ab9874fcd04aad
#: ../develop/plone/forms/ploneformgen.rst:20
msgid "`PloneFormGen product page <http://plone.org/products/ploneformgen>`_"
msgstr ""

# 8ee6557bfc9345baa4eb865ece9bebdf
#: ../develop/plone/forms/ploneformgen.rst:22
msgid ""
":doc:`PloneFormGen documentation and tutorials </working-with-content"
"/managing-content/ploneformgen/index>`"
msgstr ""

# 9018b597d59648efb0a9756875eddf82
#: ../develop/plone/forms/ploneformgen.rst:24
msgid ""
":doc:`Creating forms with PloneFormGen add-on without programming </working-"
"with-content/managing-content/ploneformgen/getting_started>`"
msgstr ""

# 945a22babb07435da3608197198ffa9a
#: ../develop/plone/forms/schemas.rst:3
msgid "Modelling using zope.schema"
msgstr ""

# bda301db06fe415ab847e7f4a53d3bb5
#: ../develop/plone/forms/schemas.rst:7
msgid ""
"zope.schema package provide a storage-neutral way to define Python object "
"models with validators."
msgstr ""

# 804afc1f9bd2496cb4a0fd3b9f8fc7e1
#: ../develop/plone/forms/schemas.rst:15
msgid ""
"Zope 3 schemas are a database-neutral and form-library-neutral way to "
"describe Python data models."
msgstr ""

# 0f21eae3f3d14bec8a1dae5191962ba2
#: ../develop/plone/forms/schemas.rst:18
msgid "Plone uses Zope 3 schemas for these purposes:"
msgstr ""

# b9b7f9a5eff34ce4aa8612385dc7b0cf
#: ../develop/plone/forms/schemas.rst:20
msgid "to describe persistent data models;"
msgstr ""

# f0819f679b94411eb5616f3bbb06c0db
#: ../develop/plone/forms/schemas.rst:21
msgid "to describe HTML form data;"
msgstr ""

# 46bdcc02b86a4cc19e07cc74e9cfc017
#: ../develop/plone/forms/schemas.rst:22
msgid "to describe ZCML configuration data."
msgstr ""

# 63cb55987f474db8aec558b608f698b4
#: ../develop/plone/forms/schemas.rst:24
msgid ""
"Since Zope 3 schemas are not bound to e.g. a SQL database engine, it gives "
"you very reusable way to define data models."
msgstr ""

# 635106cd90914970a9261017e13b0173
#: ../develop/plone/forms/schemas.rst:27
msgid ""
"Schemas are just regular Python classes, with some special attribute "
"declarations.  They are always subclasses of ``zope.interface.Interface``. "
"The schema itself cannot be a concrete object instance |---| you need to "
"either have a ``persistent.Persistent`` object (for database data) or a "
"``z3c.form.form.Form`` object (for HTML forms)."
msgstr ""

# e01dd44ed9864b27bce8010e0baaef9f
#: ../develop/plone/forms/schemas.rst:33
msgid "Zope 3 schemas are used for tasks like:"
msgstr ""

# a8c8f01a540a4777b270a7f426c4a5be
#: ../develop/plone/forms/schemas.rst:35
msgid ""
"defining allowed input data format (string, integer, object, list, etc.) for"
" Python class instance attributes;"
msgstr ""

# bec15fea88ee4e899548e4b96f8c2c0b
#: ../develop/plone/forms/schemas.rst:37
msgid "specifying required attributes on an object;"
msgstr ""

# 2db53377fe624fb5b02f0285cc37e0a2
#: ../develop/plone/forms/schemas.rst:38
msgid "defining custom validators on input data."
msgstr ""

# 6230ce4354564bafbbe3c6e8d8d4a94a
#: ../develop/plone/forms/schemas.rst:40
msgid ""
"The basic unit of data model declaration is the *field*, which specifies "
"what kind of data each Python attribute can hold."
msgstr ""

# 83e1e7e995fb4c49a923be575bba16f7
#: ../develop/plone/forms/schemas.rst:46
msgid "`zope.schema <https://pypi.python.org/pypi/zope.schema>`_ on PyPi"
msgstr ""

# 2316bb2b91184225887955b83c5171d6
#: ../develop/plone/forms/schemas.rst:48
msgid ""
"`zope.schema source code "
"<http://svn.zope.org/zope.schema/trunk/src/zope/schema/>`_ - definite source"
" for field types and usage."
msgstr ""

# 94b6e1c44db349bf80ce39ffe99ef287
#: ../develop/plone/forms/schemas.rst:50
msgid ""
"``zope.schema`` provides a very comprehensive set of fields out of the box. "
"Finding good documentation for them, however, can be challenging.  Here are "
"some starting points:"
msgstr ""

# b67ea25b5561469d981482a1894b6fd7
#: ../develop/plone/forms/schemas.rst:55
msgid ""
":doc:`Dexterity field list "
"</external/plone.app.dexterity/docs/reference/fields>`."
msgstr ""

# 3e566b684e4c48139c38f325319c0681
#: ../develop/plone/forms/schemas.rst:59
msgid "Example of a schema"
msgstr ""

# b825a9a6bbdd404b9eb1cf6f294fcebd
#: ../develop/plone/forms/schemas.rst:61
msgid "Let's define a data model to store addresses::"
msgstr ""

# 4bba3bbee7ea4e7e90c07cf9c8bf4b3c
#: ../develop/plone/forms/schemas.rst:85
msgid ""
"Next, we define a concrete persistent class which uses this data model.  We "
"can use this class to store data based on our model definition in the ZODB "
"database."
msgstr ""

# cf1e1dd7bfdb4cfd925c594fc1f837cd
#: ../develop/plone/forms/schemas.rst:89
msgid ""
"We use ``zope.schema.fieldproperty.FieldProperty`` to bind persistent class "
"attributes to the data definition."
msgstr ""

# b5188f4423cf4741979bce46282b4f26
#: ../develop/plone/forms/schemas.rst:115
msgid ""
"For persistent objects, see :doc:`persistent object documentation "
"</develop/plone/persistency/persistent>`."
msgstr ""

# a98cd90b6fcb4431928beb34676d6134
#: ../develop/plone/forms/schemas.rst:120
msgid "Using schemas as data models"
msgstr ""

# 6f22535ff1dd44e48bf208df513f7be0
#: ../develop/plone/forms/schemas.rst:123
msgid ""
"Based on the example data model above, we can use it in e.g. content type "
":doc:`browser views </develop/plone/views/browserviews>` to store arbitrary "
"data as content type attributes."
msgstr ""

# 108d631bc086429e9e19dff4fcc5091b
#: ../develop/plone/forms/schemas.rst:151
msgid "Field constructor parameters"
msgstr ""

# 788ace6f18ba40f3b47288c261441546
#: ../develop/plone/forms/schemas.rst:153
msgid ""
"The ``Field`` base class defines a list of standard parameters that you can "
"use to construct schema fields.  Each subclass of ``Field`` will have its "
"own set of possible parameters in addition to this."
msgstr ""

# 4b95744a691a4757824348b61f7f6774
#: ../develop/plone/forms/schemas.rst:157
msgid ""
"See the full list `here "
"<http://apidoc.zope.org/++apidoc++/Code/zope/schema/_bootstrapfields/Field/index.html>`_."
msgstr ""

# 27a1a916b3e74ddabc6534404cc7136f
# 0be2e17103614a1eaffcc8ecb3169e99
#: ../develop/plone/forms/schemas.rst:161
#: ../develop/plone/searching_and_indexing/query.rst:117
msgid "Title"
msgstr ""

# 2dd8adf69dbf4798bf635108896e0008
#: ../develop/plone/forms/schemas.rst:161
msgid "field title as unicode string"
msgstr ""

# a978bd951e37404aa66f7a7d90aeae7e
#: ../develop/plone/forms/schemas.rst:164
msgid "field description as unicode string"
msgstr ""

# d6633cc91bc04ad6ad6eaf86e3c393b3
#: ../develop/plone/forms/schemas.rst:167
msgid "required"
msgstr ""

# 6c02982e3f4a439e83de1bf309838816
#: ../develop/plone/forms/schemas.rst:167
msgid "boolean, whether the field is required"
msgstr ""

# 59fa3ffe4925494d8770a5149fcd26ae
#: ../develop/plone/forms/schemas.rst:170
msgid "default"
msgstr ""

# a332a6ebccc64b3fbbe207caf53c65da
#: ../develop/plone/forms/schemas.rst:170
msgid "Default value if the attribute is not present"
msgstr ""

# df2981efc75a4db685b77b4186d28785
#: ../develop/plone/forms/schemas.rst:172
msgid "... and so on."
msgstr ""

# 25e1be88c9ab4d70ab986256661b40fb
#: ../develop/plone/forms/schemas.rst:176
msgid ""
"Do not initialize any non-primitive values using the *default* keyword "
"parameter of schema fields.  Python and the ZODB stores objects by "
"reference.  Python code will construct only *one* field value during schema "
"construction, and share its content across all objects.  This is probably "
"not what you intend. Instead, initialize objects in the ``__init__()`` "
"method of your schema implementer."
msgstr ""

# e602900ffe744b39bb0e13c397c361d2
#: ../develop/plone/forms/schemas.rst:183
msgid ""
"In particular, dangerous defaults are: ``default=[]``, ``default={}``, "
"``default=SomeObject()``."
msgstr ""

# 1098a155c50b4259b813e4a2470549bf
#: ../develop/plone/forms/schemas.rst:190
msgid ""
"The ``zope.schema._schema`` module provides some introspection functions:"
msgstr ""

# 930fb2a7d7fd4d1ab6d4b76dc497a980
#: ../develop/plone/forms/schemas.rst:192
msgid "``getFieldNames(schema_class)``"
msgstr ""

# 925e1bbef0454773ac6176bb4492b56f
#: ../develop/plone/forms/schemas.rst:193
msgid "``getFields(schema_class)``"
msgstr ""

# 6ea462766c564a10bc93c52b727d2a19
#: ../develop/plone/forms/schemas.rst:194
msgid ""
"``getFieldNamesInOrder(schema)`` |---| retain the orignal field declaration "
"order."
msgstr ""

# 49b6a39bd47c4488b920eb3cc804f7df
#: ../develop/plone/forms/schemas.rst:196
msgid ""
"``getFieldsInOrder(schema)`` |---| retain the orignal field declaration "
"order."
msgstr ""

# 975c4eb787514840af00369f386450b6
#: ../develop/plone/forms/schemas.rst:212
msgid "Dumping schema data"
msgstr ""

# ee8fb3153af84f4b8c1a6772bffca45a
#: ../develop/plone/forms/schemas.rst:214
msgid ""
"Below is an example how to extract all schema defined fields from an object."
msgstr ""

# f73245a8e7a7484692f104812ffb5e0f
#: ../develop/plone/forms/schemas.rst:242
msgid "Finding the schema for a Dexterity type"
msgstr ""

# 5c2e0350c7204603873fa2e7ed796b52
#: ../develop/plone/forms/schemas.rst:244
msgid ""
"When trying to introspect a Dexterity type, you can get a reference to the "
"schema thus::"
msgstr ""

# 0807b391f7b64811af3f99dc733f4122
#: ../develop/plone/forms/schemas.rst:251
msgid ""
"...and then inspect it using the methods above. Note this won't have "
"behavior fields added to it at this stage, only the fields directly defined "
"in your schema."
msgstr ""

# 06a9029297184745a987e896ba698c14
#: ../develop/plone/forms/schemas.rst:256
msgid "Field order"
msgstr ""

# a30be40c270342d580b3ef67e30eb185
#: ../develop/plone/forms/schemas.rst:258
msgid ""
"The ``order`` attribute can be used to determine the order in which fields "
"in a schema were defined. If one field was created after another (in the "
"same thread), the value of ``order`` will be greater."
msgstr ""

# f78c344e92af4f30813de057fd75da7a
#: ../develop/plone/forms/schemas.rst:264
msgid "Default values"
msgstr ""

# 32c1338517b24c90bf468e1040c2aaf6
#: ../develop/plone/forms/schemas.rst:266
msgid ""
"To make default values of schema effective, class attributes must be "
"implemented using ``FieldProperty``."
msgstr ""

# 8e62b416bcf84d1c8eb9a7307fa76019
#: ../develop/plone/forms/schemas.rst:291
msgid "Validation and type constrains"
msgstr ""

# dd36973ad2af40f58a3f1309c1ee2818
#: ../develop/plone/forms/schemas.rst:293
msgid ""
"Schema objects using field properties provide automatic validation "
"facilities, preventing setting badly formatted attributes."
msgstr ""

# 02e7e6cfc4084ed2a65b627cf0738df4
#: ../develop/plone/forms/schemas.rst:296
msgid "There are two aspects to validation:"
msgstr ""

# 0e07ed1ceb21475ebd49f1bdd577683a
#: ../develop/plone/forms/schemas.rst:298
msgid "Checking the type constraints (done automatically)."
msgstr ""

# 045286e16c2245e49c0e206e3e5416ee
#: ../develop/plone/forms/schemas.rst:299
msgid "Checking whether the value fills certain constrains (validation)."
msgstr ""

# d4981d1b86434730bacbbbfdb3b9dbd6
#: ../develop/plone/forms/schemas.rst:301
msgid "Example of how type constraints work::"
msgstr ""

# 0da71a1a719a4521bcd9ec20d750c731
#: ../develop/plone/forms/schemas.rst:332
msgid "Example of validation (email field)::"
msgstr ""

# fad9d34c5426425ab7c9e8cbc90773c4
#: ../develop/plone/forms/schemas.rst:352
msgid "Persistent objects and schema"
msgstr ""

# 21daf91723d247d997bd2fb845d8e145
#: ../develop/plone/forms/schemas.rst:354
msgid ""
"ZODB persistent objects do not provide facilities for setting field defaults"
" or validating the data input."
msgstr ""

# 1682b1d86f01437d97805054624c91d1
#: ../develop/plone/forms/schemas.rst:357
msgid ""
"When you create a persistent class, you need to provide field properties for"
" it, which will sanify the incoming and outgoing data."
msgstr ""

# f648126251114b5cbfab927ab2b1b292
#: ../develop/plone/forms/schemas.rst:360
msgid ""
"When the persistent object is created it has no attributes. When you try to "
"access the attribute through a named "
"``zope.schema.fieldproperty.FieldProperty`` accessor, it first checks "
"whether the attribute exists. If the attribute is not there, it is created "
"and the default value is returned."
msgstr ""

# 4976a89d39ae4fa984cdc4b199ab816d
#: ../develop/plone/forms/schemas.rst:417
msgid "Now you see the magic::"
msgstr ""

# 8582cbba65864e5585ffd5ad56692953
#: ../develop/plone/forms/schemas.rst:426
msgid "Collections (and multichoice fields)"
msgstr ""

# fc5c176bc08244da8c086783d8bd5344
#: ../develop/plone/forms/schemas.rst:428
msgid ""
"Collections are fields composed of several other fields. Collections also "
"act as multi-choice fields."
msgstr ""

# f5f24a5c701d46deabc0f2227778c077
# ef71fa4153534a3e81d1c9a5f5ae8513
#: ../develop/plone/forms/schemas.rst:431
#: ../develop/plone/i18n/internationalisation.rst:141
msgid "For more information see:"
msgstr ""

# 6718ad7a5673458c82ded42983053d60
#: ../develop/plone/forms/schemas.rst:433
msgid ""
"`Using Zope schemas with a complex vocabulary and multi-select fields "
"<http://www.upfrontsystems.co.za/Members/izak/sysadman/using-zope-schemas-"
"with-a-complex-vocabulary-and-multi-select-fields>`_"
msgstr ""

# e77b5c62f81a424d95aaa0d511cbe587
#: ../develop/plone/forms/schemas.rst:435
msgid ""
"Collections section in `zope.schema documentation "
"<http://apidoc.zope.org/++apidoc++/Code/zope/schema/fields.txt/index.html>`_"
msgstr ""

# 64d5d8a75cba4a11a02b283c6fa4b980
#: ../develop/plone/forms/schemas.rst:437
msgid ""
"Schema `field sources documentation "
"<http://apidoc.zope.org/++apidoc++/Code/zope/schema/sources.txt/index.html>`_"
msgstr ""

# 5464c97228004170990e5e1ad6694e05
#: ../develop/plone/forms/schemas.rst:439
msgid ""
"`Choice field "
"<http://apidoc.zope.org/++apidoc++/Code/zope/schema/_field/Choice/index.html>`_"
msgstr ""

# f296d0a580814a908a321a924ae3d6e5
#: ../develop/plone/forms/schemas.rst:441
msgid ""
"`List field "
"<http://apidoc.zope.org/++apidoc++/Code/zope/schema/_field/List/index.html>`_."
msgstr ""

# fbb8930659314451a34f99fcf83784d1
#: ../develop/plone/forms/schemas.rst:445
msgid "Single-choice example"
msgstr ""

# f54fd2db64e743338482f060560f81f2
#: ../develop/plone/forms/schemas.rst:447
msgid "Only one value can be chosen."
msgstr ""

# 5d5392bc325f47319688d0ffc1b276c9
#: ../develop/plone/forms/schemas.rst:449
msgid "Below is code to create Python logging level choice::"
msgstr ""

# 694f67d700c549a7b9c39bf6df2f6382
#: ../develop/plone/forms/schemas.rst:487
msgid "Multi-choice example"
msgstr ""

# 23681f258e3f48d58f2f0d29f1f765d9
#: ../develop/plone/forms/schemas.rst:489
msgid ""
"Using zope.schema.List, many values can be chosen once. Each value is "
"atomically constrained by *value_type* schema field."
msgstr ""

# 420969a20a7647dea18d24d19bbccca6
# bd2b5edc0f304de7ad7e224cc8801149
#: ../develop/plone/forms/schemas.rst:513
#: ../develop/plone/forms/z3c.form.rst:499
msgid "Dynamic schemas"
msgstr ""

# bd8c24d86def43bb87560621b458f13f
#: ../develop/plone/forms/schemas.rst:515
msgid ""
"Schemas are singletons, as there only exist one class instance per Python "
"run-time. For example, if you need to feed schemas generated dynamically to "
"form engine, you need to"
msgstr ""

# ec477dc60abe4599a8ff2d63a554d798
#: ../develop/plone/forms/schemas.rst:519
msgid ""
"If the form engine (e.g. z3c.form refers to schema fields, then replace "
"these references with dynamically generated copes)"
msgstr ""

# ab3ca0949d1f449db7dbd2565c5d208a
#: ../develop/plone/forms/schemas.rst:522
msgid ""
"Generate a Python class dynamically. Output Python source code, then "
"``eval()`` it. Using ``eval()`` is almost always considered as a bad "
"practice."
msgstr ""

# 896f619c82b24c9493afcc80dadc9490
#: ../develop/plone/forms/schemas.rst:528
msgid ""
"Though it is possible, you should not modify zope.schema classes in-place as"
" the same copy is shared between different threads and if there are two "
"concurrent HTTP requests problems occur."
msgstr ""

# 0e26fdc340994f21a801017259bd30ec
#: ../develop/plone/forms/schemas.rst:534
msgid "Replacing schema fields with dynamically modified copies"
msgstr ""

# 5c88f5f78f0b40028be0732d9116029c
#: ../develop/plone/forms/schemas.rst:536
msgid ""
"The below is an example for z3c.form. It uses Python ``copy`` module to copy"
" f.field reference, which points to zope.schema field. For this field copy, "
"we modify *required* attribute based on input."
msgstr ""

# f4d8cdbf662d456a887d33dfe00287bb
#: ../develop/plone/forms/schemas.rst:568
msgid "Don't use dict {} or list [] as a default value"
msgstr ""

# 23bb720ea43944b39b4e925f441a809a
#: ../develop/plone/forms/schemas.rst:570
msgid ""
"Because how Python object construction works, giving [] or {} as a default "
"value will make all created field values to share this same object."
msgstr ""

# 58a59b4f0a8944a8a97094979fb45683
#: ../develop/plone/forms/schemas.rst:573
msgid "http://effbot.org/zone/default-values.htm"
msgstr ""

# 8c2fecf20e304b609d114688db2fd31f
#: ../develop/plone/forms/schemas.rst:575
msgid "Use value adapters instead"
msgstr ""

# a37cc2b22e8b424ebe29bb55b3ecc66e
#: ../develop/plone/forms/schemas.rst:577
msgid "https://pypi.python.org/pypi/plone.directives.form#value-adapters"
msgstr ""

# 9ec467944689410a99998f36bff7a1d3
#: ../develop/plone/forms/vocabularies.rst:7
msgid ""
"Vocabularies are lists of (value -> human readable title) pairs used by e.g."
" selection drop downs. zope.schema provides tools to programmatically "
"construct their vocabularies."
msgstr ""

# cddfe4e0ccde46059aa25100e293c9fe
#: ../develop/plone/forms/vocabularies.rst:16
msgid "Vocabularies specify options for choice fields."
msgstr ""

# 237d7738fbaf48768f0abd4d019a78b1
#: ../develop/plone/forms/vocabularies.rst:18
msgid ""
"Vocabularies are normally described using "
"zope.schema.vocabulary.SimpleVocabulary and "
"zope.schema.vocabulary.SimpleTerm objects. `See the source code "
"<http://svn.zope.org/zope.schema/trunk/src/zope/schema/vocabulary.py?rev=75170&view=auto>`_."
msgstr ""

# a1782ad82c82481a9584116cc095574e
#: ../develop/plone/forms/vocabularies.rst:24
msgid "Vocabulary terms"
msgstr ""

# e69a23632be04b509737173a8ce0fbca
#: ../develop/plone/forms/vocabularies.rst:26
msgid "zope.schema defines different vocabulary term possibilities."
msgstr ""

# 5cd6e80da9ce42cfb698b029a966676b
#: ../develop/plone/forms/vocabularies.rst:28
msgid ""
"A term is an entry in the vocabulary. The term has a value. Most terms are "
"tokenised terms which also have a token, and some terms are titled, meaning "
"they have a title that is different to the token."
msgstr ""

# 5ffcf3a322e64f7090f4b6e2b3b9286d
#: ../develop/plone/forms/vocabularies.rst:30
msgid "In ``SimpleTerm`` instances"
msgstr ""

# 67a1aa1e1e7c4cd9bf29936cc9e539fa
#: ../develop/plone/forms/vocabularies.rst:32
msgid ""
"``SimpleTerm.token`` must be an ASCII string. It is the value passed with "
"the request when the form is submitted. A token must uniquely identify a "
"term."
msgstr ""

# 6205d85519c44c64acfa64c85667f4ac
#: ../develop/plone/forms/vocabularies.rst:34
msgid ""
"``SimpleTerm.value`` is the actual value stored on the object. This is not "
"passed to the browser or used in the form. The value is often a unicode "
"string, but can be any type of object."
msgstr ""

# 1d85317ba8df46779e6f469b2b4873d6
#: ../develop/plone/forms/vocabularies.rst:36
msgid ""
"``SimpleTerm.title`` is a unicode string or translatable message. It is used"
" in the form."
msgstr ""

# 4e4b60615fa54ddc996ddb5675d95d83
#: ../develop/plone/forms/vocabularies.rst:38
msgid "Some info::"
msgstr ""

# b0b4ed22895b4e8fa7ae0c0f37dc9bf7
#: ../develop/plone/forms/vocabularies.rst:67
msgid ""
"If you need international texts please note that only title is, and should "
"be, translated. Value and token should always carry the same value."
msgstr ""

# 5681b2a7dd864c0fbfd08f0292cae352
#: ../develop/plone/forms/vocabularies.rst:72
msgid "Creating a vocabulary"
msgstr ""

# b71b298632c94c4cb9760bf14cb4badd
#: ../develop/plone/forms/vocabularies.rst:84
msgid "Example 2::"
msgstr ""

# 5c2e8f99014e4090a42050d0bf7b04e9
#: ../develop/plone/forms/vocabularies.rst:101
msgid "Stock vocabularies"
msgstr ""

# bd96b8d907e84471827afc963fb2ec00
#: ../develop/plone/forms/vocabularies.rst:103
msgid "Some vocabularies Plone provides out of the box"
msgstr ""

# 2095b843e4b54d8795bfe44215bb256d
#: ../develop/plone/forms/vocabularies.rst:105
msgid ""
":doc:`Some common named vocabularies "
"</external/plone.app.dexterity/docs/advanced/vocabularies>`"
msgstr ""

# 938a6033b782410b9a3ac7119bec922f
#: ../develop/plone/forms/vocabularies.rst:107
msgid ""
"`Thumbnail size vocabulary (TinyMCE) "
"<https://github.com/plone/Products.TinyMCE/blob/master/Products/TinyMCE/vocabularies.py>`_"
msgstr ""

# 46aa395788c048d69fed11b46ce8e5eb
#: ../develop/plone/forms/vocabularies.rst:110
msgid "Creating vocabulary from list of objects"
msgstr ""

# d5fd281919bb4fe88b3f49c29d3ed246
#: ../develop/plone/forms/vocabularies.rst:112
msgid "Here is one example where value = title in term::"
msgstr ""

# ca759b190b964803b2ff0289b853b980
#: ../develop/plone/forms/vocabularies.rst:117
msgid "Retrieving a vocabulary"
msgstr ""

# 6483cad6200c42f48e71a251ec6c6f39
#: ../develop/plone/forms/vocabularies.rst:119
msgid ""
"zope.schema's SimpleVocabulary objects are retrieved via factories "
"registered as utilities."
msgstr ""

# 277a32b22dda4e21811bb7ba17ba052a
#: ../develop/plone/forms/vocabularies.rst:121
msgid "To get one, use zope.component's getUtility::"
msgstr ""

# 9acaa1c420554745ab8681c3f8c7eca8
#: ../develop/plone/forms/vocabularies.rst:131
msgid "Getting a term"
msgstr ""

# 43bfbb8b49d849d7aa66981c4a2383a9
#: ../develop/plone/forms/vocabularies.rst:133
msgid "By term value::"
msgstr ""

# 1c9c6cd3bba448c09557b5a573c0d44e
#: ../develop/plone/forms/vocabularies.rst:141
msgid "Listing a vocabulary"
msgstr ""

# 2c895139aa714395b47d35149d81c04a
#: ../develop/plone/forms/vocabularies.rst:152
msgid ""
"Dynamic vocabularies' values may change run-time. They are usually generated"
" based on some context data."
msgstr ""

# e27b996785024b5284ca610d5f046899
#: ../develop/plone/forms/vocabularies.rst:155
msgid ""
"Note that the examples below need grok package installed and <grok:grok "
"package=\"...\"> directive in configure.zcml."
msgstr ""

# 7d9907a1f09d4a0e90a73ee21fd6a802
#: ../develop/plone/forms/vocabularies.rst:158
msgid ""
"Complete example with portal_catalog query, vocabulary creation and form"
msgstr ""

# 47e019eafcbb41c090e09ca46034192d
#: ../develop/plone/forms/vocabularies.rst:271
msgid "Complex example 2"
msgstr ""

# 38be8d9685e7460f813df0a981c227c6
#: ../develop/plone/forms/vocabularies.rst:336
msgid ""
"For another example, see the :doc:`Dynamic sources "
"</external/plone.app.dexterity/docs/advanced/vocabularies>` chapter in the "
"Dexterity manual."
msgstr ""

# ed42f6efc4934385b50ffab01f9cbab5
#: ../develop/plone/forms/vocabularies.rst:340
msgid "Registering a named vocabulary provider in ZCML"
msgstr ""

# f9fdf1e2d1d64843b92d2ec6d2b322c1
#: ../develop/plone/forms/vocabularies.rst:342
msgid ""
"You can use ``<utility>`` in ZCML to register vocabularies by name and then "
"refer them by name via ``getUtility()`` or in zope.schema.Choice."
msgstr ""

# 931de0914ac447ab918d781c8db1f713
#: ../develop/plone/forms/vocabularies.rst:353
msgid "Then you can refer to vocabulary by its name::"
msgstr ""

# 01f39faac3e04c4eb53f8fbc2c8fc188
#: ../develop/plone/forms/vocabularies.rst:361
msgid ""
"For more information see `vocabularies API doc "
"<http://apidoc.zope.org/++apidoc++/ZCML/http_co__sl__sl_namespaces.zope.org_sl_zope/vocabulary/index.html>`_."
msgstr ""

# 689f6006e38f459d9d3d359c6f5dcdf1
#: ../develop/plone/forms/wysiwyg.rst:3
msgid "WYSIWYG text editing and TinyMCE"
msgstr ""

# 8ddf362e6ecc4bfa9591934da364a724
#: ../develop/plone/forms/wysiwyg.rst:7
msgid "WYSIWYG text field editor programming in Plone."
msgstr ""

# 9962e1afaed343bf82a4925b767caf6e
#: ../develop/plone/forms/wysiwyg.rst:14
msgid "Plone supports TinyMCE (default), Kupu and CKEditor."
msgstr ""

# 140ab03ab3f347399535e413953d95f1
#: ../develop/plone/forms/wysiwyg.rst:16
msgid ""
"TinyMCE and Plone integration is distributed in `Products.TinyMCE package "
"<https://pypi.python.org/pypi/Products.TinyMCE>`_."
msgstr ""

# 980d383621c64787b68809dc08853367
#: ../develop/plone/forms/wysiwyg.rst:20
msgid "Disabling HTML filtering and safe HTML transformation"
msgstr ""

# 9593bd73d21d4b97bfe26b87c924122d
#: ../develop/plone/forms/wysiwyg.rst:22
msgid ""
"By default Plone does HTML filtering to prevent `cross-site scripting "
"<http://en.wikipedia.org/wiki/Cross-site_scripting>`_ attacks. This will "
"make Plone to strip away from HTML"
msgstr ""

# f817e15445ba4308855c9262d048f6ab
#: ../develop/plone/forms/wysiwyg.rst:25
msgid "`<script>` tags"
msgstr ""

# f14fae9758e24190980faea140f0c940
#: ../develop/plone/forms/wysiwyg.rst:27
msgid "Some other potentially unsafe tags and attributes"
msgstr ""

# 3b18a66bf99d4eac9ff8cd297cc8a1af
#: ../develop/plone/forms/wysiwyg.rst:29
msgid ""
"If you need to put `<scrip>` tag on your content text in TinyMCE you can "
"disable this security feature."
msgstr ""

# 2a7e6eb3e5224beab83f13771ec09ead
#: ../develop/plone/forms/wysiwyg.rst:33
msgid ""
"If you don't trust all of your site editors, then this will open your site "
"for an attack."
msgstr ""

# 2f303a5f042342ad8f60f798638a722a
#: ../develop/plone/forms/wysiwyg.rst:35
msgid ""
"In the Zope Management Interface, at the top of a Plone site, go to "
"portal_transforms and open the safe_html transform. Disable it by putting a "
"\"1\" in the disable_transform field and saving."
msgstr ""

# ff10883c334b407d855b42a71d31c55e
#: ../develop/plone/forms/wysiwyg.rst:37
msgid "A site restart might be required depending on Plone version."
msgstr ""

# c84522685f6f46d492b83668f6179ddc
#: ../develop/plone/forms/wysiwyg.rst:41
msgid ""
"http://stackoverflow.com/questions/5796643/make-plone-accept-any-html-input"
msgstr ""

# d274654efcef47ec9e205aa86fbc8591
#: ../develop/plone/forms/wysiwyg.rst:46
msgid "Content linking"
msgstr ""

# 46432e555dd4425a9cc50e7487f3f484
#: ../develop/plone/forms/wysiwyg.rst:48
msgid ""
"Plone offers many kind of support and enhancements in site internal content "
"linking"
msgstr ""

# 7977796ab858431db8e89ec52ddbafc1
#: ../develop/plone/forms/wysiwyg.rst:50
msgid ""
"Delete protection: :doc:`warning if you try to delete content which is being"
" referred </develop/plone/content/deleting>`."
msgstr ""

# 64096551cce947f5b79f37ae4dbe915e
#: ../develop/plone/forms/wysiwyg.rst:52
msgid "Migrating of links when the content is being moved"
msgstr ""

# f69bb6a692d0415ea605e293b69a996f
#: ../develop/plone/forms/wysiwyg.rst:54
msgid ""
"The recommended method for linking the content is *Linking by UID* since "
"*Products.TinyMCE* version 1.3."
msgstr ""

# 932b0783a7c64735b820a99d2e02d8e2
#: ../develop/plone/forms/wysiwyg.rst:56
msgid ""
"When the text is saved in TinyMCE all relative links are converted to "
":doc:`UID links </develop/plone/content/uid>` in the saved HTML payload"
msgstr ""

# 3a379f23aa984133884eb3c8cf0e3f47
#: ../develop/plone/forms/wysiwyg.rst:58
msgid ""
"When the text is displayed again, the HTML is run through output filter and "
"UID links are converted back to human readable links"
msgstr ""

# cb6a7fc9482b42a6a50ec1819e2ac71a
#: ../develop/plone/forms/wysiwyg.rst:60
msgid ""
"This solves issues with earlier Plone versions where the link targets become"
" invalid when a HTML textfield with relative links where shown on the other "
"page as the original context."
msgstr ""

# de7c039259c448a48bbc0c5b3092871f
#: ../develop/plone/forms/wysiwyg.rst:65
msgid ""
"You might need to turn on *Linking by UID* setting on in the site setup if "
"you are migrating from older Plone sites."
msgstr ""

# 8470fd350b414801980f2debb0ec64a0
#: ../develop/plone/forms/wysiwyg.rst:68
msgid "Editor preferences"
msgstr ""

# 65bd01c4aa9e42a6ba3fcb80521054f3
#: ../develop/plone/forms/wysiwyg.rst:70
msgid ""
"Plone supports user text changeable editor. The active editor is stored in "
"the :doc:`user preferences </develop/plone/members/member_profile>`."
msgstr ""

# e4cda21a1c8443e9a5316e0fd08a7256
#: ../develop/plone/forms/wysiwyg.rst:73
msgid ""
"The user can fallback to hand-edited HTML by setting active editor to none."
msgstr ""

# 0c39dfeb7810428fbacd9465b05245ad
#: ../develop/plone/forms/wysiwyg.rst:75
msgid ""
"The rich text widget can also support optional input formats besides HTML: "
"structured text and so on."
msgstr ""

# 5fe3c0d33b9a4a6c83b0bfb98c3cd8b6
#: ../develop/plone/forms/wysiwyg.rst:79
msgid "Text format selector"
msgstr ""

# 1d7152ab486e458b83d16a2ec773e5f9
#: ../develop/plone/forms/wysiwyg.rst:81
msgid ""
"The format selector itself is rendered by ``wysiwyg_support.pt`` macros "
"which is Plone core"
msgstr ""

# dd38868563034783a90f0b0ce98c50b9
#: ../develop/plone/forms/wysiwyg.rst:84
msgid ""
"https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/skins/plone_wysiwyg/wysiwyg_support.pt"
msgstr ""

# 3a3998d551264757a817770dc5b125cc
#: ../develop/plone/forms/wysiwyg.rst:87
msgid "Applying styles only edit view"
msgstr ""

# 2dff445e719f472898a20215dc309b6a
#: ../develop/plone/forms/wysiwyg.rst:89
msgid ""
"You can use TinyMCE body selector make your CSS class have different styles "
"in view and edit modes (inside TinyMCE)"
msgstr ""

# acbfac424c4d49ee8a0f72343cdc20cc
#: ../develop/plone/forms/wysiwyg.rst:113
msgid ""
"Firefox does not actually support column breaks, so this was useful "
"headaching experience."
msgstr ""

# e2fb09a051424956aecd3cb2ff745d8f
#: ../develop/plone/forms/wysiwyg.rst:116
msgid "Customizing TinyMCE options"
msgstr ""

# b53b484184744be3bc145108aed3ca7c
#: ../develop/plone/forms/wysiwyg.rst:118
msgid ""
"In your add-on code, all TinyMCE options in the control panel can be "
"exported and imported :doc:`using GenericSetup, portal_setup and tinymce.xml"
" </develop/addons/components/genericsetup>`."
msgstr ""

# 0cbb9c59e977499e88f47d2d6f39ee8a
#: ../develop/plone/forms/wysiwyg.rst:122
msgid "Custom field-specific style list for TinyMCE"
msgstr ""

# 9de2ddd3e04d4f2bbeea0b83516896cf
#: ../develop/plone/forms/wysiwyg.rst:127
msgid "Oho."
msgstr ""

# 946384b3eb064b958d4bbf7e626317f9
#: ../develop/plone/forms/wysiwyg.rst:132
msgid "For Archetypes see"
msgstr ""

# d105280071114db482fba8b013345288
#: ../develop/plone/forms/wysiwyg.rst:134
msgid ""
"http://plone.org/products/tinymce/documentation/how-to/how-to-customize-"
"tinymce-for-an-archetypes-richwidget"
msgstr ""

# 4521ce4b8f584763bc6790b1d96b8a70
#: ../develop/plone/forms/wysiwyg.rst:137
msgid "Rich text transformations"
msgstr ""

# 4ab9a69b4c1a419eaed300f3fadd9f74
#: ../develop/plone/forms/wysiwyg.rst:139
msgid ""
":doc:`/external/plone.app.dexterity/docs/advanced/rich-text-markup-"
"transformations`"
msgstr ""

# 5f05f5f23a454c0e8009574c43113c09
#: ../develop/plone/forms/wysiwyg.rst:141
msgid "https://pypi.python.org/pypi/plone.app.textfield"
msgstr ""

# 54bd1a4c4e704d6f9930231c131ca8b5
#: ../develop/plone/forms/wysiwyg.rst:145
msgid "Hacking TinyMCE Javascript"
msgstr ""

# d740fa406e9e4393ba6d12f5c5e489e6
#: ../develop/plone/forms/wysiwyg.rst:147
msgid ""
"Plone ships with pre-compressed TinyMCE source code enabled by default."
msgstr ""

# d42ae5fca7114882ba32db85ba171731
#: ../develop/plone/forms/wysiwyg.rst:149
msgid ""
"If you want to toy around with TinyMCE source code itself, you might want to"
" first enable the usage of debug version of TinyMCE source."
msgstr ""

# bbe7b198cd30437b93fc61512ece2a0c
#: ../develop/plone/forms/wysiwyg.rst:152
msgid ""
"In ``Products.TinyMCE.skins`` open tiny_mce_src.js and copy-paste its "
"content into tiny_mce.js."
msgstr ""

# a20845a0a00149ba80d6aa1a9f502839
#: ../develop/plone/forms/wysiwyg.rst:157
msgid ""
"Replacing tiny_mce.js with tiny_mce_src.js in portal_javascripts doesn't "
"seem to work as it breaks TinyMCE plug-in loading."
msgstr ""

# c5e4050fe50c46b5a6db7c2c14ad0a2b
#: ../develop/plone/forms/wysiwyg.rst:161
msgid "TinyMCE plug-ins"
msgstr ""

# f77ccf7857604735903eee81d5ed2739
#: ../develop/plone/forms/wysiwyg.rst:163
msgid ""
"TinyMCE consists of plug-ins. Existing plug-ins can be overlaid with your "
"custom version by loading Javascript after core TinyMCE load."
msgstr ""

# ac9b30c612814b9593fdac3d16b00316
#: ../develop/plone/forms/wysiwyg.rst:166
msgid ""
"Default TinyMCE plug-in Javascript files can be found under "
"Products.TinyMCE/skins/tinymce/plugins"
msgstr ""

# 9a52f538740d49609aad23a889a7ef4c
#: ../develop/plone/forms/wysiwyg.rst:168
msgid ""
"Usually TinyMCE plug-ins dialogs load in <iframe> and HTML code loads "
"separate CSS and JS files from the main site"
msgstr ""

# 32541ea28177468288e911421507836b
#: ../develop/plone/forms/wysiwyg.rst:173
msgid "Adding a new plug-in"
msgstr ""

# 0b2ce41646484446957b3a733eb5b6c4
#: ../develop/plone/forms/wysiwyg.rst:175
msgid "Here are instructions how to add new buttons to TinyMCE"
msgstr ""

# 7a2ccbb625e447639ba0c2ba39a25e34
#: ../develop/plone/forms/wysiwyg.rst:177
msgid "Some rules"
msgstr ""

# c185d5e3192f4372b27518eda84d2bed
#: ../develop/plone/forms/wysiwyg.rst:179
msgid "Plug-in id goes to ``tinymce.xml``"
msgstr ""

# 9ff30a2bd4d343a2affa515b62eca513
#: ../develop/plone/forms/wysiwyg.rst:181
msgid ""
"Your plug-in must be in a file called ``editor_plugin.js`` in skins layer"
msgstr ""

# 36329887212747059e80fe25a5527984
#: ../develop/plone/forms/wysiwyg.rst:183
msgid "You must have a skins layer folder named after your plug-in id"
msgstr ""

# 5b91b3fc3b29419daeafb3021c19084c
#: ../develop/plone/forms/wysiwyg.rst:185
msgid "You don't register plug-in Javascript *portal_javascripts*"
msgstr ""

# 1f5e52eeb689445789360ffe61b27771
#: ../develop/plone/forms/wysiwyg.rst:187
msgid ""
"TinyMCE button row is in the main document. However, the edit area itself is"
" in <iframe>. Also, many of TinyMCE dialogs are launched in <iframe> and "
"they load a hardcoded set of Javascript files (they don't use any kind of "
"Plone master template or <head> section)."
msgstr ""

# 04127849ae8a4ea6bef790f155d9323a
#: ../develop/plone/forms/wysiwyg.rst:191
msgid "So in the end you'll have a file::"
msgstr ""

# 2e9fd8d82e954072b254d18b33cb15a3
#: ../develop/plone/forms/wysiwyg.rst:195
msgid "Why all this? I don't know. And honestly, in this point, I don't care."
msgstr ""

# 5553265e108a4d28bfd15a66ab3a3b0f
#: ../develop/plone/forms/wysiwyg.rst:197
msgid "Register your specially named skin layer in ``skins.xml``::"
msgstr ""

# 948a5c55131a459e98bcfd386cbbd1d8
#: ../develop/plone/forms/wysiwyg.rst:214
msgid "Register your plugin in ``tinymce.xml`` GenericSetup install profile"
msgstr ""

# 3f720d4e870f4f149566fa56fca884c2
#: ../develop/plone/forms/wysiwyg.rst:233
msgid "Then finally drop a ``editor_plugin.js`` to your plug-in folder"
msgstr ""

# 504af3f9295a4ac099678d681503527d
#: ../develop/plone/forms/wysiwyg.rst:284
msgid "Media resources"
msgstr ""

# 6cd15c751d944292bc6ed828c41653c3
#: ../develop/plone/forms/wysiwyg.rst:286
msgid ""
"TinyMCE exposes URL to your plug-in base folder, where editor_plugin.js is, "
"as plug-in ``init()`` parameter."
msgstr ""

# 69bdf797a49d43d2b0025b65b18651e3
#: ../develop/plone/forms/wysiwyg.rst:288
msgid "You can construct relative URLs to set media resources in ``init()``."
msgstr ""

# 3de409ebfb4a43669cfbea1dde2794c9
#: ../develop/plone/forms/wysiwyg.rst:299
msgid "Language resources"
msgstr ""

# b5db660b6dc24d7e85f8f21c02a49ad1
#: ../develop/plone/forms/wysiwyg.rst:301
msgid ""
"TinyMCE does not directly accept strings as labels, but uses its own "
"internal translation mechanism which is not gettext."
msgstr ""

# 98ac589dda02467e99e0f7fc3c7228b2
#: ../develop/plone/forms/wysiwyg.rst:303
msgid "Create folder ``langs`` under plug-in base folder"
msgstr ""

# 8f7444e5f9ad4afeb7a74816bc77b2c7
#: ../develop/plone/forms/wysiwyg.rst:305
msgid "There create file ``en.js``"
msgstr ""

# 3808fc900cb144ce89db032fd920ffb6
#: ../develop/plone/forms/wysiwyg.rst:307
msgid "Sample content"
msgstr ""

# 43c682ac19384f78b3094c1181b9d203
#: ../develop/plone/forms/wysiwyg.rst:318
msgid ""
"https://svn.plone.org/svn/collective/medialog.tinymceplugins.helpmenu/trunk/medialog/tinymceplugins/helpmenu/skins/tinymce_plugin_helpmenu/editor_plugin.js"
msgstr ""

# 89b46d9eda124ce1b3da1e2aeefe78a2
#: ../develop/plone/forms/wysiwyg.rst:321
msgid "Customizing existing plug-in"
msgstr ""

# 3a6daca57d4049b7b048b8c502da5055
#: ../develop/plone/forms/wysiwyg.rst:323
msgid "The recommended way is to customize TinyMCE"
msgstr ""

# 42d641fd3a5946de84d738756c101d67
#: ../develop/plone/forms/wysiwyg.rst:325
msgid ""
"Re-register plug-in by simply including a plug-in JS code in a separate "
"Javascript file loaded after tinymce.js"
msgstr ""

# ff677e6b15ea4958b54e8ccc3ba7402a
#: ../develop/plone/forms/wysiwyg.rst:328
msgid ""
"override existing individual TinyMCE files using :doc:`jbot </adapt-and-"
"extend/theming/templates_css/skin_layers>`."
msgstr ""

# 6769652b475b467a9b2e241c9f251fd1
#: ../develop/plone/forms/wysiwyg.rst:332
msgid "Overriding plug-in"
msgstr ""

# c2a43afd43e24567b564b7dd01b14eb7
#: ../develop/plone/forms/wysiwyg.rst:334
msgid ""
"Create a duplicate of plug-in JS file (table.js), register it as a custom "
"Javascript from your add-on resource folder."
msgstr ""

# 8f895fa683134f5c971615b8135981ba
#: ../develop/plone/forms/wysiwyg.rst:337
msgid ""
"TinyMCE overrides previous plug-in registrations with new ones and you can "
"just re-register your own plug-in version to override the existing version."
msgstr ""

# 60a65ebb1c2945ffad7ba72ba63910b7
#: ../develop/plone/forms/wysiwyg.rst:340
msgid "Refer it in portal_javascripts"
msgstr ""

# 31f9437ff3fb49f7a53a738d3d7511c0
#: ../develop/plone/forms/wysiwyg.rst:356
msgid "Overriding plug-in resources"
msgstr ""

# 26721e1546ff41ceaf3fed02c840df6a
#: ../develop/plone/forms/wysiwyg.rst:358
msgid ""
"Yoiu can also override CSS, HTML (.htm.pt templates) with ``z3c.jbot`` as "
"instructed above."
msgstr ""

# 505847e3021e4709b7f3c27966931684
#: ../develop/plone/forms/wysiwyg.rst:367
msgid ""
"Since there resources are loaded in <iframe> the normal browser refresh does"
" not trigger reload for them. Right click <iframe>, choose Refresh from "
"context menu."
msgstr ""

# cffa942c1c3044e89b6c66940172087f
#: ../develop/plone/forms/wysiwyg.rst:372
msgid "Ploneboard and anonymous editor"
msgstr ""

# 54d10643e60a4519b3e4477c08b95de7
#: ../develop/plone/forms/wysiwyg.rst:374
msgid "Problems with TinyMCE and Ploneboard."
msgstr ""

# 11cc4e061a8a41b08410f643dcb530e0
#: ../develop/plone/forms/wysiwyg.rst:378
msgid ""
"http://www.llakomy.com/articles/enable-kupu-for-anonymous-in-ploneboard"
msgstr ""

# ea342adb11024645b72561c38a55241a
#: ../develop/plone/forms/wysiwyg.rst:382
msgid "TinyMCE shortcuts"
msgstr ""

# 71a9c548c2a54a5aa1d206171da3107a
#: ../develop/plone/forms/wysiwyg.rst:384
msgid ""
"``Products.TinyMCE`` versions 1.3+ provide a shortcut view in link and image"
" dialogs. You can add your own site specific shortcuts here."
msgstr ""

# 5aae444fec304000b9cb556dc0e9217f
#: ../develop/plone/forms/wysiwyg.rst:387
msgid ""
"The most common use case is a shortcut link a folder which acts as a site "
"image bank. On multilingual sites this folder is"
msgstr ""

# 0b49ba85a47448959d6d812456f8938b
#: ../develop/plone/forms/wysiwyg.rst:390
msgid "Below natural language folders in the site root"
msgstr ""

# 8beaeac9e38d414cbb0eaa983d4977d5
#: ../develop/plone/forms/wysiwyg.rst:392
msgid "Language neutral"
msgstr ""

# 52703857f0f14c248086abc5b5becf58
#: ../develop/plone/forms/wysiwyg.rst:394
msgid "These make navigating to the folder using normal means very difficult."
msgstr ""

# 6ef03b82192f4fd49768ab80bfba84f3
#: ../develop/plone/forms/wysiwyg.rst:396
msgid ""
"New TinyMCE shortcuts can be registered as global utility via "
"`Products.TinyMCE.interfaces.IShortcut interface "
"<https://github.com/plone/Products.TinyMCE/blob/master/Products/TinyMCE/interfaces/shortcut.py>`_."
msgstr ""

# b20a0005d8ed41edaa81bd69ee6fca65
#: ../develop/plone/forms/wysiwyg.rst:401
msgid "We'll register our image bank as a shortcut into TinyMCE image dialog."
msgstr ""

# 929369159de849c2be106c4da81113b8
#: ../develop/plone/forms/wysiwyg.rst:403
msgid ""
"First make sure your add-on is :doc:`grok'ed "
"</develop/addons/components/grok>`."
msgstr ""

# af13ea1ec17c4d548f97f9980186f1fd
#: ../develop/plone/forms/wysiwyg.rst:405
msgid ""
"Then drop in the following file ``shortcut.py`` file into your :doc:`add-on "
"</develop/plone/getstarted/index>`::"
msgstr ""

# 81f121f655724041a4c8fa1fcd8f1192
#: ../develop/plone/forms/wysiwyg.rst:434
msgid ""
"After this you still need to go to TinyMCE control panel "
"(``http://localhost:8080/Plone/@@tinymce-controlpanel``) and enable the link"
" button in the settings for *Image Shortcuts*."
msgstr ""

# dfca71a1b7ad4382a2eaf1b38611fd66
#: ../develop/plone/forms/wysiwyg.rst:440
msgid ""
"You might also want to disable TinyMCE inline image uploads through CSS and "
"disable image creation in arbitrary folders on your site. Currently the only"
" way is to override TinyMCE internal CSS files using z3c.bot."
msgstr ""

# cd064661806b46459a6966c432a41fcf
#: ../develop/plone/forms/z3c.form.rst:3
msgid "z3c.form library"
msgstr ""

# 32bfe3d778594307b1d2e64ae9683f44
#: ../develop/plone/forms/z3c.form.rst:7
msgid ""
"``z3c.form`` is flexible and powerful form library for Zope 3 applications. "
"It is the recommended way to create complex Python-driven forms for Plone 4 "
"and later versions."
msgstr ""

# 61590a16c4644ea49977bd8acaea8ec9
#: ../develop/plone/forms/z3c.form.rst:16
msgid "Plone uses *z3c.form* library with the following integration steps"
msgstr ""

# 2290f7df2b5b46d7a94da6259d10ee03
#: ../develop/plone/forms/z3c.form.rst:18
msgid ""
"`plone.app.z3cform <https://pypi.python.org/pypi/plone.app.z3cform>`_ "
"provides Plone specific widgets and main template"
msgstr ""

# f4682f86f6b548118f7918027aee2799
#: ../develop/plone/forms/z3c.form.rst:21
msgid ""
"`plone.z3cform <https://pypi.python.org/pypi/plone.z3cform>`_ integrates "
"*z3c.form* with applications using Zope 2 mechanisms like acquisition"
msgstr ""

# 145f6303501d4d478e36ad21ad54247a
#: ../develop/plone/forms/z3c.form.rst:24
msgid ""
"`z3c.form <https://pypi.python.org/pypi/z3c.form/>`_ is a form library which"
" can be used with any Python application using Zope 3 HTTP requests objects"
msgstr ""

# 089c4ac81d7941059ad0c27d7734e85d
#: ../develop/plone/forms/z3c.form.rst:27
msgid ""
"(Plone 4.4+ only) `plone.app.widgets "
"<https://github.com/plone/plone.app.widgets/>`_ provide a better widget set "
"over *z3c.form* default with more JavaScript-enabled features"
msgstr ""

# 6a32525b8c8b4f20bc4bacb53692a1c0
#: ../develop/plone/forms/z3c.form.rst:31
msgid ""
"Forms are modelled using :doc:`zope.schema </develop/plone/forms/schemas>` "
"models written as Python classes. Widgets for modelled data are set by using"
" either *plone.directives.form* hints set onto schema class or in "
"``z3c.form.form.Form`` based classes body."
msgstr ""

# 081db7f9f5204345b8b720f702189638
#: ../develop/plone/forms/z3c.form.rst:35
msgid "Starting points to learn *z3c.form* in Plone"
msgstr ""

# e57321c2d74f428588c310ee2cf5344d
#: ../develop/plone/forms/z3c.form.rst:37
msgid ""
"Read about :doc:`creating schema-driven forms with Dexterity content "
"subsystem </develop/addons/schema-driven-forms/index>`"
msgstr ""

# d5558a7751ed470c82eec9b3d39f2603
#: ../develop/plone/forms/z3c.form.rst:39
msgid ""
":doc:`TODO app tutorial for Plone </external/tutorial.todoapp/docs/index>`"
msgstr ""

# 3cd49f4381b04cff990a5b77eecb36d5
#: ../develop/plone/forms/z3c.form.rst:41
msgid "Other related packages you might want to take a closer look"
msgstr ""

# 7b4e9ac1d5124f8a84f9cd499b109720
#: ../develop/plone/forms/z3c.form.rst:43
msgid ""
"Extra, more powerful widgets, from `collective.z3cform.widgets "
"<https://github.com/collective/collective.z3cform.widgets>`_"
msgstr ""

# 65d13fe647fb443898ad973adf80c79b
#: ../develop/plone/forms/z3c.form.rst:45
msgid ""
"Tabular data edit `collective.z3cform.datagridfield "
"<https://github.com/collective/collective.z3cform.datagridfield>`_"
msgstr ""

# 628f36ff3b5d45bd9558e8f85bbb8d21
#: ../develop/plone/forms/z3c.form.rst:47
msgid ""
"Build JavaScript interfaces with `plone.app.jqueryui "
"<https://github.com/plone/plone.app.jqueryui>`_"
msgstr ""

# 1900e7fdd7ca413bb40cbf670359984b
#: ../develop/plone/forms/z3c.form.rst:49
msgid ""
"Handling image and file fields with `plone.namedfile "
"<https://github.com/plone/plone.namedfile>`_"
msgstr ""

# 5a820b120cbb4130968c683832ad7cf3
#: ../develop/plone/forms/z3c.form.rst:51
msgid ""
"Configuring forms with `plone.form.directives "
"<https://pypi.python.org/pypi/plone.directives.form>`_"
msgstr ""

# 3658d590105f423c9819ad92f74fc8d6
#: ../develop/plone/forms/z3c.form.rst:54
msgid "``z3c.form`` big picture"
msgstr ""

# a30560466cdc4a7eb406297bc98d0f0a
#: ../develop/plone/forms/z3c.form.rst:56
msgid "The form model consists of:"
msgstr ""

# f3bb268e831f4779be3221ac91fbb036
#: ../develop/plone/forms/z3c.form.rst:59
msgid "``self.request``"
msgstr ""

# 28cc32adf6c94ceca421cbc547a7c203
#: ../develop/plone/forms/z3c.form.rst:59
msgid "The incoming HTTP request."
msgstr ""

# 6d92156d9a5847fd921969fd1e217aff
#: ../develop/plone/forms/z3c.form.rst:63
msgid "``self.context``"
msgstr ""

# 3f4ac996a043452f9326ab4ccc4cf1c8
#: ../develop/plone/forms/z3c.form.rst:62
msgid ""
"The Plone content item which was associated with the form view when URL "
"traversing was done."
msgstr ""

# 9944ba3a700f46499debaa4659b3b74c
#: ../develop/plone/forms/z3c.form.rst:67
msgid "``self.getContent()``"
msgstr ""

# f7d9dfa98d1b41f99a587736ddf9b2ce
#: ../develop/plone/forms/z3c.form.rst:66
msgid ""
"The actual object extracted from context and manipulated by the form if "
"``ignoreContext`` is not ``False``."
msgstr ""

# 2d97d3612a614f32b677756bd8193867
#: ../develop/plone/forms/z3c.form.rst:71
msgid "``self.status``"
msgstr ""

# d4073ad2cbac473f9efc4ba15453e33a
#: ../develop/plone/forms/z3c.form.rst:70
msgid ""
"A message displayed at the top of the form to the user when the form is "
"rendered. Usually it will be \"Please correct the errors below\"."
msgstr ""

# 43d644c6a1374b62ae9cccf7750c7d7e
#: ../develop/plone/forms/z3c.form.rst:73
msgid "The call-chain for a form goes like this:"
msgstr ""

# 7406ddb335cd4ca0bde5fcae0a81aaf2
#: ../develop/plone/forms/z3c.form.rst:75
msgid "``Form.update()`` is called"
msgstr ""

# 80b18ac16b99441285f39261ca72f528
#: ../develop/plone/forms/z3c.form.rst:77
msgid ""
"[``plone.autoform``-based forms only] Calls ``Form.updateFields()`` - this "
"will set widget factory methods for fields. If you want to customize the "
"type of the widget associated with the field, do it here. If your form is "
"not ``plone.autoform``-based you need to edit ``form.schema`` widget "
"factories on the module level code after the class has been constructed. The"
" logic mapping widget hints to widgets is in ``plone.autoform.utils``."
msgstr ""

# fcfa59df1f70487e940761a04320b783
#: ../develop/plone/forms/z3c.form.rst:86
msgid ""
"Calls ``Form.updateWidgets()`` - you can customize widgets at this point, if"
" you override this method. The ``self.widgets`` instance is created based on"
" the ``self.fields`` property."
msgstr ""

# d698eb323d7f451694f49bce97abc0f0
#: ../develop/plone/forms/z3c.form.rst:90
msgid "Calls ``Form.updateActions()``"
msgstr ""

# 8c8245c5737a493781e92a4d92f66a51
#: ../develop/plone/forms/z3c.form.rst:92
msgid ""
"Calls the action handler (the handler for the button which was clicked)"
msgstr ""

# dd62aec2c0f04cd986e36c59bc85b8c7
#: ../develop/plone/forms/z3c.form.rst:95
msgid ""
"If it's an edit form, the action handler calls ``applyChanges()`` to store "
"new values on the object and returns ``True`` if any value was changed."
msgstr ""

# 269341f3520148519deab892dfc40d95
#: ../develop/plone/forms/z3c.form.rst:99
msgid "``Form.render()`` is called"
msgstr ""

# 71ef27e452f84df68a6c5e1e1e662113
#: ../develop/plone/forms/z3c.form.rst:101
msgid "This renders the form as HTML, based on widgets and their templates."
msgstr ""

# e29e6be9a75644aaa52c44532c298075
#: ../develop/plone/forms/z3c.form.rst:104
msgid "Form"
msgstr ""

# c61ad599df694bbfa80b2cebcd2a5444
#: ../develop/plone/forms/z3c.form.rst:107
msgid "Simple boilerplate"
msgstr ""

# 6d6d4a718d4040de82b07ad6556250d9
#: ../develop/plone/forms/z3c.form.rst:109
msgid ""
"Here is a minimal form implementation using ``z3c.form`` and Dexterity:"
msgstr ""

# 3d0767c635d54260961dccc3ce57657c
#: ../develop/plone/forms/z3c.form.rst:111
msgid "Include Dexterity in your buildout as instructed by Dexterity manual"
msgstr ""

# 0ddb0ee37f3a48e8b49bcffb85434215
#: ../develop/plone/forms/z3c.form.rst:113
msgid ""
"Create Plone add-on product using :doc:`Paster </develop/addons/paste>`"
msgstr ""

# 4d6e663be79046cd88bb626726093675
#: ../develop/plone/forms/z3c.form.rst:115
msgid ""
"Include :doc:`five.grok support in your add-on "
"</develop/addons/components/grok>`"
msgstr ""

# 6c639a6acec54c28b1c7e204035ba02b
#: ../develop/plone/forms/z3c.form.rst:117
msgid "Toss ``form.py`` into your add-on product::"
msgstr ""

# 61045e23d352479fa5bac0f3f696cd7d
#: ../develop/plone/forms/z3c.form.rst:178
msgid "Setting form status message"
msgstr ""

# a6d307fafe484fddb81f2deef671d992
#: ../develop/plone/forms/z3c.form.rst:180
msgid ""
"The form's global status message tells whether the form action succeeded or "
"not."
msgstr ""

# 45bfdbd353dc4f769a92a76222da64ca
#: ../develop/plone/forms/z3c.form.rst:183
msgid ""
"The form status message will be rendered only on the form. If you want to "
"set a message which will be visible even if the user renders another page "
"after submitting the form, you need to use ``Products.statusmessage``."
msgstr ""

# b194652e979c4c1da2247d2baddd1215
#: ../develop/plone/forms/z3c.form.rst:188
msgid "To set the form status message::"
msgstr ""

# 9e7a386bda6148deb31a6458a2542739
#: ../develop/plone/forms/z3c.form.rst:194
msgid "Emulating form HTTP POST in unit tests"
msgstr ""

# 4ea0da035cdd421d82691fe5e2e180d8
#: ../develop/plone/forms/z3c.form.rst:196
msgid "The HTTP request must include at least one buttons field."
msgstr ""

# a5f8aa3a141946a79b6dc92f983ddc9a
#: ../develop/plone/forms/z3c.form.rst:198
msgid ""
"Form widget naming must match HTTP post values. Usually widgets have "
"``form.widgets`` prefix."
msgstr ""

# c3c7ed53734549f8949b0e78c1fafca8
#: ../develop/plone/forms/z3c.form.rst:201
msgid ""
"You must emulate the ZPublisher behavior which automatically converts string"
" input to Python primitives. For example, all choice/select values are "
"Python lists."
msgstr ""

# c03df05b15a74b3a83e8585aeb9a4136
#: ../develop/plone/forms/z3c.form.rst:205
msgid ""
"Some ``z3c`` widgets, like ``<select>``, need to have ``WIDGETNAME-empty-"
"marker`` value set to the integer 1 to be processed."
msgstr ""

# 15b9076dde314915a2f0a9ab1db143f3
#: ../develop/plone/forms/z3c.form.rst:209
msgid ""
"Usually you can get the dummy HTTP request object via acquisition from "
"``self.portal.REQUEST``"
msgstr ""

# 7be95f3354a14696adcaade05dca3b41
#: ../develop/plone/forms/z3c.form.rst:212
msgid "Example (incomplete)::"
msgstr ""

# 7389dc577c474310aa92f54c549612a1
#: ../develop/plone/forms/z3c.form.rst:229
msgid "A more complete example::"
msgstr ""

# de75e53924834705bfc03d29dab960e0
#: ../develop/plone/forms/z3c.form.rst:262
msgid ""
"Note that you will need to set ``IFormLayer`` on the request, to prevent a "
"``ComponentLookupError``."
msgstr ""

# b7baf8118f394978a18ac332c6b5ac0b
#: ../develop/plone/forms/z3c.form.rst:267
msgid "Changing form ACTION attribute"
msgstr ""

# 59ae6fd2c48641dc9663561fb8e9c144
#: ../develop/plone/forms/z3c.form.rst:269
msgid ""
"By default, the HTTP ``POST`` request is made to ``context.absolute_url()``."
" However you might want to make the post go to an external server."
msgstr ""

# 36e7e2d0fff24a0885e7cf1c052860a6
#: ../develop/plone/forms/z3c.form.rst:272
msgid ""
"See `how to set <form> action attribute "
"<https://pypi.python.org/pypi/plone.app.z3cform#form-action>`_"
msgstr ""

# b9890b170d88424899199d1e6554e451
#: ../develop/plone/forms/z3c.form.rst:275
msgid "Customizing form inner template"
msgstr ""

# 24f5074206554ff5ab1c1f90e22b0703
#: ../develop/plone/forms/z3c.form.rst:277
msgid ""
"If you want to change the page template producing ``<form>...</form>`` part "
"of the HTML code, follow the instructions below."
msgstr ""

# ec85fe7160e54433a431721edb499c0d
#: ../develop/plone/forms/z3c.form.rst:280
msgid ""
"Generally, when you have a template which extends Plone's ``main_template`` "
"you need to use the "
"``Products.Five.browser.pagetemplatefile.ViewPageTemplateFile`` class."
msgstr ""

# 7cb689218cdd430a8c03c59f5ae12433
#: ../develop/plone/forms/z3c.form.rst:297
msgid "Customizing form frame"
msgstr ""

# fd6a1a7d8a534f6aa65de539d0c129eb
#: ../develop/plone/forms/z3c.form.rst:299
msgid ""
"Please see `plone.app.zc3form README "
"<https://github.com/plone/plone.app.z3cform>`_."
msgstr ""

# a00000fb14d44af78cd15c0cd1407bb2
#: ../develop/plone/forms/z3c.form.rst:302
msgid "Rendering a form manually"
msgstr ""

# f6c3f3019547441c8bbb19a09a6a8f47
#: ../develop/plone/forms/z3c.form.rst:304
msgid ""
"You can directly create a form instance and call it's ``form.render()`` "
"method. This will output the full page HTML. However, there is a way to only"
" render the form body payload."
msgstr ""

# 5bda0de9db164e33b564dae1693f4ba8
#: ../develop/plone/forms/z3c.form.rst:308
msgid "First create a form and ``update()``::"
msgstr ""

# 5c83554eb709481b90b5b70b387a5d83
#: ../develop/plone/forms/z3c.form.rst:313
msgid ""
"Then you can invoke ``plone.app.z3cform`` macros directly to render the form"
" body in your view's page template."
msgstr ""

# 8edcb7c823de4dff942ba5725f085ed1
#: ../develop/plone/forms/z3c.form.rst:355
msgid "Fields"
msgstr ""

# 465555c370d344d0b8da6f64354555f3
#: ../develop/plone/forms/z3c.form.rst:357
msgid ""
"A field is responsible for: 1) pre-populating form values from context 2) "
"storing data to context after successful ``POST``."
msgstr ""

# 4757011dce884b4a9a21527e11a91383
#: ../develop/plone/forms/z3c.form.rst:361
msgid ""
"Form fields are stored in the ``form.fields`` variable, which is an instance"
" of the ``Fields`` class (ordered, dictionary-like)."
msgstr ""

# de10c22c30b24517b7e36d7ef67f448c
#: ../develop/plone/forms/z3c.form.rst:365
msgid "Creating a field"
msgstr ""

# 60f158a2a86d4259ab2260043c79ae22
#: ../develop/plone/forms/z3c.form.rst:367
msgid ""
"Fields are created by adapting one or more ``zope.schema`` fields for "
"``z3c.form`` using the ``Fields()`` constructor."
msgstr ""

# 8fe19e95a339405f8a425b537985b4af
#: ../develop/plone/forms/z3c.form.rst:370
msgid "Example of creating one field::"
msgstr ""

# f9b6e86d4aac4607b528ada52b0728f3
#: ../develop/plone/forms/z3c.form.rst:381
msgid "Another example::"
msgstr ""

# 03ed56a8f27e4b3ab899ac4fbdde61a6
#: ../develop/plone/forms/z3c.form.rst:402
msgid "Adding a field to a form"
msgstr ""

# ef209b9c6b7d44239d4e2f0e0ae743aa
#: ../develop/plone/forms/z3c.form.rst:404
msgid ""
"Use the overridden ``+=`` operator of a ``Fields`` instance. Fields "
"instances can be added to existing Fields instances."
msgstr ""

# 53e7b098cf824917823ef384d304e36d
#: ../develop/plone/forms/z3c.form.rst:412
msgid "Modifying a field"
msgstr ""

# b4c96ccf42e040dcabdfdc3294361732
#: ../develop/plone/forms/z3c.form.rst:414
msgid "Fields can be accessed by their name in ``form.fields``. Example::"
msgstr ""

# 7454962197ec496ba278b6245277db16
# 4edcf9162dc94df2a8744bd872a878ea
#: ../develop/plone/forms/z3c.form.rst:419
#: ../develop/plone/forms/z3c.form.rst:970
msgid "Accessing the schema of the field"
msgstr ""

# e4854432630d41c990c7021a8f7ba64c
#: ../develop/plone/forms/z3c.form.rst:421
msgid ""
"A ``zope.schema`` Field is stored as a ``field`` attribute of a field. "
"Example::"
msgstr ""

# 33f23ecc0a784370961b4c8b08abc5dd
#: ../develop/plone/forms/z3c.form.rst:428
msgid ""
"There exist only one singleton instance of a schema during run-time. If you "
"modify the schema fields, the changes are reflected to all subsequent form "
"updates and other forms which use the same schema."
msgstr ""

# c41d0f6a63814c609f5345fbc65d9e47
#: ../develop/plone/forms/z3c.form.rst:434
msgid "Read-only fields"
msgstr ""

# 0bce8eb2973d4f42bd1068b81b105d4a
#: ../develop/plone/forms/z3c.form.rst:436
msgid "There is ``field.readonly`` flag."
msgstr ""

# 425b2ce3d8e843b09a550fb143eab0b5
#: ../develop/plone/forms/z3c.form.rst:474
msgid ""
"You might also want to disable the *edit* button if none of the fields are "
"editable::"
msgstr ""

# bebee789be374a57bdcac445c7769658
#: ../develop/plone/forms/z3c.form.rst:482
msgid ""
"You can also set ``z3c.form.interfaces.DISPLAY_MODE`` in ``updateWidgets()``"
" if you are not dynamically poking form fields themselves."
msgstr ""

# 34f5b189ff664a499a967f1c2fe73809
#: ../develop/plone/forms/z3c.form.rst:488
msgid ""
"Do not modify fields on singleton instances (form or fields objects are "
"shared between all forms). This causes problems on concurrent access."
msgstr ""

# ca911e5872504bbb8c3c32096a6daf77
#: ../develop/plone/forms/z3c.form.rst:494
msgid ""
"``zope.schema.Field`` has a ``readonly`` property. ``z3c.form.field.Field`` "
"does not have this property, but has the ``mode`` property. Do not confuse "
"these two."
msgstr ""

# ae3bd77394d44908a3b561163e784261
#: ../develop/plone/forms/z3c.form.rst:501
msgid "Below is an example of how to include new schemas on the fly::"
msgstr ""

# f9232ecc45b24ef2a484c6949452f4b8
#: ../develop/plone/forms/z3c.form.rst:539
msgid "Date and time"
msgstr ""

# b9df8692c0ab412faa03bb6ac0dd4b14
#: ../develop/plone/forms/z3c.form.rst:552
msgid ""
"http://stackoverflow.com/questions/5776498/specify-datetime-format-on-zope-"
"schema-date-on-plone"
msgstr ""

# a234f2f1d8e5460b90ae7b6bbbae4947
#: ../develop/plone/forms/z3c.form.rst:554
msgid ""
"http://svn.zope.org/zope.schema/trunk/src/zope/schema/tests/test_datetime.py?rev=113055&view=auto"
msgstr ""

# f3b69786a6fd4db3be154b733e098384
#: ../develop/plone/forms/z3c.form.rst:557
msgid "Making boolean field required"
msgstr ""

# f16840dfb7fb403686dd3ac77e2a65d6
#: ../develop/plone/forms/z3c.form.rst:559
msgid "E.g. to make \"Accept Terms and Conditions\" checkbox"
msgstr ""

# 00fd16cbef4849aba66f9db0bfbe6108
#: ../develop/plone/forms/z3c.form.rst:561
msgid ""
"http://stackoverflow.com/questions/9670819/how-do-i-make-a-boolean-field-"
"required-in-a-z3c-form"
msgstr ""

# fa15a815c53c4e018e19db0343e114e4
#: ../develop/plone/forms/z3c.form.rst:566
msgid ""
"Widget are responsible for 1) rendering HTML code for input; 2) parsing HTTP"
" post input."
msgstr ""

# f7d75236836a408f958f646d8a03adac
#: ../develop/plone/forms/z3c.form.rst:570
msgid ""
"Widgets are stored as the ``widgets`` attribute of a form. It is presented "
"by an ordered dict-like ``Widgets`` class."
msgstr ""

# b90c6f6e380743699ce166322dc4a1d2
#: ../develop/plone/forms/z3c.form.rst:573
msgid ""
"Widgets are only available after the form's ``update()`` and "
"``updateWidgets()`` methods have been called. ``updateWidgets()`` will bind "
"widgets to the form context. For example, vocabularies defined by name are "
"resolved at this point."
msgstr ""

# 70a2eda3b7c34627bfd377c71232e866
#: ../develop/plone/forms/z3c.form.rst:578
msgid "A widget has two names:"
msgstr ""

# cee206759fa14967934c6e61ce00f136
#: ../develop/plone/forms/z3c.form.rst:580
msgid ""
"``widget.__name__`` is the name of the corresponding field. Lookups from "
"``form.widgets[]`` can be done using this name."
msgstr ""

# d99d1ec2678246d5b9f0af44c431eeba
#: ../develop/plone/forms/z3c.form.rst:583
msgid ""
"``widget.name`` is the decorated name used in HTML code. It has the format "
"``${form name}.${field set name}.${widget.__name__}``."
msgstr ""

# 81b8be1240014996b1dd71250fdf434e
#: ../develop/plone/forms/z3c.form.rst:587
msgid ""
"The Zope publisher will also mangle widget names based on what kind of input"
" the widget takes. When an HTTP ``POST`` request comes in, Zope publisher "
"automatically converts ``<select>`` dropdowns to lists and so on."
msgstr ""

# f891c6a6dbfb46109230e8d1e0c22356
#: ../develop/plone/forms/z3c.form.rst:593
msgid "Setting a widget for a field"
msgstr ""

# 772ad53c919e4b14aee90ff08504eb6f
#: ../develop/plone/forms/z3c.form.rst:596
msgid "Using plone.directives.form schema hints"
msgstr ""

# 07d3e84526564067991181069883a428
#: ../develop/plone/forms/z3c.form.rst:628
msgid ""
":doc:`Form schema hints </external/plone.app.dexterity/docs/reference/form-"
"schema-hints>`"
msgstr ""

# 08889ca6ab6c420fbb21e82fce22a7c0
#: ../develop/plone/forms/z3c.form.rst:632
msgid "Setting widget for z3c.form plain forms"
msgstr ""

# cd912e1a20f74b538457c2329b3b40ab
#: ../develop/plone/forms/z3c.form.rst:634
msgid ""
"You can set field's widgetFactory after fields have been declared in form "
"class body."
msgstr ""

# d636fb0a5492404cb8bc18979096728b
#: ../develop/plone/forms/z3c.form.rst:666
msgid "Setting widget dynamically Form.updateWidgets()"
msgstr ""

# 4103f9a749ee492a9db356f5a6ac11bc
#: ../develop/plone/forms/z3c.form.rst:668
msgid "Widget type can be set dynamically based on external conditions."
msgstr ""

# 116bd18901ef4cd0955fbadf1c96c515
#: ../develop/plone/forms/z3c.form.rst:684
msgid "Accessing a widget"
msgstr ""

# 8edebef891ad4bc084c8d60a51fee074
#: ../develop/plone/forms/z3c.form.rst:686
msgid "A widget can be accessed by its field's name. Example::"
msgstr ""

# a81ccd3740c9401c8b24c9c280b12ab5
#: ../develop/plone/forms/z3c.form.rst:698
msgid "Introspecting form widgets"
msgstr ""

# cc71c11cdb3649d2b98caa9d2c6f1eb1
#: ../develop/plone/forms/z3c.form.rst:716
msgid "Reordering and hiding widgets"
msgstr ""

# d32428aebbe54cc492257fa61f06247d
#: ../develop/plone/forms/z3c.form.rst:718
msgid ""
"With Dexterity forms you can use `plone.directives.form "
"<https://pypi.python.org/pypi/plone.directives.form>`_::"
msgstr ""

# a6b53a1c05224af68cd0196674b73bdc
#: ../develop/plone/forms/z3c.form.rst:738
msgid "Modifying a widget"
msgstr ""

# 09127024736844978eb74fb524d45686
#: ../develop/plone/forms/z3c.form.rst:740
msgid ""
"Widgets are stored in the ``form.widgets`` dictionary, which maps *field "
"name* to *widget*. The widget label can be different than the field name."
msgstr ""

# 439a9257934d4576a3054868bb5d4cce
#: ../develop/plone/forms/z3c.form.rst:755
msgid ""
"If you want to have a completely different Python class for a widget, you "
"need to override field's widget factory in the module body code after fields"
" have been constructed in the class, or in the ``update()`` method for "
"dynamically constructed fields::"
msgstr ""

# 993bc0605e40403f8d0fe9839a72cbb6
#: ../develop/plone/forms/z3c.form.rst:764
msgid "Reorder form widgets"
msgstr ""

# 6ade68a6b6f74970b4e906d1790f905d
#: ../develop/plone/forms/z3c.form.rst:766
msgid ""
"``plone.z3cform`` allows you to reorder the field widgets by overriding the "
"``update`` method of the form class."
msgstr ""

# ec5d60dd543e498186898955061c17a3
#: ../develop/plone/forms/z3c.form.rst:782
msgid ""
"For more information about how to reorder fields see the ``plone.z3cform`` "
"page at PyPI:"
msgstr ""

# bcb44ccf49564ffeb32ade17ad48e4a5
#: ../develop/plone/forms/z3c.form.rst:785
msgid ""
"<https://pypi.python.org/pypi/plone.z3cform#fieldsets-and-form-extenders>`_"
msgstr ""

# bd366a438c964fb38d37b4a0073cd1c4
#: ../develop/plone/forms/z3c.form.rst:789
msgid "Hiding fields"
msgstr ""

# 3bee3b4242db48e78bcda5f65fe85450
#: ../develop/plone/forms/z3c.form.rst:791
msgid "Here's how to do it in pure ``z3c.form``::"
msgstr ""

# 0a1c80dafc03488f9fae8cba7846db3d
#: ../develop/plone/forms/z3c.form.rst:799
msgid ""
"If you want to hide a widget that is part of a group, you cannot use the "
"updateWidgets method. The groups and their widgets get initialized after the"
" widgets have been updated. Before that, the groups variable is just a list "
"of group factories. During the update method though, the groups have been "
"initialized and have their own widget list each. For hiding widgets there, "
"you have to access the group in the update method like so::"
msgstr ""

# c21e47e318fe46cca11b4c679cd4b1cb
#: ../develop/plone/forms/z3c.form.rst:814
msgid ""
"groups itself is a list like object, you can also remove a complete group by"
" just removing it from the group dictionary."
msgstr ""

# 12b2b9df44334ff1a7057814a3da5984
#: ../develop/plone/forms/z3c.form.rst:817
msgid "Unprefixing widgets"
msgstr ""

# 9688dc163daa40a7b3350c45655b7a38
#: ../develop/plone/forms/z3c.form.rst:819
msgid ""
"By default each form widget gets a name prefixed by the form id. This allows"
" you to combine several forms on the same page."
msgstr ""

# 818038b311554a1894c2afbee7a42df2
#: ../develop/plone/forms/z3c.form.rst:822
msgid "You can override this behavior in ``updateWidgets()``::"
msgstr ""

# c553b89d1e1d46ab8671217ff94d6893
#: ../develop/plone/forms/z3c.form.rst:832
msgid ""
"Some templates, like ``select_input.pt``, have hard-coded name suffixes like"
" ``:list`` to satisfy ZPublisher machinery. If you need to get rid of these,"
" you need to override the template."
msgstr ""

# d9cfc85e3b254ffb97ed3353cbd7348d
#: ../develop/plone/forms/z3c.form.rst:837
msgid "Making widgets required conditionally"
msgstr ""

# 2cd2fc95ca4f4698b67da62a9eb4efd3
#: ../develop/plone/forms/z3c.form.rst:839
msgid ""
"If you want to avoid hardwired ``required`` on fields and toggle then "
"conditionally, you need to supply a dynamically modified schema field to the"
" ``z3c.form.field.Fields`` instance of the form."
msgstr ""

# b5b489ad0d404ce2beccd03e1b38c025
#: ../develop/plone/forms/z3c.form.rst:887
msgid "Setting widget types"
msgstr ""

# 2e997fde40684c6d81a0744c15194632
#: ../develop/plone/forms/z3c.form.rst:889
msgid ""
"By default, widgets for form fields are determined by ``FieldWidget`` "
"adapters (defined in :term:`ZCML`). You can override adapters per field "
"using field's ``widgetFactory`` property."
msgstr ""

# 6065ca52351f44ce9dced33a656a295a
#: ../develop/plone/forms/z3c.form.rst:893
msgid ""
"Below is an example which creates a custom widget, its ``FieldWidget`` "
"factory, and uses it for one field in one form::"
msgstr ""

# fae641522c0144abac9826d9f7ab3c99
#: ../develop/plone/forms/z3c.form.rst:935
msgid ""
"Alternatively, you can use `plone.directives.form "
"<https://pypi.python.org/pypi/plone.directives.form>`_ to add widget hints "
"to form schema."
msgstr ""

# 99cedf76d49642cca03bc325aa0f9152
#: ../develop/plone/forms/z3c.form.rst:940
msgid "Widget save"
msgstr ""

# 363fba016b5a4cde8bbc7d820721253e
#: ../develop/plone/forms/z3c.form.rst:942
msgid ""
"After ``form.update()`` if the request was *save* and all data was valid, "
"``form.applyChanges(data)`` is called."
msgstr ""

# 92fb6959ee974af2a0111bd533a7626d
#: ../develop/plone/forms/z3c.form.rst:945
msgid ""
"By default widgets use ``datamanger.AttributeField`` and try to store their "
"values as a member attribute of the object returned by "
"``form.getContent()``."
msgstr ""

# bfc867ae64944aedaa22f3521897052a
#: ../develop/plone/forms/z3c.form.rst:948
msgid "How do add custom DataManager"
msgstr ""

# f07fc67e565e4bce81ed9857db7e698c
#: ../develop/plone/forms/z3c.form.rst:951
msgid "Widget value"
msgstr ""

# da4269e5340e4de9b2719f7d06473681
#: ../develop/plone/forms/z3c.form.rst:953
msgid ""
"The widget value, either from form ``POST`` or previous context data, is "
"available as ``widget.value`` after the ``form.update()`` call."
msgstr ""

# bcb73d41cb394d18bccf5fa15a20882e
#: ../develop/plone/forms/z3c.form.rst:958
msgid "Adding a CSS class"
msgstr ""

# f9fb353ca6fb43bf83ccbd6f8b93b1a0
#: ../develop/plone/forms/z3c.form.rst:960
msgid ""
"Widgets have a method ``addClass()`` to add extra CSS classes. This is "
"useful if you have Javascript/JQuery associated with your special form::"
msgstr ""

# 5be19f7c5b2140d48a55202917211aa3
#: ../develop/plone/forms/z3c.form.rst:966
msgid ""
"Note that these classes are directly applied to ``<input>``, ``<select>``, "
"etc. itself, and not to the wrapping ``<div>`` element."
msgstr ""

# bc6800992f00479cb1db529ba37b5b60
#: ../develop/plone/forms/z3c.form.rst:972
msgid ""
"A ``zope.schema`` Field is stored as a ``field`` attribute of a widget. "
"Example::"
msgstr ""

# acd1d077fbcc4c05b1f2d3530ffd1464
#: ../develop/plone/forms/z3c.form.rst:979
msgid "``Widget.field`` is not a ``z3c.form.field.Field`` object."
msgstr ""

# 82bbe83f9b0f4f18970ad1e1e9e705f0
#: ../develop/plone/forms/z3c.form.rst:982
msgid "Getting selection widget vocabulary value as human readable text"
msgstr ""

# 2cfafbb957294bb2a11f933bfac8e3f1
#: ../develop/plone/forms/z3c.form.rst:992
msgid "Example (page template)"
msgstr ""

# c502a279cda44797b6057a1710c6942d
#: ../develop/plone/forms/z3c.form.rst:1002
msgid "Setting widget templates"
msgstr ""

# ccfe2900331e4e2aab369ceb99fd4a36
#: ../develop/plone/forms/z3c.form.rst:1004
msgid ""
"You might want to customize the template of a widget to have custom HTML "
"code for a specific use case."
msgstr ""

# 1302b31800b849a4a048800fbac5d855
#: ../develop/plone/forms/z3c.form.rst:1008
msgid "Setting the template of an individual widget"
msgstr ""

# a426dd7ea6cd440b8a5412489986ac66
#: ../develop/plone/forms/z3c.form.rst:1010
msgid ""
"First copy the existing page template code of the widget. For basic widgets "
"you can find the template in the `z3c.form source tree "
"<http://svn.zope.org/z3c.form/trunk/src/z3c/form/browser/>`_."
msgstr ""

# 919af584b59744dfb1db999b810d1c25
#: ../develop/plone/forms/z3c.form.rst:1015
msgid "``yourwidget.pt`` (text area widget copied over an example text)"
msgstr ""

# 8441eacb84214f7ba7fef89519b3b996
#: ../develop/plone/forms/z3c.form.rst:1057
msgid ""
"Now you can override the template factory in the ``updateWidgets()`` method "
"of your form class"
msgstr ""

# 1b0257bcf24e4c379c6c8674e316c318
#: ../develop/plone/forms/z3c.form.rst:1082
msgid ""
"You can also interact with your ``form`` class instance from the widget "
"template"
msgstr ""

# 07542eaf81594c328324c6cc78de8436
#: ../develop/plone/forms/z3c.form.rst:1092
msgid "Setting template for your own widget type"
msgstr ""

# f7166e08e55f461cb6dafbf8bf4df818
#: ../develop/plone/forms/z3c.form.rst:1094
msgid ""
"You can set the template used by the widget with the "
"``<z3c:widgetTemplate>`` ZCML directive"
msgstr ""

# fa7133de45c74b10b1ab264144ba50f9
#: ../develop/plone/forms/z3c.form.rst:1106
msgid ""
"You can also enforce the widget template in the ``render()`` method of the "
"widget class::"
msgstr ""

# f61485861f6c443f925665554a25a409
#: ../develop/plone/forms/z3c.form.rst:1132
msgid "Widget template example::"
msgstr ""

# 8c96d6c941524595acbfd7c3d9216a3f
#: ../develop/plone/forms/z3c.form.rst:1166
msgid "Setting widget frame template"
msgstr ""

# e4df9ec1a3a141f7bd1a1c7c06b4b506
#: ../develop/plone/forms/z3c.form.rst:1168
msgid ""
"You can change how the frame around each widget is rendered in the widget "
"rendering loop. This frame has elements like label, required marker, field "
"description and so on."
msgstr ""

# 49e4c632270044f88f9587fb5fd6837b
#: ../develop/plone/forms/z3c.form.rst:1172
msgid ""
"For instructions see `plone.app.z3cform README "
"<https://github.com/plone/plone.app.z3cform/>`_"
msgstr ""

# 50d0987e2917483198214055480edcd5
#: ../develop/plone/forms/z3c.form.rst:1175
msgid "Combined widgets"
msgstr ""

# 8dd0bb38e4b44f3bba12260194f8f2a4
#: ../develop/plone/forms/z3c.form.rst:1177
msgid ""
"You can combine multiple widgets to one with "
"``z3c.form.browser.multil.MultiWidget`` and "
"``z3c.form.browser.object.ObjectWidget`` classes."
msgstr ""

# a554927a1adb4d8291223ae353817aef
#: ../develop/plone/forms/z3c.form.rst:1179
msgid "Example how to create a min max input widget."
msgstr ""

# 7d3ed9d38b184e6f93548050eed658d4
#: ../develop/plone/forms/z3c.form.rst:1181
msgid "Python code to setup the widget:"
msgstr ""

# 7b5e7f09e67242bdaead1bb2294ca5bc
#: ../develop/plone/forms/z3c.form.rst:1214
msgid "Then we do some widget marking in ``updateWidgets()``::"
msgstr ""

# 8b655a203c434f1685925cc8169b5384
#: ../develop/plone/forms/z3c.form.rst:1229
msgid ""
"And then the page template which renders both 0. widget  (min) and 1. widget"
" (max) on the same line."
msgstr ""

# 87634f7f32a44b9199543269cc13b2fe
#: ../develop/plone/forms/z3c.form.rst:1286
msgid "Buttons"
msgstr ""

# ac8aded409064f589d9fcbd60244f171
#: ../develop/plone/forms/z3c.form.rst:1288
msgid ""
"Buttons enable actions in forms. ``AddForm`` and ``EditForm`` base classes "
"come with default buttons (:guilabel:`Save`)."
msgstr ""

# a7f929c783d4488aada7de735eff000f
#: ../develop/plone/forms/z3c.form.rst:1291
msgid "More information in ``z3c.form`` documentation"
msgstr ""

# 67f63b7e036e408897c729b20fbe2a44
#: ../develop/plone/forms/z3c.form.rst:1293
msgid "http://packages.python.org/z3c.form/button.html"
msgstr ""

# cfde9abd94e642d3bfa940928b394faa
#: ../develop/plone/forms/z3c.form.rst:1296
msgid "Adding a button to form"
msgstr ""

# 12ff815bb1014537a49539347dbd91c0
#: ../develop/plone/forms/z3c.form.rst:1298
msgid ""
"The easiest way to add handlers for buttons is to use a function decorator "
"``z3c.form.button.buttonAndHandler()``."
msgstr ""

# de8549f6a4fd400faf480a5b2a7c84b9
#: ../develop/plone/forms/z3c.form.rst:1301
msgid ""
"The first parameter is the user visible label and the second one is the "
"``<input>`` name."
msgstr ""

# 851f976824a04e568ed524157ba4d23b
#: ../develop/plone/forms/z3c.form.rst:1321
msgid ""
"The default ``z3c.form.form.AddForm`` and ``z3c.form.form.EditForm`` "
":guilabel:`Add` and :guilabel:`Save` button handler calls are good code "
"examples."
msgstr ""

# 46b3ccba206742e7a0d05de15163be83
#: ../develop/plone/forms/z3c.form.rst:1325
msgid ""
"http://svn.zope.org/z3c.form/trunk/src/z3c/form/form.py?rev=114824&view=auto"
msgstr ""

# e736ddf5a49147cd83236169a91cd0c8
#: ../develop/plone/forms/z3c.form.rst:1327
msgid ""
"If you created a form based on another form, the buttons defined on that "
"other form get lost. To prevent that, you must explicitly add the buttons of"
" the base class in your form class::"
msgstr ""

# d2c4eaf411bf4cb595c6dcfbcf787864
#: ../develop/plone/forms/z3c.form.rst:1342
msgid "Adding buttons conditionally"
msgstr ""

# 78172a29fac2487683c0df81398422dc
#: ../develop/plone/forms/z3c.form.rst:1344
msgid ""
"The ``buttonAndHandler`` decorator can accept a condition argument. The "
"condition should be a function that accepts the form as an argument and "
"returns a boolean. Example, a button that only shows when a condition is "
"met::"
msgstr ""

# 156750652bad4289940eca13c9f08957
#: ../develop/plone/forms/z3c.form.rst:1364
msgid "Manipulating form buttons programmatically"
msgstr ""

# 7025ec919fcc49b7ae7bbf81a7327b9b
#: ../develop/plone/forms/z3c.form.rst:1366
msgid ""
"You want to manipulate buttons if you want to hide buttons dynamically, "
"manipulate labels, etc."
msgstr ""

# 0f863a1f44c844a89f53c6a64951a9c6
#: ../develop/plone/forms/z3c.form.rst:1369
msgid "Buttons are stored in ``buttons`` class attribute."
msgstr ""

# 6351fd1f01a34feb9feee423cda81e93
#: ../develop/plone/forms/z3c.form.rst:1373
msgid ""
"Button storage is shared between all form instances, so do not mutate its "
"content. Instead create a copy of it if you wish to have form-specific "
"changes."
msgstr ""

# 92cd0139134742c4b8182b9a9fdd0aee
#: ../develop/plone/forms/z3c.form.rst:1378
msgid "Reading buttons"
msgstr ""

# c4a88135354e43b2ad24a11887ef3ab1
#: ../develop/plone/forms/z3c.form.rst:1389
msgid "Removing or hiding buttons"
msgstr ""

# b3e17fc8d8794c709d22a94edc00cdd8
#: ../develop/plone/forms/z3c.form.rst:1391
msgid ""
"Here is an example how to hide all buttons from a certain form instance."
msgstr ""

# cff246a910ab444889ec2e53cd7898fc
#: ../develop/plone/forms/z3c.form.rst:1409
msgid "Adding buttons dynamically"
msgstr ""

# 8002f08144a74297b44dc492d41d08af
#: ../develop/plone/forms/z3c.form.rst:1411
msgid ""
"In the example below, the ``Buttons`` array is already constructed "
"dynamically and we can manipulate it::"
msgstr ""

# 2ae045413d784132948e8b0cfa7c46cb
#: ../develop/plone/forms/z3c.form.rst:1430
msgid "Subforms"
msgstr ""

# c4494c5954ce419e863eb5c58d265a11
#: ../develop/plone/forms/z3c.form.rst:1432
msgid "Subforms are embedded ``z3c`` forms inside a master form."
msgstr ""

# 731841478c7946f482e4dbdaf9bdf741
#: ../develop/plone/forms/z3c.form.rst:1434
msgid ""
"Subforms may have their own buttons or use the controls from the master "
"form. You need to call ``update()`` manually for subforms."
msgstr ""

# 91c6ec379b0b43d18b5551296604f546
#: ../develop/plone/forms/z3c.form.rst:1440
msgid "http://packages.python.org/z3c.form/subform.html"
msgstr ""

# 3660a9fbbdca494f886aeb4c84786e54
#: ../develop/plone/forms/z3c.form.rst:1443
msgid "Adding an action to parent and subform"
msgstr ""

# 7a1bc36729ee44cd9f98ac5fecd149f8
#: ../develop/plone/forms/z3c.form.rst:1445
msgid "Parent and subform actions must be linked."
msgstr ""

# 497f935b402144fbbd272ca498c9bb80
#: ../develop/plone/forms/z3c.form.rst:1500
msgid "Creating subforms at run-time"
msgstr ""

# 7e3fe6be760e40458ec7baf417dcaedd
#: ../develop/plone/forms/z3c.form.rst:1502
msgid ""
"Below is an example how to convert existing form instance to be used as an "
"subform in another form::"
msgstr ""

# 1d54af8dc3444500acc3494049b1a9b7
#: ../develop/plone/forms/z3c.form.rst:1538
msgid ""
"If possible, try to construct your form class hierarchy so that you can use "
"the same class mix-in for normal forms and subforms."
msgstr ""

# 7c6f273a1b4b4180960c153fe477b846
#: ../develop/plone/forms/z3c.form.rst:1542
msgid "CRUD form"
msgstr ""

# e75049d303324396ab29f04a295beff4
#: ../develop/plone/forms/z3c.form.rst:1544
msgid "CRUD (Create, read, update, delete) forms manage list of objects."
msgstr ""

# 6275cb66f1e4468f8f5c715326a5f68e
#: ../develop/plone/forms/z3c.form.rst:1546
msgid "CRUD form elements:"
msgstr ""

# ed88dfd513dc4665800870b4d4bbb2ff
#: ../develop/plone/forms/z3c.form.rst:1548
msgid "Add form creates new objects and renders the form below the table"
msgstr ""

# c7257563159448fb81338123029e837c
#: ../develop/plone/forms/z3c.form.rst:1550
msgid "Edit sub-form edits existing object and renders one table row"
msgstr ""

# a79497fc8a9c4d0e90ce17121aaf95b8
#: ../develop/plone/forms/z3c.form.rst:1552
msgid "Edit form lists all objects and allows deleting them (table master)"
msgstr ""

# b11ea1e49f8d49a18b211afc2f92015a
#: ../develop/plone/forms/z3c.form.rst:1554
msgid "CRUD form orchestrates the whole thing and renders add and edit forms"
msgstr ""

# 339903fc22cf44d8b4eb15909840b3be
#: ../develop/plone/forms/z3c.form.rst:1556
msgid "``view_schema`` outputs read-only fields in CRUD table"
msgstr ""

# b63a2a2450c24cb58dbda2a619b9593b
#: ../develop/plone/forms/z3c.form.rst:1558
msgid ""
"``update_schema`` outputs editable fields in CRUD table. Usually you want "
"either ``view_schema`` or ``update_schema``."
msgstr ""

# 47aa5bebd62d4474bdffd13cc5b44b9e
#: ../develop/plone/forms/z3c.form.rst:1561
msgid "``add_schema`` outputs add form."
msgstr ""

# 6aaeb7e36ce446a28cb76ed5f56f22b1
#: ../develop/plone/forms/z3c.form.rst:1563
msgid ""
"the ``context`` attribute of add and edit form is the parent CRUD form. The "
"``context`` attribute of an edit subform is the edit form."
msgstr ""

# 38d86d7efbad4993b5c09026ca948d9f
#: ../develop/plone/forms/z3c.form.rst:1569
msgid ""
"Easy: `plone.app.headeranimation animation and image list manager "
"<https://svn.plone.org/svn/collective/plone.app.headeranimation/trunk/plone/app/headeranimation/browser/forms.py>`_."
msgstr ""

# 911b038eb8374da1b899ee73aa71ce62
#: ../develop/plone/forms/z3c.form.rst:1571
msgid ""
"Complex: `Singing & dancing channel manager example "
"<https://svn.plone.org/svn/collective/collective.dancing/trunk/collective/dancing/browser/channel.py>`_"
msgstr ""

# 66924dd95df145bf897b5a94b377e16b
#: ../develop/plone/forms/z3c.form.rst:1574
msgid "Displaying the status message in a non-standard location"
msgstr ""

# 04bbc82a71af40da98ae1ba84abf87a1
#: ../develop/plone/forms/z3c.form.rst:1576
msgid ""
"By default, the status message is rendered inside ``plone.app.z3cform`` "
"``macros.pt`` above the form:"
msgstr ""

# 71b1cf03d04b438cb7046fcc7297d272
#: ../develop/plone/forms/z3c.form.rst:1598
msgid ""
"We can decouple the status message from the form, without overriding all the"
" templates, by copying status message variable to another variable and then "
"playing around with it in our wrapper view template."
msgstr ""

# 6cae93944a6949b1a54c8d6c9f33f699
#: ../develop/plone/forms/z3c.form.rst:1603
msgid "Form class::"
msgstr ""

# 0ed52fce2e5c4570b4ca5ae285a8f5e0
#: ../develop/plone/forms/z3c.form.rst:1642
msgid ""
"... and then we can use a special ``result_message`` view accessor in our "
"view template code"
msgstr ""

# 06ba316376bc44358bbc32e5df53f5e7
#: ../develop/plone/forms/z3c.form.rst:1661
msgid "Storage format and data managers"
msgstr ""

# d92b06e03b004e69bb0670fa70d443fc
#: ../develop/plone/forms/z3c.form.rst:1663
msgid ""
"By default, ``z3c.form`` reads incoming context values as the object "
"attributes. This behavior can be customized using data managers."
msgstr ""

# 5f6533a82e364814b5b6393fd96e5006
#: ../develop/plone/forms/z3c.form.rst:1667
msgid ""
"You can, for example, use Python dictionaries to read and store form data."
msgstr ""

# faac31a61ee74a219673ef18f8cb6693
#: ../develop/plone/forms/z3c.form.rst:1669
msgid "http://packages.python.org/z3c.form/datamanager.html"
msgstr ""

# 55b77af7a7d94b5ca6ab7623edb0744f
#: ../develop/plone/forms/z3c.form.rst:1672
msgid "Custom content objects"
msgstr ""

# 4b2df95e687c45d4a0f4cb50ec6ede70
#: ../develop/plone/forms/z3c.form.rst:1674
msgid ""
"The following hack can be used if you have an object which does not conform "
"your form interface and you want to expose only certain object attribute to "
"the form to be edited."
msgstr ""

# 16957b981b594a66aaeca5cf9558dd2d
#: ../develop/plone/forms/z3c.form.rst:1710
msgid ""
"Since ``getContent()`` is also used in ``applyChanges()``, you need to "
"override ``applyChanges()`` as well to save values correctly to a persistent"
" object."
msgstr ""

# 5df4ea00a44c40cba73a3ae4914ecca4
#: ../develop/plone/forms/z3c.form.rst:1715
msgid "Custom change applying"
msgstr ""

# b8cfb818d5bf4e41bbb2ae5c41ca06b4
#: ../develop/plone/forms/z3c.form.rst:1717
msgid ""
"The default, the behavior of the ``z3c.form`` edit form is to write incoming"
" data as the attributes of the object returned by ``getContent()``."
msgstr ""

# 2f2bece794f54d93b1198cf60f712491
#: ../develop/plone/forms/z3c.form.rst:1720
msgid ""
"You can override this behavior by overriding ``applyChanges()`` method."
msgstr ""

# b305149ed3bd47f08ade9ffb67dd2388
#: ../develop/plone/forms/z3c.form.rst:1741
msgid "WYSIWYG widgets"
msgstr ""

# e660d6ef7e7541a9a9d927c3a5771d5f
#: ../develop/plone/forms/z3c.form.rst:1743
msgid ""
"By using `plone.directives.form "
"<https://pypi.python.org/pypi/plone.directives.form>`_ and "
"`plone.app.z3cform <https://pypi.python.org/pypi/plone.app.z3cform>`_ "
"packages you can do::"
msgstr ""

# c4a53cd6af7847758ff93b070b588f3c
#: ../develop/plone/forms/z3c.form.rst:1763
msgid "https://pypi.python.org/pypi/plone.directives.form"
msgstr ""

# 15bf050e8c8742229de6cc59af34b12b
#: ../develop/plone/forms/z3c.form.rst:1766
msgid "Wrapped and non-wrapped forms"
msgstr ""

# 9f006b6ec6be4cb2971073569accdbfd
#: ../develop/plone/forms/z3c.form.rst:1768
msgid ""
"A ``z3c.form.form.Form`` object is \"wrapped\" when it is rendered inside "
"Plone page frame and having acquisition chain in intact."
msgstr ""

# d14e4ae95a6e4e80a4d76577a6a5a1fd
#: ../develop/plone/forms/z3c.form.rst:1772
msgid "Since ``plone.app.z3cform`` 0.5.0 the behavior goes like this:"
msgstr ""

# 90820be65c854aa8955dc8ed0e807045
#: ../develop/plone/forms/z3c.form.rst:1774
msgid "Plone 3 forms are automatically wrapped"
msgstr ""

# 5880673264434f0680e92db66b9a601e
#: ../develop/plone/forms/z3c.form.rst:1776
msgid "Plone 4 forms are unwrapped"
msgstr ""

# a01820eb49a4456e8ea7a49bf899bce1
#: ../develop/plone/forms/z3c.form.rst:1778
msgid ""
"The wrapper is a ``plone.z3cform.interfaces.IWrappedForm`` :doc:`marker "
"interface </develop/addons/components/interfaces>` on the form object, "
"applied it after the form instance has been constructed. If this marker "
"interface is not applied, ``plone.z3cform.ZopeTwoFormTemplateFactory`` tries"
" to embed the form into Plone page frame. If the form is not intended to be "
"rendered as a full page form, this usually leads to the following "
"exception::"
msgstr ""

# 70a23bc0ea084071a52ee9822d157edb
#: ../develop/plone/forms/z3c.form.rst:1789
msgid ""
"The form tries to render the full Plone page. Rendering this page needs an "
"acquisition chain set-up for the view and the template. Embedded forms do "
"not have this, or it would lead to recursion error."
msgstr ""

# 377650a1a9d74b018163412e57d6a724
#: ../develop/plone/forms/z3c.form.rst:1794
msgid ""
"If you are constructing form instances manually and want to render them "
"without Plone page decoration, you must make sure that automatic form "
"wrapping does not take place::"
msgstr ""

# fa8426dc6907498daf9c990a585f6bcb
#: ../develop/plone/forms/z3c.form.rst:1824
msgid "Embedding z3c.form forms in portlets, viewlets and views"
msgstr ""

# 7dcf1bb23f1c45789b363ea4345b577d
#: ../develop/plone/forms/z3c.form.rst:1826
msgid ""
"By default, when ``plone.app.z3cform`` is installed through the add-on "
"installer, all forms have full Plone page frame. If you are rendering forms "
"inside non-full-page objects, you need to change the default template."
msgstr ""

# 6886f7f522be4fd994d9a7432dc58144
#: ../develop/plone/forms/z3c.form.rst:1831
msgid ""
"Below is an example how to include a ``z3c.form``-based form in a portlet."
msgstr ""

# 9def3a19fbec4cf0917ea72bbde1716a
#: ../develop/plone/forms/z3c.form.rst:1835
msgid ""
"``plone.app.z3cform`` version 0.5.1 or later is needed, as older versions do"
" not support overriding ``form.action`` property."
msgstr ""

# f07228115eb041b2ba4c2d831cd73ae8
#: ../develop/plone/forms/z3c.form.rst:1839
msgid "You need the following:"
msgstr ""

# 349c4b4f7fd445eea72e039cafb1a0bb
#: ../develop/plone/forms/z3c.form.rst:1841
msgid "a ``z3c.form`` class"
msgstr ""

# d4285c42d6fb4679af96aa34b9d07676
#: ../develop/plone/forms/z3c.form.rst:1843
msgid "the viewlet/portlet class"
msgstr ""

# f37932c1747a457b8600ad60ed07d9bf
#: ../develop/plone/forms/z3c.form.rst:1845
msgid ""
"A form wrapper template which renders the frame around the form. The default"
" version renders the whole Plone page frame --- you don't want this when the"
" form is embedded, otherwise you get infinite recursion (plone page having a"
" form having a plone page...)"
msgstr ""

# 4c137200cd454dd8a0d0592d267cd4b0
#: ../develop/plone/forms/z3c.form.rst:1851
msgid "Portlet/viewlet template which refers to the form"
msgstr ""

# bc4fa0ec620540fcbb91a7a0ff35f51c
#: ../develop/plone/forms/z3c.form.rst:1853
msgid "ZCML to register all components"
msgstr ""

# a254e64575774cd1bc4723d74ac50e09
#: ../develop/plone/forms/z3c.form.rst:1855
msgid "Portlet code::"
msgstr ""

# bda32bc447e24e58aa3c85004844125d
#: ../develop/plone/forms/z3c.form.rst:1915
msgid ""
"``formwrapper.pt`` is just a dummy form view template which wraps the form. "
"This differs from standard form wrapper by *not* rendering Plone main layout"
" around the form."
msgstr ""

# 84c7221836344242be1ec5a6e09fe15a
#: ../develop/plone/forms/z3c.form.rst:1925
msgid ""
"Then the portlet template itself (``zohoportlet.pt``) renders the portlet. "
"The form is rendered using: ``<form tal:replace=\"structure "
"view/form_wrapper\" />``."
msgstr ""

# ecaa13135dee4f7c90a9904de347656a
#: ../develop/plone/forms/z3c.form.rst:1960
msgid ""
"Viewlets behave a little differently, since they do some acquisition chain "
"mangling when you assign variables to ``self``. Thus you should never have "
"``self.view = view`` or ``self.form = form`` in a viewlet."
msgstr ""

# f0af4ab54ca4403392ec13ef8b7e0d3a
#: ../develop/plone/forms/z3c.form.rst:1964
msgid "Template example for viewlet (don't do ``sel.form_wrapper``)"
msgstr ""

# 8b0565130bfd43fc8a5c7959a52828f8
#: ../develop/plone/forms/z3c.form.rst:1972
msgid "Then the necessary parts of form itself::"
msgstr ""

# af8ee3929e954d0488d2be99d05bd69a
#: ../develop/plone/forms/z3c.form.rst:2136
msgid ""
"This example code was taken from the ``mfabrik.plonezohointegration`` "
"product which is in the Plone collective."
msgstr ""

# ee3baeafee2f48f9be836f5980303107
#: ../develop/plone/forms/z3c.form.rst:2147
msgid ""
"Please read `Dexterity manual validators chapter "
"<http://plone.org/products/dexterity/documentation/manual/schema-driven-"
"forms/customising-form-behaviour/referencemanual-all-pages>`_."
msgstr ""

# e92728fa5a1d47039ba55d442a065694
#: ../develop/plone/forms/z3c.form.rst:2149
msgid "There are three kind of validation hooks you can use with z3c.form"
msgstr ""

# 3fd2316d5b5745aa92eb96de5338dc04
#: ../develop/plone/forms/z3c.form.rst:2151
msgid "zope.schema field parameter specific"
msgstr ""

# fc559cf49af54138881ea1a997bfd679
#: ../develop/plone/forms/z3c.form.rst:2153
msgid "zope.schema @invariant (validation is model specific)"
msgstr ""

# 522aabf73f9447269785497707316e1b
#: ../develop/plone/forms/z3c.form.rst:2155
msgid "zope.schema constrain (validation is model specific)"
msgstr ""

# b02db45a58914b5bbaff06f389745e42
#: ../develop/plone/forms/z3c.form.rst:2157
msgid "z3c.form (validation is bound ot the form instance)"
msgstr ""

# af54920913e846da9ad5ff152a70bfbe
#: ../develop/plone/forms/z3c.form.rst:2160
msgid "Field specific internal validators"
msgstr ""

# 53121adb8250421fad66a96979ceddba
#: ../develop/plone/forms/z3c.form.rst:2162
msgid ""
"When you define your field with *zope.schema* you can enable flags for field"
" internal validation. This include e.g."
msgstr ""

# ac103b00665a4dc996a833485dc2c1ec
#: ../develop/plone/forms/z3c.form.rst:2166
msgid "``required`` is field required on the form or not"
msgstr ""

# 51b012af058e48c9a1e72066a78df5ca
#: ../develop/plone/forms/z3c.form.rst:2168
msgid "``min`` and ``max`` for number based fields"
msgstr ""

# ff0b60deda974df8911bb8c35d6768d9
#: ../develop/plone/forms/z3c.form.rst:2181
msgid ""
"For available internal validation options, see the field source code in "
"zope.schema package."
msgstr ""

# 7c19ab90c2c44f638fb1d28dbd61a4d3
#: ../develop/plone/forms/z3c.form.rst:2184
msgid "Constrain validators"
msgstr ""

# 86c17a0c45ef48f6b09bf0a2ec700665
#: ../develop/plone/forms/z3c.form.rst:2186
msgid ""
"zope.schema fields take a callable argument ``constrain`` which defines a "
"Python function validating the incoming value."
msgstr ""

# ea1afbba95c2426abaf5c18348e879a0
#: ../develop/plone/forms/z3c.form.rst:2207
msgid "For more information, see ``zope.schema`` documentation."
msgstr ""

# 4e53f32b55b149249d6ba45b6517bcb6
#: ../develop/plone/forms/z3c.form.rst:2210
msgid "Invariant validators"
msgstr ""

# 3c50df9851384914ad60cf576f2dcaa1
#: ../develop/plone/forms/z3c.form.rst:2212
msgid "TODO: Are invariants useful with z3c.form??"
msgstr ""

# d388644ef7c34be5b724e1257ebad116
#: ../develop/plone/forms/z3c.form.rst:2215
msgid "Form widget validators"
msgstr ""

# 3c45a3247bcb42edb59a30706b686604
#: ../develop/plone/forms/z3c.form.rst:2217
msgid "Validators are best added in the schema itself."
msgstr ""

# 865e69b18a96455b9173e9cfdcbc8471
#: ../develop/plone/forms/z3c.form.rst:2219
msgid ""
"If you are using plain ``z3c.form``, you can check the `validators "
"documentation <http://packages.python.org/z3c.form/validator.html>`_."
msgstr ""

# 3081bf1d7d57435b9aafd1250ed43112
#: ../develop/plone/forms/z3c.form.rst:2222
msgid ""
"The plone.form.directives package provides convenient `decorators for form "
"validators "
"<https://pypi.python.org/pypi/plone.directives.form#validators>`_. If you "
"use ``plone.form.directives`` validators, make sure your package is "
":doc:`grokked </develop/addons/components/grok>` (otherwise validators are "
"not registered)."
msgstr ""

# 00271e252f984fffb193054f7e1d3916
#: ../develop/plone/forms/z3c.form.rst:2228
msgid "Example: How to use widget specific validators with ``z3c.form``::"
msgstr ""

# 46c645725b8d419fa36de57d16e3de9f
#: ../develop/plone/forms/z3c.form.rst:2273
msgid ""
"http://plone.org/products/dexterity/documentation/manual/schema-driven-forms"
"/customising-form-behaviour/validation"
msgstr ""

# 57e0f68197fe4bb6b3d88e87f46d4fec
#: ../develop/plone/forms/z3c.form.rst:2276
msgid "Custom field specific validation in form action handlers and update()"
msgstr ""

# 5534f0e202bd44b9bfcd495a6ec5458b
#: ../develop/plone/forms/z3c.form.rst:2278
msgid "http://stackoverflow.com/a/17466776/315168"
msgstr ""

# 8206344ba2d943c28e5ef1860956f9db
#: ../develop/plone/forms/z3c.form.rst:2281
msgid "Customizing and translating error messages"
msgstr ""

# ca0b76beb5a6423db4da49a1947d4fba
#: ../develop/plone/forms/z3c.form.rst:2283
msgid "If you want to custom error messages on per-field level::"
msgstr ""

# 8351e632657b42c18c142d19468d0232
#: ../develop/plone/forms/z3c.form.rst:2289
msgid ""
"Leave ``field`` parameter out if you want the new error message to apply to "
"all fields."
msgstr ""

# 20d6175678ac4cdd860a913e48b4bf33
#: ../develop/plone/forms/z3c.form.rst:2294
msgid "Read-only and disabled fields"
msgstr ""

# 1cda7d2f64aa489bbb11be66dc78bdf1
#: ../develop/plone/forms/z3c.form.rst:2296
msgid "Read-only fields are not rendered in form edit mode::"
msgstr ""

# 2d73a1998df84c909005f222846619ce
#: ../develop/plone/forms/z3c.form.rst:2304
msgid ""
"If the widget mode is ``display`` then it is rendered as in form view mode, "
"so that the user cannot edit::"
msgstr ""

# 64ab0066259e4f3a83fce2a864dd62de
#: ../develop/plone/functionality/actions.rst:3
msgid "Actions"
msgstr ""

# 9f61a029c66d4a52983a5702fa4f92bd
#: ../develop/plone/functionality/actions.rst:7
msgid "Creating and using portal_actions mechanism"
msgstr ""

# b53476edc57e4192b6d8bfd999abf207
#: ../develop/plone/functionality/actions.rst:14
msgid ""
"Plone has concept of actions which refer the end user functionality "
"associated with site or content objects:"
msgstr ""

# 9f24027c99ee4a0f906c706e308ab424
#: ../develop/plone/functionality/actions.rst:17
msgid "View, edit, sharing etc. are actions"
msgstr ""

# 33bf807e9d424f14af47d126500351a0
#: ../develop/plone/functionality/actions.rst:19
msgid "Sitemap is action"
msgstr ""

# 3939d036c4c24c3bb5786a6cd4740b0d
#: ../develop/plone/functionality/actions.rst:21
msgid "Contact form is action"
msgstr ""

# d2157c5a08814a51bf199a6968c83bf1
#: ../develop/plone/functionality/actions.rst:23
msgid "Cut, copy, paste are actions"
msgstr ""

# 4fdb65f47cc542fd87dbaf89e5e74e51
#: ../develop/plone/functionality/actions.rst:25
msgid "Logged in menu is populated by actions"
msgstr ""

# 280ba51de1f94fffb95e2f3b877871d5
#: ../develop/plone/functionality/actions.rst:27
msgid "Actions are managed by"
msgstr ""

# c832f3212beb4d7283418217339aefad
#: ../develop/plone/functionality/actions.rst:29
msgid "portal_actions for generic actions"
msgstr ""

# 54b04209762f4dcdb08d4cf1cb9845be
#: ../develop/plone/functionality/actions.rst:31
msgid ""
"portal_types for view, edit etc. actions and object default action... all "
"actions which are tied to a particular content type and may vary by type"
msgstr ""

# ef822b217ae5403fac5b208b7a4839d8
#: ../develop/plone/functionality/actions.rst:35
msgid "Iterating through available actions"
msgstr ""

# ac6a59bd664e491fb057ab48f5ba0c22
#: ../develop/plone/functionality/actions.rst:37
msgid "Here is a page template example"
msgstr ""

# 80b871f70a35436695f98764f7927c0b
#: ../develop/plone/functionality/actions.rst:52
msgid "Creating actions through-the-web"
msgstr ""

# 1c7f40f9091047998e45e8eeb0edea71
#: ../develop/plone/functionality/actions.rst:54
msgid "Visit portal_actions in ZMI."
msgstr ""

# 7f0b3cf6dd164dcf9be5f84ab5e058c6
#: ../develop/plone/functionality/actions.rst:57
msgid "Exporting and importing all portal_actions"
msgstr ""

# b07cd35c01924c2eb2edd2bf45285392
#: ../develop/plone/functionality/actions.rst:59
msgid ""
"You can transfer action configuration from a Plone site to another using "
"GenericSetup export/import XML. You can also do this to generate XML from "
"which you can cut out snippets for creating actions.xml by hand."
msgstr ""

# c20c54aab3344c41bc5bbf48647bd6bd
#: ../develop/plone/functionality/actions.rst:63
msgid "Go to portal_setup"
msgstr ""

# ae26dd0987dc4956a4a7bc622b90737d
#: ../develop/plone/functionality/actions.rst:65
msgid "Choose Export"
msgstr ""

# 045c4fa4cc0043a5ae79961679924a86
#: ../develop/plone/functionality/actions.rst:67
msgid "Choose actions"
msgstr ""

# 657d22a490464efcbc646564adfa0567
#: ../develop/plone/functionality/actions.rst:69
msgid "Choose \"Export selected steps\" button at the end of the page"
msgstr ""

# 07ee62d90ce34ee9893e7142ceb057bb
# 7b3bdbd572c042c8af9fb8bdd0b6b587
#: ../develop/plone/functionality/actions.rst:71
#: ../develop/plone/serving/traversing.rst:81
msgid "...and so on"
msgstr ""

# 0dbb156d974941eb846f1da4cd4388ab
#: ../develop/plone/functionality/actions.rst:74
msgid "Creating actions.xml by hand"
msgstr ""

# df0da64b23004682a595a602192b7eb4
#: ../develop/plone/functionality/actions.rst:76
msgid ""
"Usually all actions are rewritten by site policy product using "
"portal_actions import/export. Actions are in GenericSetup profile file "
"*default/profiles/actions.xml*."
msgstr ""

# 0501e1f00bcd4635b1925a7776b15b32
#: ../develop/plone/functionality/actions.rst:79
msgid ""
"actions.xml is exported from the development instance using portal_setup"
msgstr ""

# f6232dc45b3e45dc8043d16fb83b9efa
#: ../develop/plone/functionality/actions.rst:81
msgid "actions.xml is made part of the site policy product"
msgstr ""

# 1b255321c039451394e2dbeaf47d8f1b
#: ../develop/plone/functionality/actions.rst:83
msgid ""
"Alternatively, if you are developing add-on product, you can add actions "
"one-by-one by manually creating entries in actions.xml."
msgstr ""

# c928fba000f247ada2c36bcb981b30dc
#: ../develop/plone/functionality/actions.rst:86
msgid "Example how to add an action to object actions:"
msgstr ""

# 3c4f65535f4941d7a00a0c27615ca808
#: ../develop/plone/functionality/actions.rst:107
msgid ""
"Example how to add actions to user menu, which is visible in the top right "
"corner for logged in users (Plone 4):"
msgstr ""

# 96da66475a1e4bc49f358ee5391e6871
#: ../develop/plone/functionality/actions.rst:131
msgid "Reordering actions in actions.xml"
msgstr ""

# 0bbdc1b7e7ff4b649edbd37fa27522bd
#: ../develop/plone/functionality/actions.rst:133
msgid "Try using these attributes"
msgstr ""

# c10cac1b46fd475298b1b0f517b0b331
#: ../develop/plone/functionality/actions.rst:135
msgid "insert-after"
msgstr ""

# 060dbf5c59054492b89168a4c3ee1225
#: ../develop/plone/functionality/actions.rst:137
msgid "insert-before"
msgstr ""

# 0b507ad86f1147eaa75c2deec546ce04
#: ../develop/plone/functionality/actions.rst:139
msgid "They accept * and action name parameters."
msgstr ""

# 0e8f7d285ad94634aaa372e917719159
#: ../develop/plone/functionality/actions.rst:148
msgid "Action URLs"
msgstr ""

# c0c223ae494d46418c7c7edf438d8247
#: ../develop/plone/functionality/actions.rst:150
msgid "Actions are applied to objects by adding action name to url."
msgstr ""

# 1e061095d8ec4973a05c0a29facc43d3
#: ../develop/plone/functionality/actions.rst:152
msgid "E.g.::"
msgstr ""

# ce563034348749c5930fda5610d555cf
#: ../develop/plone/functionality/actions.rst:156
msgid "for view action and::"
msgstr ""

# 355f0e3f3bcc451fb1f431bd2d63585e
#: ../develop/plone/functionality/actions.rst:160
msgid "for edit action."
msgstr ""

# 47f9bf405c8e48eaaf993ad3a191f641
#: ../develop/plone/functionality/actions.rst:162
msgid "Action can be also not related to document, like::"
msgstr ""

# dc8eada8ea0a4941b5cc2bc3ec367d23
#: ../develop/plone/functionality/actions.rst:167
msgid "Default action"
msgstr ""

# 61637fba9f7342dc9e1423b73cac03cd
#: ../develop/plone/functionality/actions.rst:169
msgid ""
"Default action is executed when the content URL is opened without any "
"prefix."
msgstr ""

# 9c60b9e64ec946e38d4a9e2e5462ff8c
#: ../develop/plone/functionality/actions.rst:172
msgid "Default action is defined in portal_types."
msgstr ""

# 99a69f3f3ad9433caff88758c928633e
#: ../develop/plone/functionality/actions.rst:174
msgid ""
"Default action can be dynamic - meaning that site editor may set it from "
"Display menu. For more information see Dynamic Views."
msgstr ""

# b55d7e4bafdf417ab8f8ecff34a229a9
#: ../develop/plone/functionality/actions.rst:180
msgid "Content-type specific actions"
msgstr ""

# 8b26ab77a77b424ab2886cfa9f066583
#: ../develop/plone/functionality/actions.rst:182
msgid ""
"Content-type specific actions can be registered in portal_types. Actions are"
" viewable and editable in Zope Management Interface under portal_types. "
"After editing actions, content type XML can be  exported and placed to your "
"content type add-on product."
msgstr ""

# 9dcd9a10e91644af89d281f7d87cb6da
#: ../develop/plone/functionality/actions.rst:187
msgid ""
"GenericSetup example file for content type \"ProductCard\" which has a new "
"tab added next to view, edit, sharing, etc. File is located in "
"profiles/default/types/ProductCard.xml."
msgstr ""

# d630def64b3240ea9c31b2c92165cd64
#: ../develop/plone/functionality/actions.rst:222
msgid ""
"The corresponding BrowserView is registered as any other view in "
"*browser/configure.zcml*:"
msgstr ""

# 1c799511807d40ed8ad4385d11d8f492
#: ../develop/plone/functionality/actions.rst:236
msgid "Toggling action visibility programmatically"
msgstr ""

# 1987278e3f9747c58a28248acd02234e
#: ../develop/plone/functionality/actions.rst:240
msgid "This applies only for Plone 2.5. You should use actions.xml instead."
msgstr ""

# ffd7493e263141918cdd9091a9a7b0f1
#: ../develop/plone/functionality/actions.rst:258
msgid "Visibility expressions"
msgstr ""

# e6930e417d584ef6b36110d0af331245
#: ../develop/plone/functionality/actions.rst:260
msgid ""
"In portal_actions expression is used to determine whether an action is "
"visible on a particular page."
msgstr ""

# 004ffebdf2124f00b2ec511459b225b3
#: ../develop/plone/functionality/actions.rst:263
msgid ""
"Expression is \"expression\" field in actions.xml or \"Expression\" field in"
" portal_actions."
msgstr ""

# 029c65812bcd4267bb093fe4f18bfd23
#: ../develop/plone/functionality/actions.rst:268
msgid ""
"This check is just a visibility check. Users can still try to type the "
"action by typing the URL manually. You need to do the permission level "
"security check on the view providing the action."
msgstr ""

# ae50de468e55444594aafd6e0b3d17dc
#: ../develop/plone/functionality/actions.rst:272
msgid ""
"For more information see :doc:`expressions "
"</develop/plone/functionality/expressions>`."
msgstr ""

# eb8e6d381b9b42ee9ea44dca78b513a0
#: ../develop/plone/functionality/actions.rst:275
msgid "Condition examples"
msgstr ""

# 550bc4939bf64469b19f1693c4f1ef37
#: ../develop/plone/functionality/actions.rst:277
msgid "See in :doc:`expressions </develop/plone/functionality/expressions>`."
msgstr ""

# 6b8c3358ad6747d7a8f0b34e324666c3
#: ../develop/plone/functionality/actions.rst:280
msgid "Using actions in views and viewlets"
msgstr ""

# 6dc9b156ada449fba5fc8aecf5484990
#: ../develop/plone/functionality/actions.rst:292
msgid "Tabs (sections)"
msgstr ""

# 67cf707508354a2bb847c6a00cad82c7
#: ../develop/plone/functionality/actions.rst:294
msgid "Tabs are special actions"
msgstr ""

# 05d12c3457674f17bf1d602f0bc3f7db
#: ../develop/plone/functionality/actions.rst:296
msgid "Some of tabs are automatically generated from root level content items"
msgstr ""

# 2549fdc98a3940aea4c847355580551b
#: ../develop/plone/functionality/actions.rst:298
msgid "Some of tabs are manually added to portal_actions.portal_tabs"
msgstr ""

# f85946e4c6c840cea9b38c5e032bd838
#: ../develop/plone/functionality/actions.rst:300
msgid ""
"By default, they are shown as the top vertical navigation of Plone site."
msgstr ""

# bc6f6e82e8f244faab5e317c9aef9275
#: ../develop/plone/functionality/actions.rst:302
msgid "Example how to generate tabs list::"
msgstr ""

# 2b78ea54e5f2475695b3113cf0ff055c
#: ../develop/plone/functionality/actions.rst:333
msgid "Custom action listings"
msgstr ""

# 2cf1c5de4ac8453f9fa63a03c8f37013
#: ../develop/plone/functionality/actions.rst:355
msgid "Different tabs per section/folder"
msgstr ""

# adb91253052b4b3d8dab03eb2b39b096
#: ../develop/plone/functionality/actions.rst:357
msgid ""
"You might want to have different actions for different site sections or "
"folders."
msgstr ""

# 9cab452bdfb24f17b6d0a357fd321a91
#: ../develop/plone/functionality/actions.rst:359
msgid ""
"http://plone.293351.n2.nabble.com/Custom-portal-tabs-per-subsection-"
"tp5747768p5747768.html"
msgstr ""

# 653f35f78b474c3185542bd895030fa2
#: ../develop/plone/functionality/actions.rst:362
msgid "Copy, cut and paste"
msgstr ""

# 2fc65069af3a43a28cca6b06840ebdc5
#: ../develop/plone/functionality/actions.rst:364
msgid ""
"These action are based on ``OFS`` Zope 2 package SimpleItem mechanisms. "
"Plone specific event handlers are used to update Plone related stuff like "
"``portal_catalog`` on move."
msgstr ""

# 3efa41f6e30d463b96d082ae05ed3aaa
#: ../develop/plone/functionality/actions.rst:368
msgid ""
"Plone internal clipboard relies on the presence of Zope 2 session (different"
" from authentication session). Paste action fails silenlty (is missing) if "
"``_ZopeId`` session cookie does not work correctly on your web server."
msgstr ""

# fffda14e4f4a44f48e955c0b6c4551c1
#: ../develop/plone/functionality/breadcrumbs.rst:3
msgid "Breadcrumbs (path bar)"
msgstr ""

# e753dfdd07634265bbe682d5769c4d9a
#: ../develop/plone/functionality/breadcrumbs.rst:7
msgid ""
"Breadcrumbs is visual element showing where the user is on the site. This "
"document shows some example code how to create breadcrumbs programmatically."
msgstr ""

# 2165c27e43fa483a80de8346972e0e51
#: ../develop/plone/functionality/breadcrumbs.rst:14
msgid "Navigation level sensitive breadcrumbs"
msgstr ""

# dfdd3c268e5145b7b59c94da4960b7e8
#: ../develop/plone/functionality/breadcrumbs.rst:16
msgid ""
"Below is a breadcrumbs viewlet displayed only on 3rd navigation level "
"downwards.  Drop this in `your add-on template "
"<https://github.com/miohtama/sane_plone_addon_template>`_. Tune the "
"``visible()`` function for further functionality."
msgstr ""

# 38b231f39afc415384cbb1e3101b5b66
#: ../develop/plone/functionality/breadcrumbs.rst:21
msgid "Python code to be dropped in ``viewlets.py``::"
msgstr ""

# e1672a20225345999e2c5c00f66c02bf
#: ../develop/plone/functionality/breadcrumbs.rst:53
msgid "Template code ``templates/breadcrumbs.pt``:"
msgstr ""

# 47b85d63c36b449ba1d68ed6187b1b1f
#: ../develop/plone/functionality/breadcrumbs.rst:98
msgid "Back button"
msgstr ""

# a8f4031cadfc41ba8d6ee223f1e58de9
#: ../develop/plone/functionality/breadcrumbs.rst:100
msgid ""
"Below is an example how we have extracted information like the parent "
"container and such from breadcrumbs."
msgstr ""

# aa204bfd66b445e7bf9a9b880f292df1
#: ../develop/plone/functionality/breadcrumbs.rst:105
msgid ""
"We need special dealing for \"default view\" of objects... that's the "
"canonical part."
msgstr ""

# ba383290d7f048ffb91daddc8c834500
#: ../develop/plone/functionality/breadcrumbs.rst:146
msgid ""
"http://code.google.com/p/plonegomobile/source/browse/gomobiletheme.basic/trunk/gomobiletheme/basic/viewlets.py#281"
msgstr ""

# 24564f48cc1f4718acea926572bb1d44
#: ../develop/plone/functionality/collections.rst:3
msgid "Collections"
msgstr ""

# 13e62a69ed094c6cb04d3380a7cbbf7f
#: ../develop/plone/functionality/collections.rst:7
msgid ""
"Collections are site editor enabled searches.  They provide automatic, "
"folder like view, for the content fetched from the Plone site by criteria "
"defined by the site editor."
msgstr ""

# b97719a6d81e4e2381d3689708c54646
#: ../develop/plone/functionality/collections.rst:14
msgid ""
"In Plone 4.2, old style collections have been replaced with new style "
"collections, featuring a vastly improved user interface and a de-coupling "
"from the ATTopic content type (i.e. they no longer use ATTopic)."
msgstr ""

# a77b8dd249f9460694f029b73beacead
#: ../develop/plone/functionality/collections.rst:16
msgid "They are useful to generate different listings."
msgstr ""

# 4c4e8e415aa644c0803f513d35f56bd6
#: ../develop/plone/functionality/collections.rst:18
msgid ""
"Collections are internally called \"topics\" and the corresponding content "
"type is \"ATTopic\" (< 4.2 only). Collections were renamed from topics in "
"Plone 3.0."
msgstr ""

# e5adc2b1d30e4bde899abf8ebefa48d0
#: ../develop/plone/functionality/collections.rst:20
msgid "Collection searches are driven by two factors:"
msgstr ""

# f40de41d4cc4462d9b1c368ba0418074
#: ../develop/plone/functionality/collections.rst:22
msgid "User visible \"criteria\" which is mapped to portal_catalog queries"
msgstr ""

# 96e5dd40c225488197734ba26bec8a69
#: ../develop/plone/functionality/collections.rst:24
msgid ""
"portal_catalog() indexes which you need to add yourself for custom content "
"types. Read more about them in :doc:`Searching and Indexing chapter "
"</develop/plone/searching_and_indexing/index>`"
msgstr ""

# 569cba2f5cd840a79b7a147362f72737
#: ../develop/plone/functionality/collections.rst:27
msgid ""
"Add new collection criteria (new style, plone.app.collection installed)"
msgstr ""

# b2d7b8f4670f45e2b5dd1e0a41954fb1
#: ../develop/plone/functionality/collections.rst:28
msgid ""
"How to add your own criteria to a collection plone.app.collection and (or "
"more precisely the underlying plone.app.querystring) uses plone.app.registry"
" records to define possible search criteria for a collection."
msgstr ""

# 65e0290edff94bcfae4eb7de4c09b09d
#: ../develop/plone/functionality/collections.rst:31
msgid ""
"If you want to add your own criteria, say to choose a value from a custom "
"index, you have to create a plone.app.registry record for this index in your"
" generic setup profile (e.g profiles/default/registry.xml)::"
msgstr ""

# 937e21336ec546b09165d08693a6fc29
#: ../develop/plone/functionality/collections.rst:47
msgid ""
"The title-value refers to the custom index (\"Department\"), the operations-"
"value is used to filter the items and the group-value defines under which "
"group the entry shows up in the selection widget."
msgstr ""

# 6ee254980d6b44c788b0f9dbab9e4734
#: ../develop/plone/functionality/collections.rst:49
msgid "Note"
msgstr ""

# 1a1beb34e04146bbbd67f7c78923f7ed
#: ../develop/plone/functionality/collections.rst:51
msgid ""
"For a full list of all existing QueryField declarations see "
"https://github.com/plone/plone.app.querystring/blob/master/plone/app/querystring/profiles/default/registry.xml#L197"
msgstr ""

# 8b79a4d749b849ca86d928aa325c32fe
#: ../develop/plone/functionality/collections.rst:53
msgid ""
"For a full list of all existing operations see "
"https://github.com/plone/plone.app.querystring/blob/master/plone/app/querystring/profiles/default/registry.xml#L1"
msgstr ""

# 41579f9e19c245929cf6256405628c6d
#: ../develop/plone/functionality/collections.rst:56
msgid "Adding new collection criteria (old style, < 4.2 only)"
msgstr ""

# 63226d1e12c5475aa031a03ec3460384
#: ../develop/plone/functionality/collections.rst:58
msgid ""
"portal_catalog search indexes are not directly exposed to the collection "
"criteria management backend, since portal_catalog indices do not support "
"features like localization and user-friendly titles."
msgstr ""

# 5f66e5f6df884c8b909c5bf05cfece3e
#: ../develop/plone/functionality/collections.rst:62
msgid ""
"In Plone 4.2, the Collection configlet is no longer listed in Site Setup. "
"But you can still access it here: "
"http://localhost:8080/Plone/portal_atct/atct_manageTopicIndex."
msgstr ""

# 39cae3fa628b424ba0e4f792fa2cd25e
#: ../develop/plone/functionality/collections.rst:64
msgid ""
"New criteria can be created through-the-web in Site setup -> Collection "
"section.  Click \"All fields\" to see unenabled portal_catalog criteria.  "
"Later the edited settings can be exported to GenericSetup XML profile using "
"portal_setup tool (no need to create profile XMl files by hand)."
msgstr ""

# 3a5dcb67d6f94e189bff3af42007762d
#: ../develop/plone/functionality/collections.rst:66
msgid ""
"portal_catalog indices can be added through-the-web on ZMI portal_catalog "
"tool tabs."
msgstr ""

# 3c643e0e72244cf89e225d4f88008216
#: ../develop/plone/functionality/collections.rst:68
msgid ""
"If you still want to create XML files by hand, read more about it in `Enable"
" Collection Indices (fields for searching) for custom types HOW TO "
"<http://plone.org/documentation/how-to/enable-collection-indices-fields-for-"
"searching-for-custom-types>`_."
msgstr ""

# 41f8a793837a4cfd94c0d315378ff8bb
#: ../develop/plone/functionality/collections.rst:71
msgid "Sticky sorting"
msgstr ""

# 095eefc61ea342dc81b1516b7aad46b5
#: ../develop/plone/functionality/collections.rst:75
msgid ""
"http://stackoverflow.com/questions/8791132/how-to-create-sticky-news-items-"
"in-plone-4"
msgstr ""

# 5bffaf70d5854c208da263ad1e4ff843
#: ../develop/plone/functionality/contactform.rst:3
msgid "Contact forms"
msgstr ""

# 06fb23904c9c40afb6765c597320b5a3
#: ../develop/plone/functionality/contactform.rst:10
msgid "Plone ships with a"
msgstr ""

# 259fd1a53cda419caa22822ed9ca4b33
#: ../develop/plone/functionality/contactform.rst:12
msgid ""
"site contact form which is form-to-mail to the site administration email"
msgstr ""

# a9d4c2b68ddd4ea4b107fd15714e53fc
#: ../develop/plone/functionality/contactform.rst:14
msgid "document comment form"
msgstr ""

# 64f0104aa05645048aacf089184a7aab
#: ../develop/plone/functionality/contactform.rst:16
msgid "email this to friend form"
msgstr ""

# 65b6cc42c8c64d8f949f4010ce9f2916
#: ../develop/plone/functionality/contactform.rst:18
msgid "Default address /contact-info."
msgstr ""

# f8fc780b713a49cf8e37405fd8d71965
#: ../develop/plone/functionality/contactform.rst:21
msgid "Customizing site contact form"
msgstr ""

# afdabe6ac2c141278290c4f0eb3fcdcc
#: ../develop/plone/functionality/contactform.rst:23
msgid "Contact form files are"
msgstr ""

# a6130bd1c8904b6d9aab17321f06234e
#: ../develop/plone/functionality/contactform.rst:25
msgid "Products/CMFPlone/skins/plone_templates/contact-info.cpt"
msgstr ""

# d2bf8febd46e444881dc86f7477c4a7a
#: ../develop/plone/functionality/contactform.rst:27
msgid "Products/CMFPlone/skins/plone_templates/contact-info.cpt.metadata"
msgstr ""

# 51bdc43e34b14d9d96b26b7296f2e0b1
#: ../develop/plone/functionality/contactform.rst:29
msgid "Products/CMFPlone/skins/plone_templates/site_feedback_template.pt"
msgstr ""

# f5b44a22e98543ee9ec7b33d01493519
#: ../develop/plone/functionality/contactform.rst:31
msgid "Products/CMFPlone/skins/plone_formscripts/validate_feedback.vpy"
msgstr ""

# 0fc6574677f84af6838b31ec13ab95d8
#: ../develop/plone/functionality/contactform.rst:33
msgid "Products/CMFPlone/skins/plone_formscripts/send_feedback.cpy"
msgstr ""

# e62b776330a6400aabeee3778bab6c10
#: ../develop/plone/functionality/contactform.rst:35
msgid "Products/CMFPlone/skins/plone_formscripts/send_feedback.cpy.metadata"
msgstr ""

# 91729534e6d748bfbcf76a98974c4e21
#: ../develop/plone/functionality/contactform.rst:37
msgid "Products/CMFPlone/skins/plone_formscripts/send_feedback_site.cpy"
msgstr ""

# 1ad1f73593a942eb82fbf797720f6537
#: ../develop/plone/functionality/contactform.rst:39
msgid ""
"Products/CMFPlone/skins/plone_formscripts/send_feedback_site.cpy.metadata"
msgstr ""

# 2b98853a19834845bc649f94f34dfc63
#: ../develop/plone/functionality/contactform.rst:41
msgid ""
"Inspect the files to known which you need to change. Copy these files to "
"skin layer folder (any folder under skins) in your add-on product."
msgstr ""

# 99ab7adeb40b48079686b06f72ce6165
#: ../develop/plone/functionality/contactform.rst:46
msgid ""
"Different contact for is displayed for logged-in and anonymous users. Logged"
" in user email is not asked, but one stored in member properties is used."
msgstr ""

# 716f0419eb5c448783859a92d480286a
#: ../develop/plone/functionality/contactform.rst:52
msgid ""
"Below is an example how to add \"phone number\" field for all *not logged "
"in* users feedback form."
msgstr ""

# dd70ba0b37954409b6db42e0b780ba13
#: ../develop/plone/functionality/contactform.rst:55
msgid "Add a new optional field to contact-info.cpt (language hardcoded)::"
msgstr ""

# e587ce8c3a6d4f4f89b9b3773a6e1377
#: ../develop/plone/functionality/contactform.rst:76
msgid "Refer this field in site_feedback_template.pt::"
msgstr ""

# 0881e6eb375047189368227ce93cb284
#: ../develop/plone/functionality/contactform.rst:106
msgid ""
"As a crude hack we add new field to the very bottom of the email, as "
"everything side <div i18n:translate> is replaced from translation catalogs."
msgstr ""

# 44539d861d554cfb9b448355098169b2
#: ../develop/plone/functionality/contactform.rst:110
msgid "Replacing the site contact form with a content object"
msgstr ""

# 1380a9a700c64a22824c4652ce3717cb
#: ../develop/plone/functionality/contactform.rst:112
msgid ""
"Sometimes you want to turn off the builtin form in favour of a piece of "
"content. For example you might want a PloneFormGen form that content editors"
" can alter. Naming your content item ``contact-info`` works because Zope "
"traversal will find your content item before the page template. However "
"Plone won't allow a new piece of content to be named ``contact-info`` since "
"that's a reserved identifier, so the trick is to rename it in the ZMI from "
"the Plone-generated ``contact-info-1`` back to ``contact-info``."
msgstr ""

# ed965c7ccfba41f6bb6871affa83aaed
#: ../develop/plone/functionality/contactform.rst:121
msgid "This works for ``accessibility-info`` too."
msgstr ""

# 51b83b2fa112437fb60f4bbc70c0cd45
#: ../develop/plone/functionality/contactform.rst:123
msgid ""
"If you have a PFG contact form at, say, ``about/contact-us`` and want to "
"turn off the builtin ``contact-info`` form, use the rename trick to create a"
" ``contact-info`` Link object at the site root that points to your new form."
" Through acquisition, even URLS like ``events/contact-info`` will "
"successfully redirect to your custom form."
msgstr ""

# b3223fe7aded4973aab4620223c4ceb8
#: ../develop/plone/functionality/controlpanel.rst:3
msgid "Site setup and configuration"
msgstr ""

# 911e9066e4e44d33aad6a483a77e638c
#: ../develop/plone/functionality/controlpanel.rst:7
msgid ""
"How to create settings for your add-on product and how to programmatically "
"add new Plone control panel entries."
msgstr ""

# 645ffb87bd3644a69953ca78652a9afe
#: ../develop/plone/functionality/controlpanel.rst:15
msgid ""
"This documentation tells you how to create new \"configlets\" to Plone site "
"setup control panel."
msgstr ""

# dead7054e915494e9a4986221665fe32
#: ../develop/plone/functionality/controlpanel.rst:18
msgid "Configlets can be created in two ways:"
msgstr ""

# 70fe7f180164496eae38c81970c1a40d
#: ../develop/plone/functionality/controlpanel.rst:20
msgid ""
"Using the ``plone.app.registry`` configuration framework for Plone "
"(recommended);"
msgstr ""

# 3de8027357ed43d6869f7108ddeada4e
#: ../develop/plone/functionality/controlpanel.rst:22
msgid "Using any :doc:`view code </develop/plone/views/browserviews>`."
msgstr ""

# c7e540790e6b4ae5b717695485b76c33
# 0fa1bc27adef495a9427d4cf3a54726d
#: ../develop/plone/functionality/controlpanel.rst:26
#: ../develop/plone/functionality/controlpanel.rst:49
msgid "``plone.app.registry``"
msgstr ""

# ad750a23da4f4f86b49d40c9cc5bb621
#: ../develop/plone/functionality/controlpanel.rst:28
msgid ""
"``plone.app.registry`` is the state of the art way to add settings for your "
"Plone 4.x+ add-ons."
msgstr ""

# 090598f137284a62bae43a6282ebf7ec
#: ../develop/plone/functionality/controlpanel.rst:31
msgid ""
"For tutorial and more information please see the `PyPi page "
"<https://pypi.python.org/pypi/plone.app.registry>`_."
msgstr ""

# 42806a08626a43289c8444af70e725a2
#: ../develop/plone/functionality/controlpanel.rst:34
msgid "Example products:"
msgstr ""

# 02425779a44047168425481e76cce66d
#: ../develop/plone/functionality/controlpanel.rst:36
msgid "https://pypi.python.org/pypi/collective.gtags"
msgstr ""

# 0eba8b0a6d514d24830e75df66fdb3e3
#: ../develop/plone/functionality/controlpanel.rst:38
msgid "http://plone.org/products/collective.habla"
msgstr ""

# b374391f0f524f71aa47d59dbeaab926
#: ../develop/plone/functionality/controlpanel.rst:40
msgid "https://pypi.python.org/pypi/collective.xdv"
msgstr ""

# ce1a5c5bc74549d1b743462a75522d41
#: ../develop/plone/functionality/controlpanel.rst:43
msgid "Minimal example using ``five.grok``"
msgstr ""

# 51d3ff0803394544bfedc6a7e695ce04
#: ../develop/plone/functionality/controlpanel.rst:45
msgid "Below is a minimal example for creating a configlet using:"
msgstr ""

# 9bf13426567541f4b26a1c08680e7ffc
#: ../develop/plone/functionality/controlpanel.rst:47
msgid ":doc:`grok </develop/addons/components/grok>`"
msgstr ""

# 316823a85cbe45de9218b9a9c66788ce
#: ../develop/plone/functionality/controlpanel.rst:51
msgid ""
"It is based on the `youraddon template "
"<https://github.com/miohtama/sane_plone_addon_template/blob/master>`_. The "
"add-on package in this case is called `silvuple "
"<https://github.com/miohtama/silvuple>`_."
msgstr ""

# 3f907fdd9d744829948a24a50a84110a
#: ../develop/plone/functionality/controlpanel.rst:56
msgid ""
"In ``buildout.cfg``, make sure you have the ``extends`` line for Dexterity "
"(see the `Dexterity installation guide "
"<http://plone.org/products/dexterity/documentation/how-to/install>`_."
msgstr ""

# 084580055a4b494fb220b5b359982847
#: ../develop/plone/functionality/controlpanel.rst:61
msgid "``setup.py``::"
msgstr ""

# 9932826868004cddaff5f838ebacbb56
# 9c44f9e489d747c8a44db10e628ca86a
#: ../develop/plone/functionality/controlpanel.rst:65
#: ../develop/plone/functionality/controlpanel.rst:214
msgid "``settings.py``::"
msgstr ""

# 7938c63ab94348ab9f4c7d48424911bc
#: ../develop/plone/functionality/controlpanel.rst:107
msgid "``profiles/default/controlpanel.xml``"
msgstr ""

# 1e9b6b4b98704153901d427a1f4f6d34
#: ../develop/plone/functionality/controlpanel.rst:132
msgid "``profiles/default/registry.xml``"
msgstr ""

# 507c0244b1684909938fc1a4e17d063e
#: ../develop/plone/functionality/controlpanel.rst:146
msgid "Control panel widget settings"
msgstr ""

# faa7dab49c474ab995d6ba758e8effb9
#: ../develop/plone/functionality/controlpanel.rst:148
msgid ""
"``plone.app.registry`` provides the ``RegistryEditForm`` class, which is a "
"subclass of ``z3c.form.form.Form``."
msgstr ""

# 5fda2fb0b5154273b65866902b715daa
#: ../develop/plone/functionality/controlpanel.rst:151
msgid ""
"It has two places to override which widgets will be used for which field:"
msgstr ""

# 93eb207113684e10a978716a19d0ebfd
#: ../develop/plone/functionality/controlpanel.rst:154
msgid ""
"``updateFields()`` may set widget factories, i.e. widget type, to be used;"
msgstr ""

# 528fff288ecb48d8bb9935a5488b9bec
#: ../develop/plone/functionality/controlpanel.rst:156
msgid ""
"``updateWidgets()`` may play with widget properties and widget values shown "
"to the user."
msgstr ""

# 036eed392f7140fdbbb5fe0495e1ae48
#: ../develop/plone/functionality/controlpanel.rst:159
msgid "Example (``collective.gtags`` project, ``controlpanel.py``)::"
msgstr ""

# 97a140485dc043609ea0fcaa8a4662ff
#: ../develop/plone/functionality/controlpanel.rst:179
msgid "``plone.app.registry`` imports --- backwards compatibility"
msgstr ""

# 899c7937728048b1b5aba0489143b9ee
#: ../develop/plone/functionality/controlpanel.rst:181
msgid ""
"You need this if you started using ``plone.app.registry`` before April 2010."
msgstr ""

# 4aac2f047a444d2ebd2ee909b66c8d3e
#: ../develop/plone/functionality/controlpanel.rst:183
msgid "There is a change concerning the 1.0b1 codebase::"
msgstr ""

# 1c97400c0f6d4c0e86ab6e554d87bacf
#: ../develop/plone/functionality/controlpanel.rst:196
msgid "Configlets without ``plone.registry``"
msgstr ""

# aabff8af6ef14a5bbe9c00032924e786
#: ../develop/plone/functionality/controlpanel.rst:198
msgid "Just add ``controlpanel.xml`` pointing to your custom form."
msgstr ""

# 7da0333ace24404ba68d110ecece1c4e
#: ../develop/plone/functionality/controlpanel.rst:202
msgid "Content type choice setting"
msgstr ""

# 4b49664ca472498796c2d21f14272a10
#: ../develop/plone/functionality/controlpanel.rst:204
msgid ""
"Often you need to have a setting whether a certain functionality is enabled "
"on particular content types."
msgstr ""

# 124dda8cd8504f9895b4d33d7f4d5a24
#: ../develop/plone/functionality/controlpanel.rst:207
msgid "Here are the ingredients:"
msgstr ""

# ee4466f778db4608ab743e7dd3fd4332
#: ../develop/plone/functionality/controlpanel.rst:209
msgid ""
"A custom schema-defined interface for settings (``registry.xml`` schemas "
"don't support multiple-choice widgets in ``plone.app.registry`` 1.0b2);"
msgstr ""

# ab5c698f7a8b4ce9a7be903390f758d1
#: ../develop/plone/functionality/controlpanel.rst:212
msgid ""
"a vocabulary factory to pull friendly type information out of "
"``portal_types`` ."
msgstr ""

# 1ca1fbf9e581481d944c4b66e5c98208
#: ../develop/plone/functionality/controlpanel.rst:266
msgid "``profiles/default/registry.xml``:"
msgstr ""

# 4fdc4695cf4442478698a64095398306
#: ../develop/plone/functionality/controlpanel.rst:286
msgid "Configuring Plone products from buildout"
msgstr ""

# 9111a392d050407a9dc4dd047ecd2dec
#: ../develop/plone/functionality/controlpanel.rst:288
msgid ""
"See a section in the :ref:`Buildout chapter <configuring-products-from-"
"buildout>`"
msgstr ""

# 9ae34c822b3349adae4591fd57c00234
#: ../develop/plone/functionality/controlpanel.rst:293
msgid "Configuration using environment variables"
msgstr ""

# 1dd9a48f964c4bd7baef9dbfdc46a5cd
#: ../develop/plone/functionality/controlpanel.rst:295
msgid ""
"If your add-on requires \"setting file\" for few simple settings you can "
"change for each buildout you can use operating system environment variables."
msgstr ""

# 5d57ed5b86634b91bc51458ce713b6dc
#: ../develop/plone/functionality/controlpanel.rst:299
msgid "For example, see:"
msgstr ""

# 74e9e527d62441f3a98f9aa99a33822a
#: ../develop/plone/functionality/controlpanel.rst:301
msgid "https://pypi.python.org/pypi/Products.LongRequestLogger"
msgstr ""

# 349a812b13834843b3f1c8609a777304
#: ../develop/plone/functionality/dashboard.rst:3
msgid "Dashboard"
msgstr ""

# 782b896280aa47bf8720c020adad7971
#: ../develop/plone/functionality/dashboard.rst:10
msgid "Dashboard is a \"block\" in user preferences."
msgstr ""

# 9413aa64e72544d1a52dc3f10d3011de
#: ../develop/plone/functionality/dashboard.rst:15
msgid "http://plone.org/documentation/kb/setup-a-custom-dashboard"
msgstr ""

# d7c34fe58b1540e8bd2b91ac086e1fbf
#: ../develop/plone/functionality/discussion.rst:3
msgid "Discussion and comments"
msgstr ""

# 4fd4b556167c47d5a51705efff24fbdb
#: ../develop/plone/functionality/discussion.rst:7
msgid "How to control commenting and discussion in Plone programmatically"
msgstr ""

# 5e44bc48431148ae90e95979b23569ef
#: ../develop/plone/functionality/discussion.rst:15
msgid "``plone.app.discussion`` provides basic in-site discussion support."
msgstr ""

# 22ed257adaf14b0ba452813bb5577619
#: ../develop/plone/functionality/discussion.rst:17
msgid ""
"Disqus is a popular external <iframe> embed service used for commenting."
msgstr ""

# 551e535626b24037bd51f83a12eabd7c
#: ../develop/plone/functionality/discussion.rst:21
msgid "http://packages.python.org/plone.app.discussion/"
msgstr ""

# baef7e5fd4d44cc0b110cf3cd873c373
#: ../develop/plone/functionality/discussion.rst:23
msgid "https://pypi.python.org/pypi/plone.app.discussion"
msgstr ""

# 6f2c8b4b662c47988675a88e569c9fd8
#: ../develop/plone/functionality/discussion.rst:26
msgid "Content type support"
msgstr ""

# 5656857e489f4c038cbd109b421520c1
#: ../develop/plone/functionality/discussion.rst:28
msgid ""
"Enable discussion in :doc:`portal_types </develop/plone/content/types>` for "
"each content typ It's the *Allow Discussion* checkbox."
msgstr ""

# ec9db3b3def2427cbd745a11b95cccfb
#: ../develop/plone/functionality/discussion.rst:31
msgid ""
"Discussion shows up as ``plone.comments`` viewlet in "
"``plone.app.layout.viewlets.interfaces.IBelowContent`` viewlet manager."
msgstr ""

# 75716644a02f44a7b87d645820c738ba
#: ../develop/plone/functionality/discussion.rst:35
msgid "Getting total comment count"
msgstr ""

# 76925053d1d746f4be0f0838614edaf2
#: ../develop/plone/functionality/expressions.rst:3
msgid "Expressions"
msgstr ""

# 5607e290aa28456389ad765a33082035
#: ../develop/plone/functionality/expressions.rst:7
msgid ""
"Expressions are string templates or Python expressions which are used in "
"various places in Plone for templates, action conditions and URL generation."
msgstr ""

# f2a2d2e1ed784c5ea0887d3e58991769
#: ../develop/plone/functionality/expressions.rst:17
msgid ""
"Expressions are part of :term:`TAL`, the Template Attribute Language. They "
"are used in Zope Page Templates (:term:`ZPT`) and as part of workflow "
"definitions, among other things. You might want to use expressions in your "
"own add-on product to provide user-written conditions for viewlet "
"visibility, portlets, dynamic text, etc."
msgstr ""

# 9b0b5d935b604677a26bc7358fa109c2
#: ../develop/plone/functionality/expressions.rst:24
msgid ""
"The authoritative reference is `Appendix C: Zope Page Templates Reference "
"<http://docs.zope.org/zope2/zope2book/AppendixC.html>`_ of the `Zope 2 Book "
"<http://docs.zope.org/zope2/zope2book/index.html>`_"
msgstr ""

# 5b92c82449b04764996657cb4af26aef
#: ../develop/plone/functionality/expressions.rst:28
msgid "Expressions are used in:"
msgstr ""

# fbc026ef39d746dd93a48635720bea81
#: ../develop/plone/functionality/expressions.rst:30
msgid ""
"the ``tal:condition``, ``tal:content``, ``tal:replace``, ``tal:attribute``, "
"``tal:define`` :term:`TAL` directives;"
msgstr ""

# 7af0c68ab9d8481991fc1e9e42916f5a
#: ../develop/plone/functionality/expressions.rst:33
msgid ""
"``portal_css``, ``portal_javascript`` and other resource managers, to "
"express when a resource should be included or not;"
msgstr ""

# 718f7141ad584be89b4c8cb88e0e01cf
#: ../develop/plone/functionality/expressions.rst:36
msgid ""
"``portal_actions`` to define when content, site and user actions are "
"visible."
msgstr ""

# 71fb1c4283bf4ba790b4191af6018bc5
#: ../develop/plone/functionality/expressions.rst:40
msgid "Expression types"
msgstr ""

# ae202fada64543d68f17d12201a03e70
#: ../develop/plone/functionality/expressions.rst:42
msgid "There are three main categories of expressions."
msgstr ""

# 9a458b873e4a449ab72d8dea3646480b
#: ../develop/plone/functionality/expressions.rst:44
msgid ""
"Expression can contain an optional ``protocol:`` prefix to determine the "
"expression type."
msgstr ""

# 7af5cae15e09483283d17802873408d4
#: ../develop/plone/functionality/expressions.rst:48
msgid "path expression (default)"
msgstr ""

# 520481c0ac94435fb9dea8ab48dd4c5e
#: ../develop/plone/functionality/expressions.rst:50
msgid ""
"Unless you specify an expression type using ``python:`` or ``string:`` "
"notation, a `path expression "
"<http://docs.zope.org/zope2/zope2book/AppendixC.html#tales-path-"
"expressions>`_ is assumed."
msgstr ""

# 2ea76cb1b0684f1f953aa504e541fac7
#: ../develop/plone/functionality/expressions.rst:55
msgid ""
"Path expressions use slashes for traversal (:doc:`traversing "
"<../serving/traversing>`), and will implicitly call callables."
msgstr ""

# b42d867f88484639a4fcff6c536bf7d0
#: ../develop/plone/functionality/expressions.rst:59
msgid ""
"Example: call the ``Title()`` method on the ``context`` object (finding it "
"by :term:`acquisition` if necessary) and return its value::"
msgstr ""

# 1394053267b74ff2a18d0fc1dd8b5205
#: ../develop/plone/functionality/expressions.rst:65
msgid ""
"Variables can be included using ``?``. Example: access a folder using the id"
" stored in the ``myItemId`` variable, and return its title::"
msgstr ""

# 87457216bcf044668483dfbe2c3fb2ef
#: ../develop/plone/functionality/expressions.rst:73
msgid ""
"With this kind of usage, if the variable you're dereferencing isn't "
"sanitized, there could be security ramifications. Use "
"``python:restrictedTraverse()`` instead if you need to use variables in your"
" path parts."
msgstr ""

# 632787a433454803b584755f63c43aba
#: ../develop/plone/functionality/expressions.rst:79
msgid "__call__() and nocall: behavior in TAL path traversing"
msgstr ""

# f5df6a4729274222b8ecbbc7212e8faf
#: ../develop/plone/functionality/expressions.rst:81
msgid "The TAL path expression will call Python callable objects by default."
msgstr ""

# fbaa9f2b10bd40d8a5d35702dcaff46f
#: ../develop/plone/functionality/expressions.rst:83
msgid ""
"If you try to get a hold of a :doc:`helper view "
"</develop/plone/views/browserviews>` like this::"
msgstr ""

# 44797e1c28c240518c68c094f8331a64
#: ../develop/plone/functionality/expressions.rst:87
msgid "You might get this exception::"
msgstr ""

# d874f1bd5f5d4cb291fe8b628f83353c
#: ../develop/plone/functionality/expressions.rst:95
msgid ""
"It basically means that your view does not have a template assigned and the "
"traversing logic tries to render that template."
msgstr ""

# 5a8a7768ae5b43ba974f374be9c15089
#: ../develop/plone/functionality/expressions.rst:98
msgid "This happens because"
msgstr ""

# bd9f1cda481d4a359adfddd488d6121f
#: ../develop/plone/functionality/expressions.rst:100
msgid "`` context/@@comments_view`` creates a view instance"
msgstr ""

# 406a198370b54fbe8a2eced0b82bdacd
#: ../develop/plone/functionality/expressions.rst:102
msgid "then calls its ``__call__()`` method"
msgstr ""

# 222b2d9318324f72b0e13811354ea63a
#: ../develop/plone/functionality/expressions.rst:104
msgid ""
"the default ``BrowserView.__call__()``  behavior  to render a template by "
"doing::"
msgstr ""

# 7528c87fe7794c2bb40fe5f73c17d2dc
#: ../develop/plone/functionality/expressions.rst:109
msgid ""
"Because your view does not have a template assigned it also lacks self.index"
" attribute"
msgstr ""

# 71ecd4fdf242470dbe2c673b456ef2e6
#: ../develop/plone/functionality/expressions.rst:111
msgid "The workaround for cases like this is to use ``nocall::`` traversing::"
msgstr ""

# 94299777546f40fba8c4d7203d13b2ef
#: ../develop/plone/functionality/expressions.rst:117
msgid "``string:`` expressions"
msgstr ""

# 6782773a63c74539a2cd82c7f53d2d79
#: ../develop/plone/functionality/expressions.rst:119
msgid "Do string replace operation."
msgstr ""

# d0a0004e035b449a8970bcfc12e2a2e2
#: ../develop/plone/functionality/expressions.rst:126
msgid "``python:`` expression"
msgstr ""

# 2f950f86d332413b85fdd849742c9379
#: ../develop/plone/functionality/expressions.rst:128
msgid "Evaluate as Python code."
msgstr ""

# 3457bbcb097140d390e6846c82503f87
#: ../develop/plone/functionality/expressions.rst:136
msgid "Expression variables"
msgstr ""

# ad37942524eb425c98852c08023e8e8a
#: ../develop/plone/functionality/expressions.rst:138
msgid ""
"Available expression variables are defined in ``CMFCore/Expressions.py``::"
msgstr ""

# 27138dcaf5074efd9e6bc844d446898e
#: ../develop/plone/functionality/expressions.rst:154
msgid ""
"You can also access :doc:`helper views </develop/plone/misc/context>` "
"directly by name."
msgstr ""

# 5d272f90210d40b094a2d973686cfa48
#: ../develop/plone/functionality/expressions.rst:157
msgid "Using expressions in your own code"
msgstr ""

# e1f262b73323423995bd8d8761517135
#: ../develop/plone/functionality/expressions.rst:159
msgid ""
"Expressions are persistent objects. You usually want to attach them to "
"something, but this is not necessary."
msgstr ""

# d905d5f1dd1d48d28d21317c337ffa1d
#: ../develop/plone/functionality/expressions.rst:190
msgid "Custom expression using a helper view"
msgstr ""

# 88f529e17277454fabad92cdf8de601f
#: ../develop/plone/functionality/expressions.rst:192
msgid ""
"If you need to add complex Python code to your expression conditions it is "
"best to put this code in a BrowserView and expose it as a method."
msgstr ""

# 0edf83a339e745a2ab730f66c7c4937e
#: ../develop/plone/functionality/expressions.rst:196
msgid "Then you can call the method on a view from a TALES expression::"
msgstr ""

# 04444e02cf7e40a1948891eb5c830e9c
#: ../develop/plone/functionality/expressions.rst:200
msgid "Your view code would look like::"
msgstr ""

# 6bcced16e75840d4b3649a59edab481a
#: ../develop/plone/functionality/expressions.rst:215
msgid "Register the view as \"my_view_name\", using ``configure.zcml`` as usual."
msgstr ""

# 049af06cd2434ac687e4574709a43e5a
#: ../develop/plone/functionality/expressions.rst:217
msgid "You can use context interfaces like"
msgstr ""

# a8b79b9144ea4a148feff6810a1dbeaf
#: ../develop/plone/functionality/expressions.rst:221
msgid "``zope.interface.Interface`` (or ``*``)"
msgstr ""

# f2ca08783c544180b0b72cde5353e890
#: ../develop/plone/functionality/expressions.rst:223
msgid ""
"to make sure that this view is available on all content objects, as TALES "
"will be evaluated on every page, depending on what kind of content the page "
"will present."
msgstr ""

# d2e9def9be6f4480aaafaf9b73402313
#: ../develop/plone/functionality/expressions.rst:228
msgid "Expression examples"
msgstr ""

# ec7b543230024fa7902ea7e5ee5ae804
#: ../develop/plone/functionality/expressions.rst:231
msgid "Get current language"
msgstr ""

# afbec17389ac4d26a499ec68d481500c
#: ../develop/plone/functionality/expressions.rst:233
msgid ""
"Use :doc:`IPortalState context helper </develop/plone/misc/context>` view."
msgstr ""

# 79008432a36e4dfcba308920fe3560f6
#: ../develop/plone/functionality/expressions.rst:235
msgid "Example how to generate a multilingual-aware RSS feed link::"
msgstr ""

# 849cbd53c70d45b295bbaf6d44463487
#: ../develop/plone/functionality/expressions.rst:239
msgid "... or you can use a Python expression for comparison::"
msgstr ""

# 88703017c4004e4dbc0c58a49c3e1704
#: ../develop/plone/functionality/expressions.rst:244
msgid "Check current language in TAL page template"
msgstr ""

# dabfbbaf698a4316ba8853595a5e67a2
#: ../develop/plone/functionality/expressions.rst:246
msgid ""
"For example, in case you need to generate HTML such as links conditionally, "
"depending on the current language:"
msgstr ""

# fe83b25d98f44928af077d975749b340
#: ../develop/plone/functionality/expressions.rst:256
msgid ""
"Example to have different footers (or something similar) for different "
"languages:"
msgstr ""

# c01111000e4e43e185f4974f8875ba83
#: ../develop/plone/functionality/expressions.rst:268
msgid "Check if object implements an interface"
msgstr ""

# 47a2fea850ad44cc954929031e755921
#: ../develop/plone/functionality/expressions.rst:274
msgid "Returns ``True`` or ``False``. Useful for actions."
msgstr ""

# 257f1c1577bc440d8b59643cd35a51a6
#: ../develop/plone/functionality/expressions.rst:277
msgid "Check if a certain hostname was used for HTTP request"
msgstr ""

# a2e223f36ef1474f985c64a3397d9068
#: ../develop/plone/functionality/expressions.rst:285
msgid "Check if the object is a certain content type"
msgstr ""

# c6bb7c7d855341af8ebf053a3cb679ee
#: ../develop/plone/functionality/expressions.rst:293
msgid "Get portal description"
msgstr ""

# 8f0a110784d6424a97420579c4fe2107
#: ../develop/plone/functionality/expressions.rst:302
msgid "Doing <input CHECKED> and boolean like HTML attributes in TAL"
msgstr ""

# c457c94f10034d5c8b5047e3496bbd76
#: ../develop/plone/functionality/expressions.rst:304
msgid "To have a value appear in TAL or not you can do::"
msgstr ""

# da28d297f4504d2e9cc5c18d05ead821
#: ../develop/plone/functionality/expressions.rst:308
msgid "We execute a Python snippet which"
msgstr ""

# 288a56fb2fa24105a7d5f324d8136c0a
#: ../develop/plone/functionality/expressions.rst:310
msgid ""
"We will dynamically create a *checked* attribute on `<input>` based on "
"Python evaluation"
msgstr ""

# 8d2cbf1f9d90437c8b3575f58f639b9b
#: ../develop/plone/functionality/expressions.rst:312
msgid ""
"Return \"checked\" string if some condition we check in Python evaluates to "
"True"
msgstr ""

# c8b2fb4bd42648e89f9264b574ca1e4d
#: ../develop/plone/functionality/expressions.rst:314
msgid ""
"Otherwise we return an empty string and TAL won't output this attribute "
"(TODO: has TAL some special support for CHECKED and SELECTED attributes)"
msgstr ""

# 6df9ca9169cb457f990a64ac06935390
#: ../develop/plone/functionality/expressions.rst:319
msgid "Python 2.6, Plone 4+ syntax"
msgstr ""

# de935c9b858645cdba5308aa08d63d3b
#: ../develop/plone/functionality/expressions.rst:324
msgid "Through-the-web scripts"
msgstr ""

# 31638dcc386b49839fcf4fe1db3f0d5c
#: ../develop/plone/functionality/expressions.rst:328
msgid "Move TTW script info to its own chapter."
msgstr ""

# e0cdfa4f43534dc0bfcb8b3fe1d57a64
#: ../develop/plone/functionality/expressions.rst:330
msgid ""
"The Zope Management Interface allows one to create, edit and execute "
":doc:`RestrictedPython sandboxed scripts "
"</develop/plone/security/sandboxing>` directly through the web management "
"interface. This functionality is generally discouraged nowadays in the favor"
" of :doc:`view classes </develop/plone/views/browserviews>`."
msgstr ""

# b7d5b271ab8d46cbaa60c7d27860b23a
#: ../develop/plone/functionality/expressions.rst:338
msgid "Creating a TTW Python script in an add-on installer"
msgstr ""

# 8f8ea3fee89b44a8bda577aa4f2779a4
#: ../develop/plone/functionality/expressions.rst:340
msgid ""
"Here is an example of how one can pre-seed a Python script in an add-on "
"installer :doc:`GenericSetup profile "
"</develop/addons/components/genericsetup>`."
msgstr ""

# 721b6564b7624845827aa14e79c437d8
#: ../develop/plone/functionality/expressions.rst:393
msgid ""
"See `the full example "
"<https://github.com/collective/collective.scriptedredirect/>`_."
msgstr ""

# 9169786e3e084c188986d11d7318c247
#: ../develop/plone/functionality/expressions.rst:396
msgid "Dynamically hiding content menu items"
msgstr ""

# 337115d7610942ac866e0a51d571a08e
#: ../develop/plone/functionality/expressions.rst:398
msgid "http://blog.affinitic.be/2013/03/04/filter-menu-using-a-grok-view/"
msgstr ""

# 8e1b0d1abad444329c99694d369faf18
#: ../develop/plone/functionality/index.rst:3
msgid "Functionality and features"
msgstr ""

# 5731c144fd1b4b6f98f215a1a45b9e0a
#: ../develop/plone/functionality/index.rst:7
msgid ""
"Explanations how specific user visible features are programmed in Plone."
msgstr ""

# 26c49f35bfe743a290653b7859e1514e
#: ../develop/plone/functionality/locks.rst:3
msgid "Locked content"
msgstr ""

# 89cc3a316d0d48c3a25d0cec8dbb99ef
#: ../develop/plone/functionality/locks.rst:5
msgid ""
"Since Plone 3.1 content edit locking has been supported. This feature is to "
"prevent simultaneous conflicting edits of the same content."
msgstr ""

# e33ff89d728a47b4af8d168ee317f65b
#: ../develop/plone/functionality/locks.rst:8
msgid ""
"If the editor forgot to press Save or Cancel explicit unlocking must be "
"performed on locked objects if you want to modify them. Unfortunately the "
"side-effect is that if site has objects left to locked state they usually "
"interfere with your programming."
msgstr ""

# a1bd05b42ae14b648a53adbe0b813a94
#: ../develop/plone/functionality/locks.rst:13
msgid "Since Plone 3.3 the feature can be disabled from the site settings."
msgstr ""

# 0343a945b6f748b48c861519a2b04a5e
#: ../develop/plone/functionality/locks.rst:16
msgid "Unlocking content"
msgstr ""

# 683eee4fdfff4150a75aa50be420cd57
#: ../develop/plone/functionality/locks.rst:18
msgid "Unlocking can be performed from the object view or edit tab."
msgstr ""

# 4ec6b602340e4fd593b77db073c60ec4
#: ../develop/plone/functionality/locks.rst:21
msgid "Unlocking from Zope control panel"
msgstr ""

# d621eadd46d54ec4b7c299702babe635
#: ../develop/plone/functionality/locks.rst:23
msgid "http://destefano.wordpress.com/2009/01/15/more-fun-with-plone-locks/"
msgstr ""

# 89e601b8bd154e37b5252fa63e47cb60
#: ../develop/plone/functionality/locks.rst:26
msgid "Scripts to unlock all site content"
msgstr ""

# 956878b6631a4c83a2019e3fe29d7230
#: ../develop/plone/functionality/locks.rst:28
msgid "http://m10880.kaivo.com/Plone/help-center/how-to/unlock-webdav-locks"
msgstr ""

# 254e67d915ad43e0a880dd1b34cbd625
#: ../develop/plone/functionality/locks.rst:30
msgid "http://www.zopelabs.com/cookbook/1002703851"
msgstr ""

# e3a8e5e1989d49afb06005d78eb78b33
#: ../develop/plone/functionality/portlets.rst:3
msgid "Portlets"
msgstr ""

# e3d9fd919bc74b4d9968ebbcc5029bbc
#: ../develop/plone/functionality/portlets.rst:7
msgid "Programmatical manipulation of portlets in Plone."
msgstr ""

# 040391f278e844d99ff6678e0f055100
#: ../develop/plone/functionality/portlets.rst:14
msgid ""
"Portlets are editable boxes in the left and right side bar of Plone user "
"interface. Add-ons allow portlets in other parts in of the user interface "
"too, like above and below the content."
msgstr ""

# 822bcf0558504536848611e24590d6ff
#: ../develop/plone/functionality/portlets.rst:18
msgid ""
"This document is contains quick how-to information only. Please visit "
":doc:`Portlets reference manual </old-reference-manuals/portlets/index>` for"
" in-depth information."
msgstr ""

# 2b3c6cf2b089479faf4c986f79a83584
#: ../develop/plone/functionality/portlets.rst:23
msgid "Related add-ons and packages"
msgstr ""

# 48fc55cbcf1c4aaca7510e6206170a02
#: ../develop/plone/functionality/portlets.rst:25
msgid ""
"You might want to check these before starting to write your own portlet - "
"for ready solution, for examples, for inspiration."
msgstr ""

# 2d0f557f15ef487c99b766105a30ff7d
#: ../develop/plone/functionality/portlets.rst:28
msgid ""
"`Create your own portlet managers with collective.panels "
"<https://pypi.python.org/pypi/collective.panels>`_"
msgstr ""

# 14c3c961dd2341a1816a24007c9405f7
#: ../develop/plone/functionality/portlets.rst:30
msgid "https://github.com/collective/collective.portletalias"
msgstr ""

# fa57517dd5674f7fb1c3e6831a711b0b
#: ../develop/plone/functionality/portlets.rst:32
msgid "http://plone.org/products/contentwellportlets"
msgstr ""

# d04a740886e54c869bd71fa700c356f9
#: ../develop/plone/functionality/portlets.rst:34
msgid "https://github.com/miohtama/imageportlet"
msgstr ""

# 3c43e83761264de292a6d0bc16f8b11f
#: ../develop/plone/functionality/portlets.rst:36
msgid "https://github.com/collective/collective.cover"
msgstr ""

# 5b4e88d560c34441a5167ced550e34fc
#: ../develop/plone/functionality/portlets.rst:39
msgid "Creating a portlet"
msgstr ""

# b99fd4fb7a2146c68d9c61ce021f6291
#: ../develop/plone/functionality/portlets.rst:41
msgid ""
"You need a paster-compatible product skeleton created using *paster create "
"-t plone* or *paster create -t archetypes* commands."
msgstr ""

# fd61e1848e20414ab7757948416894e2
#: ../develop/plone/functionality/portlets.rst:44
msgid ""
"Use project specific paster command *paster addcontent portlet* to create a "
"code skeleton for your new portlet."
msgstr ""

# d8f11d9a894d49caa465daf209a73e1d
#: ../develop/plone/functionality/portlets.rst:48
msgid "Subclassing a portlet"
msgstr ""

# e0db88998d2f4679bf3a3bea26accb61
#: ../develop/plone/functionality/portlets.rst:50
msgid ""
"You can subclass a portlet to create a new portlet type with your enhanced "
"functionality."
msgstr ""

# ce4d13711956419aac3c573a65e84169
#: ../develop/plone/functionality/portlets.rst:52
msgid ":doc:`/old-reference-manuals/portlets/appendix/subclassing`"
msgstr ""

# 0090fd2b103345a7a63c472cc801ea77
#: ../develop/plone/functionality/portlets.rst:55
msgid "Using z3c.form in portlets"
msgstr ""

# e4efc22d4eaf42c88d7e5eb1f5919bef
#: ../develop/plone/functionality/portlets.rst:57
msgid ""
":doc:`z3c.form </develop/plone/forms/z3c.form>` is a modern form library for"
" Plone. The out of the box Plone portlets use older *zope.formlib*."
msgstr ""

# c60d570c942441cb920e63db0d8f6ac9
#: ../develop/plone/functionality/portlets.rst:60
msgid "Discussion related to the matter"
msgstr ""

# 0d0ec40563a24f679ea94697f7b7a345
#: ../develop/plone/functionality/portlets.rst:62
msgid ""
"http://stackoverflow.com/questions/5174905/can-i-use-z3c-form-on-plone-"
"portlets-instead-of-zope-formlib"
msgstr ""

# cc6837f4cd62485393e9c0791128ff61
#: ../develop/plone/functionality/portlets.rst:65
msgid "Overriding portlet rendering"
msgstr ""

# 470d3caede4b481d8c0903bebd244c95
#: ../develop/plone/functionality/portlets.rst:67
msgid ""
"Use ``<plone:portletRenderer>`` directive. Specify 1) layer, 2) template "
"and/or 3) class 4) portlet interface."
msgstr ""

# cd8a18903a3044458152b00b35dd63de
#: ../develop/plone/functionality/portlets.rst:70
msgid ""
"You need ``<include package=\"\">`` directive for the package whose portlet "
"you are going to override."
msgstr ""

# 97e3a6cd1e8c41ffa93a5de7bc370b9a
#: ../develop/plone/functionality/portlets.rst:91
msgid ""
"http://plone.org/documentation/manual/theme-reference/elements/portlet"
"/override-the-portlets-in-plone-3.0"
msgstr ""

# a1e1793d1e2a442090d2cd2d6170dc93
#: ../develop/plone/functionality/portlets.rst:94
msgid "update() and render()"
msgstr ""

# 262e2afa3ca4457bb260f3bba2587a7f
# adc096c8cf5a4ff7bc81c8c250f886dd
#: ../develop/plone/functionality/portlets.rst:96
#: ../develop/plone/views/viewlets.rst:318
msgid ""
"These methods should honour "
"`zope.contentprovider.interfaces.IContentProvider call contract "
"<http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto>`_."
msgstr ""

# 82593321fc5f4199add611921cf8fe54
#: ../develop/plone/functionality/portlets.rst:99
msgid "available property"
msgstr ""

# 87117d6c13c646d69f9c7e37f3ab95a6
#: ../develop/plone/functionality/portlets.rst:101
msgid ""
"The portlet renderer can define available property to hint the portlet "
"manager when the portlet should be rendered."
msgstr ""

# 3a876f1e69a442ba8f9b43e9a8e3cc3b
#: ../develop/plone/functionality/portlets.rst:103
msgid "Example ::"
msgstr ""

# 57334d8cf9524c048263fbd9fc0d30f3
#: ../develop/plone/functionality/portlets.rst:113
msgid "Iterate portlets assigned to the portal root"
msgstr ""

# f4655dd7fef24545ade8e50954bca208
#: ../develop/plone/functionality/portlets.rst:115
msgid ""
"Below is an simple example how to print all portlets which have been "
"assigned to the portal root::"
msgstr ""

# 722ae12d0f8648fda9182353e98dc90e
#: ../develop/plone/functionality/portlets.rst:142
msgid "Looking up a portlet by id"
msgstr ""

# ef6ad624ed204f2cb7342e00c06bc889
#: ../develop/plone/functionality/portlets.rst:144
msgid ""
"Here are some tips how to extract the portlet id data in the portlet "
"renderer to pass around to be consumed elsewhere."
msgstr ""

# f461fdf334514480b3bda0a9949c1528
#: ../develop/plone/functionality/portlets.rst:147
msgid "portlets.py::"
msgstr ""

# b6e7338d49554029ab0a33a882b02954
#: ../develop/plone/functionality/portlets.rst:171
msgid ""
"Then we can re-look-up this portlet and its image field, based on the field "
"name, in the downloader view::"
msgstr ""

# 6ccce0fb1c8d484d86e9d9e1305e95a5
#: ../develop/plone/functionality/portlets.rst:266
msgid "See *imageportlet* add-on for the complete example."
msgstr ""

# 13f17c01c612419887fba50f196f52fb
#: ../develop/plone/functionality/portlets.rst:270
msgid "Walking through every portlet on the site"
msgstr ""

# b85bb638ab8a4ed5901255ee705e633d
#: ../develop/plone/functionality/portlets.rst:272
msgid ""
"The following code iterates through all portlets assigned directly to "
"content items. This excludes dashboard, group and content type based "
"portlets. Then it prints some info about them and renders them."
msgstr ""

# 7f9760543acb4852a93c50d65be3a797
#: ../develop/plone/functionality/portlets.rst:346
msgid "For more information about portlet assignments and managers, see"
msgstr ""

# f83c51b3276f46d68ba7a05609a965f0
#: ../develop/plone/functionality/portlets.rst:348
msgid ""
"https://github.com/plone/plone.app.portlets/blob/master/plone/app/portlets/tests/test_mapping.py"
msgstr ""

# b2e3240cf0194ab9ad0f9e7b43f8d1d8
#: ../develop/plone/functionality/portlets.rst:350
msgid ""
"https://github.com/plone/plone.app.portlets/blob/master/plone/app/portlets/tests/test_traversal.py"
msgstr ""

# 34c5cd17b15740419402e0ed4e2c002e
#: ../develop/plone/functionality/portlets.rst:352
msgid ""
"https://github.com/plone/plone.app.portlets/blob/master/plone/app/portlets/configure.zcml"
msgstr ""

# 9b6194227be948088514168ff049edaf
#: ../develop/plone/functionality/portlets.rst:354
msgid ""
"https://github.com/plone/plone.portlets/blob/master/plone/portlets/interfaces.py"
msgstr ""

# 79b1a76c5ba34a71ac5ed36effa48062
#: ../develop/plone/functionality/portlets.rst:356
msgid ""
"http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto"
" (for portlet renderers)"
msgstr ""

# a67a41482c9a471faed5212e7914f423
#: ../develop/plone/functionality/portlets.rst:359
msgid "Checking if a certain context portlet is active on a page"
msgstr ""

# 95fbdb67e510491a93861bfe4a99baa3
#: ../develop/plone/functionality/portlets.rst:361
msgid "Iterate through portlet managers by name"
msgstr ""

# 9493058a9c1745a4b7bf023f3d5dd096
#: ../develop/plone/functionality/portlets.rst:363
msgid "Get portlet retriever for the manager"
msgstr ""

# 77175602b81f488382bcdea09f87d71f
#: ../develop/plone/functionality/portlets.rst:365
msgid "Get portlets"
msgstr ""

# 56ddc9ac89694668a56d5231ad61e9e0
#: ../develop/plone/functionality/portlets.rst:367
msgid ""
"Check if the portlet assignment provides your particular portlet marker "
"interface"
msgstr ""

# ccf0a108ef06449bacf2360e4e70e2dc
#: ../develop/plone/functionality/portlets.rst:396
msgid "Rendering a portlet"
msgstr ""

# 7b1f31a4b6b44e8eb86851a56a5f412b
#: ../develop/plone/functionality/portlets.rst:398
msgid "Below is an example how to render a portlet in Plone"
msgstr ""

# 7461133b8614497d811747e433671f9f
#: ../develop/plone/functionality/portlets.rst:400
msgid "A portlet is assigned to some context in some portlet manager"
msgstr ""

# 20daed3c01b54371a524bfaebf20a378
#: ../develop/plone/functionality/portlets.rst:402
msgid ""
"We can dig these assignments up by portlet id (not user visible) or portlet "
"type (portlet assignment interface)"
msgstr ""

# 13580a8318464381950b1545f01c7d83
#: ../develop/plone/functionality/portlets.rst:404
msgid "How to get your portlet HTML::"
msgstr ""

# 4c0d4c24d8a449dc9b1fcd3ca71c0f91
#: ../develop/plone/functionality/portlets.rst:495
msgid ""
"How to use this code in your own view, please see `collective.portletalias "
"source "
"<https://github.com/collective/collective.portletalias/blob/master/collective/portletalias/portlets/aliasportlet.py#L73>`_"
msgstr ""

# 3979027394b843c6a9db3c6db853a933
#: ../develop/plone/functionality/portlets.rst:499
msgid ""
"http://blog.mfabrik.com/2011/03/10/how%C2%A0to-render-a-portlet-in-plone/"
msgstr ""

# 67968bb37b93462cb1c50d41f1fe273f
#: ../develop/plone/functionality/portlets.rst:502
msgid "Hiding unwanted portlets"
msgstr ""

# 4d2fa6f010ef4eef956fdd9a2ef716a0
#: ../develop/plone/functionality/portlets.rst:504
msgid "Example portlets.xml::"
msgstr ""

# ff9b5b64e4b547e28c1dec3eb4e48e4d
#: ../develop/plone/functionality/portlets.rst:523
msgid "Portlet names can be found in ``plone.app.portlets/configure.zcml``."
msgstr ""

# 7efd57fe07ec49b085f86f4105289755
#: ../develop/plone/functionality/portlets.rst:527
msgid ""
"http://stackoverflow.com/questions/5897656/disabling-portlet-types-site-"
"wide-in-plone"
msgstr ""

# 6bcf69d618b742a6805c214c1daaa780
#: ../develop/plone/functionality/portlets.rst:530
msgid "Disabling right or left columns in a view or template"
msgstr ""

# ba6c7540ff224359afe507789bc3b03e
#: ../develop/plone/functionality/portlets.rst:532
msgid ""
"Sometimes, when you work with custom views and custom templates you need to "
"disable right or left column for portlets."
msgstr ""

# cc21cd22e492456ebd14cc26edce12fb
#: ../develop/plone/functionality/portlets.rst:535
msgid "This is how you do from within a template:"
msgstr ""

# 1305f396cc9743f2b796f905e0109d5d
#: ../develop/plone/functionality/portlets.rst:543
msgid "And this is how you do it from within a view::"
msgstr ""

# 01d88a8af8dd41ee862eed0d95b4c6d4
#: ../develop/plone/functionality/portlets.rst:555
msgid ""
"Source: http://stackoverflow.com/questions/5872306/how-can-i-remove-"
"portlets-in-edit-mode-with-plone-4"
msgstr ""

# 4bce14f93e3440fc8e4a1dd9c2202d37
#: ../develop/plone/functionality/portlets.rst:558
msgid "Disabling right or left columns on a context"
msgstr ""

# 762a8b6d1dd74090bbc5e50452a28c27
#: ../develop/plone/functionality/portlets.rst:560
msgid ""
"Sometimes you just want to turn off the portlets in a certain context that "
"doesn't have a template or fancy view.  To do this in code do this::"
msgstr ""

# 9c471791395b42138254b5482a20ef25
#: ../develop/plone/functionality/portlets.rst:580
msgid "Or just do it using GenericSetup like a sane person:"
msgstr ""

# 94e584ba9fbf489e80b23f30cf6db442
#: ../develop/plone/functionality/portlets.rst:582
msgid ""
"http://plone.org/documentation/manual/developer-manual/generic-"
"setup/reference/portlets"
msgstr ""

# 65c1223497d24852bac3a0bfbf6abef5
#: ../develop/plone/functionality/portlets.rst:584
msgid "http://plone.org/products/plone/roadmap/203"
msgstr ""

# eaef2d028c234eef99743051efd2ac6f
#: ../develop/plone/functionality/portlets.rst:587
msgid "Creating a new portlet manager"
msgstr ""

# 3df535a159f44ccbaf6fb890943e6687
#: ../develop/plone/functionality/portlets.rst:589
msgid ""
"If you need additional portlet slots at the site. In this example we use "
"``Products.ContentWellCode`` to provide us some facilities as a dependency."
msgstr ""

# 3b0b23c6bd2b4bee947448650a2605da
#: ../develop/plone/functionality/portlets.rst:593
msgid ""
"Create a viewlet which will handle portlet rendering in a normal page mode. "
"Have several portlet slots, a.k.a. wells, where you can drop in portlets. "
"Wells are rendered horizontally side-by-side and portlets going in from top "
"to bottom."
msgstr ""

# 5dfa7cf67abc4b84b98e616fb2ac428c
#: ../develop/plone/functionality/portlets.rst:598
msgid ""
"Register this viewlet in a viewlet manager where you wish to show your "
"portlets on the main template"
msgstr ""

# 1245e5daa32e4048b197a4e6d2b6dcba
#: ../develop/plone/functionality/portlets.rst:601
msgid ""
"Have a management view which allows you to shuffle portlets around. This is "
"borrowed from ``Products.ContentWellPortlets``."
msgstr ""

# c5b08462208e4226bf4a86a39a5b2dfa
#: ../develop/plone/functionality/portlets.rst:604
msgid ""
"Register portlet wells in ``portlets.xml`` - note that one management view "
"can handle several slots as in the example below"
msgstr ""

# df41f243721642e5a2dcfddee5d39dbc
#: ../develop/plone/functionality/portlets.rst:607
msgid ""
"The code skeleton works against `this Plone add-on template "
"<https://github.com/miohtama/sane_plone_addon_template>`_."
msgstr ""

# 8100be41707d411e957838820e1ed58e
#: ../develop/plone/functionality/portlets.rst:609
msgid "Example portlet manager viewlets.py::"
msgstr ""

# 41e33ef5a793456b94db5a035a548b3b
#: ../develop/plone/functionality/portlets.rst:731
msgid "Example ZCML bit"
msgstr ""

# cf80660f063e4d78af0d528b2727f8f4
#: ../develop/plone/functionality/portlets.rst:755
msgid ""
"The page template for the manager ``manage-portlets-colophon.pt`` is the "
"following"
msgstr ""

# 96940d42ee984df0ae8ae5e4d408a391
#: ../develop/plone/functionality/portlets.rst:837
msgid ""
"Then we have ``portlets-colophon.pt`` page template for the viewlet which "
"renders the portlets and related management link"
msgstr ""

# 544cff2aa8694c3382c880b186629c1c
#: ../develop/plone/functionality/portlets.rst:868
msgid ""
"Finally there is ``portlets.xml`` which lists all the portlet managers and "
"associates them with the used interface"
msgstr ""

# 2e759b755a334ad6909496dd65d6a730
#: ../develop/plone/functionality/portlets.rst:908
msgid ""
"https://weblion.psu.edu/svn/weblion/weblion/Products.ContentWellPortlets/trunk/Products/ContentWellPortlets/"
msgstr ""

# bc39d03ab6284c258cbb2424b4674eb8
#: ../develop/plone/functionality/portlets.rst:910
msgid ""
"http://stackoverflow.com/questions/9766744/dynamic-tal-provider-expressions"
msgstr ""

# 02964450ad794ab0ad55ff80c5c16be3
#: ../develop/plone/functionality/portlets.rst:913
msgid "Fixing relative links for static text portlets"
msgstr ""

# ecf9fca7fe524daaa58ee888e5695f1f
#: ../develop/plone/functionality/portlets.rst:917
msgid ""
"This should be no longer issue with Plone 4.1 and TinyMCE 1.3+ when using "
"UID links."
msgstr ""

# 8ec72d73c0e74c1b8d0b3f69c272822d
#: ../develop/plone/functionality/portlets.rst:920
msgid "Example how to convert links in all static text portlets::"
msgstr ""

# c46fc19f0b874633980ccb8e8be08991
#: ../develop/plone/functionality/portlets.rst:964
msgid "Other resources and examples"
msgstr ""

# 54b07db99aef4f449c9b8dab302dcfa7
#: ../develop/plone/functionality/portlets.rst:966
msgid ""
"`Static text portlet "
"<https://github.com/plone/plone.portlet.static/blob/master/plone/portlet/static/>`_."
msgstr ""

# 5ef4e49144c14cc881b1c96d3cc44288
#: ../develop/plone/functionality/portlets.rst:968
msgid ""
"`Templated portlet "
"<https://svn.plone.org/svn/collective/collective.easytemplate/trunk/collective/easytemplate/browser/portlets/templated.py>`_"
msgstr ""

# 1b206c794e85494c9138830e4108840b
#: ../develop/plone/functionality/rss.rst:3
msgid "RSS"
msgstr ""

# 04afafeb07484873a9d4ee2625447ba2
#: ../develop/plone/functionality/rss.rst:7
msgid "Programming RSS feeds on Plone sites"
msgstr ""

# 7a87b0c9ff664d68941328f961fcffb0
#: ../develop/plone/functionality/rss.rst:14
msgid ""
"Plone can generate RSS feeds from folderish content types (folder / "
"collection). If you want to aggregate content from all the site to RSS feed,"
" you first create a collection content item and then enable RSS feed on this"
" collection content item."
msgstr ""

# 74eec348cccc4a47b2e2f5569572bfdf
#: ../develop/plone/functionality/rss.rst:19
msgid "Creating a global, language neutral, Plone site content aggregator"
msgstr ""

# 027ded20554d425dbbb4dbcc3ce8d5f3
#: ../develop/plone/functionality/rss.rst:21
msgid ""
"These instructions tell you how to create a RSS feed collection for your "
"Plone site. You can choose what content types ends up to the RSS stream. "
"Also, the aggregator is language aware so that it works correctly on "
"multilingual sites."
msgstr ""

# 2fbc919a2a17426d9be6e4372b509246
#: ../develop/plone/functionality/rss.rst:26
msgid "Creating the collection"
msgstr ""

# d9ba708f63754dfe9e7beafa2d703ccf
#: ../develop/plone/functionality/rss.rst:27
msgid ""
"First we create a collection which will aggregate all the site content for "
"the RSS feed."
msgstr ""

# f25b0796e76b497494f397c3195722ff
#: ../develop/plone/functionality/rss.rst:30
msgid "Go to site root"
msgstr ""

# fa147f027b92462faa8fddcfe9c8955b
#: ../develop/plone/functionality/rss.rst:32
msgid "Add new collection"
msgstr ""

# 4933182de062478b926be6df99cb0588
#: ../develop/plone/functionality/rss.rst:34
msgid "Title \"Your site name - RSS feed\""
msgstr ""

# ada2de74692846bbab9914c3137fd011
#: ../develop/plone/functionality/rss.rst:36
msgid "On *Category* tab, set *Language* to neutral"
msgstr ""

# 160b2464acb94266a7d58e0c55dddbf0
#: ../develop/plone/functionality/rss.rst:38
msgid "On *Settings* tab, choose *Exclude from navigation*"
msgstr ""

# f03851bed56746788b32d13dbf379752
# d4a008d89d48422d85e368bcd28c6a9c
#: ../develop/plone/functionality/rss.rst:40
#: ../develop/plone/functionality/rss.rst:61
msgid "Save"
msgstr ""

# bcc2731efbd147588844b720695bae23
#: ../develop/plone/functionality/rss.rst:42
msgid "Go to site root / *Contents* tab"
msgstr ""

# 3e10c2dcc9f6434b9bf85a00d02519f7
#: ../develop/plone/functionality/rss.rst:44
msgid "Check your RSS content collection"
msgstr ""

# 223c50eaad274b9cb8e95ca1710b6727
#: ../develop/plone/functionality/rss.rst:46
msgid "Choose *Rename* button"
msgstr ""

# 746750a8dc0e4a8f9c453ce86d3b41d5
#: ../develop/plone/functionality/rss.rst:48
msgid "Change item id to ``site-feed``"
msgstr ""

# 8986e7cdabf1420596fa2ce9ab9a331c
#: ../develop/plone/functionality/rss.rst:51
msgid "Collecting content for the RSS feed"
msgstr ""

# 831c8e9c63104d02958df1228600af2d
#: ../develop/plone/functionality/rss.rst:53
msgid "Go to your collection content item"
msgstr ""

# c8fa8502d3084e94aa9fd263d6b2ec29
#: ../develop/plone/functionality/rss.rst:55
msgid "Go to *criteria* tab"
msgstr ""

# d7c20dd661964e8d8eccff397e2d644b
#: ../develop/plone/functionality/rss.rst:57
msgid "Set *content types* criteria"
msgstr ""

# 3a1d8c83816848e58fb4753935868e43
#: ../develop/plone/functionality/rss.rst:59
msgid "Set sort by publishing date, reverse"
msgstr ""

# cf9c10836f2b4471a2d8dac0d552ca5e
#: ../develop/plone/functionality/rss.rst:63
msgid ""
"Now, choose content items you want to appear in the feed and *Save* again"
msgstr ""

# d85a3ba73abf48cd9dc3230dcfed846b
#: ../develop/plone/functionality/rss.rst:65
msgid "You can now preview the content of RSS feed on *View* tab."
msgstr ""

# 527629c7535c41b3998a07eeb21fdd30
#: ../develop/plone/functionality/rss.rst:69
msgid "Linking the RSS feed to site action links"
msgstr ""

# bc8696772d2347a3ad2fdccc6feea985
#: ../develop/plone/functionality/rss.rst:71
msgid ""
"*Site actions* is the top right link slot on the Plone site. By default, "
"Plone site wide RSS link will appear there if enabled."
msgstr ""

# 7b71118a84174615a7cedb97393f7f08
#: ../develop/plone/functionality/rss.rst:74
msgid "Go to portal_actions in ZMI"
msgstr ""

# 2d8cba1fba924190a0d95b60cb99db53
#: ../develop/plone/functionality/rss.rst:76
msgid "Go to */portal_actions/site_actions/rss*"
msgstr ""

# 434f409484ee47ff849e99cfb498b541
#: ../develop/plone/functionality/rss.rst:78
msgid "In URL expression type::"
msgstr ""

# 2000e40761e1428d87215cfa5bdb0fc1
#: ../develop/plone/functionality/rss.rst:82
msgid "This expression will"
msgstr ""

# fc72f2c41c37404aa7d2058804d02873
#: ../develop/plone/functionality/rss.rst:84
msgid "Get URL for *site-feed* object, using *RSS* template"
msgstr ""

# 07c5f9d421274516b5b0310e620768db
#: ../develop/plone/functionality/rss.rst:86
msgid ""
"Will explicitly set HTTP GET query parameter *set_language* which can be "
"used to manually force Plone content language. We use the current language "
"(from the user cookie) here, to make sure that the user gets RSS feed in "
"correct language on multilingual sites."
msgstr ""

# cef035913e424e818b42a4cc67d3732f
#: ../develop/plone/functionality/rss.rst:90
msgid ""
"More about :doc:`expressions </develop/plone/functionality/expressions>`."
msgstr ""

# 255f298125174fe590098f91c27d0021
#: ../develop/plone/functionality/rss.rst:93
msgid "Publish and test"
msgstr ""

# 2ba04ffb320a4e1ca3df41b3838166a7
#: ../develop/plone/functionality/rss.rst:95
msgid ""
"Publish collection after the content seems to be right, using the workflow "
"menu on the collection content item."
msgstr ""

# 1e133a8d1b944963a84b3df34aa0038c
#: ../develop/plone/functionality/rss.rst:98
msgid ""
"Test RSS feed by copy-pasting RSS URL from the site action to your RSS "
"Reader, like *Google Reader*."
msgstr ""

# a1e6de15e55e46b581b3d5d61fa23d73
#: ../develop/plone/functionality/rss.rst:102
msgid "Syndication Settings"
msgstr ""

# 39fc08f1ac2f41a691fc2f98a1617d70
#: ../develop/plone/functionality/rss.rst:105
msgid "Plone <= 4.2"
msgstr ""

# ef69abf03ad9436fb389d120f15a49d7
#: ../develop/plone/functionality/rss.rst:107
msgid ""
"``portal_syndication`` is a persistent utility  managing RSS settings. It "
"provides settings to for formatting RSS feeds (frequency of updates, number "
"of items)."
msgstr ""

# 9b006fb645554b0982f22c3f3fcafb10
#: ../develop/plone/functionality/rss.rst:110
msgid ""
"https://github.com/plone/Products.CMFPlone/blob/4.2.x/Products/CMFPlone/SyndicationTool.py"
msgstr ""

# 5c6f4839c8194d78964f6c25d02777d0
#: ../develop/plone/functionality/rss.rst:113
msgid "Plone >= 4.3"
msgstr ""

# 7a7d826ceef343a8824f0f6d4017c582
#: ../develop/plone/functionality/rss.rst:115
msgid ""
"In Plone 4.3, the ``portal_syndication`` utility was replaced by a browser "
"view and registry settings."
msgstr ""

# 6b764dad032d4408bafd4f57b1b3c7f2
#: ../develop/plone/functionality/rss.rst:117
msgid ""
"The view may be traversed to from any context with ``@@syndication-util``."
msgstr ""

# 9442f1affcba4edd8ca97a1be57b0bb6
#: ../develop/plone/functionality/rss.rst:119
msgid ""
"for example, in Plone 4.2 you check for the ability to syndicate a context "
"like so:"
msgstr ""

# c325fce0373949809d65f476e4f460d4
#: ../develop/plone/functionality/rss.rst:133
msgid "In Plone 4.3, this is updated to look like this:"
msgstr ""

# a748b40917e94e2e8bb0329ce20079cc
#: ../develop/plone/functionality/rss.rst:147
msgid ""
"The ``syndication-util`` view is found in "
"``Products.CMFPlone.browser.syndication.utils``"
msgstr ""

# f547cd567aad44a485c046631ae0a806
#: ../develop/plone/functionality/rss.rst:149
msgid ""
"https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/browser/syndication/utils.py"
msgstr ""

# f82eab9ee9f741f5828087280b276313
#: ../develop/plone/functionality/rss.rst:152
msgid "Publishing content through RSS in Plone 4"
msgstr ""

# 53defc3559274d1096a6f9559162ea1d
#: ../develop/plone/functionality/rss.rst:154
msgid "Access /content/synPropertiesForm and publish."
msgstr ""

# 559fe0f6a48a4cb7848ccc950aba1031
#: ../develop/plone/functionality/rss.rst:157
msgid "RSS feed content"
msgstr ""

# 442ac9e484bc48f4bec996cc2472ad24
#: ../develop/plone/functionality/rss.rst:159
msgid ""
"RSS feed content is the content of the folder or special stream provided by "
"the content type."
msgstr ""

# 7461650599884086bf51a912378091ab
#: ../develop/plone/functionality/rss.rst:162
msgid "``portal_syndication`` uses the following logic to pull the content::"
msgstr ""

# 5e233ce733e446d587012a6e6b43c0bf
#: ../develop/plone/functionality/rss.rst:172
msgid "Changing RSS feed template"
msgstr ""

# c2651ca15a53448bb9f9581a673c5929
#: ../develop/plone/functionality/rss.rst:174
msgid ""
"RSS feed is stored in template "
"*CMFPlone/skins/plone_templates/rss_template*."
msgstr ""

# a14afc668d2841de8ed91e61dbbe0ba1
#: ../develop/plone/functionality/rss.rst:177
msgid "Enabling full body text in RSS feed"
msgstr ""

# 3d38cbd1a60c48449904de5e1610ceb4
#: ../develop/plone/functionality/rss.rst:179
msgid ""
"See `this example <http://rudd-o.com/en/linux-and-free-software/a-hack-to-"
"enable-full-text-feeds-in-plone>`_."
msgstr ""

# 2d02464cb8324ab298a7a4f2c498af38
#: ../develop/plone/functionality/sitemap.rst:3
msgid "Sitemap protocol"
msgstr ""

# 5123d984ad234470abf1dd54d427269b
#: ../develop/plone/functionality/sitemap.rst:10
msgid "Sitemap is used to submit the site content to search engines."
msgstr ""

# b310d02a802243629c7fc4e345c1ab1b
#: ../develop/plone/functionality/sitemap.rst:12
msgid "http://www.google.com/webmasters/"
msgstr ""

# 38d0f1ac91804c30a789d4270edfb2dd
#: ../develop/plone/functionality/sitemap.rst:15
msgid "Plone sitemap"
msgstr ""

# 504889fcbdf0463ca32eac3e59627c61
#: ../develop/plone/functionality/sitemap.rst:17
msgid "Plone supports basic sitemap out of the box."
msgstr ""

# c82571a24a5f45fea1f29bc9925a0b46
#: ../develop/plone/functionality/sitemap.rst:19
msgid ""
"https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/sitemap/sitemap.py"
msgstr ""

# 9c3986240d864f13a4b221d44fb47dbc
#: ../develop/plone/functionality/sitemap.rst:22
msgid "Customized sitemap"
msgstr ""

# 97ea2d3c7d9d424cbede5dacb5fc097e
#: ../develop/plone/functionality/sitemap.rst:26
msgid ""
"https://plonegomobile.googlecode.com/svn/trunk/gomobile/gomobile.mobile/gomobile/mobile/browser/sitemap.py"
msgstr ""

# b9382c3350284ea5b8eaa58c47299b76
#: ../develop/plone/functionality/sitemap.rst:29
msgid "Enabling sitemap programmatically"
msgstr ""

# 4fe8e39db3a142c0b5ea0d76d5b8145d
#: ../develop/plone/functionality/sitemap.rst:31
msgid "For unit tests::"
msgstr ""

# aec0c519077f48c2b187229eacdcd283
#: ../develop/plone/getstarted/debug_mode.rst:3
msgid "Debug mode"
msgstr ""

# b80305380235438ea19ceede8c751770
#: ../develop/plone/getstarted/debug_mode.rst:7
msgid ""
"Plone can be put in the debug mode where one can diagnose start up failures "
"and any changes to CSS, Javascript and page templates take effect "
"immediately."
msgstr ""

# 958962ab478544deba488045b551fa8a
#: ../develop/plone/getstarted/debug_mode.rst:15
msgid "By default when you start Plone you start it in a **production mode**."
msgstr ""

# f41629f9913049b09ce9eba893822a2f
#: ../develop/plone/getstarted/debug_mode.rst:17
msgid "Plone is faster"
msgstr ""

# a9569593f7634ecd8b93af798c0a4be9
#: ../develop/plone/getstarted/debug_mode.rst:19
msgid ""
"CSS and Javascript files are *merged* instead of causing multiple HTTP "
"request to load these assets. CSS and Javascript behavior is different in "
"production versus debug mode, especially with files with syntax errors "
"because of merging."
msgstr ""

# cc4da79344964d17a5edd3cbbe9e3196
#: ../develop/plone/getstarted/debug_mode.rst:23
msgid "Plone does not reload changed files from the disk"
msgstr ""

# 976888bef03e4b90b3130108580dc1d6
#: ../develop/plone/getstarted/debug_mode.rst:25
msgid ""
"Because of above optimizations the development against a production mode is "
"not feasible. Instead you need to start Plone in debug mode (also known as "
"development mode) if you are doing any site development."
msgstr ""

# a3b4cd97260c46749cb62fed58754a4e
#: ../develop/plone/getstarted/debug_mode.rst:29
msgid "In **debug mode**"
msgstr ""

# 930a260fad064d698a72d34ce7e2a90c
#: ../develop/plone/getstarted/debug_mode.rst:31
msgid ""
"If Plone start-up fails, the Python traceback of the error is printed in the"
" terminal"
msgstr ""

# da1be70fa836494893b339aba6db85a7
#: ../develop/plone/getstarted/debug_mode.rst:33
msgid ""
"All logs and debug messages are printed in the terminal; Zope process does "
"not detach from the terminal"
msgstr ""

# 1197c442fda74851971f1e9a89146aeb
#: ../develop/plone/getstarted/debug_mode.rst:36
msgid "Plone is slower"
msgstr ""

# 28410e10e8224087bdab233a503936e8
#: ../develop/plone/getstarted/debug_mode.rst:38
msgid ""
"CSS and Javascript files are read file-by-file so line numbers match on the "
"actual files on the disk. (*portal_css* and *portal_javascript* is set to "
"debug mode when Plone is started in debug mode)"
msgstr ""

# 54ed6f09c31543eab86946ea95acf8f9
#: ../develop/plone/getstarted/debug_mode.rst:41
msgid "Plone reloads CSS, Javascript and .pt files when the page is refreshed"
msgstr ""

# 43db6cd3d90b4686a88dd284234f63c2
#: ../develop/plone/getstarted/debug_mode.rst:45
msgid "Plone does not reload .py or .zcml files in the debug mode by default."
msgstr ""

# 7465fe8db4914132800927fb1108c284
#: ../develop/plone/getstarted/debug_mode.rst:48
msgid "Reloading Python code"
msgstr ""

# 3e63c82523a743528e78cfde0e419860
#: ../develop/plone/getstarted/debug_mode.rst:50
msgid ""
"Reloading Python code automatically can be enabled with `sauna.reload add-on"
" <https://pypi.python.org/pypi/sauna.reload/>`_."
msgstr ""

# 55a273b1f61040f7bb8334fb16f46482
#: ../develop/plone/getstarted/debug_mode.rst:53
msgid "Javascript and CSS issues with production mode"
msgstr ""

# 272ef676122e45b89d4672025fe2f49c
#: ../develop/plone/getstarted/debug_mode.rst:55
msgid ""
"See **portal_css** and **portal_javascript** in ZMI to inspect how your "
"scripts are bundled."
msgstr ""

# ef3aa0564b344d27937d443ef099ec3b
#: ../develop/plone/getstarted/debug_mode.rst:57
msgid ""
"Make sure your Javascript and CSS files are valid, mergeable and "
"compressable. If they are not then you can tweak the settings for individual"
" file in the corresponding management tool."
msgstr ""

# 0e8fb4e8543d424cbbf307789dab4540
#: ../develop/plone/getstarted/debug_mode.rst:62
msgid "Refresh issues"
msgstr ""

# c8724e5d53ab43b08f897556422f25b3
#: ../develop/plone/getstarted/debug_mode.rst:64
msgid ""
"Plone **production mode** should re-read CSS and Javascript files on Plone "
"start-up."
msgstr ""

# 859e1513c06e4dca8da9507692a97549
#: ../develop/plone/getstarted/debug_mode.rst:66
msgid "Possible things to debug and force refresh of static assets"
msgstr ""

# 9668f87ab670416ebcdf000e545f1d6e
#: ../develop/plone/getstarted/debug_mode.rst:68
msgid "Check HTML <head> links and the actual file contents"
msgstr ""

# 8491dca4e6444a0eacb8ca6f173f182b
#: ../develop/plone/getstarted/debug_mode.rst:70
msgid "Go to *portal_css*, press *Save* to force CSS rebundling"
msgstr ""

# fb92e8607d514ba18fb4584784767561
#: ../develop/plone/getstarted/debug_mode.rst:72
msgid ""
"Make sure you are not using *plone.app.caching* and doing caching forever"
msgstr ""

# 2b96415360aa4f2c97dc009447ba03fb
#: ../develop/plone/getstarted/debug_mode.rst:73
msgid ""
"Use `hard browser refresh <http://support.mozilla.org/en-"
"US/questions/746138>`_ to override local cache"
msgstr ""

# 900f362c43fd4cfd99e8aa7a3196be08
#: ../develop/plone/getstarted/debug_mode.rst:78
msgid "Starting Plone in debug mode on Microsoft Windows"
msgstr ""

# 55dcf599992642649c1528f202e4d04f
#: ../develop/plone/getstarted/debug_mode.rst:80
msgid ""
"This document explains how to start and run the latest Plone (Plone 4.1.4) "
"on Windows 7. This document explains post-installer steps on how to start "
"and enter into a Plone site. Installation"
msgstr ""

# 03d99e4dba3442399d4ff2fd071fcc5c
# 2125e03f59ce4d369b3a8ffbd7be4e6a
# 68543f80982942669acc90fe9d27321e
#: ../develop/plone/getstarted/debug_mode.rst:84
#: ../develop/plone/i18n/translating_content.rst:502
#: ../develop/plone/i18n/translating_content.rst:683
msgid "Installation"
msgstr ""

# 151e311304cd4b2f89482527c4d79f72
#: ../develop/plone/getstarted/debug_mode.rst:85
msgid ""
"This quick start has been tested on Windows 7.  Installation remains the "
"same on older versions of Windows through WinXP."
msgstr ""

# e5040ab5fa53446499494846f6b6fd20
#: ../develop/plone/getstarted/debug_mode.rst:87
msgid ""
"Run installer from `Plone.org <http://plone.org/products>`_ download page"
msgstr ""

# c906e69e7e394a8aaa5e9e4701e21789
#: ../develop/plone/getstarted/debug_mode.rst:89
msgid "The Plone buildout directory will be installed in C:\\\\Plone41"
msgstr ""

# 7ed7fe8917254b16b5ab119c5a9a161f
#: ../develop/plone/getstarted/debug_mode.rst:91
msgid ""
"The installer will launch your Plone instance when it finishes.  To connect,"
" direct your browser to: http://127.0.0.1:8080"
msgstr ""

# fadcc468f77a40adaa2dedde02476765
#: ../develop/plone/getstarted/debug_mode.rst:94
msgid ""
"In the buildout bin directory you'll find the executable files to control "
"Plone instance."
msgstr ""

# de0ee00d51304394aa6a01bb28853dcb
#: ../develop/plone/getstarted/debug_mode.rst:98
msgid "Starting and Stopping Plone"
msgstr ""

# 95855843a1df49b8abfaafbda40d0c98
#: ../develop/plone/getstarted/debug_mode.rst:100
msgid ""
"If your Plone instance is shutdown you can start and control it from the "
"command prompt."
msgstr ""

# ab9ef14cb3f2437196e0bbb72690efc2
#: ../develop/plone/getstarted/debug_mode.rst:103
msgid ""
"To control Plone you need to execute your command prompt as an "
"administrator."
msgstr ""

# 9a04ae93382745f28498f6c6292174f2
#: ../develop/plone/getstarted/debug_mode.rst:105
msgid ""
"In the command prompt enter the following command to access your buildout "
"directory (the varies according to Plone version)::"
msgstr ""

# 04c98ccd2f53435898d5a4ea74830f7e
#: ../develop/plone/getstarted/debug_mode.rst:111
msgid "To start Plone in debug mode type::"
msgstr ""

# a1d081928a554e72a87d05c2c18e0196
#: ../develop/plone/getstarted/debug_mode.rst:115
msgid ""
"You can interrupt the instance by pressing CTRL-C. This will also take down "
"the Zope application server and your Plone site."
msgstr ""

# a8a87ffb35e0448f9019ad41f7ccb2ca
#: ../develop/plone/getstarted/debug_mode.rst:118
msgid "Accessing Plone"
msgstr ""

# 7f87825dbdfc4b56aa88785217fe70cd
#: ../develop/plone/getstarted/debug_mode.rst:120
msgid ""
"When you launch Plone in debug or daemon mode it will take a few moments to "
"launch.  If you are in debug mode, Plone will be ready serve pages when the "
"following line is displayed in your command prompt::"
msgstr ""

# 42da1b5280eb4fc98f2fdb3d1f336e9a
#: ../develop/plone/getstarted/debug_mode.rst:124
msgid ""
"When the instance is running and listing to port 8080, point your browser to"
" address on your local computer::"
msgstr ""

# 137488ca09f94c77a0a746b51b23f81c
#: ../develop/plone/getstarted/debug_mode.rst:128
msgid ""
"The Plone welcome screen will load and you can create your first Plone site "
"directly by clicking the **Create a new Plone Site** button."
msgstr ""

# b79bdfae92384c8cbec6b5278cb4b69c
#: ../develop/plone/getstarted/debug_mode.rst:130
msgid ""
"A form will load asking for the *Path Identifier* (aka the site id) and "
"*Title* for a new Plone site.  It will also allow you to select the main "
"site language, and select any add-on products you wish to install with the "
"site."
msgstr ""

# 154da9987d464beaadd09b40e90594f2
#: ../develop/plone/getstarted/debug_mode.rst:133
msgid ""
"These entries can all be modified once the site is created.  Changing the "
"site id is possible, but not recommended."
msgstr ""

# d9a0ee2d677343458a8791a26a8ff0f5
#: ../develop/plone/getstarted/debug_mode.rst:135
msgid ""
"To create your site, fill in this form and click the *Create Plone Site* "
"button.  Plone will then create and load your site."
msgstr ""

# 8ecbf18129864abf94bf62c8e21f55ad
#: ../develop/plone/getstarted/debug_mode.rst:138
msgid ""
"The url of your local Plone instance will end with the site id you set when "
"setting up your site.  If the site id were *Plone* then the resultant URL "
"is: *http://127.0.0.1:8080/Plone*."
msgstr ""

# 4180851a9480498eabd6abb2f27ccad3
#: ../develop/plone/getstarted/debug_mode.rst:140
msgid ""
"Congratulations! You should be now logged in as an admin to your new Plone "
"instance and you'll see the front page of Plone."
msgstr ""

# 40eaaa7686ac449e88beac399f37a30e
#: ../develop/plone/getstarted/debug_mode.rst:144
msgid "Starting Plone in debug mode on UNIX"
msgstr ""

# 4b4c2d6bfd064be4a4e719004898995d
#: ../develop/plone/getstarted/debug_mode.rst:147
msgid "Single instance installation (\"zope\")"
msgstr ""

# d09f52507a31478b9379dc0836d0c1b3
#: ../develop/plone/getstarted/debug_mode.rst:149
msgid ""
"Enter to your installation folder using ``cd`` command (depends on where you"
" have installed Plone)::"
msgstr ""

# 45c1ff1f39694008af684eba8e8c8764
#: ../develop/plone/getstarted/debug_mode.rst:153
msgid "For root installation the default location is ``/usr/local/Plone``."
msgstr ""

# 4fcc877b2544467fa4c70c1cc480d867
#: ../develop/plone/getstarted/debug_mode.rst:155
msgid "Type in command::"
msgstr ""

# 0188e0b1d11046b2a73e75d96a9440dd
#: ../develop/plone/getstarted/debug_mode.rst:159
msgid "Press CTRL+C to stop."
msgstr ""

# 9315f363482d4f11937b0d61ad134909
#: ../develop/plone/getstarted/debug_mode.rst:162
msgid "Clustered installation (\"zeo\")"
msgstr ""

# 619ab0d14ca3436596cdd2bab919fc02
#: ../develop/plone/getstarted/debug_mode.rst:164
msgid ""
"If you have ZEO cluster mode installation you can start individual processes"
" in debug mode::"
msgstr ""

# cb5cea126ea846af8b19a76be57883a5
#: ../develop/plone/getstarted/debug_mode.rst:173
msgid "Determining programmatically whether Zope is in debug mode"
msgstr ""

# 15fd1373dc1042b484d41cb334375249
#: ../develop/plone/getstarted/debug_mode.rst:175
msgid ""
"Zope2's shared global data *Globals*, keeps track on whether Zope2 is "
"started in debug mode or not.::"
msgstr ""

# aaba6c7d6f474cd99c826af3db327a45
#: ../develop/plone/getstarted/debug_mode.rst:183
msgid ""
"There is a difference between Zope being in debug mode and the Javascript "
"and CSS resource registries being in debug mode (although they will "
"automatically be set to debug mode if you start Zope in debug mode)."
msgstr ""

# 744e93d345f543129c4e46227c88c573
#: ../develop/plone/getstarted/index.rst:3
msgid "Getting started"
msgstr ""

# 5e7c3853ad3a47a8ac7403771c38d709
#: ../develop/plone/getstarted/index.rst:5
msgid "How to get started with Plone development."
msgstr ""

# 132d852113904f9d86fb62b106ea1ac3
#: ../develop/plone/getstarted/index.rst:12
msgid ""
"Plone is developed in the :doc:`Python </develop/plone/getstarted/python>` "
"programming language. :doc:`You should master Python basics "
"</develop/plone/getstarted/python>` before you can efficiently customize "
"Plone. If you are very new to Python, Plone or software development, it is "
"suggested that you read the `Professional Plone 4 Development book "
"<http://www.packtpub.com/professional-plone-4-development/book>`_ before you"
" attempt to develop your own solutions."
msgstr ""

# 1ac0166c85834d38b6c59a16e8451883
#: ../develop/plone/getstarted/index.rst:18
msgid ""
"If you quickly want to learn about current best-practices in developing with"
" Plone you should also work through the `Todo list application tutorial "
"<http://tutorialtodoapp.readthedocs.org/en/latest/index.html>`_."
msgstr ""

# f950c3b6916e4fa79ee4a11a7169c4df
#: ../develop/plone/getstarted/index.rst:21
msgid ""
"Plone runs on the top of the `Zope 2 application server <zope2.zope.org/>`_,"
" meaning that one Zope 2 server process can contain and host several Plone "
"sites. Plone also uses Zope 3 components. Zope 3 is not an upgrade for Zope "
"2, but a separate project."
msgstr ""

# 2d2db81416944f9080bf90f60e7765ff
#: ../develop/plone/getstarted/index.rst:25
msgid ""
"Internally, Plone uses the objected-oriented :doc:`ZODB "
"</develop/plone/persistency/index>` database and the development mindset "
"greatly differs from that of SQL based systems. SQL backends can still be "
"integrated with Plone, like for any other Python application, but this is a "
"more advanced topic."
msgstr ""

# 88e7c063ab15487abce16ed55f8066c5
#: ../develop/plone/getstarted/index.rst:30
msgid "Installing Plone"
msgstr ""

# 33fd9a8cb2f345df91290a3f06df1dbc
#: ../develop/plone/getstarted/index.rst:32
msgid ""
"It is recommended that you do Plone development on Linux or OS X. "
"Development on Windows is possible, but you need to have much more "
"experience dealing with Python and Windows related problems, so starting on "
"Windows is not so easy."
msgstr ""

# 0f66270343f543e6b58b596a891bc2d0
#: ../develop/plone/getstarted/index.rst:36
msgid ""
"See :doc:`installation instructions </manage/installing/installation>` for "
"how to create a Plone installation suitable for development."
msgstr ""

# c3f27faae8fe449b97826c1c0a6ca7ca
#: ../develop/plone/getstarted/index.rst:40
msgid "Non-programming approaches for customizing Plone"
msgstr ""

# 39a16b1150ec4034af6003a3accf5bd0
#: ../develop/plone/getstarted/index.rst:42
msgid ""
"If you lack programming skill or resources, you can still get some things "
"done in Plone:"
msgstr ""

# 6d1516fae04d48238a72b0a7bbe521a1
#: ../develop/plone/getstarted/index.rst:44
msgid ""
"`Plomino is a a powerful and flexible web-based application builder for "
"Plone <http://www.plomino.net>`_"
msgstr ""

# 0ceb90af6e3f461abd47f79c7db6ebed
#: ../develop/plone/getstarted/index.rst:46
msgid ""
"`PloneFormGen allows you to build forms in a web browser "
"<http://plone.org/products/ploneformgen>`_"
msgstr ""

# 8c244dfdebc8451da3c84ecb143c1e4e
#: ../develop/plone/getstarted/index.rst:48
msgid "Plone 4+ comes with through-the-web Dexterity content type editor"
msgstr ""

# 8f153f489002464786bb22e42f0d503b
#: ../develop/plone/getstarted/index.rst:50
msgid ""
"However, for heavy customization, Python, JavaScript, TAL page templates and"
" CSS programming is needed."
msgstr ""

# 8613b765666048b5a6dd5487c93f127f
#: ../develop/plone/getstarted/index.rst:53
msgid "Enabling debug mode"
msgstr ""

# a439226544df4d67b62fb524b8d7a51f
#: ../develop/plone/getstarted/index.rst:55
msgid ""
"By default, Plone runs in a *production mode* where changed files in the "
"file system are not reflected in the served HTML. When you start developing "
"Plone you need to first :doc:`put it into a debug mode "
"</develop/plone/getstarted/debug_mode>`."
msgstr ""

# 48c347435a8d4254b716cc920137ccfd
#: ../develop/plone/getstarted/index.rst:60
msgid "Plone add-ons as Python packages"
msgstr ""

# dacb04debadd42a6a061bc4bf58a1aa4
#: ../develop/plone/getstarted/index.rst:62
msgid ""
"Plone sites can be customized by installing *Plone add-ons*, which add or "
"customize functionality. You can install existing add-ons that others have "
"developed or you can develop and install your own add-ons. Add-ons are "
"developed and distributed as `Python packages "
"<http://packages.python.org/distribute/setuptools.html>`_. Many open-source "
"Python packages, including Plone add-ons, are available from `PyPI (the "
"Python Package index) <https://pypi.python.org>`_."
msgstr ""

# 690829dab7674b1b8567bff62ddb103f
#: ../develop/plone/getstarted/index.rst:68
msgid ""
"Plone uses a tool called `Buildout <http://www.buildout.org/>`_ to manage "
"the set of Python packages that are part of your Plone installation. Using "
"Buildout involves using the ``buildout.cfg`` configuration file and the "
"``bin/buildout`` command."
msgstr ""

# c2df620fe2544b04abee014dc3386c21
#: ../develop/plone/getstarted/index.rst:74
msgid ""
"In prior versions of Plone and Zope, add-ons were referred to as "
"\"products\" and they were installed by copying them into a special folder "
"called ``products``. This method is now deprecated in favor of using "
"standard Python packages, managed by Buildout."
msgstr ""

# 24cd314095014f07a17b06498fed8e75
#: ../develop/plone/getstarted/index.rst:80
msgid "Finding and installing add-on packages"
msgstr ""

# f96c00603f5b4015b6bebbaf5553608a
#: ../develop/plone/getstarted/index.rst:82
msgid ""
"Plone add-ons can be found at the `plone.org Products "
"<http://plone.org/products>`_ page or at the  `PyPI (the Python Package "
"index) <https://pypi.python.org>`_."
msgstr ""

# ef8173c84a3742e4982f0dcd9151bd64
#: ../develop/plone/getstarted/index.rst:86
msgid ""
"See the :doc:`Installing add-on packages using buildout "
"</manage/installing/installing_addons>` section for more details."
msgstr ""

# 051e50e0aaf74b7687a35edc4edd4bbd
#: ../develop/plone/getstarted/index.rst:91
msgid "Creating your first add-on"
msgstr ""

# 3e221d02a23c4dd28928a528a9f2c152
#: ../develop/plone/getstarted/index.rst:93
msgid ""
"Since Python egg package structure is little bit complex, to get started "
"with your first add-on you can create a code skeleton (scaffold) for it "
"using :doc:`Plone ZopeSkel code templates </develop/addons/paste>`."
msgstr ""

# cf334665034f479889c78ba7fe5d3636
#: ../develop/plone/getstarted/index.rst:96
msgid ""
"ZopeSkel generates a basic Python egg package with some Plone files in-"
"place."
msgstr ""

# c7804b82de8342a395231d8cc766f4de
#: ../develop/plone/getstarted/index.rst:98
msgid ""
"This package is registered to buildout as a development egg in the "
"``buildout.cfg`` file."
msgstr ""

# 0776a5cfbc12447ebf061738240ae9df
#: ../develop/plone/getstarted/index.rst:100
msgid ""
"Buildout is rerun which regenerates your ``bin/instance`` script with the "
"new set of Python eggs."
msgstr ""

# fd18ef2121aa4982aefc0122d4bfa013
#: ../develop/plone/getstarted/index.rst:102
msgid "You start your Plone instance in debug mode."
msgstr ""

# dcccc90cb6624acd86510df9c794baba
#: ../develop/plone/getstarted/index.rst:104
msgid "You install your add-on through ``Add/remove add-ons``"
msgstr ""

# 3fb785af1e70436791f8d83b98857b78
#: ../develop/plone/getstarted/index.rst:108
msgid ""
"There are different scaffolds for different kind of add-ons. The most "
"typically used are ``plone3_theme``, ``archetype`` (create Archetypes "
"content), ``dexterity`` (create Dexterity content) and ``plone`` (barebone "
"Plone add-on)."
msgstr ""

# f4d2d15b24844fe09a31a1008277dc91
#: ../develop/plone/getstarted/index.rst:112
msgid ""
"Please read how to use :doc:`ZopeSkel to bootstrap your first add-on "
"</develop/addons/paste>`."
msgstr ""

# 9805e8a9f6fe41e084a936d53e57ac9c
#: ../develop/plone/getstarted/index.rst:114
msgid ""
"If you want to create a package with Dexterity content types please read "
"about :doc:`Setting up a Dexterity "
"project</external/plone.app.dexterity/docs/prerequisite>`."
msgstr ""

# c2b875a4562446038d2cc47eabcd750f
#: ../develop/plone/getstarted/index.rst:117
msgid "Plone development workflow"
msgstr ""

# 15e52d509de54ee882c24c75e98c45bb
#: ../develop/plone/getstarted/index.rst:119
msgid ""
"You never edit Plone files directly. Everything under ``parts`` and ``eggs``"
" folders in your Plone installation is downloaded from the Internet and "
"dynamically generated by Buildout, based on ``buildout.cfg``. Buildout is "
"free to override these files on any update."
msgstr ""

# c33a028aabed4c86b53f031d0d8817ee
#: ../develop/plone/getstarted/index.rst:123
msgid ""
"You need to have your own add-on in the ``src/`` folder as created above. "
"There you overlay changes to the existing Plone core through extension "
"mechanisms provided by Plone:"
msgstr ""

# e6cc00a913a94ad8a7bac87619670939
#: ../develop/plone/getstarted/index.rst:126
msgid ":doc:`Layers </develop/plone/views/layers>`"
msgstr ""

# f6cfc4c2ae404267bfdbcb34feac38b9
#: ../develop/plone/getstarted/index.rst:128
msgid ":doc:`Adapters </develop/addons/components/adapters>`"
msgstr ""

# 333e7540e83a44cca41cc51f0f011435
#: ../develop/plone/getstarted/index.rst:130
msgid ":doc:`Installation profiles </develop/addons/components/genericsetup>`"
msgstr ""

# 4ce86433ac27497c8d3404314dac57e9
#: ../develop/plone/getstarted/index.rst:132
msgid ""
"Plone development always happens on your local computer or the development "
"server. The changes are moved to production through version control system "
"like Git or Subversion."
msgstr ""

# a1bf97d1829a4836bb59f507af017d1e
#: ../develop/plone/getstarted/index.rst:135
msgid ""
"**The best practice is that you install Plone on your local computer for "
"development**."
msgstr ""

# 90a21b53f52242f7be0d9d3c56461c83
#: ../develop/plone/getstarted/index.rst:138
msgid "Plone add-on features"
msgstr ""

# 9d7acb53c7ea45f9a02d1c722682c5b2
#: ../develop/plone/getstarted/index.rst:140
msgid "Plone add-ons usually:"
msgstr ""

# 74c4bd0c55244dbe9d3e7a1fdc5b69f6
#: ../develop/plone/getstarted/index.rst:142
msgid ""
"Create custom :doc:`content types </develop/plone/content/index>` or extend "
"existing ones for your specialized need. Plone has two subsystems for "
"<content types: :doc:`Dexterity (new) </develop/plone/content/dexterity>` "
"and :doc:`Archetypes (old) </develop/plone/content/archetypes/index>`."
msgstr ""

# 40dd41dbd580469cb214c9a8e7e1cd42
#: ../develop/plone/getstarted/index.rst:145
msgid ""
"Add new :doc:`views </develop/plone/views/browserviews>` for your site and "
"its content."
msgstr ""

# b0a7df9aa3934e20808becdd5a89f575
#: ../develop/plone/getstarted/index.rst:147
msgid ""
"Create Python-processed :doc:`forms </develop/plone/forms/index>` on your "
"site."
msgstr ""

# 865dd1c43b0b4d35ba3b0b6042e4ce98
#: ../develop/plone/getstarted/index.rst:149
msgid "Theme your site"
msgstr ""

# d345a991633c485fa5fd454c81df26b2
#: ../develop/plone/getstarted/index.rst:153
msgid ""
"A lot of Plone functionality is built on :doc:`Zope 3 development patterns "
"</develop/addons/components/index>` like adapters and interfaces. These "
"design patterns take some time to learn, but they are crucial in complex "
"component based software like Plone."
msgstr ""

# 76d25a4291c649f5bb0e53a21c0b2cc1
#: ../develop/plone/getstarted/index.rst:159
msgid "Development mode restarts"
msgstr ""

# bc202031b4594dbd9c089afef1d8897c
#: ../develop/plone/getstarted/index.rst:161
msgid ""
"Plone must be started in the development mode using ``bin/instance fg`` "
"command. Then"
msgstr ""

# e6c48f19a73d4e88a26ac530cf6029ec
#: ../develop/plone/getstarted/index.rst:163
msgid ""
"Javascript files are in debug mode and automatically loaded when you hit "
"refresh"
msgstr ""

# da73972cb48948c584cc4d4a857da9d9
#: ../develop/plone/getstarted/index.rst:165
msgid ""
"CSS files are in debug mode and automatically loaded when you hit refresh"
msgstr ""

# b06eacef9c32488296dc95d5efc2bf52
#: ../develop/plone/getstarted/index.rst:167
msgid ""
"TAL page templates (.pt files) are automatically reloaded on every request"
msgstr ""

# 589fda46df994845b35e1daa713ad961
#: ../develop/plone/getstarted/index.rst:169
msgid ""
":doc:`GenericSetup XML files are reloaded "
"</develop/addons/components/genericsetup>`"
msgstr ""

# 1145b486d00d4b2c9fb2648b7eba53d3
#: ../develop/plone/getstarted/index.rst:171
msgid ""
"Please note that Plone development mode does not reload ``.py`` or ``.zcml``"
" files by default. This is possible, however.  Use the `sauna.reload "
"<https://pypi.python.org/pypi/sauna.reload/>`_ package to make Plone reload "
"your Python code automatically when it is changed."
msgstr ""

# a4967f1e18c347ff9a7ec867c8b8f495
#: ../develop/plone/getstarted/index.rst:176
msgid "Through-the-web customizations"
msgstr ""

# 7b991a12948a49019c51065192f0f9fa
#: ../develop/plone/getstarted/index.rst:178
msgid ""
"Some aspects of Plone can be changed through the Zope Management Interface "
"(ZMI). Documentation here does not focus on extending functionality through "
"the ZMI because this method is severely limited and usually can take you "
"only half way there."
msgstr ""

# 791b3cb926cf4d50ae1bec60f1645ed5
#: ../develop/plone/getstarted/index.rst:185
msgid ""
"We have a :doc:`tutorial </develop/addons/helloworld/index>` introducing the"
" basics of Plone development."
msgstr ""

# fd86a4f0386f45eb8522356a35cc7e81
#: ../develop/plone/getstarted/index.rst:187
msgid ""
"The tutorial covers a basic form, a custom content-type, and a dynamic view."
" It also has detailed sections on building a development environment, "
"installing Plone, and creating an add-on package for your development code."
msgstr ""

# 3ec797ca657f4c1081d55bc9c9c938a0
#: ../develop/plone/getstarted/index.rst:192
msgid "Plone resources"
msgstr ""

# ace3a360791a43f2b5c77f15e5826d69
#: ../develop/plone/getstarted/index.rst:194
msgid ""
"`Plone Trac <http://dev.plone.org/plone>`_ contains bug reports, Plone "
"source code and commits. Useful when you encounter a new exception or you "
"are looking for a reference on how to use the API."
msgstr ""

# 0f9389eac71941a6abf928400e374552
#: ../develop/plone/getstarted/index.rst:198
msgid ""
"`Plone source code in version control system <https://github.com/plone>`_."
msgstr ""

# cdd913c9753148f5860f591cc963c326
#: ../develop/plone/getstarted/index.rst:200
msgid "`Plone API (in development) <http://ploneapi.readthedocs.org/>`_."
msgstr ""

# a5e9316216f648ab8833dd138b37e2e4
#: ../develop/plone/getstarted/index.rst:204
msgid "Zope resources"
msgstr ""

# f3a4d7a435d0411287a41b0c1c2ab78a
#: ../develop/plone/getstarted/index.rst:206
msgid "`Zope source code in version control system <http://svn.zope.org/>`_."
msgstr ""

# 4856a68cd659409384a3d83d0e8dc359
#: ../develop/plone/getstarted/index.rst:208
msgid ""
"`Zope 2 book <http://docs.zope.org/zope2/zope2book/>`_. This describes old "
"Zope 2 technologies. The book is mostly good for explaining some old things,"
" but '''do not''' use it as a reference for building new things."
msgstr ""

# 29f58e3445f4405ca6a3e618f16521f6
#: ../develop/plone/getstarted/index.rst:212
msgid ""
"The chapters on Zope Page Templates however are still the best reference on "
"the topic."
msgstr ""

# e011eb8015ef426da1db9c9fa6bb589b
#: ../develop/plone/getstarted/index.rst:216
msgid "Python resources"
msgstr ""

# 1b0f5cafa3c44fd1875b7ade3b93896b
#: ../develop/plone/getstarted/index.rst:224
msgid "Debug mode explained"
msgstr ""

# 8265fbc4b16a42a1900b456b635aae7e
#: ../develop/plone/getstarted/python.rst:3
msgid "Python for beginners"
msgstr ""

# 341ca9c619b845d6b139ded9b9ee4afb
#: ../develop/plone/getstarted/python.rst:7
msgid ""
"The basics of Python programming, and performing Python interpreter "
"installations."
msgstr ""

# af641d1a5a49405195094818f58fffd4
#: ../develop/plone/getstarted/python.rst:12
msgid ""
"`Python <http://python.org>`_ is the programming language used by `Plone "
"<http://plone.org>`_ and `Zope <http://zope.org>`_. One needs to have at "
"least basic Python experience before considering building Plone add-ons or "
"customizations."
msgstr ""

# 5e2eb2809a154598a38d2b5b9d42c320
#: ../develop/plone/getstarted/python.rst:18
msgid ""
"You should not try to write programs for Plone before you can program Python"
" on the basic level."
msgstr ""

# c66a31c1a090400683fb29ef8e175473
#: ../develop/plone/getstarted/python.rst:21
msgid "Python tutorials and online classes"
msgstr ""

# cd7773b5dbac4afbb5584f480929e6c0
#: ../develop/plone/getstarted/python.rst:23
msgid "`Official Python tutorial <http://docs.python.org/tutorial/>`_"
msgstr ""

# 211cc34000024b899df2576e69df58b3
#: ../develop/plone/getstarted/python.rst:25
msgid ""
"`Google Python classes <http://code.google.com/edu/languages/google-python-"
"class/>`_"
msgstr ""

# 35e55f5347ea4ae5a4fd078b4beabf42
#: ../develop/plone/getstarted/python.rst:27
msgid "`Free Python books <http://pythonbooks.revolunet.com/>`_"
msgstr ""

# cfa66325e673418ea5a751c7d158754c
#: ../develop/plone/getstarted/python.rst:29
msgid ""
"`Dive into Python book <http://www.diveintopython.net/toc/index.html>`_"
msgstr ""

# fb43ea4c063346ad8aeab68898f9d29e
#: ../develop/plone/getstarted/python.rst:31
msgid ""
"`Python at codeacademy.org <http://www.codecademy.com/#!/exercises/0>`_"
msgstr ""

# 0ae87a8f48fd4ddf92cded39821c7de4
#: ../develop/plone/i18n/cache.rst:3
msgid "Internationalization and cache"
msgstr ""

# 752f0acf68a347f29419cf08e5981ed7
#: ../develop/plone/i18n/cache.rst:7
msgid "Using Plone translation facilities in the presence of caching."
msgstr ""

# 3af142dc8acc47f396765dfbaae6bf87
#: ../develop/plone/i18n/cache.rst:14
msgid ""
"You need to have the following monkey-patch in place if you intend to use "
"LinguaPlone (translated content) with front-end caching servers. Otherwise "
"CSS, JS and media files will have a language cookie set on them, preventing "
"cache from working."
msgstr ""

# f9f431d8f71242558d577ecd59de676e
#: ../develop/plone/i18n/cache.rst:21
msgid "This is a well-known Plone issue."
msgstr ""

# 559b953d53334610bb5de437a4ee3490
#: ../develop/plone/i18n/cache.rst:48
msgid ""
"http://stackoverflow.com/questions/5715216/why-plone-3-sets-language-cookie-"
"to-css-js-registry-files-and-how-to-get-rid-of"
msgstr ""

# b4a334508a5f4606857d8fd148a5aed6
#: ../develop/plone/i18n/contribute_to_translations.rst:3
msgid "How to contribute to Plone core translations"
msgstr ""

# 6c6841b49dd34855b100b24b17bcdabd
#: ../develop/plone/i18n/contribute_to_translations.rst:7
msgid "How to contribute to the Plone translations."
msgstr ""

# 732decf7236f487e802239290923ed1f
#: ../develop/plone/i18n/contribute_to_translations.rst:14
msgid ""
"You need to have write access to "
"https://github.com/collective/plone.app.locales to be able to commit your "
"translation directly. You can also update a po file online and make a pull "
"request."
msgstr ""

# 9c6a38641b5c4555909a39568294aaff
#: ../develop/plone/i18n/contribute_to_translations.rst:21
msgid "Updating translations for Plone 4.2"
msgstr ""

# 6e820b80be3b4c92afe00ea396d8afdb
#: ../develop/plone/i18n/contribute_to_translations.rst:23
msgid "To do."
msgstr ""

# 467ec90ad82b4aa486c455321b134401
#: ../develop/plone/i18n/contribute_to_translations.rst:27
msgid "Updating translations for Plone 4.3"
msgstr ""

# dc3206119be04179b9f25d9a4a89a9d5
#: ../develop/plone/i18n/contribute_to_translations.rst:29
msgid ""
"If you want to test your latest translation with unreleased packages "
"containing i18n fixes for Plone 4, get the buildout like this:"
msgstr ""

# 5d38cf32abcd443583f969a5f35f251d
#: ../develop/plone/i18n/contribute_to_translations.rst:42
msgid "To update the buildout later:"
msgstr ""

# 3267326d09c24b5087f8daf8cc540f9f
#: ../develop/plone/i18n/contribute_to_translations.rst:49
msgid "To update your translation, you can go there:"
msgstr ""

# e9bf7501416d4eb78678f8219084cae6
#: ../develop/plone/i18n/contribute_to_translations.rst:55
msgid "Here you have the following directories:"
msgstr ""

# 1f6113bdb8914f22a6d043c4acb24d66
#: ../develop/plone/i18n/contribute_to_translations.rst:57
msgid "``locales`` used for core Plone translations."
msgstr ""

# 1f4b9d59168649448402b4c349bd3f23
#: ../develop/plone/i18n/contribute_to_translations.rst:58
msgid "``locales-addons`` used for some addons packages."
msgstr ""

# ae9aa5d4684445ab9e2b784cba9db5d3
#: ../develop/plone/i18n/contribute_to_translations.rst:59
msgid ""
"``locales-future`` used for Plone 5 packages. The po files can change really"
" often. The translations will normally be merged to the locales directory "
"when Plone 5 will be released. This directory is not included in "
"``plone.app.locales`` 4.x releases. For developers: if you want to add a "
"Plone 5 package to this directory, you can add it to the ``plone5`` variable"
" in ``experimental/i18n.cfg``, don't forget to add a line in ``[sources]`` "
"if it's missing."
msgstr ""

# 0e79f423b0bd4a2195b0211fafb1ec4e
#: ../develop/plone/i18n/contribute_to_translations.rst:67
msgid ""
"Open the po file with poedit, kbabel or any other i18n tool. For example for"
" French:"
msgstr ""

# 004b1fad0b1849d0ae859519b5093f3b
#: ../develop/plone/i18n/contribute_to_translations.rst:74
msgid ""
"Please do a ``git pull`` before editing a po file to be sure you have the "
"latest version."
msgstr ""

# 7ffed374ec844d11801772e7e88bdaea
#: ../develop/plone/i18n/contribute_to_translations.rst:78
msgid "Committing directly (commit access)"
msgstr ""

# 34d1c698868d49918bda9e4b03dd920c
#: ../develop/plone/i18n/contribute_to_translations.rst:80
msgid "You can commit your translation from this locales directory:"
msgstr ""

# 9557d92c92944ebc9f5b0789fc409d28
#: ../develop/plone/i18n/contribute_to_translations.rst:89
msgid "Creating a pull request (no commit access)"
msgstr ""

# 38b4762853ac4e57a03057546decd8c5
#: ../develop/plone/i18n/contribute_to_translations.rst:91
msgid ""
"If you do not have commit access on Github `collective group "
"<https://github.com/collective>`_. you can do the following:"
msgstr ""

# fd8d772707a841499d1a028ac8692885
#: ../develop/plone/i18n/contribute_to_translations.rst:94
msgid ""
"Login to Github. Go to Github `plone.app.locales "
"<https://github.com/collective/plone.app.locales>`_"
msgstr ""

# 0e4af8d3dae34871a12caff85020c091
#: ../develop/plone/i18n/contribute_to_translations.rst:96
msgid ""
"Press *Fork*. Now Github creates a copy of ``plone.app.locales`` package for"
" you."
msgstr ""

# ce723b54058e481d81e397dbd3a750e4
#: ../develop/plone/i18n/contribute_to_translations.rst:98
msgid ""
"Then on your computer in ``plone.app.locales`` do a special git push to your"
" own repository::"
msgstr ""

# 9f88b3d7b71741ac93088d746fb81bd1
#: ../develop/plone/i18n/contribute_to_translations.rst:102
msgid "Go to Github ``https://github.com/YOURUSERNAME/plone.app.locales``"
msgstr ""

# 8781e520b1dd4cc0abb4ca2bd97ee3ad
#: ../develop/plone/i18n/contribute_to_translations.rst:104
msgid "Press button *Create Pull request*. Fill it in."
msgstr ""

# f639dc7b5d2b4d38b904c81dedeaff78
#: ../develop/plone/i18n/contribute_to_translations.rst:106
msgid ""
"The request will appear for *plone.app.locales* authors. If it does not get "
"merged in timely manner, poke people on the #plone IRC channel or the "
"mailing list below (sometimes requests go unnoticed)."
msgstr ""

# 812f263d9ae84af594a41d0c5e1edda9
#: ../develop/plone/i18n/contribute_to_translations.rst:111
msgid "Support"
msgstr ""

# 0ea9ea927ec743fb91dbf08db35579b1
#: ../develop/plone/i18n/contribute_to_translations.rst:113
msgid ""
"Please ask questions on the `plone-i18n mailing-list "
"<http://plone.org/support/forums/i18n>`_."
msgstr ""

# 9074ec561c6c44b6a3348f4416de7a15
#: ../develop/plone/i18n/contribute_to_translations.rst:117
msgid "Statistics for Plone 4"
msgstr ""

# 184fc7605d604391a1b3445607f29494
#: ../develop/plone/i18n/contribute_to_translations.rst:119
msgid "http://www.transifex.net/projects/p/Plone/"
msgstr ""

# 5e55aab35e2747b6903ae39e08252666
#: ../develop/plone/i18n/index.rst:3
msgid "Internationalization (i18n)"
msgstr ""

# 65a5a1d978614b5e9e2515840ef100bb
#: ../develop/plone/i18n/index.rst:5
msgid ""
"There are several layers involved in the processes that provide "
"internationalization capabilities to Plone. Basically they are divided in "
"the ones responsible to translate the user interface and the display of the "
"localization particularities (dates, etc):"
msgstr ""

# b3d55b5a8b0246ab94caa7627deee232
#: ../develop/plone/i18n/index.rst:10
msgid ""
"Translating user interface text strings by using term:`gettext`, like the "
"`zope.i18n`_ and `zope.i18nmessageid`_ packages."
msgstr ""

# 68c6dd462d36487c8b298076cb6b5eb7
#: ../develop/plone/i18n/index.rst:13
msgid ""
"Adapting locale-specific settings (such as the time format) for the site, "
"like the `plone.i18n`_ package."
msgstr ""

# 74b509b120cb4a619dc7ae53197addd1
#: ../develop/plone/i18n/index.rst:16
msgid ""
"And the ones responsible for translating the user generated content. There "
"are several add-on products that provides multilingual support to Plone:"
msgstr ""

# 43b20f4ca46e43cba454f074c1335acb
#: ../develop/plone/i18n/index.rst:19
msgid "`Products.LinguaPlone`_ (Archetypes content types based only)"
msgstr ""

# b4baa850b89a4897b91a703f58528e85
#: ../develop/plone/i18n/index.rst:21
msgid ""
"`plone.app.multilingual`_ (Archetypes and Dexterity content types, requires "
"at least Plone 4.1)"
msgstr ""

# 974b57d5f6be4f9fa73bda940531d64a
#: ../develop/plone/i18n/index.rst:31
msgid "Contents"
msgstr ""

# 068da1e08ecb49ffa69d6db4050a9159
#: ../develop/plone/i18n/internationalisation.rst:3
msgid "Translating text strings"
msgstr ""

# c64fefe50dff42cc80f52dee2c31d73f
#: ../develop/plone/i18n/internationalisation.rst:7
msgid ""
"Translating Python and TAL template source code text strings using the "
"term:`gettext` framework and other Plone/Zope term:`i18n` facilities."
msgstr ""

# b95cebb6d41d4eec8658fd97ac71942d
#: ../develop/plone/i18n/internationalisation.rst:15
msgid ""
"Internationalization is a process to make your code locale- and language-"
"aware.  Usually this means supplying translation files for text strings used"
" in the code."
msgstr ""

# 7bd7cd369d5440948e26661f379b2946
#: ../develop/plone/i18n/internationalisation.rst:19
msgid ""
"Plone internally uses the UNIX standard term:`gettext` tool to perform "
"term:`i18n`."
msgstr ""

# fcaea2bda6864e4eb151ed04ac04fbd3
#: ../develop/plone/i18n/internationalisation.rst:22
msgid ""
"There are two separate gettext systems. Both use the :term:`.po` file format"
" to describe translations."
msgstr ""

# 531b9b3ac6ed47d19248979fe05dc66b
#: ../develop/plone/i18n/internationalisation.rst:25
msgid ""
"Note that this chapter concerns only *code-level* translations. *Content* "
"translations are managed by the `Products.LinguaPlone`_ add-on product."
msgstr ""

# 8f0cf42f09b045b482c047045944af89
#: ../develop/plone/i18n/internationalisation.rst:29
msgid "`zope.i18n`_"
msgstr ""

# 6a89827403394935a0382b692f678080
#: ../develop/plone/i18n/internationalisation.rst:31
msgid "Follows term:`gettext` best practices"
msgstr ""

# f05d6df8217444ce8e841ed8fcdfb012
#: ../develop/plone/i18n/internationalisation.rst:33
msgid ""
"Translations are stored in the ``locales`` folder of your application. "
"Example: ``locales/fi/LC_MESSAGES/your.app.po``"
msgstr ""

# 1d3224da835346439efe66b8573361af
#: ../develop/plone/i18n/internationalisation.rst:36
msgid ""
"Has `zope.i18nmessageid`_ package, which provides a string-like class which "
"allows storing the translation domain with translatable text strings easily."
msgstr ""

# 9df28b28d424456792a5da6ffc58d421
#: ../develop/plone/i18n/internationalisation.rst:40
msgid ""
"``.po`` files must usually be manually converted to ``.mo`` binary files "
"every time the translations are updated.  See :term:`i18ndude`. (It is also "
"possible to set an environment variable to trigger recompilation of ``.mo`` "
"files; see below.)"
msgstr ""

# 59ad18708d284e61894c4bd9b486227c
#: ../develop/plone/i18n/internationalisation.rst:45
msgid ""
"Plone (at least 3.3) uses only filename and path to search for the "
"translation files. Information in the ``.po`` file headers is ignored."
msgstr ""

# acad1f70511f4958a7687edfe60f09ce
#: ../develop/plone/i18n/internationalisation.rst:50
msgid "Generating a ``.pot`` template file for your package(s)"
msgstr ""

# a107a781a4f54db39989c2afdb87ffd7
#: ../develop/plone/i18n/internationalisation.rst:52
msgid ""
"`infrae.i18nextract`_ can be used in your buildout to create a script which "
"searches particular packages for translation strings. This can be "
"particularly useful for creating a single *translations* package which "
"contains the translations for the set of packages which make up your "
"application."
msgstr ""

# e450ccea1ab041c1a2a2276eba728700
#: ../develop/plone/i18n/internationalisation.rst:58
msgid "Add the following to your ``buildout.cfg``:"
msgstr ""

# e3cb2e2f67224e2a8a55f88ac9627c4e
#: ../develop/plone/i18n/internationalisation.rst:71
msgid ""
"Running the ``./bin/translation-extract`` script will produce a ``.pot`` "
"file in the specified output directory which can then be used to create the "
"``.po`` files for each translation:"
msgstr ""

# 2d1f99f5ecca4805848d81c444550e54
#: ../develop/plone/i18n/internationalisation.rst:79
msgid ""
"The ``locales`` directory should contain a directory for each language, and "
"a directory called ``LC_MESSAGES`` within each of these, followed by the "
"corresponding ``.po`` files containing the translation strings:"
msgstr ""

# b1fbc982f9f4421bb0a8835bd5c4885f
#: ../develop/plone/i18n/internationalisation.rst:91
msgid "Marking translatable strings in Python"
msgstr ""

# c9518312ca224b0a81f1c0c8fa149019
#: ../develop/plone/i18n/internationalisation.rst:93
msgid ""
"Each module declares its own ``MessageFactory`` which is a callable and "
"marks strings with translation domain.  ``MessageFactory`` is declared in "
"the main ``__init__.py`` file of your package."
msgstr ""

# 953943c3007046949b40fa1ecebe7caf
#: ../develop/plone/i18n/internationalisation.rst:104
msgid "You also need to have the following ZCML entry:"
msgstr ""

# 4974629debbf4ca68f2c16516c36df58
#: ../develop/plone/i18n/internationalisation.rst:112
msgid ""
"After the setup above you can use message factory to mark strings with "
"translation domains.  ``i18ndude`` translation utilities use underscore "
"``_`` to mark translatable strings (term:`gettext` message ids). Message ids"
" must be unicode strings."
msgstr ""

# 3e3162c14c6d401aad967af9b5875eab
#: ../develop/plone/i18n/internationalisation.rst:122
msgid "The object will still look like a string::"
msgstr ""

# 9a623af7d26a4e9596eb397f4d2d0186
#: ../develop/plone/i18n/internationalisation.rst:127
msgid "But in reality it is a ``zope.i18nmessageid.message.Message`` object::"
msgstr ""

# c9dd0c16917c449097ecf9f05ad29381
#: ../develop/plone/i18n/internationalisation.rst:135
msgid "To see the translation::"
msgstr ""

# 1fac193e38b14222b98e9cd4695f34eb
# b7c98a97d6814d50b4e422a0a38409c2
#: ../develop/plone/i18n/internationalisation.rst:143
#: ../develop/plone/i18n/internationalisation.rst:711
msgid ""
"http://grok.zope.org/documentation/how-to/how-to-internationalize-your-"
"application"
msgstr ""

# ab0f59389e124adaaed2bd2fa82bee3c
#: ../develop/plone/i18n/internationalisation.rst:146
msgid "Marking translatable strings in TAL page templates"
msgstr ""

# e526a1a496004165aea3c95d98419e74
#: ../develop/plone/i18n/internationalisation.rst:148
msgid ""
"Declare XML namespace ``i18n`` and translation domain at the beginning of "
"your template, at the first element"
msgstr ""

# 2ed1d7257d0b4719b62300bc24f7276f
#: ../develop/plone/i18n/internationalisation.rst:154
msgid ""
"Translate element content text using ``i18n:translate=\"\"``. It will use "
"the text content of the element as msgid."
msgstr ""

# b84cb6fa97fb4b86aacd7ed945f07634
#: ../develop/plone/i18n/internationalisation.rst:163
msgid "Use attributes i18n:translate, i18n:attributes and so on"
msgstr ""

# 4ca6dbd5e04f4230af3d544a5de18a09
#: ../develop/plone/i18n/internationalisation.rst:165
msgid "For examples look any core Plone .pt files"
msgstr ""

# a5ebefc85edd408b8b6dcd3302b6db94
#: ../develop/plone/i18n/internationalisation.rst:168
msgid "Automatically translated message ids"
msgstr ""

# e8b7b3d7463d46cfb85de9b33a547850
#: ../develop/plone/i18n/internationalisation.rst:170
msgid ""
"Plone will automatically perform translation for message ids which are "
"output in page templates."
msgstr ""

# 8df9b826a5d14bdfbe3ad26bca866495
#: ../develop/plone/i18n/internationalisation.rst:173
msgid ""
"The following code would translate ``my_translateable_text`` to the native "
"language activated for the current page."
msgstr ""

# f9cfc401e2f74d4a9bbb7bec3b956220
#: ../develop/plone/i18n/internationalisation.rst:180
msgid ""
"Since ``my_translateable_text`` is a ``zope.i18nmessageid.message.Message`` "
"instance containing its own gettext domain information, the ``i18n:domain`` "
"attribute in page templates does not affect message ids declared through "
"message factories."
msgstr ""

# b8165495ecbb4430a0c9c07822c0b0ad
#: ../develop/plone/i18n/internationalisation.rst:187
msgid "Manually translated message ids"
msgstr ""

# e5a6ae0d39fb4ea796d0ee32f19e74fc
#: ../develop/plone/i18n/internationalisation.rst:189
msgid ""
"If you need to manipulate translated text outside page templates, you need "
"to perform the final translation manually."
msgstr ""

# 5bdede521c4646cab6216687f54bb84d
#: ../develop/plone/i18n/internationalisation.rst:192
msgid ""
"Translation always needs context (i.e. under which site the translation "
"happens), as the active language and other preferences are read from the "
"HTTP request object and site object settings."
msgstr ""

# f570e34917374b3f857117cc73601018
#: ../develop/plone/i18n/internationalisation.rst:196
msgid ""
"Translation can be performed using the ``context.translate()`` method::"
msgstr ""

# b7c249ebc743440c99406b5bf29ac2fb
#: ../develop/plone/i18n/internationalisation.rst:206
msgid ""
"``context.translate()`` uses the ``translate.py`` Python script from "
"``LanguageTool``."
msgstr ""

# 90e08c3e6b2747318a69af101c1b46bb
#: ../develop/plone/i18n/internationalisation.rst:209
msgid "It has the signature::"
msgstr ""

# cb0648534c524943ac96f52789b5c454
#: ../develop/plone/i18n/internationalisation.rst:214
msgid "and does the trick::"
msgstr ""

# 198dee2c9f5349edb58a13f99afad9eb
#: ../develop/plone/i18n/internationalisation.rst:231
msgid ""
"Translation needs HTTP request object and thus may not work correctly from "
"command-line scripts."
msgstr ""

# 14bb2af3725d4cf491bc91eebe823460
#: ../develop/plone/i18n/internationalisation.rst:236
msgid "Non-python message ids"
msgstr ""

# 754a52d8584746a1acfeb5459ae0264d
#: ../develop/plone/i18n/internationalisation.rst:238
msgid ""
"There are also other message id markers in code outside the Python domain, "
"that have their own mechanisms:"
msgstr ""

# 9262708b8cb24ee3b6169c77341ec0b7
#: ../develop/plone/i18n/internationalisation.rst:241
msgid "ZCML entries"
msgstr ""

# 036a607ed5ce4dad8f2b3a60c6332103
#: ../develop/plone/i18n/internationalisation.rst:242
msgid "GenericSetup XML"
msgstr ""

# 1cfe33d65d414a9780c0bdda956de1e1
#: ../develop/plone/i18n/internationalisation.rst:243
msgid "TAL page templates"
msgstr ""

# fdff0622b1534c068cc90c6c1455f492
#: ../develop/plone/i18n/internationalisation.rst:247
msgid "Translating browser view names"
msgstr ""

# 73f994449c11475988e9e82cab65fe7a
#: ../develop/plone/i18n/internationalisation.rst:249
msgid ""
"Often you might want to translate browser view names, so that the "
"\"Display\" contentmenu shows something more human readable than, for "
"example, \"my_awesome_view\"."
msgstr ""

# 3a239c9085204aad8bde42386b617e0f
#: ../develop/plone/i18n/internationalisation.rst:253
msgid "These are the steps needed to get it translated:"
msgstr ""

# b98eb27847e94248aafa58e24c9be140
#: ../develop/plone/i18n/internationalisation.rst:255
msgid ""
"Use the \"plone\" domain for your browser view name translations. Wether put"
" the whole ZCML in the plone domain of just the view definitions with "
"i18n:domain=\"plone\"."
msgstr ""

# 1f834f2649fe4d869b2bb3cdb046c474
#: ../develop/plone/i18n/internationalisation.rst:259
msgid ""
"The msgids for the views are their names. Translate them in a plone.po "
"override file in your locales folder."
msgstr ""

# aaec3bf3e78644c090941addf55cb7b9
#: ../develop/plone/i18n/internationalisation.rst:262
msgid ""
"Please note, i18ndude does not parse the zcml files for translation strings "
"(see below \"Translating other ZCML\")."
msgstr ""

# 5812e4cef5914411aa37611a47efe534
#: ../develop/plone/i18n/internationalisation.rst:267
msgid "Translating other ZCML"
msgstr ""

# fa0bd97ac0844245ac50fcc7ac1b0176
#: ../develop/plone/i18n/internationalisation.rst:269
msgid ""
"http://stackoverflow.com/questions/6899708/do-zcml-files-get-parsed-i18n-"
"wise"
msgstr ""

# 7e161cdaa02a4238b54e8b7e1feb33b4
#: ../develop/plone/i18n/internationalisation.rst:273
msgid "Testing translations"
msgstr ""

# 6ad97438860f4e1bb56ef0c70f2c8751
#: ../develop/plone/i18n/internationalisation.rst:275
msgid ""
"Here is a simple way to check if your gettext domains are correctly loaded."
msgstr ""

# 0a5d9a81ffd74e14b6080be5f241f81c
#: ../develop/plone/i18n/internationalisation.rst:280
msgid ""
"You can start the Plone debug shell and manually check if translations can "
"be performed."
msgstr ""

# d103f7e4804a471ba21bafbf48ae53c0
#: ../develop/plone/i18n/internationalisation.rst:283
msgid "First start Plone in debug shell:"
msgstr ""

# a4d1f173f8a544988974afa2b6d8b092
#: ../develop/plone/i18n/internationalisation.rst:289
msgid "and then call translation service, in your site, manually::"
msgstr ""

# ea0dd774e23b417d9d95831026b6b71b
#: ../develop/plone/i18n/internationalisation.rst:299
msgid ""
"You can find ``PlacelessTranslationService`` in the :term:`ZMI` root/control"
" panel (not site root)."
msgstr ""

# 8ca6d14232f143a5b19afc08023212b7
#: ../develop/plone/i18n/internationalisation.rst:303
msgid "Translation string substitution"
msgstr ""

# ba3df7a2bca748ce8d2b6dfae792f547
#: ../develop/plone/i18n/internationalisation.rst:305
msgid ""
"*Translation string substitutions* must be used when the final translated "
"message contains *variable strings*."
msgstr ""

# 2106f94e836345c5899b74bbb73fb644
#: ../develop/plone/i18n/internationalisation.rst:308
msgid ""
"Plone content classes inherit the ``translate()`` function which can be used"
" to get the final translated string.  It will use the currently activate "
"language.  Translation domain will be taken from the msgid object itself, "
"which is a string-like ``zope.i18nmessageid`` instance."
msgstr ""

# 075612a45db244a5b207cb9fb1302c9f
#: ../develop/plone/i18n/internationalisation.rst:313
msgid ""
"Message ids are immutable (read-only) objects so you need to always create a"
" new message id if you use different variable substitution mappings."
msgstr ""

# 2e148999b02547c39fca73ed46df587f
# b901da5437224b1abfaf107740ebc0b9
#: ../develop/plone/i18n/internationalisation.rst:316
#: ../develop/plone/images/content.rst:309
msgid "Python code::"
msgstr ""

# cdbc4fdc8c6d47c29d4e83c35724698e
#: ../develop/plone/i18n/internationalisation.rst:333
msgid "Corresponding ``.po`` file entry::"
msgstr ""

# ae2940fa3a9b4ce2ad90819d349b5dfd
#: ../develop/plone/i18n/internationalisation.rst:343
msgid "http://wiki.zope.org/zope3/TurningMessageIDsIntoRocks"
msgstr ""

# 4470598aeb6e4325a380800f18029af2
#: ../develop/plone/i18n/internationalisation.rst:346
msgid "PlacelessTranslationService"
msgstr ""

# bf8844c742724e4d856763112660d3e3
#: ../develop/plone/i18n/internationalisation.rst:348
msgid "Historic, being phased out."
msgstr ""

# 9778cc876eb14eee80bd91f15a24278c
#: ../develop/plone/i18n/internationalisation.rst:350
msgid "Stores ``.po`` files in ``i18n`` folder of your add-on product."
msgstr ""

# add54ffaf76b474cb7c4ea2ed5167c09
#: ../develop/plone/i18n/internationalisation.rst:352
msgid "Used for main \"plone\" translation catalog (until Plone 3.3.x)"
msgstr ""

# ab8ea73a0780446d85e9d5ffdde39797
#: ../develop/plone/i18n/internationalisation.rst:354
msgid ""
"Translation files are processed when Plone is restarted. Example: ``i18n"
"/yourapp-fi.po``."
msgstr ""

# 4b6a2f557a204365a1ae82d865bcb88f
#: ../develop/plone/i18n/internationalisation.rst:358
msgid "i18ndude"
msgstr ""

# 8ad8cc8066444edb84c7b05d04d669fa
#: ../develop/plone/i18n/internationalisation.rst:360
msgid ""
":term:`i18ndude` is a developer-oriented command-line utility to manage "
"``.po`` and ``.mo`` files."
msgstr ""

# 7f0f908a178948518c975df0cd6c68a2
#: ../develop/plone/i18n/internationalisation.rst:363
msgid ""
"Usually you build our own shell script wrapper around ``i18ndude`` to "
"automate generation of ``.mo`` files of your product ``.po`` files."
msgstr ""

# d61684a7e45d4a51b2b6b330c511086c
#: ../develop/plone/i18n/internationalisation.rst:368
msgid ""
"Plone 3.3 and onwards do not need manual ``.po`` -> ``.mo`` compilation. It "
"is done on start up. Plone 4 has a special switch for this: in your "
"``buildout.cfg`` in the part using ``plone.recipe.zope2instance`` you can "
"set an environment variable for this::"
msgstr ""

# 93088102ed6b44bfa70d109640cd9ca5
#: ../develop/plone/i18n/internationalisation.rst:377
msgid ""
"Note that the value does not matter: the code in ``zope.i18n`` simply looks "
"for the existence of the variable and does not care what its value is."
msgstr ""

# a477e50fb0fa44d489148ae6597b6cf3
#: ../develop/plone/i18n/internationalisation.rst:381
msgid ""
"If you use i18ndude make sure to use ``_`` as an alias for your "
"``MessageFactory`` else i18ndude won't find your message strings in python "
"code and report that \"no entries for domain\" were found."
msgstr ""

# 89d114370a6b49138c96e391a89137c7
# 2eb80b47c61e43509ea072729917c4b9
#: ../develop/plone/i18n/internationalisation.rst:387
#: ../develop/plone/i18n/internationalisation.rst:717
msgid ""
"http://vincentfretin.ecreall.com/articles/my-translation-doesnt-show-up-in-"
"plone-4"
msgstr ""

# 24510aeadba0430ba06eae73617281b9
#: ../develop/plone/i18n/internationalisation.rst:391
msgid "`i18ndude Python package <https://pypi.python.org/pypi/i18ndude>`_"
msgstr ""

# 9385711929d14c24ac2f3417fe0b2485
#: ../develop/plone/i18n/internationalisation.rst:393
msgid ""
"`i18ndude example for Plone 3.0 and later "
"<http://maurits.vanrees.org/weblog/archive/2007/09/i18n-locales-and-"
"plone-3.0>`_"
msgstr ""

# e78eef01d79d4c749d06960e09af69f0
#: ../develop/plone/i18n/internationalisation.rst:395
msgid ""
"`i18ndude example for Plone 2.5 "
"<http://blogs.ingeniweb.com/blogs/user/7/tag/i18ndude/>`_"
msgstr ""

# afd5c2df857e48c982a1b09c2af01156
#: ../develop/plone/i18n/internationalisation.rst:398
msgid "Installing i18ndude"
msgstr ""

# 8817232c656d4673ba9e257e9815cb06
#: ../develop/plone/i18n/internationalisation.rst:400
msgid ""
"The recommended method is to have term:`i18ndude` installed via your "
"`buildout <http://www.buildout.org/docs/index.html>`_."
msgstr ""

# 1613c3278a7f46cb9d6ce9d1e0359614
#: ../develop/plone/i18n/internationalisation.rst:403
msgid "Add the following to your buildout.cfg:"
msgstr ""

# 5c7d968a83d34c82b409f92694969dff
#: ../develop/plone/i18n/internationalisation.rst:416
msgid "After this ``i18ndude`` is available in your ``buildout/bin`` folder"
msgstr ""

# 4da5c909c5904cb4a03ddba23988ccf9
#: ../develop/plone/i18n/internationalisation.rst:418
msgid "For **Plone 3** you might need to add:"
msgstr ""

# a55d8e4b23384e8bbc7f268f9acaa6c1
#: ../develop/plone/i18n/internationalisation.rst:432
msgid "You can also call it relative to your current package source folder"
msgstr ""

# 80bf19cdfea84aaf9159500821ea3b34
#: ../develop/plone/i18n/internationalisation.rst:441
msgid ""
"Do not ``easy_install i18ndude``. ``i18ndude`` depends on various Zope "
"packages and pulling them to your system-wide Python configuration could be "
"dangerous, due to potential conflicts with corresponding, but different "
"versions, of the same packages used with Plone."
msgstr ""

# ee0f375ce8ec48d4aa459a9a181ec0aa
#: ../develop/plone/i18n/internationalisation.rst:448
msgid ""
"http://markmail.org/message/gru5oaxdl452ekh6#query:+page:1+mid:m22a2ap4xwtwogs5+state:results"
msgstr ""

# 38671bfa87ec4e73afb74bd828d3b5e7
#: ../develop/plone/i18n/internationalisation.rst:452
msgid "Setting up folder structure for Finnish and English"
msgstr ""

# 0ce760af269445de98a83c313acbd2e4
#: ../develop/plone/i18n/internationalisation.rst:465
msgid "Creating ``.pot`` base file"
msgstr ""

# fa2d7723846c4ef9af182b06da39493a
#: ../develop/plone/i18n/internationalisation.rst:475
msgid "Manual ``.po`` entries"
msgstr ""

# 27bdb2404f6e4de081fdd93ff80bc24a
#: ../develop/plone/i18n/internationalisation.rst:477
msgid ""
"``i18ndude`` scans source ``.py`` and ``.pt`` files for translatable text "
"strings.  On some occasions this is not enough - for example if you "
"dynamically generate message ids in your code. Entries which cannot be "
"detected by automatic code scan are called *manual po entries*. They are "
"managed in ``locales/manual.pot`` which is merged to generated "
"``locales/yournamespace.app.pot`` file."
msgstr ""

# 99b4e81f4b69464687ee2dbd402c096d
#: ../develop/plone/i18n/internationalisation.rst:484
msgid "Here is a sample ``manual.pot`` file::"
msgstr ""

# 4ada6b55945346a3b62df1e911fde76d
#: ../develop/plone/i18n/internationalisation.rst:503
msgid "Managing ``.po`` files"
msgstr ""

# 9ffe4e9b507f40418ef843c349228749
#: ../develop/plone/i18n/internationalisation.rst:505
msgid ""
"Example shell script to manage i18n files. Change ``CATALOGNAME`` to reflect"
" the actual package of your product:"
msgstr ""

# a5a7184ff27c40aab6c8a44c7b1bbc22
#: ../develop/plone/i18n/internationalisation.rst:508
msgid "The script will:"
msgstr ""

# ec93cd9249b94d45a9d8b910ab350d4f
#: ../develop/plone/i18n/internationalisation.rst:510
msgid ""
"pick up all changes to i18n strings in code and reflect them back to the "
"translation catalog of each language;"
msgstr ""

# 3bcd6e306a5246cc829094846ca6eab4
#: ../develop/plone/i18n/internationalisation.rst:513
msgid ""
"pick up changes in ``manual.pot`` file and reflect them back to the "
"translation catalog of each language."
msgstr ""

# 00ea948b5fe0446a907d3f1fc2ae0646
#: ../develop/plone/i18n/internationalisation.rst:601
msgid ""
"Remember to register the ``locales`` directory in ``configure.zcml`` for "
"automatic ``.mo`` compilation as instructed above."
msgstr ""

# f793bde1be8d4cf8936c3543f83ca93f
#: ../develop/plone/i18n/internationalisation.rst:606
msgid ""
"http://plataforma.cenditel.gob.ve/browser/proyectosInstitucionales/eGov/ppm/trunk/rebuild_i18n"
msgstr ""

# 9e09afad35ae434abdd91bfebe8af5c2
#: ../develop/plone/i18n/internationalisation.rst:608
msgid ""
"http://encolpe.wordpress.com/2008/04/28/manage-your-internationalization-"
"with-i18ndude/"
msgstr ""

# 4ebab756881a4adc87bd816e3f7d998f
#: ../develop/plone/i18n/internationalisation.rst:611
msgid "Distributing compiled translations"
msgstr ""

# 1766b84c83eb4cc6926e24bc0645b9af
#: ../develop/plone/i18n/internationalisation.rst:613
msgid "The rule for compiled .mo files is that"
msgstr ""

# e40eb13b948842289a9a80fffc7af1d4
#: ../develop/plone/i18n/internationalisation.rst:615
msgid ""
"Source code repositories (SVN, Git) must not contain compiled .mo files"
msgstr ""

# 0a6f4edc25e64d18a70d0f2754553eaa
#: ../develop/plone/i18n/internationalisation.rst:617
msgid "Released eggs on PyPi, however, **must** contain compiled .mo files"
msgstr ""

# ef0fac85cfcc43e7b17d3865ec3f8dbe
#: ../develop/plone/i18n/internationalisation.rst:619
msgid ""
"The easiest way to manage this is to use `zest.releaser "
"<https://pypi.python.org/pypi/zest.releaser>`_ tool together with "
"`zest.pocompile package <https://pypi.python.org/pypi/zest.pocompile>`_ to "
"release your eggs."
msgstr ""

# d72252421c784bf78472e89b486875cb
#: ../develop/plone/i18n/internationalisation.rst:624
msgid "Dynamic content"
msgstr ""

# fa43532520974937be6c3d6e4c55e34c
#: ../develop/plone/i18n/internationalisation.rst:626
msgid "If your HTML template contains dynamic content such as"
msgstr ""

# c93ebb4bd44340e6b97d6411380e9280
#: ../develop/plone/i18n/internationalisation.rst:632
msgid "it will produce ``.po`` entry::"
msgstr ""

# 690cc7c0a839407796c34b7f001e0892
#: ../develop/plone/i18n/internationalisation.rst:636
msgid "You need to give the name to the dynamic part"
msgstr ""

# 288f460c250645b787369c6c40114f00
#: ../develop/plone/i18n/internationalisation.rst:645
msgid "... and then you can refer the dynamic part by a name::"
msgstr ""

# c6e9213f5b2c4faa90a16bee6a915849
#: ../develop/plone/i18n/internationalisation.rst:655
msgid "http://dev.plone.org/plone/changeset/35219"
msgstr ""

# f47ee13425fd48f49fe6d5f2fdfc08e2
#: ../develop/plone/i18n/internationalisation.rst:657
msgid ""
"http://permalink.gmane.org/gmane.comp.web.zope.plone.collective.cvs/111531"
msgstr ""

# d80b324be4ce41c892db61d621a7965f
#: ../develop/plone/i18n/internationalisation.rst:660
msgid "Overriding translations"
msgstr ""

# 6c9258a31d084ae0959a8fba1c51ee9a
#: ../develop/plone/i18n/internationalisation.rst:662
msgid ""
"If you need to change a translation from a ``.po`` file, you could create a "
"new python package and register your own ``.po`` files."
msgstr ""

# 13b365a8698e444291a8b6b5e3275e92
#: ../develop/plone/i18n/internationalisation.rst:665
msgid ""
"To do this, create the package and add a ``locales`` directory in there, "
"along the lines of what `plone.app.locales`_ does. Then you can add your own"
" translations in the language that you need; for example "
"``locales/fr/LC_MESSAGES/plone.po`` to override French messages in the "
"``plone`` domain."
msgstr ""

# ce81fe6459ec4784951c76dbf307a16e
#: ../develop/plone/i18n/internationalisation.rst:671
msgid "Reference the translation in ``configure.zcml`` of your package:"
msgstr ""

# 6db2f92eea074f0a992dc5209454359b
#: ../develop/plone/i18n/internationalisation.rst:680
msgid ""
"Your ZCML needs to be included *before* the one from `plone.app.locales`_: "
"the first translation of a msgid wins. To manage this, you can include the "
"ZCML in the buildout:"
msgstr ""

# 9c4ba83cafd847adae1a89ab6a17a1e6
#: ../develop/plone/i18n/internationalisation.rst:700
msgid ""
"See the *Overriding Translations* section of Maurits van Rees's `blog entry "
"on Plone i18n <http://maurits.vanrees.org/weblog/archive/2010/10/i18n-"
"plone-4>`_, and Vincent Fretin's `posting "
"<http://article.gmane.org/gmane.comp.web.zope.plone.user/109580>`_ on the "
"Plone-Users mailing list."
msgstr ""

# cdee645c7e524964b7658f36c80000a4
# 31a13a2699c44d94b471690788db9e7e
# a589de1d80df4140831fcdab5040acd7
# d13fb309e2a5488db23108b881277c01
# 48c7e664c9dc470fbc8e9f1685af9eea
#: ../develop/plone/i18n/internationalisation.rst:709
#: ../develop/plone/i18n/language.rst:452
#: ../develop/plone/misc/normalizing_ids.rst:95
#: ../develop/plone/searching_and_indexing/indexing.rst:624
#: ../develop/plone/security/local_roles.rst:180
msgid "Other"
msgstr ""

# 879ecbf4fbea4a87b9880021d94adf2a
# 1123ee3c63be44f29233cea984e952da
#: ../develop/plone/i18n/internationalisation.rst:713
#: ../develop/plone/i18n/language.rst:454
msgid ""
"http://reinout.vanrees.org/weblog/2007/12/14/translating-schemata-names.html"
msgstr ""

# ad1ca0a42d634162bf56caea0c19de46
# 501fc3b96a1a410b8b437c0930df6c71
#: ../develop/plone/i18n/internationalisation.rst:715
#: ../develop/plone/i18n/language.rst:460
msgid ""
"http://plone.org/products/archgenxml/documentation/how-to/handling-i18n-"
"translation-files-with-archgenxml-and-i18ndude/view?searchterm="
msgstr ""

# 018b177c5c8d42498a515b436aa7c400
#: ../develop/plone/i18n/internationalisation.rst:719
msgid "http://dev.plone.org/plone/ticket/9089"
msgstr ""

# 1c760b4884d6427fa608181c97936563
#: ../develop/plone/i18n/language.rst:3
msgid "Language functions"
msgstr ""

# 259fe976707e43b8afa8f27becdf9d10
#: ../develop/plone/i18n/language.rst:7
msgid "Accessing and changing the language state of Plone programmatically."
msgstr ""

# 2f59fb90ba3d4b9caf8c91ea98bff6f1
#: ../develop/plone/i18n/language.rst:14
msgid "Each page view has a language associated with it."
msgstr ""

# 7ce90c9a6d344bc480a5575a79a2f490
#: ../develop/plone/i18n/language.rst:16
msgid ""
"The active language is negotiated by the ``plone.i18n.negotiator`` module. "
"Several factors may be involved in determining what the language should be:"
msgstr ""

# 5c2dfe6286834d129fcdc3d320553315
#: ../develop/plone/i18n/language.rst:19
msgid "Cookies (setting from the language selector)"
msgstr ""

# b15c4186f1cf401c840cee1da9278cf6
#: ../develop/plone/i18n/language.rst:21
msgid ""
"The top-level domain name (e.g. ``.fi`` for Finnish, ``.se`` for Swedish)"
msgstr ""

# 3a00f3835c1e489e8c6556f8bc8348d1
#: ../develop/plone/i18n/language.rst:23
msgid "Context (current content) language"
msgstr ""

# 3dd5848b2196417f9af11bbe41ce6024
#: ../develop/plone/i18n/language.rst:25
msgid "Browser language headers"
msgstr ""

# bc30ab2b771d40b3823168bffdd2e9c5
#: ../develop/plone/i18n/language.rst:27
msgid "Language is negotiated at the beginning of the page view."
msgstr ""

# 40bca7994ac7491a9b3ea4256ca670cd
#: ../develop/plone/i18n/language.rst:29
msgid ""
"Languages are managed by `portal_languagetool "
"<https://github.com/plone/Products.PloneLanguageTool/blob/master/Products/PloneLanguageTool/LanguageTool.py>`_."
msgstr ""

# d9e70dea6f3a4298ab0420e18689b5bd
#: ../develop/plone/i18n/language.rst:32
msgid "Getting the current language"
msgstr ""

# 08406be078a84e9184ca7031d7b99867
#: ../develop/plone/i18n/language.rst:34
msgid "Example view/viewlet method of getting the current language."
msgstr ""

# ebd543c4bc3f40f8b403e2407ad1ee94
#: ../develop/plone/i18n/language.rst:56
msgid "Getting language of content item"
msgstr ""

# 5f5bade1ba9f45b597b84309dbc9e413
#: ../develop/plone/i18n/language.rst:58
msgid ""
"All content objects don't necessarily support the ``Language()`` look-up "
"defined by the ``IDublinCore`` interface. Below is the safe way to extract "
"the served language on the content."
msgstr ""

# 2d53f039560847cfb715e98c1208925c
#: ../develop/plone/i18n/language.rst:62
msgid "Example BrowserView method::"
msgstr ""

# 649eb2e3b57d423a8ca83d1a6472b475
#: ../develop/plone/i18n/language.rst:79
msgid "Getting available site languages"
msgstr ""

# 99028564ca0343f390a01347c0fbf9a0
#: ../develop/plone/i18n/language.rst:81
msgid "Example below::"
msgstr ""

# 52c3a5c299154fb7a3bc6a98605f118a
#: ../develop/plone/i18n/language.rst:131
msgid "Simple language conditions in page templates"
msgstr ""

# 0b59b2832983405796f21e529ccf6dcc
#: ../develop/plone/i18n/language.rst:133
msgid "You can do this if full translation strings are not worth the trouble:"
msgstr ""

# 38e5c707399a454581c3cf0aaaaae778
#: ../develop/plone/i18n/language.rst:144
msgid "Set site language settings"
msgstr ""

# bc0167b1e03846fdb9e3b3e29679ceef
#: ../develop/plone/i18n/language.rst:146
msgid "Manually::"
msgstr ""

# 150e933e634f4698b79650872945280b
#: ../develop/plone/i18n/language.rst:156
msgid ""
"For unit testing, you need to run this in ``afterSetUp()`` after setting up "
"the languages::"
msgstr ""

# 84e5be661dd548f193f34617822c5b22
#: ../develop/plone/i18n/language.rst:165
msgid "Using ``GenericSetup`` and ``propertiestool.xml``"
msgstr ""

# b221a0dcf49248cb9367075bafeea210
#: ../develop/plone/i18n/language.rst:175
msgid ""
"On ``LinguaPlone``-enabled sites, using GenericSetup XML "
"``portal_languages.xml``"
msgstr ""

# d95f301fdec449e287dd4418f221f509
#: ../develop/plone/i18n/language.rst:198
msgid "Customizing language selector"
msgstr ""

# 4e6bc0bba1274bff943ef6e5d764d3c3
#: ../develop/plone/i18n/language.rst:200
msgid "Multilingual Plone has two kinds of language selector viewlets:"
msgstr ""

# 8c547a01c7da4003918315879500065a
#: ../develop/plone/i18n/language.rst:202
msgid "Plone vanilla"
msgstr ""

# 68cdc9e0a61c41b998b55610391fb557
#: ../develop/plone/i18n/language.rst:204
msgid ""
"LinguaPlone -  LinguaPlone has its own language selector which replaces the "
"default Plone selector if the add on product is installed."
msgstr ""

# f62493c68d1346aca4275e501b416157
#: ../develop/plone/i18n/language.rst:210
msgid ""
"https://github.com/plone/plone.app.i18n/blob/master/plone/app/i18n/locales/browser/selector.py"
msgstr ""

# 7cf88fba3d5148e6af8d4e37b102e8fe
#: ../develop/plone/i18n/language.rst:212
msgid ""
"https://github.com/plone/plone.app.i18n/blob/master/plone/app/i18n/locales/browser/languageselector.pt"
msgstr ""

# 724d91be7226489599b1c9297d365ff1
#: ../develop/plone/i18n/language.rst:214
msgid ""
"https://github.com/plone/Products.LinguaPlone/blob/master/Products/LinguaPlone/browser/selector.py"
msgstr ""

# e948ba06db534f63a90dc79c8df12f70
#: ../develop/plone/i18n/language.rst:217
msgid "Making language flags point to different top level domains"
msgstr ""

# b130de78981b4fe8b541ef7f48e32988
#: ../develop/plone/i18n/language.rst:219
msgid ""
"If you use multiple domain names for different languages it is often "
"desirable to make the language selector point to a different domain. Search "
"engines do not really like the dynamic language switchers and will index "
"switching links, messing up your site search results."
msgstr ""

# c80ed017f99e42cdbb6eb1c5b2bbf5e2
#: ../develop/plone/i18n/language.rst:286
msgid "Custom language negotiator"
msgstr ""

# 9c6172181f8f44449c4cdc92a9edf51d
#: ../develop/plone/i18n/language.rst:288
msgid "Below some example code."
msgstr ""

# cbe186f631a0432ebea196a577121946
#: ../develop/plone/i18n/language.rst:290
msgid "``languages.py``::"
msgstr ""

# 5fa885c4c05e465dac39eed4c64049b2
# c5d1d512a07a4863a263fdee8eebe162
#: ../develop/plone/i18n/language.rst:380
#: ../develop/plone/images/content.rst:289
msgid "``configure.zcml``"
msgstr ""

# f7e670df2c524b7796f1a8f1f26e8b69
#: ../develop/plone/i18n/language.rst:400
msgid "Login-aware language negotiation"
msgstr ""

# ffc7b209cafe4b128c7a142388ba271a
#: ../develop/plone/i18n/language.rst:402
msgid ""
"By default, language negotiation happens before authentication. Therefore, "
"if you wish to use authenticated credentials in the negotiation, you can do "
"the following."
msgstr ""

# 9f5ad8ff109e497abe866bfa5c4a146c
#: ../develop/plone/i18n/language.rst:406
msgid "Hook the after-traversal event."
msgstr ""

# 53667a9df9c84761a2213ebc8e367a22
#: ../develop/plone/i18n/language.rst:408
msgid "Example event registration"
msgstr ""

# 7a7c76b0a872429a809d5748c245bb96
#: ../develop/plone/i18n/language.rst:420
msgid "Corresponding event handler::"
msgstr ""

# ffa1c130f1204bbda8cc5f34b39c5d8e
#: ../develop/plone/i18n/language.rst:456
msgid ""
"http://maurits.vanrees.org/weblog/archive/2007/09/i18n-locales-and-plone-3.0"
msgstr ""

# e2cb890898c74de48cf575670fb794d2
#: ../develop/plone/i18n/language.rst:458
msgid "http://blogs.ingeniweb.com/blogs/user/7/tag/i18ndude/"
msgstr ""

# af7f6023b4754956b266e61784432bc4
#: ../develop/plone/i18n/translating_content.rst:3
msgid "Translated content"
msgstr ""

# 0607c4544ad04630b2da6b1c9ecf0f2d
#: ../develop/plone/i18n/translating_content.rst:7
msgid ""
"Translating content items in Plone, creating translations programmatically "
"and working with translators."
msgstr ""

# dcae6441039246489dd361a551e5f2f8
#: ../develop/plone/i18n/translating_content.rst:15
msgid ""
"Plone doesn't ships (yet) out of the box with a multilingual solution for "
"translating user generated content. There are several add-on products that "
"add multilingual support to Plone. Each of them has its own features and "
"drawbacks, so be careful when you choose one for your project and be sure "
"that it fulfills your needs."
msgstr ""

# 1c782605b31646a7918965d1cfbcf934
#: ../develop/plone/i18n/translating_content.rst:22
msgid "LinguaPlone"
msgstr ""

# adf43eb366e840ab843ff831481eb213
#: ../develop/plone/i18n/translating_content.rst:24
msgid ""
"`LinguaPlone add-on product <http://plone.org/products/linguaplone>`_ has "
"been the defacto standard multilingual product for Plone for almost a "
"decade. It's well stablished, proven, tested and reliable solution. However,"
" it has no support for Dexterity based content types and nowadays it's on "
"legacy mode (only bugfixes)."
msgstr ""

# 5043cd6b6a104241bb77bef57e899e0d
#: ../develop/plone/i18n/translating_content.rst:30
msgid ""
"For an example of a content type using LinguaPlone, see the `LinguaItem "
"example type "
"<https://github.com/plone/Products.LinguaPlone/blob/07c754012e942fe5e12834b51af06246932ce420/Products/LinguaPlone/examples/LinguaItem.py>`_."
msgstr ""

# f79e83e4e1d243b09606b6a561f48704
#: ../develop/plone/i18n/translating_content.rst:36
msgid "Translation-aware content types"
msgstr ""

# 7bfc9d704a77436ca4295d22ce61c8e0
#: ../develop/plone/i18n/translating_content.rst:38
msgid ""
"LinguaPlone makes it possible to mark fields *language independent* or "
"*language dependent*."
msgstr ""

# 94ddc4e3ea284523b3157e2d927e5588
#: ../develop/plone/i18n/translating_content.rst:43
msgid ""
"To have language-aware behavior, you need to use the "
"``Products.LinguaPlone.public.*`` API, instead of "
"``Products.Archetypes.atapi.*``."
msgstr ""

# 0bf305176db847069e936e0ffe3c3372
#: ../develop/plone/i18n/translating_content.rst:63
msgid ""
"https://pypi.python.org/pypi/Products.LinguaPlone/3.1a2#language-"
"independent-fields"
msgstr ""

# 00caf06102114929989b946de6cf5896
#: ../develop/plone/i18n/translating_content.rst:65
msgid ""
"http://n2.nabble.com/languageIndependent-fields-not-updated-td2430489.html"
msgstr ""

# ae6f1435dc4344fe83e5b4498f8ae782
#: ../develop/plone/i18n/translating_content.rst:68
msgid "Getting content items in another language"
msgstr ""

# c320f052e33d4e0397320a6a63906f3b
#: ../develop/plone/i18n/translating_content.rst:70
msgid "Possible use cases:"
msgstr ""

# 88eb111801fb4e5198ceee361e7d3d55
#: ../develop/plone/i18n/translating_content.rst:72
msgid ""
"Getting translated content items by known path. E.g. you could have a "
"content item called ``portal/footer``, which dynamically shows translated "
"text for different languages."
msgstr ""

# 3101e9c54a7341e08a4510136d2cf3a1
#: ../develop/plone/i18n/translating_content.rst:76
msgid "Displaying content in many languages simultaneously."
msgstr ""

# f03e85e7e7674972b20ca23af7a05795
#: ../develop/plone/i18n/translating_content.rst:78
msgid ""
"To show some content translated into the chosen language of the current "
"user, you can use ``ITranslatable.getTranslation(language='language')``: "
"Return the object corresponding to a translated version or None. If called "
"without arguments it returns the translation in the currently selected "
"language, or self."
msgstr ""

# cf734a4f16184a3a8202725e961fba30
#: ../develop/plone/i18n/translating_content.rst:120
msgid "Translating content"
msgstr ""

# fbd0288d72c6440094ffcb69326772ce
#: ../develop/plone/i18n/translating_content.rst:122
msgid ""
"LinguaPlone contains some unit test code which shows how to create "
"translations.  You can use the ``context.addTranslation(language_code)`` and"
" ``context.getTranslation(language_code)`` methods."
msgstr ""

# 26a467db43d14db2befdf6fc57fa1eee
#: ../develop/plone/i18n/translating_content.rst:139
msgid ""
"See "
"https://github.com/plone/Products.LinguaPlone/blob/07c754012e942fe5e12834b51af06246932ce420/Products/LinguaPlone/tests/translate_edit.txt"
msgstr ""

# f91c731accbd4d588f1b32deec6c3ace
#: ../develop/plone/i18n/translating_content.rst:141
msgid "Why link to a particular (ancient) tag?"
msgstr ""

# 6b4d90151d534c6aa01268b12dcda4a0
#: ../develop/plone/i18n/translating_content.rst:144
msgid "Language neutral links"
msgstr ""

# f3a4e90206134142922e53489fa9beae
#: ../develop/plone/i18n/translating_content.rst:146
msgid ""
"In many cases you want to create links to a different language content. For "
"example, fallback to English content when the native version of content is "
"not available."
msgstr ""

# df64be0907064a2184a831737c082f23
#: ../develop/plone/i18n/translating_content.rst:149
msgid ""
"Plone's reference and link widgets often fail to create links between "
"language barriers."
msgstr ""

# 7a80da625dbc4dc0b2824f7b39532f20
#: ../develop/plone/i18n/translating_content.rst:151
msgid "Here is a workaround"
msgstr ""

# 8d4efb9ba35a4b34b2fb56ec540eac8d
#: ../develop/plone/i18n/translating_content.rst:153
msgid "Create a folder in the site root"
msgstr ""

# 8c194d23873f4809b63aad1e07292a46
#: ../develop/plone/i18n/translating_content.rst:155
msgid "Set the folder language neutral on Edit > Metadata tab"
msgstr ""

# b3d0f84f00054314adfd254abeb104e7
#: ../develop/plone/i18n/translating_content.rst:157
msgid ""
"In this folder, create Link content items where the Link target is the "
"English content. Also, on the link item Metadata set its Language to "
"neutral."
msgstr ""

# d298c85a25814b9798514d9e347d72c8
#: ../develop/plone/i18n/translating_content.rst:160
msgid ""
"These links are searcable regardless of the edited content language and can "
"be used in references in the widgets"
msgstr ""

# b4303c0ad7164ee780871433336a6acf
#: ../develop/plone/i18n/translating_content.rst:163
msgid ""
"When the end user, not editor, clicks link the Link content type takes "
"him/her to the actual English content"
msgstr ""

# 857f9627a77244478bda1e81a04ee918
#: ../develop/plone/i18n/translating_content.rst:166
msgid ""
"You may also find `redturtle.smartlink "
"<https://pypi.python.org/pypi/redturtle.smartlink/>`_ as useful add-on."
msgstr ""

# 5948ed04142d45ac9bf73a37d0d0958d
#: ../develop/plone/i18n/translating_content.rst:170
msgid "Serving translated content from a correct domain name"
msgstr ""

# 9c600d9273bd4d87b4a798fa793f2d7a
#: ../develop/plone/i18n/translating_content.rst:172
msgid "The following applies if:"
msgstr ""

# cb5239727acc466a8e7593665bd231a4
#: ../develop/plone/i18n/translating_content.rst:174
msgid ""
"You use one Plone instance to host a site translated into several languages;"
msgstr ""

# 2733dfd472924716bd11563834e4620b
#: ../develop/plone/i18n/translating_content.rst:176
msgid "the Plone instance is mapped to different domain names;"
msgstr ""

# ac0bbe58c70e402aad415e2d4a3836db
#: ../develop/plone/i18n/translating_content.rst:177
msgid ""
"the language is resolved based on the top-level domain name or the "
"subdomain."
msgstr ""

# 95321ba5b5de476db46a1839db05ee6b
#: ../develop/plone/i18n/translating_content.rst:180
msgid ""
"For SEO and usability reasons, you might want to force certain content to "
"show up at a certain domain.  Plone does not prevent you from accessing a "
"path such as ``/news`` on the Finnish domain, or ``/uutiset`` on English "
"domain.  If these URLs leak to search engines, they cause confusion."
msgstr ""

# aaaf778bc5694cf4a251ff8e033de65e
#: ../develop/plone/i18n/translating_content.rst:185
msgid ""
"Below is a complex post-publication hook which redirects users to the proper"
" domain for the language being served::"
msgstr ""

# 76f3f3f9a8314ce2a9d51a4da1ad7507
#: ../develop/plone/i18n/translating_content.rst:305
msgid "Translated navigation tabs"
msgstr ""

# 596993918c184f3e9e19ac413e37cfe1
#: ../develop/plone/i18n/translating_content.rst:307
msgid ""
"Below is an example code which allows you to translate portal_tabs to the "
"current language."
msgstr ""

# 94a30ce4fba248239d8381062b4b728c
#: ../develop/plone/i18n/translating_content.rst:310
msgid ""
"All translatable navigation tabs must be explicitly declared in "
"portal_actions / portal_tabs using site root relative paths"
msgstr ""

# 26480d132c8342c89bfca8f3c4a19a90
#: ../develop/plone/i18n/translating_content.rst:313
msgid ""
"You must set ``disable_folder_sections`` to ``False`` in navtree_properties"
msgstr ""

# 1e15161dc7814d44b373dbc5cd262834
#: ../develop/plone/i18n/translating_content.rst:315
msgid ""
"Source is modified from `The default sections viewlet "
"<https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/viewlets/common.py#L151>`_"
msgstr ""

# 9002536c22bc4f0382622424887bf336
#: ../develop/plone/i18n/translating_content.rst:317
msgid ""
"The viewlet is created using :doc:`Grok </develop/addons/components/grok>` "
"framework"
msgstr ""

# b3a0a3730af842fc8e1f560e9f463c84
# 79d29a933a4b4577bafe176ede3bb49b
#: ../develop/plone/i18n/translating_content.rst:463
#: ../develop/plone/views/viewlets.rst:496
msgid "Page template code"
msgstr ""

# 6a24645eae594301b78e35e2f49bea8f
#: ../develop/plone/i18n/translating_content.rst:489
msgid ""
"plone.app.multilingual was designed originally to provide Plone a whole "
"multilingual story. Using ZCA technologies, enables translations to "
"Dexterity and Archetypes content types as well managed via an unified UI."
msgstr ""

# 50bb959e81c34624bf41dac91258e90e
#: ../develop/plone/i18n/translating_content.rst:493
msgid ""
"This module provides the user interface for managing content translations. "
"It's the app package of the next generation Plone multilingual engine. It's "
"designed to work with Dexterity content types and the *old fashioned* "
"Archetypes based content types as well. It only works with Plone 4.1 and "
"above due to the use of UUIDs for referencing the translations."
msgstr ""

# 27e6b5cad82d4e1cb58cc8f872e5508f
#: ../develop/plone/i18n/translating_content.rst:499
msgid ""
"For more information see "
":doc:`plone.app.multilingual</external/plone.app.multilingual/docs/index>`"
msgstr ""

# b06832d5ce2c4eaabfa5d1ddc49546c9
#: ../develop/plone/i18n/translating_content.rst:504
msgid ""
"To use this package with both Dexterity and Archetypes based content types "
"you should add the following line to your *eggs* buildout section::"
msgstr ""

# 01a4b0ab400548e58cfcf7b4f4312670
#: ../develop/plone/i18n/translating_content.rst:510
msgid ""
"If you need to use this package only with Archetypes based content types you"
" only need the following line::"
msgstr ""

# 59925024be8c48aab2ae2870cfd526fc
#: ../develop/plone/i18n/translating_content.rst:516
msgid ""
"While archetypes is default in Plone for now, you can strip "
"``[archetypes]``. This may change in future so we recommend adding an "
"appendix as shown above."
msgstr ""

# 3f6470d710724569a8cbda29e9b3749e
#: ../develop/plone/i18n/translating_content.rst:520
msgid "Setup"
msgstr ""

# b57de3b14b6a472eb0906302815c0434
#: ../develop/plone/i18n/translating_content.rst:522
msgid ""
"After re-running your buildout and installing the newly available add-ons, "
"you should go to the *Languages* section of your site's control panel and "
"select at least two or more languages for your site. You will now be able to"
" create translations of Plone's default content types, or to link existing "
"content as translations."
msgstr ""

# 3105e080ee4d4271949bf620709bbfd9
#: ../develop/plone/i18n/translating_content.rst:529
msgid "Marking objects as translatables"
msgstr ""

# 9c9f43725bca451d9a0fc9f24019849a
#: ../develop/plone/i18n/translating_content.rst:534
msgid ""
"By default, if PAM is installed, Archetypes-based content types are marked "
"as translatables"
msgstr ""

# 945e36c7ea6949eab8fdd2c7580ebe72
#: ../develop/plone/i18n/translating_content.rst:540
msgid ""
"Users should mark a dexterity content type as translatable by assigning a "
"the multilingual behavior to the definition of the content type either via "
"file system, supermodel or through the web."
msgstr ""

# a19b823116e048cdae258a19a6e16822
#: ../develop/plone/i18n/translating_content.rst:546
msgid "Marking fields as language independent"
msgstr ""

# d2702796578745b2b1857248819a4910
#: ../develop/plone/i18n/translating_content.rst:551
msgid ""
"The language independent fields on Archetype-based content are marked the "
"same way as in LinguaPlone::"
msgstr ""

# aa52b545a974439cadeb0845dfbb5343
#: ../develop/plone/i18n/translating_content.rst:565
msgid "There are four ways of achieve it."
msgstr ""

# b55937997e6f41d7aec5c40b489d6e2a
#: ../develop/plone/i18n/translating_content.rst:568
msgid "Grok directive"
msgstr ""

# 33cb232c061d4a5b94cc00d91719da1d
#: ../develop/plone/i18n/translating_content.rst:570
msgid "In your content type class declaration::"
msgstr ""

# f99d7e69111941ada60548e732748104
#: ../develop/plone/i18n/translating_content.rst:576
msgid "Supermodel"
msgstr ""

# 7558373d94d94355827868371cf3cfd7
#: ../develop/plone/i18n/translating_content.rst:578
msgid "In your content type XML file declaration::"
msgstr ""

# eb9e983789624b2f8636f0d7cd78d789
#: ../develop/plone/i18n/translating_content.rst:586
msgid "Native"
msgstr ""

# 25a6ea86fb364ede8a2410275a4f726d
#: ../develop/plone/i18n/translating_content.rst:588
msgid "In your code::"
msgstr ""

# 839e2c22bb1348ffbdbf5e86d1f4e64b
#: ../develop/plone/i18n/translating_content.rst:594
msgid "Through the web"
msgstr ""

# 1a2a8c7cfade4ac49f0fe5186f025662
#: ../develop/plone/i18n/translating_content.rst:596
msgid ""
"Via the content type definition in the *Dexterity Content Types* control "
"panel."
msgstr ""

# 0321ba01fb844aacb9b1f3aa92147a75
#: ../develop/plone/i18n/translating_content.rst:599
msgid "Language get/set via an unified adapter"
msgstr ""

# aad4590e5eb0435896aa4bafe9c3dcb7
#: ../develop/plone/i18n/translating_content.rst:601
msgid ""
"In order to access and modify the language of a content type regardless the "
"type (Archetypes/Dexterity) there is a interface/adapter::"
msgstr ""

# 056a58bdf9b14f5c8c3d3414718c3aa3
#: ../develop/plone/i18n/translating_content.rst:606
msgid "You can use::"
msgstr ""

# b24b43f50ec24574beb83e79a5fa6e90
#: ../develop/plone/i18n/translating_content.rst:611
msgid "or in case you want to set the language of a content::"
msgstr ""

# dcb4aab4934547558329ca87ef24202b
#: ../develop/plone/i18n/translating_content.rst:616
msgid "ITranslationManager adapter"
msgstr ""

# 04ce50be11ed4aa4a6f0d78faaf91a46
#: ../develop/plone/i18n/translating_content.rst:618
msgid ""
"The most interesting adapter that p.a.m. provides is: "
"``plone.multilingual.interfaces.ITranslationManager``."
msgstr ""

# c26e9ab4a90b46578e12581c67934014
#: ../develop/plone/i18n/translating_content.rst:621
msgid ""
"It adapts any ITranslatable object to provide convenience methods to manage "
"the translations for that object."
msgstr ""

# 2a17f16a505c4e099408aae41426f288
#: ../develop/plone/i18n/translating_content.rst:625
msgid "Add a translation"
msgstr ""

# e68d711a95f54c27820cec771ca1abeb
#: ../develop/plone/i18n/translating_content.rst:627
msgid ""
"Given an object `obj` and we want to translate it to Catalan language "
"('ca')::"
msgstr ""

# e6dc65b3d6974145beb59a6cd6f5884b
#: ../develop/plone/i18n/translating_content.rst:633
msgid "Register a translation for an already existing content"
msgstr ""

# c0a316173437435db89c3a97e1d101d0
#: ../develop/plone/i18n/translating_content.rst:635
msgid ""
"Given an object `obj` and we want to add `obj2` as a translation for Catalan"
" language ('ca')::"
msgstr ""

# 29ee076af3074cd4b8297fc26c04d30a
#: ../develop/plone/i18n/translating_content.rst:640
msgid "Get translations for an object"
msgstr ""

# 2bb7f37f60484f36abea0f0b3df4858b
# 438d17d89fbb4452af66fb3eeb1c5397
#: ../develop/plone/i18n/translating_content.rst:642
#: ../develop/plone/i18n/translating_content.rst:653
msgid "Given an object `obj`::"
msgstr ""

# e82932cfd742412296cd8a8a8194cd78
#: ../develop/plone/i18n/translating_content.rst:646
msgid "and if we want a concrete translation::"
msgstr ""

# af0319939bbb4262a475edfca28ccacf
#: ../develop/plone/i18n/translating_content.rst:651
msgid "Check if an object has translations"
msgstr ""

# b4dc3e7dae064b00ac1521e5f555ccbf
#: ../develop/plone/i18n/translating_content.rst:657
msgid "or::"
msgstr ""

# 7e34e2601e3249f9be805922eadde68f
#: ../develop/plone/i18n/translating_content.rst:661
msgid ""
"For more information see: "
"https://github.com/plone/plone.multilingual/blob/master/src/plone/multilingual/interfaces.py#L66"
msgstr ""

# 48efdd80a6214a81920d1277efef30ad
#: ../develop/plone/i18n/translating_content.rst:664
msgid "raptus.multilanguageplone"
msgstr ""

# 6b64e362a60e4447acbd17ac70747f91
#: ../develop/plone/i18n/translating_content.rst:666
msgid ""
"Another extension for multilingual content in Plone is "
"``raptus.multilanguageplone``.  This is not meant to be a fully-fledged tool"
" for content translaton, unlike LinguaPlone. Translation is done directly in"
" the edit view of a content type, and provides a widget to use google's "
"translation API to translate the different fields."
msgstr ""

# 3a6b20fb9d374a629ce5d9fb9947aa35
#: ../develop/plone/i18n/translating_content.rst:672
msgid ""
"Unlike LinguaPlone, ``raptus.multilanguageplone`` doesn't create an object "
"for each translation. Instead, it stores the translation on the object "
"itself and therefor doesn't support translation workflows and language-aware"
" object paths."
msgstr ""

# d68b2acdac5248a6af4d84be0db7f592
#: ../develop/plone/i18n/translating_content.rst:677
msgid ""
"If you have non-default content types, you have to provide your own "
"``multilanguagefields`` adapter."
msgstr ""

# 10ac828b23d3405f82a7df7b02a9ce61
#: ../develop/plone/i18n/translating_content.rst:680
msgid ""
"See "
"https://svn.plone.org/svn/collective/raptus.multilanguagefields/trunk/raptus/multilanguagefields/samples/"
msgstr ""

# 18c03817a1f54c10a4f748c90c6514f8
#: ../develop/plone/i18n/translating_content.rst:685
msgid ""
"Installation of ``raptus.multilanguageplone`` is straight-forward with "
"buildout. If the site already contains articles then you have to migrate "
"them."
msgstr ""

# 37ad4798d4f048e289c8a1949529ffac
#: ../develop/plone/i18n/translating_content.rst:689
msgid "See https://pypi.python.org/pypi/raptus.multilanguagefields"
msgstr ""

# 47340cc9672742718db8157cac70173a
#: ../develop/plone/i18n/translating_content.rst:692
msgid "Switching from Linguaplone"
msgstr ""

# 03ef7e9f6d8b4f43aaee71ec087c068d
#: ../develop/plone/i18n/translating_content.rst:694
msgid ""
"If you want to switch from Linguaplone to ``raptus.multilanguageplone`` be "
"aware that you will lose already translated content."
msgstr ""

# 02a05cfa06b4495496490aa88043331f
#: ../develop/plone/i18n/translating_content.rst:697
msgid "Uninstall ``Products.Linguaplone``."
msgstr ""

# 446857f1636a4c0c9a8f2c84e43a87c0
#: ../develop/plone/i18n/translating_content.rst:698
msgid ""
"Unfortunately Linguaplone does not uninstall cleanly. Two utilities remain "
"in your database. You can remove them in an interactive session from your "
"site (in this example, the site has the id ``plone``)::"
msgstr ""

# 3e9df166d95b427faa75dccaba6116f7
#: ../develop/plone/i18n/translating_content.rst:713
msgid ""
"Repeat the procedure for ``IMetadataLanguageAvailability`` and commit the "
"transaction::"
msgstr ""

# a048b3ed36554598ba5ce393650d7c38
#: ../develop/plone/i18n/translating_content.rst:722
msgid "Run buildout without Linguaplone and restart."
msgstr ""

# f14d0beafe6043acb8ed502dec81cc19
#: ../develop/plone/i18n/translating_content.rst:723
msgid ""
"Run the *import* step of the Plone Language Tool. Otherwise language "
"switching will not work."
msgstr ""

# cb46352cec3743deb94f91a5d436acc5
#: ../develop/plone/i18n/translating_content.rst:725
msgid ""
"Install ``raptus.multilanguageplone`` using buildout and "
"``portal_quickinstaller``."
msgstr ""

# 588171e64a3d496bbd9044b2031c8ab6
#: ../develop/plone/i18n/translating_content.rst:727
msgid "Migrate the content."
msgstr ""

# e16269f720ac43f9980f74912287a227
#: ../develop/plone/images/content.rst:3
msgid "Image-like content"
msgstr ""

# 21897dd7b2a1400e94b88fe07dedd97a
#: ../develop/plone/images/content.rst:7
msgid "How to programmatically manipulate images on your Plone site."
msgstr ""

# 41d8b1b5f511422d89fc679d267201ef
#: ../develop/plone/images/content.rst:14
msgid "Plone supports image content in two forms:"
msgstr ""

# f9e44d55eb7e44e6ad12d33306d62526
#: ../develop/plone/images/content.rst:16
msgid ""
"As stand-alone content type, images will be visible in the sitemap. This is "
"the case for the default ``Image`` content type, but you can create custom "
"content types with similar properties."
msgstr ""

# 1afaa16776e94d4282318976049bec50
#: ../develop/plone/images/content.rst:20
msgid ""
"As a field, the image is directly associated with one content object.  Use "
"``Archetypes.fields.ImageField``."
msgstr ""

# 71475911463843debe35931ab32360a4
#: ../develop/plone/images/content.rst:25
msgid "Custom image content type"
msgstr ""

# 95f65516df4f456081e3784c10d5e0f5
#: ../develop/plone/images/content.rst:27
msgid ""
"If you want to have your custom content type behave like the stock Plone "
"``Image`` content type:"
msgstr ""

# c8a09de88ee74bb2bea96a37c83ed7b0
#: ../develop/plone/images/content.rst:30
msgid ""
"Inherit from the content class "
"``Products.ATContentType.content.image.ATImage`` and use the schema from "
"that class."
msgstr ""

# 2e41a23b93b546648bdd08de85c6101b
#: ../develop/plone/images/content.rst:33
msgid ""
"When writing the ``GenericSetup`` XML of your type, follow the example of "
"`Image.xml "
"<https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/profiles/default/types/Image.xml>`_."
msgstr ""

# 46a09f5a49e84484a4d0f90f48bddea4
#: ../develop/plone/images/content.rst:35
msgid ""
"Do not set workflow for your type in ``profiles/default/workflows.xml``"
msgstr ""

# 83699b0f2d114af5b668c1f7542aaca6
#: ../develop/plone/images/content.rst:48
msgid "Image scales (Plone 4)"
msgstr ""

# 989a18768a464b59a9ec4e4f32d7ecc8
#: ../develop/plone/images/content.rst:50
msgid ""
"Archetypes based content image scales is handled by `plone.namedfile "
"<https://pypi.python.org/pypi/plone.namedfile>`_."
msgstr ""

# d0eafb4f7b5940e2894c279852282b8e
#: ../develop/plone/images/content.rst:52
msgid ""
"Dexterity based content image scales are handled by `plone.namedfile "
"<https://pypi.python.org/pypi/plone.namedfile>`_."
msgstr ""

# 336034325478414cb719eec26e3b2212
#: ../develop/plone/images/content.rst:54
msgid ""
"Archetypes based content image scales is handled by `plone.app.imaging "
"<http://plone.org/products/plone.app.imaging>`_."
msgstr ""

# 5c326729f71b4d14bf923fc47d9c074e
#: ../develop/plone/images/content.rst:56
msgid ""
"Both packages offer the same traverseable `@@images` view which can be used "
"from page templates and Python code to provide different image scales for "
"image fields on content."
msgstr ""

# 6fbf892bc2064c95bebd503e5e26cc24
#: ../develop/plone/images/content.rst:60
msgid "Image scales (Plone 3)"
msgstr ""

# 53c5904a657f4a3ca17f0f554ee3f0f4
#: ../develop/plone/images/content.rst:62
msgid ""
"When the image is uploaded, both field or content, Plone creates scaled-down"
" versions from it by default."
msgstr ""

# 119f86574f8c44b6a0925194917ecc5e
#: ../develop/plone/images/content.rst:65
msgid ""
"These are configured using the ``ImageField`` *``sizes``* parameter. See the"
" ``ImageField`` class notes here:"
msgstr ""

# a0bf662c689b4a78b31f51ed3578d32c
# 0acd30a8458a4f66a669fa7c99ea194f
#: ../develop/plone/images/content.rst:68
#: ../develop/plone/images/templates.rst:166
msgid ""
"https://github.com/plone/Products.Archetypes/blob/master/Products/Archetypes/Field.py"
msgstr ""

# 1d86d52209a64fe4bf1daaf19220e14f
#: ../develop/plone/images/content.rst:70
msgid "The default image scales for ``Image`` content are configured in:"
msgstr ""

# cf56c35542ba4a108f13a3fdf466c5c6
#: ../develop/plone/images/content.rst:74
msgid "Configuration::"
msgstr ""

# 0eacc11a790c417599f8d02396835d17
#: ../develop/plone/images/content.rst:87
msgid ""
"http://plone.293351.n2.nabble.com/Register-browser-view-for-image-scales-"
"tp5626267p5626267.html"
msgstr ""

# e6cb000b068c47c8ae361a88d4e6f374
#: ../develop/plone/images/content.rst:90
msgid "``getScale()``"
msgstr ""

# abe135502c29457095e031ba28f38584
#: ../develop/plone/images/content.rst:92
msgid ""
"``ImageField`` provides a ``getScale()`` method to get the scaled version of"
" the image based on the ``sizes`` configuration key."
msgstr ""

# c37d9e66a878438aad6ade40753ea619
#: ../develop/plone/images/content.rst:95
msgid "See example in ``__bobo_traverse__``:"
msgstr ""

# 8cc16af90d83473cb696fd3684411013
#: ../develop/plone/images/content.rst:101
msgid "Accessing images"
msgstr ""

# 765d5dad1b8e4e79afb79619e1c02f80
#: ../develop/plone/images/content.rst:103
msgid ""
"``ImageField`` is mapped to a traversable attribute of your content type. "
"E.g. if your content object has a field ``imageOne`` and is found at this "
"URL::"
msgstr ""

# 4e11b772de164bbebb9e97ed6630a719
#: ../develop/plone/images/content.rst:108
msgid "the image can be directly downloaded from::"
msgstr ""

# 05ae347f923d48f5aadf75b260f1bf89
#: ../develop/plone/images/content.rst:114
msgid "Scaled versions for Image content (``ATImage``)"
msgstr ""

# f49eeedced6749ef924b6aa9c9c277c8
#: ../develop/plone/images/content.rst:116
msgid ""
"If you want different scales you can add ``image_XXX`` prefix where ``XXX`` "
"is the corresponding scale name::"
msgstr ""

# 02f803ef10904e5889865c5b4b23a06b
#: ../develop/plone/images/content.rst:121
msgid ""
"In **Plone 4** this behavior comes from the monkey-patch applied by the "
"`plone.app.imaging <http://plone.org/products/plone.app.imaging>`_ package."
msgstr ""

# 3d78f39fe2934bc29525cca091a500c7
#: ../develop/plone/images/content.rst:124
msgid ""
"In **Plone 3** this hook is defined in ``__bobo_traverse__`` in ``ATImage`` "
"class: * "
"https://github.com/plone/Products.ATContentTypes/blob/master/Products/ATContentTypes/content/image.py"
msgstr ""

# 924aa704205a42f7b47ab7fdb0f554b3
#: ../develop/plone/images/content.rst:129
msgid "``portal_catalog`` and images"
msgstr ""

# 3d5caf21ba1348f480775b312b77bfc2
#: ../develop/plone/images/content.rst:131
msgid ""
"Do not index image objects themselves, as adding image data to the "
"``portal_catalog`` brain objects would greatly increase their site and make "
"brain look-up slow."
msgstr ""

# 3f2eece107ce4f3090ee1e735f69ca69
#: ../develop/plone/images/content.rst:135
msgid ""
"Instead, index only image paths using :doc:`getPhysicalPath() "
"</develop/plone/serving/traversing>`. When you need to display image using "
"metadata columns, you can generate the image URL manually. Then, the image "
"object will be woken up when the browser makes a HTTP request for the image."
msgstr ""

# 7da755847ed14ba3bca2e5a6253acc4c
#: ../develop/plone/images/content.rst:142
msgid "Custom image scales and recreating scale data"
msgstr ""

# b9a99425266d499a9f7c7396cb2710f5
#: ../develop/plone/images/content.rst:145
msgid "For Plone 4"
msgstr ""

# 6d42ccc2f7114403b64706d42ba7d9c6
#: ../develop/plone/images/content.rst:147
msgid ""
"`plone.app.imaging <http://plone.org/products/plone.app.imaging>`_ allows "
"you to configure available image scales in ``portal_properties`` -> "
"``imaging_properties``."
msgstr ""

# 9801bc07c61a4c26baa401b4e8bcd91c
#: ../develop/plone/images/content.rst:151
msgid ""
"You can update these through-the-web or using :doc:`GenericSetup profile "
"</develop/addons/components/genericsetup>`."
msgstr ""

# 090c6d1c71554a0ab6de5950fae321d9
#: ../develop/plone/images/content.rst:154
msgid "``propertiestool.xml``"
msgstr ""

# 5023befaff704b258d536ea2612a6ec0
#: ../develop/plone/images/content.rst:183
msgid ""
"For Plone 4, after adding new scales no batch processing of existing images "
"are needed and new scales are created on-demand when the images are viewed "
"for the first time."
msgstr ""

# a9dbb017e2c748fc97390b741ace5761
#: ../develop/plone/images/content.rst:189
msgid "For Plone 3"
msgstr ""

# 14da459e430e458e8a12189fd5ffd37b
#: ../develop/plone/images/content.rst:191
msgid ""
"Below is an example showing how to make custom image scales available in "
"your Plone site."
msgstr ""

# 9aff54454771415e87e15c25e95c35eb
#: ../develop/plone/images/content.rst:194
msgid "Monkey-patch ``ATImages`` to have new scale versions available."
msgstr ""

# c449186870e24245937c774684613b26
#: ../develop/plone/images/content.rst:196
msgid ""
"Have migration code which will run all through all ``ATImage`` content on "
"the site and recreate their scale versions, thus populating image scale data"
" for new scale versions also."
msgstr ""

# a7b19c1e754845ae91c2d964d4711069
#: ../develop/plone/images/content.rst:200
msgid ""
"The new sizes are automatically effected to rich text editor image sizes "
"options (active WYSIWYG editor on Plone site)"
msgstr ""

# 47b0e738f7ef466dac2a5dd9412860b6
#: ../develop/plone/images/content.rst:203
msgid "``images.py``::"
msgstr ""

# 499d25d74318471ba03e9c5adc0aa30f
#: ../develop/plone/images/content.rst:307
msgid "Automatic image scales on ReferenceFields"
msgstr ""

# 50242a60cdc0430f97c7fb27a7dcb5ab
#: ../develop/plone/images/content.rst:345
msgid "in configure.zcml::"
msgstr ""

# 971b5a9036164ee3af851caa4401ed53
#: ../develop/plone/images/index.rst:3
msgid "Images"
msgstr ""

# e2309aa1a11541c8ae2edaa766edc4ca
#: ../develop/plone/images/index.rst:5
msgid "Image manipulation related documentation."
msgstr ""

# 763603a0864949bea97de9d0b8129d4f
#: ../develop/plone/images/pil.rst:3
msgid "Python Imaging Library (PIL)"
msgstr ""

# d718bfb121ef4c87bbaf973745f8b042
#: ../develop/plone/images/pil.rst:5
msgid ""
"Plone uses internally  Python Imaging Library (PIL) for low level image "
"manipulation and decoding."
msgstr ""

# 5566e1955da6465fb4dfe73bacc02a5c
#: ../develop/plone/images/pil.rst:9
msgid "Installing PIL"
msgstr ""

# e5e64d4531744368a47989d2784e44ed
#: ../develop/plone/images/pil.rst:11
msgid ""
"This concerns only UNIXes as Windows installer comes with PIL binaries."
msgstr ""

# 25b2c34df9944aff8769c1f1dcf4339e
#: ../develop/plone/images/pil.rst:14
msgid ""
"http://www.koansys.com/tech/install-plone-with-zopeskel-buildout-needs-pil"
msgstr ""

# df0bd00eb47b4dbabae0ed925d86c8d5
#: ../develop/plone/images/pil.rst:16
msgid ""
"http://blog.twinapex.fi/2009/11/19/installing-python-imaging-library-pil-"
"under-virtualenv-or-buildout/"
msgstr ""

# 0f30ecc0f2c642c7a3b9eb9fcd15e6cc
#: ../develop/plone/images/pil.rst:18
msgid ""
"http://destefano.wordpress.com/2008/03/18/zope-buildouts-for-plone-on-os-x"
"-heaven-or-hell/"
msgstr ""

# 90e7f0ee004b4b14ab77d5a47bc38e8d
#: ../develop/plone/images/pil.rst:20
msgid ""
"PIL has libjpeg as a dependency and you need to install it using your "
"operating system package manager. On OSX you can use `macports "
"<http://www.macports.org/>`_."
msgstr ""

# 5aa776b12bc541db817d8e49041132e1
#: ../develop/plone/images/pil.rst:24
msgid ""
"Make sure that you don't have PIL without libjpeg support in your system-"
"wide Python setup"
msgstr ""

# 9303ded842744340a47d2397881e83d0
#: ../develop/plone/images/pil.rst:28
msgid "Installing libjpeg on OS X"
msgstr ""

# e610ec4042724093a39f5558a0773790
#: ../develop/plone/images/pil.rst:30
msgid "Get http://www.ijg.org/files/jpegsrc.v7.tar.gz, and then::"
msgstr ""

# e774c23c049e4578a5bef99500f6cb5d
#: ../develop/plone/images/pil.rst:39
msgid "Then you can install PIL with JPEG support."
msgstr ""

# 71df181c650d4e3e87ca9c48cbe83214
#: ../develop/plone/images/pil.rst:42
msgid "Pillow"
msgstr ""

# ea7c71f4b5c849e5be1ddfc99cd55126
#: ../develop/plone/images/pil.rst:44
msgid ""
"In late 2010, a packaging fork called `Pillow`_ was created to offer better "
"multi-OS installation support. Specifically it offers:"
msgstr ""

# 22f845aa82034cb196bab284b30fac0f
#: ../develop/plone/images/pil.rst:46
msgid "Setuptools compatibility"
msgstr ""

# 243f0caefb1948088a692929b69a7adc
#: ../develop/plone/images/pil.rst:47
msgid "Hosting (and mirroring) by PyPI (vs. off site)"
msgstr ""

# 69856a3a67c548beb6374a5bddc587e7
#: ../develop/plone/images/pil.rst:48
msgid "Windows eggs"
msgstr ""

# afcc3e61197748359544b25fb0030965
#: ../develop/plone/images/pil.rst:49
msgid ""
"Bug fixes (many of which simply add vendor-specific library directories to "
"the compiler's search path.)"
msgstr ""

# 9ad01af0f3644278971fb5baf9069208
#: ../develop/plone/images/pil.rst:51
msgid ""
"As a result, PIL can now be installed on many more systems simply by using "
"the \"Pillow\" package name. E.g.::"
msgstr ""

# 120327c6f766438085087f6dbf4af85a
#: ../develop/plone/images/pil.rst:59
msgid "Or add to the list of eggs in your Buildout."
msgstr ""

# cd2fd32c6ea54b79b9f687fab5a4476e
#: ../develop/plone/images/templates.rst:3
msgid "Images in page templates"
msgstr ""

# 2a249f3615af42948930dcb1be69bf72
#: ../develop/plone/images/templates.rst:7
msgid "How to link to images in page templates in Plone."
msgstr ""

# b340f85cf5724222835284dbd142bc05
#: ../develop/plone/images/templates.rst:12
msgid "Putting a static image into a page template"
msgstr ""

# 245bd19223c8458db8e139bba4ce8072
#: ../develop/plone/images/templates.rst:14
msgid "Here is an example how to create an ``<img>`` tag in a ``.pt`` file:"
msgstr ""

# dfa75580d3c540cebef9f7f7c852e2d3
#: ../develop/plone/images/templates.rst:20
msgid "Let's break this down:"
msgstr ""

# 6d1498cc40774eb888b6b2c7181fa768
#: ../develop/plone/images/templates.rst:22
msgid "Obviously we are rendering an ``<img>`` tag."
msgstr ""

# cd7a643a1c2040f7acd16202145862e6
#: ../develop/plone/images/templates.rst:24
msgid ""
"The ``src`` attribute is dynamically generated using a :term:`TALES` "
"expression."
msgstr ""

# 344ffa6fc7bf4a708a314fd2513356f8
#: ../develop/plone/images/templates.rst:27
msgid ""
"We use *string comprehension* to create the ``src`` attribute. Alternatively"
" we could use e.g. the ``python:`` :term:`TALES` expression type and embed "
"one line python of code to generate the attribute value."
msgstr ""

# 858c90c5a7ea473ea0a11f513f9ac51b
#: ../develop/plone/images/templates.rst:31
msgid ""
"We look up a helper view called :doc:`plone_portal_state "
"</develop/plone/misc/context>`. This is a ``BrowserView`` shipped with "
"Plone. Its purpose is to expose different helper methods to page templates "
"and Python code."
msgstr ""

# fa225025a77345bd8dbb51d782f9bf1d
#: ../develop/plone/images/templates.rst:35
msgid ""
"We call ``plone_portal_state``'s ``portal_url()`` method. This will return "
"the root URL of our site. Note that this is not necessary the domain's top-"
"level URL, as Plone sites can be nested in folders, or served on a path "
"among unrelated web properties."
msgstr ""

# e492d10d34f34b9d82033f964326c6e0
#: ../develop/plone/images/templates.rst:41
msgid ""
"We append our Zope 3 resource path to our site root URL (see below). This "
"maps to some static media folder in our add-on files on the disk."
msgstr ""

# 00089c0b3d464ad0bf6c572b1a9f5411
#: ../develop/plone/images/templates.rst:44
msgid "There we point to ``close-icon.png`` image file."
msgstr ""

# e0b4763d92bf4a4baeef18a4574abf40
#: ../develop/plone/images/templates.rst:46
msgid ""
"We also add the ``alt`` attribute of the ``<img>`` tag normally. It is not "
"dynamically generated."
msgstr ""

# b388cfff8a344270843d896cd596a4eb
#: ../develop/plone/images/templates.rst:49
msgid ""
"When the page template is generated, the following snippet could look like, "
"for example:"
msgstr ""

# 2676141ac41a466cb827d0ba8ee1bdae
#: ../develop/plone/images/templates.rst:56
msgid "... or:"
msgstr ""

# 3c3c12bcd6d84458b3ee7bd58f7b3838
#: ../develop/plone/images/templates.rst:62
msgid "... depending on the site virtual hosting configuration."
msgstr ""

# 1bab68b83d0841e7886e76acfa559864
#: ../develop/plone/images/templates.rst:65
msgid "Relative image look-ups"
msgstr ""

# 5c5c492165cf4b379f3385e481a9385b
#: ../develop/plone/images/templates.rst:69
msgid ""
"Never create relative image look-ups without prefixing the image source URL "
"with the site root."
msgstr ""

# f1da030166d74d259a11ad09466ed54a
#: ../develop/plone/images/templates.rst:72
msgid "Hardcoded relative image path might seem to work:"
msgstr ""

# 2e4b1f11a67f44a28dc42ee1291e9ef4
#: ../develop/plone/images/templates.rst:78
msgid ""
"... but this causes a different image *base URL* to be used on every page. "
"The image URLs, from the browser point of view, would be:"
msgstr ""

# 3cfd2ddea80648019c81723d01e08f2b
#: ../develop/plone/images/templates.rst:85
msgid "... and then in another folder:"
msgstr ""

# 0f23cdb672dd41ac86c449e0d00484ae
#: ../develop/plone/images/templates.rst:91
msgid "... which **prevents the browser from caching the image**."
msgstr ""

# 347b416a8fe343d4813211e9653a3c97
#: ../develop/plone/images/templates.rst:94
msgid "Registering static media folders in your add-on product"
msgstr ""

# 392494967e4c48099921362d8919928e
#: ../develop/plone/images/templates.rst:97
msgid "Zope 3 resource directory"
msgstr ""

# d9b4bc71e9c64e6994e367e35e1889ed
#: ../develop/plone/images/templates.rst:99
msgid ""
"The right way to put in a static image is to use a Zope 3 resource "
"directory."
msgstr ""

# d789783cb483429ea3e066bfa6e94922
#: ../develop/plone/images/templates.rst:102
msgid ""
"Create folder ``yourcompany.product/yourcompany/product/browser/static``."
msgstr ""

# d13016a030274ebdacfbd72d8ad75a0f
#: ../develop/plone/images/templates.rst:104
msgid ""
"Add the following :term:`ZCML` to "
"``yourcompany.product/yourcompany/product/browser/configure.zcml``."
msgstr ""

# 603c836f0fb34613b61f438cdd19aaa5
#: ../develop/plone/images/templates.rst:115
msgid ""
"This will be picked up at the ``++resource++yourcompany.product/`` static "
"media path."
msgstr ""

# a60584d872a04cca82bd356c1964337d
#: ../develop/plone/images/templates.rst:118
msgid ""
"Layer is optional: the static media path is available only when your add-on "
"product is installed if the :doc:`layer </develop/plone/views/layers>` is "
"specified."
msgstr ""

# de8028847ccf4470b4d324b00a692022
#: ../develop/plone/images/templates.rst:123
msgid "Grok static media folder"
msgstr ""

# 79a5a6fb93c043d4be03e70324b594c7
#: ../develop/plone/images/templates.rst:125
msgid ""
"This applies for add-on products using :doc:`five.grok "
"</develop/addons/components/grok>` API."
msgstr ""

# 5d0d0c23ccd24541899b9588e6c038b6
#: ../develop/plone/images/templates.rst:127
msgid "Create folder ``yourcompany.product/yourcompany/product/static``"
msgstr ""

# ed2d2e3f52d04760b811f88719c660e1
#: ../develop/plone/images/templates.rst:129
msgid ""
"This will be automatically picked up as ``++resource++yourcompany.product/``"
" static media path when a Grok'ed add-on is launched."
msgstr ""

# 6f7d43fab2b3459cb0533b5ac8254977
#: ../develop/plone/images/templates.rst:134
msgid "Rendering Image content items"
msgstr ""

# f3735c92ee8647f791ad10072000176b
#: ../develop/plone/images/templates.rst:136
msgid ""
"You can refer to ``ATImage`` object's content data download by adding "
"``/image`` to the URL:"
msgstr ""

# 42469593ad62432ea0e5586bb9e5593d
#: ../develop/plone/images/templates.rst:143
msgid ""
"The magic is done in the ``__bobo_traverse__`` method of ``ATImage`` by "
"providing traversable hooks to access image download:"
msgstr ""

# 07aa390805fd44069629da3db5c184ed
#: ../develop/plone/images/templates.rst:149
msgid "Rendering ``ImageField``"
msgstr ""

# d4b7aedd544a4438a7d1354e9c7902b9
#: ../develop/plone/images/templates.rst:151
msgid ""
"Archetypes's ``ImageField`` maps its data to the content object at attribute"
" which is the field's name. If you have a field ``campaignVideoThumbnail`` "
"you can generate an image tag as follows:"
msgstr ""

# e071e7c24b2e49078a4e241fb28195e1
#: ../develop/plone/images/templates.rst:160
msgid ""
"If you need more complex ``<img>`` output, create a helper function in your "
"``BrowserView`` and use Python code to perform the ``ImageField`` "
"manipulation."
msgstr ""

# 3e7ca338dab8481d8858b55aa5698b50
#: ../develop/plone/images/templates.rst:164
msgid "See ``ImageField`` for more information:"
msgstr ""

# 1bc85f80e6294530af27bdfca81f40e2
#: ../develop/plone/images/templates.rst:169
msgid "``tag()`` method"
msgstr ""

# 213a28f01dbe413b9393eb40897f34d6
#: ../develop/plone/images/templates.rst:173
msgid "Using ``tag()`` is discouraged. Create your image tags manually."
msgstr ""

# da0818d3f06f48c18ff69f4d7d1065a1
#: ../develop/plone/images/templates.rst:175
msgid ""
"Some content provides a handy ``tag()`` method to generate ``<img src=\"\" "
"/>`` tags with different image sizes."
msgstr ""

# d3f61d94b3034587b0e3fddfcaca1f77
#: ../develop/plone/images/templates.rst:179
msgid "``tag()`` is available on"
msgstr ""

# 38b290cc874144ac8da1653710e37e45
#: ../develop/plone/images/templates.rst:181
msgid "Archetypes ``ImageField``"
msgstr ""

# 8196168414984a39ae34f4d4f4ea6282
#: ../develop/plone/images/templates.rst:183
msgid "``ATNewsItem``"
msgstr ""

# b3833bd577d545558dd15be2f2ddf99e
#: ../develop/plone/images/templates.rst:185
msgid "``ATImage``"
msgstr ""

# 27d61055389f4a32907240fc0a053d6a
#: ../develop/plone/images/templates.rst:187
msgid "``FSImage`` (Zope 2 image object on the file-system)"
msgstr ""

# 50025e9a60c14938b454e21beb7c5834
#: ../develop/plone/images/templates.rst:189
msgid ""
"``tag()`` is defined in `OFS.Image "
"<http://svn.zope.org/Zope/trunk/src/OFS/Image.py?rev=96262&view=auto>`_."
msgstr ""

# dbfe91f0bb654a58829428c70210383b
#: ../develop/plone/images/templates.rst:192
msgid "Scaling images"
msgstr ""

# 42973b34b6d1461d92dd79e9f54eb2db
#: ../develop/plone/images/templates.rst:194
msgid ""
"``tag()`` supports scaling. Scale sizes are predefined. When an ``ATImage`` "
"is uploaded, various scaled versions of it are stored in the database."
msgstr ""

# 7e812bbec43642e391cb1b8e57216582
#: ../develop/plone/images/templates.rst:198
msgid "Displaying a version of the image using the \"preview\" scale::"
msgstr ""

# cc44fbbc34ca4e0a86c5a93d0d3058e7
#: ../develop/plone/images/templates.rst:202
msgid "This will generate:"
msgstr ""

# 293d4b04287a473f92f0fd80106e428b
#: ../develop/plone/images/templates.rst:210
msgid ""
"If you are not using the ``alt`` attribute, you should set it to an empty "
"string: ``alt=\"\"``. Otherwise screen readers will read the ``src`` "
"attribute of the ``<img>`` tag aloud."
msgstr ""

# 1bf62f27e49b465d9566a2c163d7487f
#: ../develop/plone/images/templates.rst:214
msgid ""
"In order to simplify accessing these image scales, use "
"`archetypes.fieldtraverser "
"<https://pypi.python.org/pypi/archetypes.fieldtraverser>`_. This package "
"allows you to traverse to the stored image scales while still using "
"``AnnotationStorage`` and is a lot simpler to get going (in the author's "
"humble opinion :)."
msgstr ""

# e6bb4b4842e1474b94e677f9a8d816e4
#: ../develop/plone/images/templates.rst:220
msgid ""
"Default scale names and sizes are defined in ``ImageField`` declaration for "
"custom ``ImageField``\\s. For ``ATImage``, those are in "
"`Products.ATContentTypes.content.image "
"<http://svn.plone.org/svn/collective/Products.ATContentTypes/trunk/Products/ATContentTypes/content/image.py>`_."
msgstr ""

# 0e5ed553a9e74a04a029613c23402a44
#: ../develop/plone/images/templates.rst:227
msgid "Lightbox style image pop-ups"
msgstr ""

# 9a773a21e6514a93a2e226cc020f930b
#: ../develop/plone/images/templates.rst:229
msgid ""
"Plone comes with `plone.app.jquerytools "
"<https://pypi.python.org/pypi/plone.app.jquerytools>`_ which offers easy "
"integration for lightbox style image pop-ups."
msgstr ""

# f78507f9945e468abd4f12678a932082
#: ../develop/plone/images/templates.rst:232
msgid ""
"You can use Plone standard image content type, defining scales using "
"`plone.app.imaging <https://github.com/plone/plone.app.imaging/>`_ or you "
"can define image fields in your schema."
msgstr ""

# d008b59710fb42bf99e109960b4a9714
#: ../develop/plone/images/templates.rst:235
msgid ""
"In the example below we define custom image fields in Archetypes schema."
msgstr ""

# 5b28b2d820eb4dfca2c89623ae565ff0
#: ../develop/plone/images/templates.rst:237
msgid "contenttype.py::"
msgstr ""

# 0f096624b4e14cc189a14be93539ccb4
#: ../develop/plone/images/templates.rst:265
msgid "Related view page template file"
msgstr ""

# 65f4400cdc07402b9b8d1805beebae30
#: ../develop/plone/images/templates.rst:277
msgid ""
"And then we activate all this in a Javascript using ``prepOverlay()`` from "
"``plone.app.jquerytools``"
msgstr ""

# 922f3ff547994560a88eb0a16dcb09d1
#: ../develop/plone/images/templates.rst:309
msgid "Rotating banners"
msgstr ""

# fda8906672f24d4cb68b8fa706f48c21
#: ../develop/plone/images/templates.rst:311
msgid ""
"Simple rotating banneres can be done with `jQuery Cycle plug-in (lite) "
"<http://jquery.malsup.com/cycle/>`_."
msgstr ""

# a0a8b9a6430d4c9cb3326d1f9a99e63c
#: ../develop/plone/images/templates.rst:313
msgid ""
"Example TAL code... render list of content items and extract one image from "
"each of them"
msgstr ""

# 163a9c6fef4b43ab8677c76727fd5d67
#: ../develop/plone/images/templates.rst:327
msgid "Then use the the following Javascript to boostrap the cycling"
msgstr ""

# 77054a50983449d692ad2e115ce76cae
#: ../develop/plone/images/templates.rst:345
msgid ""
"You need to have this snippet and ``jquery.cycle.light.js`` in your "
"portal_javascripts registry."
msgstr ""

# 28204902b06f4b69ad1f39ba55cfd85c
#: ../develop/plone/images/templates.rst:347
msgid ""
"You also may need to set pixel height for ``cycle`` elements, as they use "
"absolute positioning making the element take otherwise 0 pixel of height."
msgstr ""

# 046c2b7d8a6243f0b77040e36ed827b1
#: ../develop/plone/index.rst:2
msgid "Programming Plone"
msgstr ""

# 9e1b2e8bbe5f4ee699dc7bbd989f0040
#: ../develop/plone/members/index.rst:3
msgid "Users and members"
msgstr ""

# b6ae11ed3e3a4f08b39fd03cfedda30b
#: ../develop/plone/members/member_basics.rst:3
msgid "Member manipulation"
msgstr ""

# 43f981fb4c0b47cbb99d84e0423929bc
#: ../develop/plone/members/member_basics.rst:7
msgid "How to programmatically create, read, edit and delete site members."
msgstr ""

# 986c7fba835441b3a578babefe6c2bda
#: ../develop/plone/members/member_basics.rst:14
msgid ""
"In Plone, there are two loosely-coupled subsystems relating to members:"
msgstr ""

# 3122fbbd23044e92b9a902b4bfaf3081
#: ../develop/plone/members/member_basics.rst:20
msgid "*Authentication and permission* information"
msgstr ""

# ede6865908324bf5a084d97b18ea2f94
#: ../develop/plone/members/member_basics.rst:17
msgid ""
"(``acl_users`` under site root), managed by the :term:`PAS`. In a default "
"installation, this corresponds to Zope user objects. PAS is *pluggable*, "
"though, so it may also be authenticating against an LDAP server, Plone "
"content objects, or other sources."
msgstr ""

# 87f74801998d404bad82ae6df2df9c97
#: ../develop/plone/members/member_basics.rst:26
msgid "*Member profile* information"
msgstr ""

# 19f1c8ebcf58489e96d390d8795588e4
#: ../develop/plone/members/member_basics.rst:23
msgid ""
"accessible through the ``portal_membership`` tool. These represent Plone "
"members. PAS authenticates, and the Plone member object provides metadata "
"about the member."
msgstr ""

# 832a796cf32c47f28c1c46b9b967180f
#: ../develop/plone/members/member_basics.rst:29
msgid "Getting the logged-in member"
msgstr ""

# 0a51b48151ca45799d00f4bfe19f1510
#: ../develop/plone/members/member_basics.rst:31
msgid ""
"Anonymous and logged-in members are exposed via the :doc:`IPortalState "
"context helper </develop/plone/misc/context>`."
msgstr ""

# 8a54dffef08246b6bd263cc554fac1a5
#: ../develop/plone/members/member_basics.rst:34
msgid ""
"Example (browserview: use ``self.context`` since ``self`` is not "
"acquisition-wrapped)::"
msgstr ""

# b8cb2f0e33ca4fa493e09e2eb56edc97
#: ../develop/plone/members/member_basics.rst:48
msgid "or from a template:"
msgstr ""

# 680f3a3dbdc645568b9635c0f0985ec7
#: ../develop/plone/members/member_basics.rst:57
msgid "Getting any member"
msgstr ""

# 1aaf686e60d345a3bcb2834d84678862
#: ../develop/plone/members/member_basics.rst:59
msgid "To get a member by username (you must have ``Manager`` role)::"
msgstr ""

# eaa2aabdf45d4286bf5854038cb47c42
#: ../develop/plone/members/member_basics.rst:64
msgid "To get all usernames::"
msgstr ""

# fe1e2b4903b040ec9bf8f2d0a500c41a
#: ../develop/plone/members/member_basics.rst:70
msgid "Getting member information"
msgstr ""

# 57301b1f4697426e80e1ceb601cde423
#: ../develop/plone/members/member_basics.rst:72
msgid ""
"Once you have access to the member object, you can grab basic information "
"about it."
msgstr ""

# 69f30ee396f54e5996e3d6aeb3767ef8
#: ../develop/plone/members/member_basics.rst:75
msgid "Get the user's name::"
msgstr ""

# 5f3e38f05adb41ff9f15ffb2350be6c3
#: ../develop/plone/members/member_basics.rst:80
msgid "Reseting user password without emailing them"
msgstr ""

# e7a10da073a84defae0e242b0b9ecb96
#: ../develop/plone/members/member_basics.rst:82
msgid ""
"https://plone.org/documentation/kb/reset-a-password-without-having-to-email-"
"one-to-the-user"
msgstr ""

# bf53f782dde541a6b9e3e01193f42c4c
#: ../develop/plone/members/member_basics.rst:85
msgid "Exporting and importing member passwords"
msgstr ""

# 5cb65df527f24a6c9288d57a0d5e28f2
#: ../develop/plone/members/member_basics.rst:87
msgid ""
"You can also get at the hash of the user's password (only the hash is "
"available, and only for standard Plone user objects) (in this example we're "
"in Plone add-on context, since ``self`` is acquisition-wrapped)::"
msgstr ""

# 29940bffe7374890ba74aea508c37ee8
#: ../develop/plone/members/member_basics.rst:96
msgid ""
"Note that this is a private data structure. Depending on the Plone version "
"and add-ons in use, it may not be available."
msgstr ""

# fba776557c144166ad7b7f6a217cc5c8
#: ../develop/plone/members/member_basics.rst:99
msgid ""
"You can use this hash directly when importing your user data, for example as"
" follows (can be executed from a :doc:`debug prompt "
"</develop/plone/misc/commandline>`.)::"
msgstr ""

# 3b67c57247a3453fb551d06ef9747f6b
#: ../develop/plone/members/member_basics.rst:123
msgid ""
"Also, take a look at a script for exporting Plone 3.0's memberdata and "
"passwords:"
msgstr ""

# 94b530934af94a10afa188997fe43566
#: ../develop/plone/members/member_basics.rst:126
msgid ""
"http://blog.kagesenshi.org/2008/05/exporting-plone30-memberdata-and.html"
msgstr ""

# 8588e20443d843569c3bd9015aea261b
#: ../develop/plone/members/member_basics.rst:131
msgid "Iterating all site users"
msgstr ""

# 6860f917062149da8c9bd09ba61f618f
#: ../develop/plone/members/member_basics.rst:148
msgid "Zope users, such as *admin*, are not included in this list."
msgstr ""

# f057b87d95ad4110b764a6e507f5a73a
#: ../develop/plone/members/member_basics.rst:152
msgid "Getting all *Members* for a given *Role*"
msgstr ""

# 4d02c95f142c405da8ba4cfd4c996f31
#: ../develop/plone/members/member_basics.rst:154
msgid ""
"In this example we use the ``portal_membership`` tool. We assume that a role"
" called ``Agent`` exists and that we already have the context::"
msgstr ""

# 6868faead1ac47b49d8e38b8827878a0
#: ../develop/plone/members/member_basics.rst:166
msgid "Groups"
msgstr ""

# 3090c49a3cf744929365616d562179da
#: ../develop/plone/members/member_basics.rst:168
msgid ""
"Groups are stored as ``PloneGroup`` objects. ``PloneGroup`` is a subclass of"
" ``PloneUser``.  Groups are managed by the ``portal_groups`` tool."
msgstr ""

# 643b7e9810714210b4bafd92ae53d35a
#: ../develop/plone/members/member_basics.rst:171
msgid ""
"https://github.com/plone/Products.PlonePAS/blob/master/Products/PlonePAS/plugins/ufactory.py"
msgstr ""

# 4900536bd4194ee98d920e3411256997
# ac6355282f5147528abc0c8c9ebfea56
#: ../develop/plone/members/member_basics.rst:173
#: ../develop/plone/members/member_basics.rst:190
msgid ""
"https://github.com/plone/Products.PlonePAS/blob/master/Products/PlonePAS/plugins/group.py"
msgstr ""

# ef717ec6d5814240ab26e871d121d67b
#: ../develop/plone/members/member_basics.rst:176
msgid "Creating a group"
msgstr ""

# e652b604b79741988762e12cc1985283
#: ../develop/plone/members/member_basics.rst:188
msgid ""
"https://github.com/plone/Products.PlonePAS/blob/master/Products/PlonePAS/tests/test_groupstool.py"
msgstr ""

# 9c80bc2011744cdfbcc51ba902bfddf7
#: ../develop/plone/members/member_basics.rst:193
msgid "Add local roles to a group"
msgstr ""

# 8c708010cf92444eaecd8a7c037e43a4
#: ../develop/plone/members/member_basics.rst:201
msgid ""
"This is an example of code in a *view*, where ``context`` is available."
msgstr ""

# 3a979c25a51b4aa78289249b550bfe1d
#: ../develop/plone/members/member_basics.rst:205
msgid "Update properties for a group"
msgstr ""

# d11aa0f35c3f46d3a162c62459895015
#: ../develop/plone/members/member_basics.rst:207
msgid ""
"The ``editGroup`` method modifies the title and description in the "
"``source_groups`` plugin, and subsequently calls ``setGroupProperties(kw)`` "
"which sets the properties on the ``mutable_properties`` plugin."
msgstr ""

# 6480b2ca166b4e609d759a6f964cf0df
#: ../develop/plone/members/member_basics.rst:218
msgid "Getting available groups"
msgstr ""

# 60450a529a4e488490c82055521df844
#: ../develop/plone/members/member_basics.rst:220
msgid ""
"Getting all groups on the site is possible through ``acl_users`` and the "
"``source_groups`` plugin, which provides the functionality to manipulate "
"Plone groups."
msgstr ""

# 4efe5b37cf9045519fe650fbfd4ca27e
#: ../develop/plone/members/member_basics.rst:224
msgid "Example to get only ids::"
msgstr ""

# 55f1c8fa7013429398335a36fd38ab33
#: ../develop/plone/members/member_basics.rst:230
msgid "Example to get full group information::"
msgstr ""

# 5e92f7c7bddd4412940520cb33d48a5d
#: ../develop/plone/members/member_basics.rst:240
msgid "List users within all groups"
msgstr ""

# f8615d22e92144b09f30222e1be8cd9e
#: ../develop/plone/members/member_basics.rst:242
msgid "Example to get the email addresses of all users on a site, by group::"
msgstr ""

# aa6127e060e542608fafbe1af1d3d97e
#: ../develop/plone/members/member_basics.rst:257
msgid "Adding a user to a group"
msgstr ""

# d84df9e149554bcba27594940b6e3e2f
#: ../develop/plone/members/member_basics.rst:266
msgid "Removing a user from a group"
msgstr ""

# 1116f8714eaf4ab6814068646f9e2e4e
#: ../develop/plone/members/member_basics.rst:273
msgid "Getting groups for a certain user"
msgstr ""

# eb4abfd4f74143ea9b18b4607e3cf01f
#: ../develop/plone/members/member_basics.rst:275
msgid ""
"Below is an example of getting groups for the logged-in user (Plone 3 and "
"earlier)::"
msgstr ""

# fb5017926e1444aaa473f9b46c3724e7
#: ../develop/plone/members/member_basics.rst:281
msgid "In Plone 4 you have to use::"
msgstr ""

# 8945ac06504e40b487b96a27bef02fb5
#: ../develop/plone/members/member_basics.rst:288
msgid "Checking whether a user exists"
msgstr ""

# 5f8ac62784ca46a0bb968bbd3ff59f22
#: ../develop/plone/members/member_basics.rst:297
msgid ""
"http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/RegistrationTool.py?rev=110418&view=auto"
msgstr ""

# 98a9ef06fd4d4500a34ce4fb845914a5
#: ../develop/plone/members/member_basics.rst:303
msgid "Creating users"
msgstr ""

# 111df27b262f46458be7eeff340132b2
#: ../develop/plone/members/member_basics.rst:305
msgid "Use the ``portal_registration`` tool. Example (browserview)::"
msgstr ""

# 8c7681c1fb1346e2a23c12d1d0f21b5e
#: ../develop/plone/members/member_basics.rst:361
msgid "Batch member creation"
msgstr ""

# 01f50b38799746779cd52e4afdb882dd
#: ../develop/plone/members/member_basics.rst:363
msgid "http://plone.org/documentation/kb/batch-adding-users"
msgstr ""

# 022092b9e5484df3acc71f979d00644e
#: ../develop/plone/members/member_basics.rst:367
msgid "Email login"
msgstr ""

# c53e9d86871649bc82fc9f8b9e73d88d
#: ../develop/plone/members/member_basics.rst:370
msgid "Plone 3 does not allow a dot in the username."
msgstr ""

# 27ee4d005f414acfa78bf4196e5ce0a9
#: ../develop/plone/members/member_basics.rst:370
msgid ""
"This is available as an add-on; see "
"http://plone.org/products/betahaus.emaillogin"
msgstr ""

# e13a074eabff4748a60271f776200d31
#: ../develop/plone/members/member_basics.rst:372
msgid "In Plone 4, it is a default feature."
msgstr ""

# b48c2ee8cccf4a33879191604066fc1c
#: ../develop/plone/members/member_basics.rst:376
msgid "Custom member creation form: complex example"
msgstr ""

# 62eb0951acba4cc8af14569fa9b4515d
#: ../develop/plone/members/member_basics.rst:378
msgid ""
"Below is an example of a Grok form which the administrator can use to create"
" new users. New users will receive special properties and a folder for which"
" they have ownership access.  The password is set to be the same as the "
"username.  The user is added to a group named \"companies\"."
msgstr ""

# bbd4e5a5bc074b53b5b1ea99dbf77f2e
#: ../develop/plone/members/member_basics.rst:383
msgid "Example ``company.py``::"
msgstr ""

# 9e13a73a89d24ed1a6151cd7f102b442
#: ../develop/plone/members/member_profile.rst:3
msgid "Member profiles"
msgstr ""

# 115a4a3c4685401db6c764141929e3bd
#: ../develop/plone/members/member_profile.rst:9
msgid "How to manage Plone member properties programmatically"
msgstr ""

# 0a2e69b4af83430fbbb30c21466bbb3e
#: ../develop/plone/members/member_profile.rst:14
msgid ""
"Member profile fields are the fields which the logged-in member can edit "
"himself on his user account page."
msgstr ""

# f21fb2f7308542a690e5240d0137a222
#: ../develop/plone/members/member_profile.rst:17
msgid "For more info, see:"
msgstr ""

# 083e76e7e9f541e38ef794228c730d36
#: ../develop/plone/members/member_profile.rst:20
msgid "``MemberDataTool``"
msgstr ""

# 786fe00cb9884c699d8d3775be5837da
# 073c3b3a28244649a9bda1d142dd76b9
#: ../develop/plone/members/member_profile.rst:20
#: ../develop/plone/members/member_profile.rst:23
msgid ""
"http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/MemberDataTool.py?rev=110418&view=auto"
msgstr ""

# b27e1cb6fa184d32a9b52ba761fc6434
#: ../develop/plone/members/member_profile.rst:23
msgid "``MemberData`` class"
msgstr ""

# 685397f2913d481fa8a927520dffcc8d
#: ../develop/plone/members/member_profile.rst:25
msgid "PlonePAS subclasses and extends MemberData and MemberDataTool."
msgstr ""

# 07ad421041b5453e974d5ab6ce543eeb
#: ../develop/plone/members/member_profile.rst:27
msgid ""
"`See PlonePAS MemberDataTool "
"<http://dev.plone.org/collective/browser/Products.PlonePAS/trunk/Products/PlonePAS/tools/memberdata.py?rev=122125#L27>`_."
msgstr ""

# 2b28d814e5e84fb29d41180f06aa853e
#: ../develop/plone/members/member_profile.rst:29
msgid ""
"`See PlonePAS MemberData class "
"<http://dev.plone.org/collective/browser/Products.PlonePAS/trunk/Products/PlonePAS/tools/memberdata.py?rev=122125#L220>`_."
msgstr ""

# b6c85c435d324a21aa0e96467d1c1d0d
#: ../develop/plone/members/member_profile.rst:32
msgid "Getting member profile properties"
msgstr ""

# 03086ba969ba4a1289eb10190716b6da
#: ../develop/plone/members/member_profile.rst:36
msgid ""
"The following applies to vanilla Plone. If you have customized membership "
"behavior it won't necessarily work."
msgstr ""

# 6d57042e196047669ea2f1d59fda8c0c
#: ../develop/plone/members/member_profile.rst:39
msgid ""
"Member profile properties (title, address, biography, etc.) are stored in "
"``portal_membership`` tool."
msgstr ""

# 4eb76fb27d584724877906620906c229
#: ../develop/plone/members/member_profile.rst:42
msgid ""
"Available fields can be found in the :term:`ZMI` -> ``portal_membership`` ->"
" :guilabel:`Properties` tab."
msgstr ""

# d4774765d541497f9ffd54dd061f923c
#: ../develop/plone/members/member_profile.rst:45
msgid ""
"The script below is a simple example showing how to list all member email "
"addresses::"
msgstr ""

# b8b9e177783b4b3dbb77e80c67012c48
#: ../develop/plone/members/member_profile.rst:57
msgid "Accessing member data"
msgstr ""

# 7ab2334f5fe342b39e367bc0b48a25eb
#: ../develop/plone/members/member_profile.rst:61
msgid "Get member data by username"
msgstr ""

# 3372ae856aaf4b54a55e679521d655b0
#: ../develop/plone/members/member_profile.rst:68
msgid ""
"`ToolbarViewlet has some sample code "
"<https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/viewlets/common.py>`_"
msgstr ""

# 44b60d15eb2542f58b95c1de2ab4be12
#: ../develop/plone/members/member_profile.rst:67
msgid "how to retrieve these properties."
msgstr ""

# ef1a6e5f6455497e867b18710f1c4c28
#: ../develop/plone/members/member_profile.rst:71
msgid "Getting member fullname"
msgstr ""

# 97095a11cb394d53bf1c530695a17503
#: ../develop/plone/members/member_profile.rst:73
msgid ""
"In Python code you can access properties on the ``MemberData`` object::"
msgstr ""

# bddf643efbb944cbbc84c4848c0f9cc2
#: ../develop/plone/members/member_profile.rst:77
msgid "In a template you can do something along the same lines::"
msgstr ""

# 0e6e2c2d632942e88b4e542498661de5
#: ../develop/plone/members/member_profile.rst:83
msgid "Note that this code won't work for anonymous users."
msgstr ""

# 8375398e4f4e4301925bac99165076d4
#: ../develop/plone/members/member_profile.rst:86
msgid "Setting member profile properties"
msgstr ""

# d46752fe26804ec2af689da93abf90b7
#: ../develop/plone/members/member_profile.rst:88
msgid ""
"Use ``setMemberProperties(mapping={...})`` to batch update properties. Old "
"properties are not removed."
msgstr ""

# cfcede4ffc404e85b928568b41160b08
#: ../develop/plone/members/member_profile.rst:96
msgid ""
"New properties must be explicitly declared in ``portal_memberdata``, before "
"creation of the member, or ``setMemberProperties()`` will silently fail."
msgstr ""

# 4e0c0819c25e4c00a12099d96adecaba
#: ../develop/plone/members/member_profile.rst:102
msgid "How to retrofit existing members with new properties?"
msgstr ""

# a884197e882548cb9cf635ff784e45c8
#: ../develop/plone/members/member_profile.rst:135
msgid "Setting password"
msgstr ""

# 466d050a920b4bb3ad3c0d85d63a7835
#: ../develop/plone/members/member_profile.rst:137
msgid "Password is a special case."
msgstr ""

# cfe2620737914e0688782a7851c119fc
#: ../develop/plone/members/member_profile.rst:139
msgid "Example how to set the user password::"
msgstr ""

# 6fb8936191874cffa9426ee3e64f120c
#: ../develop/plone/members/member_profile.rst:147
msgid "Increase minimum password size"
msgstr ""

# 8413b920b5984851af0e6459fe89195f
#: ../develop/plone/members/member_profile.rst:149
msgid ""
"To increase the minimum password size, copy ``validate_pwreset_password`` to"
" your custom folder and insert the following lines::"
msgstr ""

# ecaa3a4c32e442d6895157ddf927f504
#: ../develop/plone/members/member_profile.rst:155
msgid ""
"This will increase the minimum password size for the password reset form to "
"8 characters. (This does not effect new user registration, that limit will "
"still be 5.)"
msgstr ""

# fcd0dcbff5c54b0f9dd4f32357a0223e
#: ../develop/plone/members/member_profile.rst:159
msgid "Don't forget to update your form templates to reflect your changes!"
msgstr ""

# 47413f5ae08d474fbc4e04dff4bec803
#: ../develop/plone/members/member_profile.rst:164
msgid "Default password length - password reset form"
msgstr ""

# 74ce1e2e3d6843ce8bcd41c3c6856e64
#: ../develop/plone/members/member_profile.rst:166
msgid ""
"The password reset form's minimum password length is 5 characters. To "
"increase this:"
msgstr ""

# f3375445c8344b4ab0d1e566ccc0c298
#: ../develop/plone/members/member_profile.rst:169
msgid ""
"Copy ``validate_pwreset_password`` into your custom folder and add the "
"following lines::"
msgstr ""

# 06aa3fb437ca4fa3973106aa23362980
#: ../develop/plone/members/member_profile.rst:175
msgid "before the ``if state.getErrors():`` method."
msgstr ""

# c5ab6f07d368412a9568a5bea4c1e745
#: ../develop/plone/members/member_profile.rst:177
msgid ""
"This would increase the minimum password size to 8 characters. Remember to "
"update your form templates accordingly."
msgstr ""

# 1902fa1d573f49dd8f1becbd35375539
#: ../develop/plone/members/member_profile.rst:182
msgid "Setting visual editor for all users"
msgstr ""

# 9371a8267cfd4476a1cc36c772834565
#: ../develop/plone/members/member_profile.rst:184
msgid "The *visual editor* property is set on the member upon creation."
msgstr ""

# 51e1535f5f8d4b01866b45616e3f942f
#: ../develop/plone/members/member_profile.rst:186
msgid ""
"If you want to change all site members to use TinyMCE instead of Kupu. you "
"have to do it using the command-line --- Plone provides no through-the-web "
"way to change the properties of other members. Here is a script which does "
"the job:"
msgstr ""

# 7404a1c4eaab4a0f8d7c6fdb102a611c
#: ../develop/plone/members/member_profile.rst:192
msgid "``migrate.py``::"
msgstr ""

# 6c85b76d54164555bd75bf4e7a1ba09d
#: ../develop/plone/members/member_profile.rst:222
msgid "Run it::"
msgstr ""

# 77f59abe9c8940c29dd880647e52b8e6
#: ../develop/plone/members/member_profile.rst:228
msgid ""
"The script does not work through the :term:`ZMI` as member properties do not"
" have proper security declarations, so no changes are permitted."
msgstr ""

# 833ba4632bca4f94a6cf087f022a2e14
#: ../develop/plone/members/member_profile.rst:233
msgid "Password reset requests"
msgstr ""

# 1cd0d85724cf43c38f9f33b12a396608
#: ../develop/plone/members/member_profile.rst:235
msgid ""
"Directly manipulating password reset requests is useful e.g. for testing."
msgstr ""

# 464f9ccbce984871bdb7f1b295f2986e
#: ../develop/plone/members/member_profile.rst:237
msgid "Poking requests::"
msgstr ""

# 7c87d773847345f1bbeb877d35960d5d
#: ../develop/plone/members/member_profile.rst:246
msgid "Clearing all requests::"
msgstr ""

# 9c673056b8e94bf28b3313d3e4bbd318
#: ../develop/plone/members/membrane.rst:3
msgid "Members as content"
msgstr ""

# 136c6efbdb224e4a867dd06e4aaf3776
#: ../develop/plone/members/membrane.rst:7
msgid ""
"The ``Products.membrane`` and ``Products.remember`` add-ons provide member "
"management where members are represented by Plone content items. The member-"
"as-content paradigm makes member management radically flexible: members can "
"be in different folders, have different workflows and states and different "
"profile fields."
msgstr ""

# 2d3f40075a09403bbcb6cdad3049e24e
#: ../develop/plone/members/membrane.rst:18
msgid ""
"*remember* (small r) and *membrane* are framework add-on products for Plone "
"which allows you to manipulate site members as normal content objects. The "
"product also allows distributed user management and different user classes."
msgstr ""

# 46c40a8053ef4b9996e7850df3cd29d8
#: ../develop/plone/members/membrane.rst:23
msgid ""
"``Products.membrane`` provides a framework for integrating ``acl_users``, "
"which manages access rights, with content-like members and tasks like login."
msgstr ""

# 6a1937fcffde4722972b1dd3603f1b0c
#: ../develop/plone/members/membrane.rst:27
msgid ""
"``Products.remember`` is a basic implementation of this with two different "
"user workflows and a normal user schema."
msgstr ""

# a927c03a519e4d5dafd8d74792a916e1
#: ../develop/plone/members/membrane.rst:33
msgid ""
"Read the `membrane tutorial "
"<http://plone.org/documentation/tutorial/borg/membrane>`_."
msgstr ""

# c65a8497aae048ca9432d72431ca990e
#: ../develop/plone/members/membrane.rst:35
msgid "See the example code ``Products.membrane.example``."
msgstr ""

# 7ffbfeba0a2f4b29aa142c095f39e431
#: ../develop/plone/members/membrane.rst:37
msgid "Read the documents at ``Products.remember/docs/tutorial``."
msgstr ""

# 9cf22a458b5e4f29a893f2266650c168
#: ../develop/plone/members/membrane.rst:39
msgid ""
"See the `Weblion FacultyStaffDirectory product "
"<https://weblion.psu.edu/trac/weblion/wiki/FacultyStaffDirectory>`_, which "
"is a sophisticated implementation of the framework."
msgstr ""

# 1277916b53be4c339667c10cba945cdd
#: ../develop/plone/members/membrane.rst:43
msgid ""
"It is recommended to enable debug-level logging output for membrane related "
"unit tests, as ``PlonePAS`` code swallows several exceptions and does not "
"output them unless debug level is activated."
msgstr ""

# 226b09b4e2234ff09670db565d82266d
#: ../develop/plone/members/membrane.rst:48
msgid "Getting member by username"
msgstr ""

# 7c6965a9fe1047faaa0c41498d77ce16
#: ../develop/plone/members/membrane.rst:63
msgid "Getting Plone member from ``MembraneUser`` or ``owner`` record"
msgstr ""

# e7672fa4a43d452d94188571846e1da8
#: ../develop/plone/members/membrane.rst:65
msgid ""
"Below is an example of how to resolve member content object from "
"``MembraneUser`` record \"owner\" who is user \"local_user\"::"
msgstr ""

# 61ce8d8f3e9f447c8463274349df50b9
#: ../develop/plone/members/membrane.rst:75
msgid "Creating a member"
msgstr ""

# 0a1cfba683e14d5d922fb2dfbdb18052
#: ../develop/plone/members/membrane.rst:77
msgid "The following snippet works in unit tests::"
msgstr ""

# 1de5af64bd8b4bfa839f4f0410f9d259
#: ../develop/plone/members/membrane.rst:108
msgid "Populating member fields automatically"
msgstr ""

# 73a6aca7348f4cacabc6b8c578aa208a
#: ../develop/plone/members/membrane.rst:110
msgid "Use the following unit test snippet::"
msgstr ""

# 3f275a81f4ed46378b536be3caa44070
#: ../develop/plone/members/membrane.rst:148
msgid "Checking member validity"
msgstr ""

# 906f7131c4844ba4b52656ebdcad90d6
#: ../develop/plone/members/membrane.rst:150
msgid "The following snippet is useful for unit testing::"
msgstr ""

# 4858eb7a7fde428f962fb5f36b781bab
#: ../develop/plone/members/membrane.rst:163
msgid "Setting user password"
msgstr ""

# 1ff6c23feed949b4bf2531822fb35d93
#: ../develop/plone/members/membrane.rst:165
msgid ""
"Passwords are stored hashed and can be set using the "
"``BaseMember._setPassword()`` method."
msgstr ""

# 3974dfe2ba2042a7bac7536b0a9c2d18
#: ../develop/plone/members/membrane.rst:168
msgid ""
"``_setPassword()`` takes the password as a plain-text argument and hashes it"
" before storing::"
msgstr ""

# 20c2dcefb3884aecb71d1460e3110cd5
#: ../develop/plone/members/membrane.rst:173
msgid ""
"You may also use the ``portal_registrations`` tool. This method is security-"
"checked and may be used from ZMI scripts::"
msgstr ""

# 6f1579fb2a344432968be7eab231e58f
#: ../develop/plone/members/membrane.rst:179
msgid ""
"Use ``getToolByName`` rather than acquiring the tool from  ``context`` if "
"you're doing this in a browser view."
msgstr ""

# b09b7a314cce46a593b634f18adc3203
#: ../develop/plone/members/membrane.rst:183
msgid "Accessing hashed password"
msgstr ""

# b378e73011914f759d36f862c531b1c1
#: ../develop/plone/members/membrane.rst:185
msgid "Use the password attribute directly::"
msgstr ""

# eb41449a1fbc4c0092c0afde38fc20b9
#: ../develop/plone/members/membrane.rst:189
msgid "The password hash should be a unicode string."
msgstr ""

# 9abc6580a6a94838b48cabfb9f0e7193
#: ../develop/plone/members/membrane.rst:192
msgid ""
"By default, ``Products.remember`` uses the ``HMACHash`` hasher. As a salt, "
"the ``str(context)`` string is used. This means that it is not possible to "
"move hashed password from one context item to another. For more information,"
" see the ``Products.remember.content.password_hashers`` module."
msgstr ""

# e096a017cb324e928878fccbac72ca7f
#: ../develop/plone/members/membrane.rst:199
msgid "Moving members"
msgstr ""

# cdd5a3c3b5b348329e5b865cb396dcfd
#: ../develop/plone/members/membrane.rst:201
msgid ""
"Moving members is not straightforward, as by default member password is "
"hashed with the member location."
msgstr ""

# c3e54c4b968b44e2a0506caa8ec4f200
#: ../develop/plone/members/membrane.rst:204
msgid ""
"Members need to reregister their password after being moved from one folder "
"to another."
msgstr ""

# 4dbc039c65be4d3cac474c32745aaa68
#: ../develop/plone/members/membrane.rst:207
msgid ""
"Here is a complex function to perform moving by recreating the user and "
"deleting the old object::"
msgstr ""

# 0858a5adaf0c4ab79173c4ecdd67a149
#: ../develop/plone/members/sharing_tab.rst:3
msgid "Sharing"
msgstr ""

# a9667b29ad5f425a883d671b71d99c77
#: ../develop/plone/members/sharing_tab.rst:5
msgid ""
"TODO: remove this file, eventually move code example to a \"cookbook\" "
"section."
msgstr ""

# 1f5b68f52f394339b96710b128a16df5
#: ../develop/plone/members/sharing_tab.rst:7
msgid "Out of date"
msgstr ""

# 14c486bbc4744ef9bcdb8ce74fef20e4
#: ../develop/plone/members/sharing_tab.rst:9
msgid ""
"This page is out of date. Please visit: :doc:`Local Roles "
"</develop/plone/security/local_roles>`."
msgstr ""

# b9e699280ce148c1bd3826a8c90f9639
#: ../develop/plone/members/sharing_tab.rst:14
msgid "Customizing the sharing feature of Plone"
msgstr ""

# 1241e19da4de4e1d881f311ae6fa7e16
#: ../develop/plone/members/sharing_tab.rst:22
msgid ""
"`Sharing tab source code "
"<https://github.com/plone/plone.app.workflow/blob/master/plone/app/workflow/browser/sharing.py>`_"
msgstr ""

# bf776f7f73444680b051ae5822f91d9b
#: ../develop/plone/members/sharing_tab.rst:24
msgid ""
"`Default sharing tab role translations "
"<https://github.com/plone/plone.app.workflow/blob/master/plone/app/workflow/configure.zcml>`_"
msgstr ""

# 7b9570a5cbca4bbf8e440cf43acf4dc9
#: ../develop/plone/members/sharing_tab.rst:28
msgid "https://pypi.python.org/pypi/collective.sharingroles"
msgstr ""

# 6a61c82afb8d4fe48b6b496d552b8fe6
#: ../develop/plone/members/sharing_tab.rst:30
msgid ""
"http://encolpe.wordpress.com/2010/02/08/add-a-new-role-in-the-sharing-tab-"
"for-plone-3/"
msgstr ""

# 14d2b5f8dfe64d529c6dd8beb01a2129
#: ../develop/plone/members/sharing_tab.rst:33
msgid "Setting sharing rights programmatically"
msgstr ""

# 258109beb4f443b5a17adac83fecf93e
#: ../develop/plone/members/sharing_tab.rst:36
msgid "Complex example: Create one folder per group and add sharing rights"
msgstr ""

# 2cb7a6a5e1c04a318436ffc32740c673
#: ../develop/plone/members/sharing_tab.rst:38
msgid "The sample code"
msgstr ""

# e0f11761a408498a8c05ecad07ee66ec
#: ../develop/plone/members/sharing_tab.rst:40
msgid ""
"Creates one folder per group, with some groups excluded. The folder is not "
"created if it exists."
msgstr ""

# dca9a3a187274c4bbbfb97627b2a7797
#: ../develop/plone/members/sharing_tab.rst:42
msgid "Blocks role inheritance for the group"
msgstr ""

# f447d92f5e0e468384d0eab57048f9a9
#: ../develop/plone/members/sharing_tab.rst:44
msgid "Gives edit access to the group through sharing"
msgstr ""

# d39f4f57d8b44906b7c0e644c35b00c7
#: ../develop/plone/members/sharing_tab.rst:46
msgid "Gives view access to the logged in users through sharing"
msgstr ""

# a693ac2b45a440e0bb53df0619987464
#: ../develop/plone/members/sharing_tab.rst:48
msgid ""
"Example is provided as Zope External Method. Create External Method in the "
"target parent folder through ZMI. Then run \"Test\" for this external method"
" in ZMI."
msgstr ""

# 580a13d455584994a4a5c389d3974aed
#: ../develop/plone/members/sharing_tab.rst:107
msgid "General methods to manipulate local roles (sharing)"
msgstr ""

# 97df54c614e147e2854d0e84d356a342
#: ../develop/plone/members/sharing_tab.rst:114
msgid "would grant the role \"Reader\" (Can View on the Sharing Tab) to userid."
msgstr ""

# ffaa86d924714d3ea0bb380cfc16a6eb
#: ../develop/plone/members/sharing_tab.rst:116
msgid ""
"Beware that this will set the local roles for the user to only ['Reader']. "
"If the user already has other local roles, this will (untested) clear those."
msgstr ""

# 85663ef886ef4146a2855f94fa93af23
#: ../develop/plone/members/sharing_tab.rst:118
msgid "It will not affect inherited roles."
msgstr ""

# 0e1d9bb462694da797ccb32856e9c44a
# 762b705234264f82bde08bfd7b735d04
#: ../develop/plone/misc/annotations.rst:11
#: ../develop/plone/misc/slideshow.rst:7
msgid ""
"How to use annotation design pattern to store arbitrary values on Python "
"objects (Plone site, HTTP request) for storage and caching purposes."
msgstr ""

# 25532af1d87245868940750327902eb6
#: ../develop/plone/misc/annotations.rst:19
msgid ""
"Annotations is conflict-free way to stick attributes on arbitrary Python "
"objects."
msgstr ""

# 4e6e5d1685da4268a231946871b1f55c
#: ../develop/plone/misc/annotations.rst:21
msgid "Plone uses annotations for:"
msgstr ""

# fef936afbe934040a87186d629ab2fe8
#: ../develop/plone/misc/annotations.rst:23
msgid "Storing field data in Archetypes (Annotation storage)."
msgstr ""

# ca1c23e6943f441eb6c048bd98f0a7f4
#: ../develop/plone/misc/annotations.rst:25
msgid ""
"Caching values on HTTP request object (plone.memoize cache decorators)."
msgstr ""

# df194fd9612b4b6c91d8df75fafc7aaa
#: ../develop/plone/misc/annotations.rst:27
msgid ""
"Storing settings information in portal or content object (various add-on "
"products)."
msgstr ""

# 288513f550854f22af39c3d3e59ad046
#: ../develop/plone/misc/annotations.rst:30
msgid ""
"See `zope.annotation package "
"<https://pypi.python.org/pypi/zope.annotation/3.4.1>`_."
msgstr ""

# edaeaa683673469cba6f657b544a02b8
#: ../develop/plone/misc/annotations.rst:33
msgid "HTTP request example"
msgstr ""

# e85b00b6984c47f4b14dcccde905a4bc
#: ../develop/plone/misc/annotations.rst:35
msgid ""
"Store cached values on HTTP request during the life cycle of one request "
"processing.  This allows you to cache computed values if the computation "
"function is called from the different, unrelated, code paths."
msgstr ""

# 43778fb379a447889ee0bb206fb9b922
#: ../develop/plone/misc/annotations.rst:54
msgid "Content annotations"
msgstr ""

# 96e712de4c3f459d84efcaafbe425776
#: ../develop/plone/misc/annotations.rst:57
msgid "Overview and basic usage"
msgstr ""

# eba00577498e4f65910f67cdec9afa4d
#: ../develop/plone/misc/annotations.rst:59
msgid ""
"If you want to extend any Plone content to contain \"custom\" settings "
"annotations is the recommended way to do it."
msgstr ""

# 399c8ed3279449088afde5b46529e8e6
#: ../develop/plone/misc/annotations.rst:62
msgid ""
"Your add-on can store its settings in Plone site root object using local "
"utilities or annotations."
msgstr ""

# 022b0a1922e74fe485f5ecc630a5fb7a
#: ../develop/plone/misc/annotations.rst:65
msgid "You can store custom settings on content objects using annotations."
msgstr ""

# d9df7bc93d51403a979467789481fa95
#: ../develop/plone/misc/annotations.rst:67
msgid "By default, in content annotations are stored:"
msgstr ""

# f72ec33a372843698b9386bd89d15418
#: ../develop/plone/misc/annotations.rst:69
msgid "Assigned portlets and their settings."
msgstr ""

# 9b193fe0ec1b4957b0b61fbb1fc63ca9
#: ../develop/plone/misc/annotations.rst:71
msgid ""
"Archetypes content type fields using ``AnnotationStorage`` (like ``text`` "
"field on Document)."
msgstr ""

# 167d5dc2a75c43aba79bea746c9f35a3
#: ../develop/plone/misc/annotations.rst:74
msgid "Behavior data from :mod:`plone.behavior` package."
msgstr ""

# 38239f84e855482583dec8974447764d
#: ../develop/plone/misc/annotations.rst:91
msgid "Advanced content annotation"
msgstr ""

# 34d692dbd60d4a98b1f856690790452c
#: ../develop/plone/misc/annotations.rst:93
msgid ""
"The above example is enough for storing simple values as annotations. You "
"may provide more complex annotation objects depending on your application "
"logic on various content types. This example shows how to add a simple "
"\"Like / Dislike\" counter on a content object."
msgstr ""

# 94e3b551f7734b04a40ee0b8ab2cda2d
#: ../develop/plone/misc/annotations.rst:119
msgid ""
"At this step it is essential to check that your custom annotation class can "
"be `pickled <http://docs.python.org/library/pickle.html#what-can-be-pickled-"
"and-unpickled>`_. In the Zope world, this means that you cannot hold in your"
" annotation object any reference to a content too."
msgstr ""

# 2b9f0a1020c047d29c0847850183b51f
#: ../develop/plone/misc/annotations.rst:127
msgid ""
"Use the UID of a content object if you need to keep the reference of that "
"content object in an annotation."
msgstr ""

# 2ebb6fc1c5824237901629da4d1e5672
#: ../develop/plone/misc/annotations.rst:130
msgid ""
"The most pythonic recipe to get (and set if not existing) your annotation "
"for a given key is:"
msgstr ""

# 22e1702222484db58297feaccd14188b
#: ../develop/plone/misc/annotations.rst:148
msgid "This way, you're sure that :"
msgstr ""

# 27db4eb26f084b24851604e3a6c5ecee
#: ../develop/plone/misc/annotations.rst:150
msgid "You won't create annotations on an object that can't support them."
msgstr ""

# 9a7252a10845456faf6600d39f3bc7e8
#: ../develop/plone/misc/annotations.rst:152
msgid ""
"You will create a new fresh annotation mastered with your "
":class:`LikeDislike` for your context object if it does not already exist."
msgstr ""

# 88cd144152674d05bd691ddf8c4a4569
#: ../develop/plone/misc/annotations.rst:155
msgid ""
"You can play with your :class:`LikeDislike` annotation object as with any "
"Python object, all attributes changes will be stored automatically in the "
"annotations of the associated content object."
msgstr ""

# 0eb1dfad3b3e423295475b18bc5b65df
#: ../develop/plone/misc/annotations.rst:162
msgid "Wrapping your annotation with an adapter"
msgstr ""

# c03f3444f481406eaaa3d87ba086678d
#: ../develop/plone/misc/annotations.rst:164
msgid ""
":mod:`zope.annotation` comes with the :func:`factory` function that "
"transforms the annotation class into an adapter (possibly named as the "
"annotation key)."
msgstr ""

# 63765b08851c4b66b04934c7a1f40d9c
#: ../develop/plone/misc/annotations.rst:167
msgid ""
"In addition the annotation created this way have location awareness, having "
":attr:`__parent__` and :attr:`__name__` attributes."
msgstr ""

# 6f499632357d4271bb7ccf0915ec7ccb
#: ../develop/plone/misc/annotations.rst:170
msgid ""
"Let's go back to the above sample and use the "
":func:`zope.annotation.factory` function."
msgstr ""

# 05f1d67ab8624fb6a20506eaf83500bd
#: ../develop/plone/misc/annotations.rst:246
msgid ""
"Read a full doc / test / demo of the :func:`zope.annotation.factory` in the "
":file:`README.txt` file in the root of :mod:`zope.annotation` package for "
"more advanced usages."
msgstr ""

# 8b0edf14a5fd43418553e1190059f98c
#: ../develop/plone/misc/annotations.rst:251
msgid "Cleaning up content annotations"
msgstr ""

# 9358648f2a824359912c4049eb689a90
#: ../develop/plone/misc/annotations.rst:255
msgid ""
"If you store full Python objects in annotations you need to clean them up "
"during your add-on uninstallation. Otherwise if Python code is not present "
"you cannot no longer import or export Plone site (annotations are pickled "
"objects in the database and pickles do no longer work if the code is not "
"present)."
msgstr ""

# 7cf9b63fe0e542b495a5d3a7e7f392eb
#: ../develop/plone/misc/annotations.rst:261
msgid "How to clean up annotations on content objects:"
msgstr ""

# 5635e21f3f834a37863512230317e2d7
#: ../develop/plone/misc/annotations.rst:303
msgid "Make your code persistence free"
msgstr ""

# 94164b86ae8f4bab8446e7dccbacc633
#: ../develop/plone/misc/annotations.rst:305
msgid ""
"There is one issue with the above methods: you are creating new persistent "
"classes so your data need your source code. That makes your code hard to "
"uninstall (have to keep the code BBB + cleaning up the DB by walking throw "
"all objects)"
msgstr ""

# 6e9649da48894e2c98169cca9d1edcd5
#: ../develop/plone/misc/annotations.rst:310
msgid ""
"So here is an other pattern to store data in annotations: Use already "
"existing persistent base code instead of creating your own."
msgstr ""

# 6dc5066aa351440a92076e7a0da8eb6c
#: ../develop/plone/misc/annotations.rst:313
msgid "Please use one of theses:"
msgstr ""

# 22e3de3837ca4f17bbe11423157b7a9c
#: ../develop/plone/misc/annotations.rst:315
msgid "BTrees"
msgstr ""

# 97afc4ded47f4c169adef182fc64e173
#: ../develop/plone/misc/annotations.rst:316
msgid "PersistentList"
msgstr ""

# c884125a01284773a6e6390d24a84c38
#: ../develop/plone/misc/annotations.rst:317
msgid "PersistentDict"
msgstr ""

# fcbad5eab91f4958acda3bc5170f9a00
#: ../develop/plone/misc/annotations.rst:319
msgid ""
"This pattern is used by cioppino.twothumbs and collective.favoriting addons."
msgstr ""

# 38b0cba1729d484bbee35efbf85fb105
#: ../develop/plone/misc/annotations.rst:321
msgid "How to achieve this: https://gist.github.com/toutpt/7680498"
msgstr ""

# 8b69517cff1443cf88a7b67932c4182b
#: ../develop/plone/misc/annotations.rst:326
msgid ""
"http://plone.org/documentation/tutorial/embrace-and-extend-the-"
"zope-3-way/annotations"
msgstr ""

# 16e8376bf4f74a9eaa7b0a6a23dd4a7d
#: ../develop/plone/misc/annotations.rst:3
msgid "annotation"
msgstr ""

# cb359463d37b4729aa7674cff5571c9e
#: ../develop/plone/misc/annotations.rst:159
msgid "adapter"
msgstr ""

# c0cb8d7fd08e4b6696a82100fb8c8cc2
#: ../develop/plone/misc/asyncronoustasks.rst:3
msgid "Clock and asyncronous tasks"
msgstr ""

# 2fdfc52a0fd54061a26059cb12d11b02
#: ../develop/plone/misc/asyncronoustasks.rst:8
msgid "How to run background tasks or cron jobs with Zope"
msgstr ""

# 32c06ae734774b65895b9149617efbca
#: ../develop/plone/misc/asyncronoustasks.rst:13
msgid "Cron jobs"
msgstr ""

# 5319fba1e3234acd99fccd16be6a5f8b
#: ../develop/plone/misc/asyncronoustasks.rst:15
msgid "You can use simple UNIX cron + wget combo to make timed jobs in Plone."
msgstr ""

# ab7e2cd884cf44519fd52f7cd9acd479
#: ../develop/plone/misc/asyncronoustasks.rst:17
msgid ""
"If you need to authenticate, e.g. as an admin, Zope users (not Plone users) "
"can be authenticated using HTTP Basic Auth."
msgstr ""

# 11069d5ecdf54a6c954adbad145c214e
#: ../develop/plone/misc/asyncronoustasks.rst:20
msgid "Create user in Zope root (not Plone site root) in acl_users folder"
msgstr ""

# 283712f566e34a2393f26b4986daa594
#: ../develop/plone/misc/asyncronoustasks.rst:22
msgid "Call it via HTTP Basic Auth"
msgstr ""

# dc65f60fd1e0474ba45df31d3dd35fe1
#: ../develop/plone/misc/asyncronoustasks.rst:24
msgid "http://username:password@localhost:8080/yoursideid/@@clock_view_name"
msgstr ""

# 61cc01950563411ab5786722f541bbaf
#: ../develop/plone/misc/asyncronoustasks.rst:26
msgid ""
"The ``--auth-no-challenge`` option to the wget command will authenticate "
"even if the server doesn't ask you to authenticate. It might come in handy, "
"as Plone does not ask for HTTP authentication, and will just serve "
"Unauthorized if permissions aren't sufficient."
msgstr ""

# f8e95e65046d4b519bc74d72da9e7a28
#: ../develop/plone/misc/asyncronoustasks.rst:32
msgid "Clock server"
msgstr ""

# cf0936ae7d144ab0b754c4f0a9cc7c26
#: ../develop/plone/misc/asyncronoustasks.rst:34
msgid "You can make Zope to make regular calls to your views."
msgstr ""

# 500c0f747279474f8a6c1c81bc566ebf
#: ../develop/plone/misc/asyncronoustasks.rst:36
msgid "Add in buildout.cfg::"
msgstr ""

# 90ee184630cc41409449eaaa28176897
#: ../develop/plone/misc/asyncronoustasks.rst:55
msgid "Create a corresponding user in ZMI."
msgstr ""

# 28dde4101fe34d3ead1c03c5c6964015
#: ../develop/plone/misc/asyncronoustasks.rst:57
msgid "In detail:"
msgstr ""

# 46021f613afd4e64aee88af19b7c3e0b
#: ../develop/plone/misc/asyncronoustasks.rst:59
msgid ""
"method - Path from root to an executable Zope method (Python script, "
"external method, etc.) The method must receive no arguments."
msgstr ""

# 796b9d2786d0437ca5385ebc8094599e
#: ../develop/plone/misc/asyncronoustasks.rst:60
msgid ""
"period - Seconds between each call to the method. Typically, at least 30 "
"specified."
msgstr ""

# 8723250137aa442d929da201f1ef1b8b
#: ../develop/plone/misc/asyncronoustasks.rst:61
msgid "user - a Zope Username"
msgstr ""

# 9f25af7389ad46e3b88aac4cfeb482a7
#: ../develop/plone/misc/asyncronoustasks.rst:62
msgid "password - The password of this user Zope"
msgstr ""

# 531f074b0d1e487b96cd86df82f8967f
#: ../develop/plone/misc/asyncronoustasks.rst:63
msgid ""
"host - The name of the host that is in the header of a request as host: is "
"specified."
msgstr ""

# e1cd9a0eb61e48e79560dc9a34beff03
#: ../develop/plone/misc/asyncronoustasks.rst:65
msgid ""
"To check whether the server clock is running, restart the instance or the "
"ZEO client in the foreground and see if a message similar to the following "
"is displayed:"
msgstr ""

# 62511cfbf5704f6f8ac75c1386db9282
#: ../develop/plone/misc/asyncronoustasks.rst:69
msgid ""
"2009-03-03 19:57:38 INFO ZServer Clock server for \"/ mysite / do_stuff\" "
"started (user: admin, period: 60)"
msgstr ""

# e52418c6a892436ab6d5dc207108cfde
#: ../develop/plone/misc/asyncronoustasks.rst:71
msgid ""
"If you are using a public source control repository for your "
"``buildout.cfg`` you might want to put zope-conf-additional= to "
"``secret.cfg`` which lies only on the production server and is never "
"committed to the version control::"
msgstr ""

# ae4197cd18b146d5ad28afec20c0946f
#: ../develop/plone/misc/asyncronoustasks.rst:83
msgid "Creating a separate ZEO instance for long running tasks"
msgstr ""

# 05093a1b3bfe48bfb13ff41b1bf4a32d
#: ../develop/plone/misc/asyncronoustasks.rst:85
msgid ""
"Below is an example how to extend a single process Plone instance buildout "
"to contain two ZEO front end processes, client1 and client2 and dedicate "
"client2 for long running tasks. In this example, ``Products.feedfeeder`` RSS"
" zopeuser is set to run on client2."
msgstr ""

# 39d65c8012a8446aa40d02c4baedb39a
#: ../develop/plone/misc/asyncronoustasks.rst:90
msgid ""
"Client1 keeps acting like standalone instance, in the same port as instance "
"used to be"
msgstr ""

# b2bbeaefe0c0440f977dbbdbaeaa61ed
#: ../develop/plone/misc/asyncronoustasks.rst:92
msgid ""
"Clocked tasks are run on client2 - it does not serve other HTTP requests. "
"Clocked tasks are done using Zope clock server."
msgstr ""

# 4e46bddbe3ec46d5a88801fd1a3b71da
#: ../develop/plone/misc/asyncronoustasks.rst:95
msgid ""
"The purpose of this is that client2 does heavy writes to the database, "
"potentially blocking the normal site operation of the site if we don't have "
"a separate client for it."
msgstr ""

# fae5ff1865844d18a9eb5e1f54ca1af3
#: ../develop/plone/misc/asyncronoustasks.rst:98
msgid ""
"We create additional ``production.cfg`` file which extends the default "
"``buildout.cfg`` file. You still can use ``buildout.cfg`` as is for the "
"development, but on the productoin server your buildout command must be run "
"for the ZEO server enabled file."
msgstr ""

# c2b08fa2d81243f2af003e1f28382c81
#: ../develop/plone/misc/asyncronoustasks.rst:102
msgid ""
"Actual clock server jobs, with usernames and passwords, are stored in a "
"separate ``secret.cfg`` file which is only available on the production "
"server and is not stored in the version control system. The user credentials"
" for a specially created a Zope user, not Plone user. This user can be "
"created through ``acl_users`` in Zope root in ZMI."
msgstr ""

# 6bd59a60235e460caf78996fc0ebb1b9
#: ../develop/plone/misc/asyncronoustasks.rst:107
msgid ""
"We also include ``plonectl`` command for easy management of ZEO server, "
"client1 and client2."
msgstr ""

# d1980589b3944280a4fc098bacde9401
#: ../develop/plone/misc/asyncronoustasks.rst:109
msgid ""
"``production.cfg`` (note - you need to run this with ``bin/buildout -c "
"production.cfg``)::"
msgstr ""

# c5bc2a26dd0c44fc9e3d9b2c10f29e2a
#: ../develop/plone/misc/asyncronoustasks.rst:163
msgid ""
"``secret.cfg`` contains actual clocked jobs. This file contains passwords so"
" it is not recommended to put it under the version control::"
msgstr ""

# b0f67716f4874a5886de4272134e9dea
#: ../develop/plone/misc/asyncronoustasks.rst:210
msgid "Asynchronous"
msgstr ""

# 5656f58327e644dabc9cb4f94bd6ba75
#: ../develop/plone/misc/asyncronoustasks.rst:212
msgid ""
"Asyncronous tasks are long-running tasks which are run on their own thread."
msgstr ""

# fc9e912760af4ab4a71a3966a36c0169
#: ../develop/plone/misc/asyncronoustasks.rst:215
msgid "lovely.remotetask"
msgstr ""

# e6f4ba7d8dff4e05b7f0cdbe8c84c35a
#: ../develop/plone/misc/asyncronoustasks.rst:217
msgid ""
"``lovely.remotetask`` is worked based long-running task manager for Zope 3."
msgstr ""

# 36114b7217bd44eba669d09579c68eaf
#: ../develop/plone/misc/asyncronoustasks.rst:219
msgid "NO WORKING EXAMPLES HOW TO USE THIS"
msgstr ""

# bd708bdb20f1406286c3e1c59881a62f
#: ../develop/plone/misc/asyncronoustasks.rst:221
msgid ""
"`lovely.remotetask package "
"<https://pypi.python.org/pypi/lovely.remotetask>`_ package page"
msgstr ""

# d5448c7671c0464785c01b6f58d7b33c
#: ../develop/plone/misc/asyncronoustasks.rst:223
msgid "http://tarekziade.wordpress.com/2007/09/28/a-co-server-for-zope/"
msgstr ""

# c864c07a70214ce8ad8f1e9fcc110bd2
#: ../develop/plone/misc/asyncronoustasks.rst:225
msgid ""
"http://swik.net/Zope/Planet+Zope/Trying+lovely.remotetask+for+cron+jobs/c1kfs"
msgstr ""

# a4803a46692c4a0a96b526b64dd4fc1a
#: ../develop/plone/misc/asyncronoustasks.rst:227
msgid "http://archives.free.net.ph/message/20081015.201535.2d147fec.fr.html"
msgstr ""

# 68d562dde7c04aedb74db528d75b9906
#: ../develop/plone/misc/commandline.rst:3
msgid "Command-line interaction and scripting"
msgstr ""

# 1148c406079f4bfdaf22317fdcb9f134
#: ../develop/plone/misc/commandline.rst:7
msgid ""
"How to run command-line Python scripts, timed jobs (cron) and batch jobs "
"against Plone sites and Zope application server."
msgstr ""

# 1f7f5f5560d0475ab3aadbb5044c74cc
#: ../develop/plone/misc/commandline.rst:17
msgid ""
"Plone code is somewhat ugly and expects you to have real HTTP request "
"lifecycle to do many things. For command line scripts, you need to mock up "
"this and mocking up ofter fails. Instead of trying to create a pure command-"
"line script, just create a browser view and call that browser view usings "
"wget or lynx or similar command line HTTP tool."
msgstr ""

# e0bfbb9d9f8347d8b616f860367e9e65
#: ../develop/plone/misc/commandline.rst:23
msgid ""
"Zope provides facilities to run command-line scripts. or maintenance work, "
"like migration script."
msgstr ""

# 9af7ea4bfb5d4089992ec09d72dd6ab3
#: ../develop/plone/misc/commandline.rst:26
msgid "The output to terminal is instance (Plone buffers HTML output)"
msgstr ""

# 90d738e056a04c48b0d2133ba7fe92c4
#: ../develop/plone/misc/commandline.rst:28
msgid "You can stop processing using CTRL+C"
msgstr ""

# cbdd9fb49f934b9bb1e5fbc22ad1709f
#: ../develop/plone/misc/commandline.rst:30
msgid "You can integrate scripts with standard UNIX tools, like cron"
msgstr ""

# 2de5b7bd786346b8a99438858d577eaa
#: ../develop/plone/misc/commandline.rst:34
msgid ""
"If the site runs in a single process Zope mode (no ZEO), the actual site "
"instance must be stopped to run a command line script as the one process "
"locks the database (Data.fs)."
msgstr ""

# 1aa92f9e48034dcf928a7f878fca7d22
#: ../develop/plone/misc/commandline.rst:38
msgid ""
"Command line scripts are also useful for long-running transaction processing"
msgstr ""

# 30c555f0d7fa4561a6f3fb9f6eba0383
#: ../develop/plone/misc/commandline.rst:40
msgid ""
"A web site runs in multi-client ZEO mode. One client is always offline, "
"reserved for running command-line scripts."
msgstr ""

# 0654f6e04d334a5791e8a12e03062bd2
#: ../develop/plone/misc/commandline.rst:43
msgid ""
"Asynchronous long-running transactions are run from this ZEO client, without"
" disturbing the normal site functionality"
msgstr ""

# 8b4f933e3e614c7eb1ff30f86662230b
#: ../develop/plone/misc/commandline.rst:48
msgid ""
"`lovely.remotetask package "
"<https://pypi.python.org/pypi/lovely.remotetask>`_ for more fine-graned "
"control and Zope-based cron jobs"
msgstr ""

# dbe66294933341d3b52d69a3b1db9e2b
#: ../develop/plone/misc/commandline.rst:53
msgid "Starting interactive interpreter"
msgstr ""

# eced454e79904e88a07b5b8cd11b6c9a
#: ../develop/plone/misc/commandline.rst:55
msgid ""
"The *bin/instance debug* command starts an interactive interpreter with the "
"Zope application server and database loaded. To have persistent utilities "
"loaded, you should also provide the id of your Plone site. The following "
"example assumes you have a plone site named \"Plone\""
msgstr ""

# 7977af4494d14d5ab3a6f2b44ee06b56
#: ../develop/plone/misc/commandline.rst:65
msgid "The instance must be stopped in order to run this."
msgstr ""

# 621a10748b4a48e38135c1eaac200077
#: ../develop/plone/misc/commandline.rst:68
msgid "Running scripts"
msgstr ""

# 054a2f0c6f034de4b9dc450a97b2aa06
#: ../develop/plone/misc/commandline.rst:70
msgid ""
"Use *bin/instance run* command to run scripts which can interact with the "
"opened database."
msgstr ""

# 896ace8787214b5bab6d38eb78d2486c
#: ../develop/plone/misc/commandline.rst:77
msgid ""
"The script will have global ``app`` variable assigned to the Zope "
"application server root. You can use this as a starting point and traverse "
"into your Plone site(s)."
msgstr ""

# 2c472d41ede1487fae2f8ae4f16913dc
#: ../develop/plone/misc/commandline.rst:80
msgid "Script could look like::"
msgstr ""

# 6246ff2637f1495996f0fcab11cc7a2d
#: ../develop/plone/misc/commandline.rst:108
msgid ""
"You probably need to spoof your :doc:`security credentials "
"</develop/plone/security/permissions>`."
msgstr ""

# e89bf9cf54a94902888ce080ccfc676a
#: ../develop/plone/misc/commandline.rst:112
msgid "Instance must be stopped in order to run this."
msgstr ""

# da6f3334dc0f46f185f59a4e1da88e05
#: ../develop/plone/misc/commandline.rst:115
msgid "Cron and timed jobs"
msgstr ""

# 672ea78178d34b53832e4efd2d6efb93
#: ../develop/plone/misc/commandline.rst:117
msgid "Cron is UNIX clock daemon for timed tasks."
msgstr ""

# 239fb206ee4f430598081ed99c0a6433
#: ../develop/plone/misc/commandline.rst:119
msgid ""
"If you have a ZEO cluster you can have one ZEO client reserved for command "
"line processing. Cron job will run scripts through this ZEO client."
msgstr ""

# d2f52df0414d4def9e52348e2abb82af
#: ../develop/plone/misc/commandline.rst:122
msgid "Alternatively, you can use"
msgstr ""

# 0c83aeacc21a413eba3e95ba627d684d
#: ../develop/plone/misc/commandline.rst:124
msgid "cron to call localhost URL using curl or wget UNIX commands"
msgstr ""

# a702bd7515654b62957af119f3f8037b
#: ../develop/plone/misc/commandline.rst:126
msgid "Use Zope clock daemon"
msgstr ""

# 99ee957b57ac408dac1fadabca1d0c27
#: ../develop/plone/misc/commandline.rst:130
msgid ""
"For long running batch processes it is must that you run your site in ZEO "
"mode. Otherwise the batch job will block the site access for the duration of"
" the batch job transaction. If the batch job takes long to process the site "
"might be unavailable for the visitors for a long period."
msgstr ""

# 1f7117dbdd5d4d3ca83ef79fe9eda34d
#: ../develop/plone/misc/commandline.rst:138
msgid "Scripting context"
msgstr ""

# 038ec69813b6406ea056732284be902b
#: ../develop/plone/misc/commandline.rst:140
msgid ""
"The command line interpreter and scripts gets following global context "
"variables"
msgstr ""

# 8a16b4da11c644349b92f1690d8f9fb3
#: ../develop/plone/misc/commandline.rst:142
msgid "*app* global variable which holds the root of Zope application server."
msgstr ""

# c265ff1f8fb54358b16236eb9428c9c4
#: ../develop/plone/misc/commandline.rst:144
msgid "sys.argv contains command-line parameters after python script name"
msgstr ""

# 03f17b5b27e740a7a44f886f7c1bad0f
#: ../develop/plone/misc/commandline.rst:146
msgid "argv[0] = script name"
msgstr ""

# f7fa64e1e8844632bac1b942525a9457
#: ../develop/plone/misc/commandline.rst:148
msgid "arvg[1] = first command line argument"
msgstr ""

# 1500e0b111704bb4b94f257df086230e
#: ../develop/plone/misc/commandline.rst:151
msgid "To access your site object, you can traverse down from app::"
msgstr ""

# 3a96336389584a3dad6c9945c744dfc4
#: ../develop/plone/misc/commandline.rst:159
msgid "Committing transactions"
msgstr ""

# e7c16c6186164aae9d5ce33680d871b9
#: ../develop/plone/misc/commandline.rst:161
msgid ""
"You need to manually commit transactions if you change ZODB data from the "
"command line."
msgstr ""

# 4b3def98614b43c2b16fbe48001980a7
#: ../develop/plone/misc/commandline.rst:163
msgid "Example how to commit::"
msgstr ""

# 94564d0ecba049359d01b40a28b0c635
#: ../develop/plone/misc/commandline.rst:172
msgid ""
"http://www.enfoldsystems.com/software/server/docs/4.0/enfolddebuggingtools.html"
msgstr ""

# fb42496bdd304410a616b0e3d4e4bbb1
#: ../develop/plone/misc/commandline.rst:175
msgid "zopepy"
msgstr ""

# c0c81d6f64b743afacecf1c29e66cee9
#: ../develop/plone/misc/commandline.rst:177
msgid ""
"zopepy buildout recipe creating bin/zopepy command which you can use to run "
"Python scripts in Zope environment set-up (PYTHONPATH, database connection, "
"etc.)"
msgstr ""

# 68f6a652212a422b83fc373891944589
#: ../develop/plone/misc/commandline.rst:180
msgid "https://pypi.python.org/pypi/zc.recipe.egg"
msgstr ""

# d34ccfdd1bfe419eb9fd32f3f6b1a646
#: ../develop/plone/misc/commandline.rst:182
msgid "buildout.cfg example::"
msgstr ""

# f5af0493abd341b290cc0c5f647852dc
#: ../develop/plone/misc/commandline.rst:193
msgid "Then running::"
msgstr ""

# b848f90cb1db4b40a12b1c7f6b6443b1
#: ../develop/plone/misc/commandline.rst:197
msgid "...or if you want to run a script outside buildout folder::"
msgstr ""

# ba640d63f00841e4b5e19894ca77df54
#: ../develop/plone/misc/commandline.rst:204
msgid "Setting up ZEO for command line-processing"
msgstr ""

# 91a5845d6509437ba3e5885089669fdc
#: ../develop/plone/misc/commandline.rst:206
msgid ""
"Plone site HTTP requests are processed by one process per requests. One "
"process cannot handle more than one request once. If you need to have long-"
"running transactions you need to at least two front end processes, ZEO "
"clients, so that long-running transactions won't block your site."
msgstr ""

# dc19b672bbb3409499a071916815e085
#: ../develop/plone/misc/commandline.rst:212
msgid ""
":doc:`Converting instance to ZEO based configuration </old-reference-"
"manuals/buildout/zope_to_zeo>`"
msgstr ""

# 5615ab7795344aa4b3a4e3ad5708bfa4
#: ../develop/plone/misc/commandline.rst:214
msgid ""
"Your code might want to call transaction.commit() now and then to commit the"
" current transaction."
msgstr ""

# 9e09856ee89342ca86c08234ef91a851
#: ../develop/plone/misc/commandline.rst:218
msgid "Posing as user"
msgstr ""

# 50ceb92a76fd4d4d8932ae16c5d9d30b
#: ../develop/plone/misc/commandline.rst:220
msgid ""
"Zope functionality often assumes you have logged in as certain user or you "
"are anonymous user. Command-line scripts do not have user information set by"
" default."
msgstr ""

# d7eb24bed46e4c8b98691a6b0f293507
#: ../develop/plone/misc/commandline.rst:224
msgid "How to set the effective Zope user to admin::"
msgstr ""

# 3d607a182be248658e1d655dc17e8e6d
#: ../develop/plone/misc/commandline.rst:233
msgid "Spoofing HTTP request"
msgstr ""

# cb0a7664eb31431e93dbc302663b1b90
#: ../develop/plone/misc/commandline.rst:235
msgid ""
"When running from command-line, HTTP request object is not available. Some "
"Zope code might expect this and you need to spoof the request."
msgstr ""

# a9e1fe98e24f4d1c81a7fd896e5e3ad0
#: ../develop/plone/misc/commandline.rst:238
msgid ""
"Below is an example command line script which set-ups faux HTTP request and "
"portal_skins skin layers::"
msgstr ""

# bd3d76ccbb124a67af76fc00f4b44660
#: ../develop/plone/misc/commandline.rst:299
msgid "http://wiki.zope.org/zope2/HowToFakeREQUESTInDebugger"
msgstr ""

# aa7eba486377403184e95c4b8a281792
#: ../develop/plone/misc/commandline.rst:302
msgid "Creating Plone site in buildout"
msgstr ""

# 3a951a56ebc047dda54fa021b6536e06
#: ../develop/plone/misc/commandline.rst:304
msgid "You can pre-generate the site from the buildout run."
msgstr ""

# e2885aba2ef0441c8c1eb955efc9bbd0
#: ../develop/plone/misc/commandline.rst:306
msgid "https://pypi.python.org/pypi/collective.recipe.plonesite#example"
msgstr ""

# b93a426065d7416c9c386fdd52870e98
#: ../develop/plone/misc/commandline.rst:309
msgid "screen"
msgstr ""

# 858020eb3e1e4617a9f3c299d898fcc0
#: ../develop/plone/misc/commandline.rst:311
msgid ""
"screen is an UNIX command to start a virtual terminal. Screen lets processes"
" run even if your physical terminal becomes disconnected. This effectively "
"allows you to run long-running command line jobs over a crappy Internet "
"connection."
msgstr ""

# f2c664d5e5ec43c3aeaa1330a9db2e0b
#: ../develop/plone/misc/commandline.rst:317
msgid "Start new screen"
msgstr ""

# 4495a7c402de40039a2df88df079ad32
# b628e7263e6247689e8079eeb0a037a9
#: ../develop/plone/misc/commandline.rst:319
#: ../develop/plone/misc/commandline.rst:332
msgid "Type command::"
msgstr ""

# fb68d7c9c5d4476fa616f06da2fc9e06
#: ../develop/plone/misc/commandline.rst:323
msgid "If you have sudo'ed to another user you first need to run::"
msgstr ""

# 0ea396017bce4c17b013dad89d0e4f15
#: ../develop/plone/misc/commandline.rst:327
msgid ""
"http://dbadump.blogspot.com/2009/04/start-screen-after-sudo-su-to-"
"another.html"
msgstr ""

# fab80cec512a48c597465f83b6ccc1de
#: ../develop/plone/misc/commandline.rst:330
msgid "Attach to an existing screen"
msgstr ""

# 72af13f4cc604968af363651ae06e16d
#: ../develop/plone/misc/context.rst:3
msgid "Helper views and tools"
msgstr ""

# 1a9109247fef4f3db62302d5520805dc
#: ../develop/plone/misc/context.rst:10
msgid ""
"This document explains how to access view and context utilities in Plone."
msgstr ""

# 5402ad15ddf3402f9ad2a8275fbd7d6a
#: ../develop/plone/misc/context.rst:13
msgid "IPortalState and IContextState"
msgstr ""

# 14c7d443a7624827814afce937e06df1
#: ../develop/plone/misc/context.rst:15
msgid ""
"``IPortalState`` defines ``IContextState`` view-like interfaces to access "
"miscellaneous information useful for the rendering of the current page. The "
"views are cached properly, so they should access the information quite "
"effectively."
msgstr ""

# e77bf3bfd20446358fbb7a3bdfb4be62
#: ../develop/plone/misc/context.rst:20
msgid "``IPortalState`` is mapped as the ``plone_portal_state`` name view."
msgstr ""

# 114c3ef7f0fe421f94f45d94326dcf90
#: ../develop/plone/misc/context.rst:22
msgid "``IContextState`` is mapped as the ``plone_context_state`` named view."
msgstr ""

# 0f9389b751ea4df582a4e2767c90d3e3
#: ../develop/plone/misc/context.rst:24
msgid "``ITools`` is mapped as the ``plone_tools`` named view."
msgstr ""

# 12a4f777f5b94dcebf28e19218dd6aae
#: ../develop/plone/misc/context.rst:26
msgid ""
"To see what's available through the interface, read the documentation in the"
" `plone.app.layout.globals.interfaces "
"<https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/globals/interfaces.py>`_"
" module."
msgstr ""

# 450f75463ed04091985f520ed7b36ad9
#: ../develop/plone/misc/context.rst:31
msgid "Example showing how to get the portal root URL::"
msgstr ""

# ae0fcbf1a2704296923438463c78e253
#: ../develop/plone/misc/context.rst:51
msgid "Example showing how to get the current language::"
msgstr ""

# 63be8781835b4681a389465410a6c253
#: ../develop/plone/misc/context.rst:60
msgid "Example showing how to expose ``portal_state`` helper to a template:"
msgstr ""

# 1a6596f9524146d794c6b9d03a6e5e85
#: ../develop/plone/misc/context.rst:62
msgid "ZCML includes ``portal_state`` in ``allowed_attributes``"
msgstr ""

# 1d5bdc32494644958143c48281dcfff7
#: ../develop/plone/misc/context.rst:74
msgid "A Python class exposes the variable::"
msgstr ""

# a6b8d51988db4783a2b00076e34a9a23
#: ../develop/plone/misc/context.rst:86
msgid "Templates can use it as follows:"
msgstr ""

# f35b6ff8d97c444bba8a0c7abe75bf1e
#: ../develop/plone/misc/context.rst:94
msgid ""
"You can directly look up ``portal_state`` in templates using acquisition and"
" view traversal, without need of ZCML code or Python view code changes. This"
" is useful e.g. in overridden viewlet templates:"
msgstr ""

# 4b7396e49dc743f88d42a2c3c52081ea
#: ../develop/plone/misc/context.rst:117
msgid "Use in templates and expressions"
msgstr ""

# 5f140c1848d1487bb158c46785530d27
#: ../develop/plone/misc/context.rst:119
msgid ""
"You can use ``IContextState`` and ``IPortalState`` in :term:`TALES` "
"expressions, e.g. ``portal_actions``, as well."
msgstr ""

# f8fcfcd28ed445d0aadd9d4f518a4cf1
#: ../develop/plone/misc/context.rst:122
msgid "Example ``portal_actions`` conditional expression::"
msgstr ""

# 2f609ed6609143128f440aa7b76506b9
#: ../develop/plone/misc/context.rst:130
msgid ""
"Tools are persistent utility classes available in the site root. They are "
"visible in the :term:`ZMI`, and sometimes expose useful information or "
"configuration here. Tools include e.g.:"
msgstr ""

# 3d6c6dd218f043d18c626ed4b4b62b84
#: ../develop/plone/misc/context.rst:134
msgid "``portal_catalog``"
msgstr ""

# 380ce11d6676441d8ce709ef1dbfd507
#: ../develop/plone/misc/context.rst:135
msgid "Search and indexing facilities for content"
msgstr ""

# 6d1375ba102e4e078a0cbed1a7edcbde
#: ../develop/plone/misc/context.rst:136
msgid "``portal_workflow``"
msgstr ""

# 5083cb5784a443ed9410ee5b77eb8e30
#: ../develop/plone/misc/context.rst:137
msgid "Look up workflow status, and do workflow-related actions."
msgstr ""

# 5b89dbfcbabb408db2f122e57e7adcf1
#: ../develop/plone/misc/context.rst:139
msgid "``portal_membership``"
msgstr ""

# 9c1e7f6276c342fe95e45aa26954aebd
#: ../develop/plone/misc/context.rst:139
msgid "User registration information."
msgstr ""

# 352cb3730b3b44d3ad4f39749b2e235f
#: ../develop/plone/misc/context.rst:142
msgid "ITools interface"
msgstr ""

# dd3fcc4dc5fd4089a394bad8998cfae4
#: ../develop/plone/misc/context.rst:144
msgid ""
"`plone.app.layout.globals.interfaces.ITools interface "
"<https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/globals/interfaces.py>`_"
" and Tools BrowserView provide cached access for the most commonly needed "
"tools."
msgstr ""

# 3ac93a62ec63441f87b2ba79f9928f7f
#: ../develop/plone/misc/context.rst:148
msgid "``ITools`` is mapped as the ``plone_tools`` view for traversing."
msgstr ""

# ce8dee3b73bb4ee4884e41cf14bbf644
#: ../develop/plone/misc/context.rst:166
msgid "``IPlone``"
msgstr ""

# d39b9c7b3b074bb0809fe38315d449f0
#: ../develop/plone/misc/context.rst:168
msgid ""
"`Products.CMFPlone.browser.interfaces.IPlone "
"<https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/browser/interfaces.py#L183>`_"
" provides some helper methods for Plone specific functionality and user "
"interface."
msgstr ""

# 7e7927f496594585b25eb55aafa1065b
#: ../develop/plone/misc/context.rst:171
msgid "``IPlone`` helper views is registered under the name ``plone``"
msgstr ""

# 4d6bd68ba79546028aed85356d2e18c5
#: ../develop/plone/misc/context.rst:174
msgid "``getToolByName``"
msgstr ""

# 1493c5f9052940e692a53d4bb8f16685
#: ../develop/plone/misc/context.rst:176
msgid ""
"``getToolByName`` is the old-fashioned way of getting tools, using the "
"context object as a starting point. It also works for tools which do not "
"implement the ``ITools`` interface."
msgstr ""

# b2448dc59e924001be742a8b8a9b57af
#: ../develop/plone/misc/context.rst:180
msgid "``getToolByName`` gets any Plone portal root item using acquisition."
msgstr ""

# f2ca26ee831b4289a43f51040e702f4c
#: ../develop/plone/misc/datetime.rst:3
msgid "Zope DateTime"
msgstr ""

# 9357b8549aed4819a11815f0158c43e7
#: ../develop/plone/misc/datetime.rst:7
msgid "Using Zope DateTime class in Plone programming"
msgstr ""

# d459817e239146a5bf306072f62cf5f6
#: ../develop/plone/misc/datetime.rst:14
msgid ""
"Some Plone dates are stored as Zope DateTime objects. This is different from"
" standard Python datetime (notice the letter casing). Zope DateTime predates"
" Python datetime which was added in Python 2.4. Zope DateTime is old code, "
"so do rites necessary for your religion before programming with it."
msgstr ""

# 83387c62df964cf88ab903e2e20a10f6
# 80bce92762774f508f8389302c541511
#: ../develop/plone/misc/datetime.rst:20 ../develop/plone/misc/datetime.rst:61
msgid ""
"`Zope DateTime HTML API documentation "
"<https://pypi.python.org/pypi/DateTime/>`_"
msgstr ""

# 2e907e0b7b064823b4a1051e7e7e9db9
#: ../develop/plone/misc/datetime.rst:22
msgid ""
"`Python datetime documentation "
"<http://docs.python.org/library/datetime.html>`_"
msgstr ""

# 26e4ee19eddf49cd8483128044c681ef
#: ../develop/plone/misc/datetime.rst:26
msgid ""
"Using Python datetime is recommended if possible. Zope DateTime should be "
"dealt in legacy systems only as Python datetime is much more documented and "
"widely used."
msgstr ""

# f0c3091b966a4f748e8c5fab64b50ab8
#: ../develop/plone/misc/datetime.rst:31
msgid "Default formatting"
msgstr ""

# 304392caed174184b98c203aab525ced
#: ../develop/plone/misc/datetime.rst:33
msgid "Since Plone 4"
msgstr ""

# c3f39f318b64410483929e3e041dabde
#: ../develop/plone/misc/datetime.rst:35
msgid "A per-language format string from a translations is preferred"
msgstr ""

# 298b3838f1a248e2a1bff43a4f4efe28
#: ../develop/plone/misc/datetime.rst:37
msgid ""
"If such string is not available the default is taken from portal_properties "
"/ site_properties"
msgstr ""

# b3a80cebf67849689acea71a3f355b88
#: ../develop/plone/misc/datetime.rst:40
msgid "Formatting examples"
msgstr ""

# 14b2fe46d220422abb65424a582f6bfc
#: ../develop/plone/misc/datetime.rst:42
msgid "US example::"
msgstr ""

# e1d40e44a42446518cd28596ea01de26
#: ../develop/plone/misc/datetime.rst:47
msgid "European style format:"
msgstr ""

# c1232a78b25c4899a8c0f7252d48c450
#: ../develop/plone/misc/datetime.rst:49
msgid ""
"localTimeFormat: %d.%m.%Y (like 1.12.2010) localLongTimeFormat: %H:%M "
"%d.%m.%Y (like 12:59 1.12.2010)"
msgstr ""

# 5e3d5db260354a27acca623b1b553ca3
#: ../develop/plone/misc/datetime.rst:54
msgid "https://dev.plone.org/wiki/DateTimeFormatting"
msgstr ""

# c84ab4c3e28d4177bf522c2fcbacd66c
#: ../develop/plone/misc/datetime.rst:56
msgid "http://docs.python.org/library/time.html#time.strftime"
msgstr ""

# df964ff4cdf4490eaf786d399eb97d04
#: ../develop/plone/misc/datetime.rst:59
msgid "DateTime API"
msgstr ""

# 27f18c70a3b247959a4d2e3db6f68fea
#: ../develop/plone/misc/datetime.rst:63
msgid "You may find the following links useful"
msgstr ""

# d848364aeab940d6aab3eac62e63bc88
#: ../develop/plone/misc/datetime.rst:65
msgid ""
"`Source code "
"<http://svn.zope.org/DateTime/trunk/src/DateTime/DateTime.py?rev=96241&view=auto>`_"
msgstr ""

# 506b1fb406ee4f7d937ad7e8dd06067c
#: ../develop/plone/misc/datetime.rst:67
msgid ""
"`README "
"<http://svn.zope.org/DateTime/trunk/src/DateTime/DateTime.txt?rev=96241&view=auto>`_"
msgstr ""

# dbe3f0f4dfb64c7186b3594a67f89e09
#: ../develop/plone/misc/datetime.rst:69
msgid ""
"`Interface description "
"<http://svn.zope.org/DateTime/trunk/src/DateTime/interfaces.py?rev=96241&view=auto>`_"
msgstr ""

# db658b71f9764a6e95d14f317e6b4d65
#: ../develop/plone/misc/datetime.rst:72
msgid "Converting between DateTime and datetime"
msgstr ""

# 0348f363bf654a97b273cf5e4ac7f9c4
#: ../develop/plone/misc/datetime.rst:74
msgid ""
"Since two different datetime object types are used, you need to often "
"convert between them."
msgstr ""

# 758099a13ea54608a696880182d195a8
#: ../develop/plone/misc/datetime.rst:76
msgid "You can convert Zope DateTime objects to datetime objects like so::"
msgstr ""

# 83240ea115ba4455acf194a97726e1b7
#: ../develop/plone/misc/datetime.rst:82
msgid ""
"Vice versa, to convert from a Python datetime object to a Zope DateTime "
"one::"
msgstr ""

# a52a1a5c5f604b28b94cd44da9e1613b
#: ../develop/plone/misc/datetime.rst:86
msgid ""
"Note, if you use timezone information in python datetime objects, you might "
"loose some information when converting. Zope DateTime handles all timezone "
"information as offsets from GMT."
msgstr ""

# 06fbf447fe6e431b82a9a9ea63f8acaa
#: ../develop/plone/misc/datetime.rst:92
msgid "DateTime problems and pitfalls"
msgstr ""

# 6fb4911834c648f6b23e32a936694520
#: ../develop/plone/misc/datetime.rst:94
msgid "This **will fail** silenty and you get a wrong date::"
msgstr ""

# bac40490e1094617bffd369bb2c111d0
# 866830e1a65f4808a6d2974745d70b0a
#: ../develop/plone/misc/datetime.rst:98
#: ../develop/plone/persistency/database.rst:231
msgid "Please see"
msgstr ""

# a32d5bfe8ed5472aa04d12c959701e5c
#: ../develop/plone/misc/datetime.rst:100
msgid "http://pyyou.wordpress.com/2010/01/11/datetime-against-mx-datetime/"
msgstr ""

# cda29d4b44c24d948beca985d832114f
#: ../develop/plone/misc/datetime.rst:103
msgid "Parsing both US and European dates"
msgstr ""

# 6a8be4eb07b549ee92446a6cc0819742
#: ../develop/plone/misc/datetime.rst:119
msgid "Friendly date/time formatting"
msgstr ""

# 06fd55830b564d8eaa99007f30de86f0
#: ../develop/plone/misc/datetime.rst:121
msgid "Format datetime relative to the current time, human-readable::"
msgstr ""

# f0c5e88256154347b0ab2767e1eb9145
#: ../develop/plone/misc/datetime.rst:170
msgid "Friendly date/time from TAL"
msgstr ""

# 89dd45946e8f4e26852b68708aa41d05
#: ../develop/plone/misc/datetime.rst:172
msgid ""
"From within your TAL templates, you can call :meth:`toLocalizedTime` like::"
msgstr ""

# 27df80a2e3b84c5680ba62e8b3ce6fdb
#: ../develop/plone/misc/email.rst:3
msgid "Sending email"
msgstr ""

# b54849c293a84525aaa73ab391cfdd25
#: ../develop/plone/misc/email.rst:7
msgid "How to programmatically send email in Plone"
msgstr ""

# 0c0ba069de7b442ab9bdfdbc3df03804
#: ../develop/plone/misc/email.rst:14
msgid "This document tells how to send email from Plone."
msgstr ""

# fb5d254930914e358f3bfefd37206af0
#: ../develop/plone/misc/email.rst:16
msgid "Email can be sent:"
msgstr ""

# 552ca26810e241d5850cab502de6a7e4
#: ../develop/plone/misc/email.rst:18
msgid "manually, by calling *MailHost*;"
msgstr ""

# 70d64d431b5048d0bbdf87d14c9704c2
#: ../develop/plone/misc/email.rst:19
msgid ""
"using a *Content Rule* (content rules have an email-out action by default) "
"which can be activated by a workflow transition, for example;"
msgstr ""

# ea0f41dcafe24feb8ee8d364f499700e
#: ../develop/plone/misc/email.rst:21
msgid "triggering email-based password reset."
msgstr ""

# c6108851d71d4799a1d4fcac4dd340c4
#: ../develop/plone/misc/email.rst:25
msgid "Configuring MailHost for a mail queue"
msgstr ""

# c8092f76eafe47b88d99f0d0c060f2fb
#: ../develop/plone/misc/email.rst:27
msgid ""
"Products.MailHost supports asynchronous sending in a separate thread via a "
"mail queue."
msgstr ""

# e59f5f4f0e754b87b222ba8becdc0237
#: ../develop/plone/misc/email.rst:31
msgid "Using a mail queue is recommended for production sites."
msgstr ""

# dfdb5891f99a475e87cbcfefcd10afcc
#: ../develop/plone/misc/email.rst:33
msgid ""
"To enable the queue, go to the ZMI and the MailHost tool. Here, check the "
"\"Use mail queue\" setting and set the \"Queue directory\". The queue "
"directory is given as an absolute path on your server, must have a maildir "
"layout (it needs the directories 'cur', new' and 'tmp' in it) and must be "
"writeable by the system user, under which the Zope thread runs."
msgstr ""

# f06fdc8b5de44b2494a413fe6b98eb60
#: ../develop/plone/misc/email.rst:41
msgid "Manually calling MailHost"
msgstr ""

# e72d75311837453db09488de924d0f32
#: ../develop/plone/misc/email.rst:43
msgid "After your ``mail_text`` is prepared, sending it is as simple as::"
msgstr ""

# c546b7d2242347ec8181cd49d64accc1
#: ../develop/plone/misc/email.rst:57
msgid "Preparing mail text"
msgstr ""

# cd05d59a49d446d3890591459e1d56c3
#: ../develop/plone/misc/email.rst:59
msgid ""
"``mail_text`` can be generated by calling a page template (``.pt``) with "
"keyword arguments. The values are accessed in the template as "
"``option/keyword``. For example, take a sample template:"
msgstr ""

# 24c19eb8ffc2490496910db51cb5089b
#: ../develop/plone/misc/email.rst:79
msgid "This can be called with a ``member`` object and the ``portal_url``::"
msgstr ""

# 7d0bcb2e1d654d9297a19aa79e4d0266
#: ../develop/plone/misc/email.rst:87
msgid ""
"For more complete examples (with i18n support, etc.) see the password reset "
"modules (particularly ``Products.remember.tools.registration``)."
msgstr ""

# 61cf8683fd1347b2936c9c0e312ee4a4
#: ../develop/plone/misc/email.rst:92
msgid ""
"If you don't need to have third parties to override your email templates it "
"might be cleaned to use Python string templates, as XML based TAL templates "
"are not designed for plain text templating."
msgstr ""

# 96b4d47fa28f448eb62f212e1cca0483
#: ../develop/plone/misc/email.rst:97
msgid "Graceful failing"
msgstr ""

# b2a3ce0e0cd14a02b8342a652025f851
#: ../develop/plone/misc/email.rst:99
msgid ""
"In the case SMTP server rejects the connection. etc. don't abort the current"
" transaction (which is the default behavior)"
msgstr ""

# 78795c5560124ad2bc6b2130d69df9c3
#: ../develop/plone/misc/email.rst:102
msgid ""
"http://stackoverflow.com/questions/9013009/ploneformgen-and-fail-safe-email-"
"send"
msgstr ""

# bc17860c4f4c44faa58f94f0bfc9d8fe
#: ../develop/plone/misc/facebook.rst:3
msgid "Facebook integration"
msgstr ""

# 24ee66875b60482e866c6ef649b2736a
#: ../develop/plone/misc/facebook.rst:7
msgid "How to integrate Facebook to Plone site"
msgstr ""

# 8a2df9fa90464e76afa36cf62d3db553
#: ../develop/plone/misc/facebook.rst:14
msgid "See the add-on"
msgstr ""

# ebc137d6eaeb4ff990a967f0ba6cf299
#: ../develop/plone/misc/facebook.rst:16
msgid "http://plone.org/products/facebook-like-button"
msgstr ""

# 7daf885bc3d54583b42e09c60a93022c
#: ../develop/plone/misc/facebook.rst:18
msgid "for non-programming integration."
msgstr ""

# 2b423ec930804605b83a266b729484ac
#: ../develop/plone/misc/facebook.rst:21
msgid "Like button"
msgstr ""

# 11d27825be244cb3b78f67d7ca211651
#: ../develop/plone/misc/facebook.rst:23
msgid ""
"Here is an example which creates a Like button pointing to the current page."
msgstr ""

# 887f1f79eedf477f930413e1040c6f85
#: ../develop/plone/misc/facebook.rst:31
msgid "View code"
msgstr ""

# 9ee65a555eec4db680cc118b1554f7ac
#: ../develop/plone/misc/facebook.rst:55
msgid ""
"If you are using Like button you should also add OpenGraph metadata to your "
"pages as described below."
msgstr ""

# e9ed3c2a5af341fe860899e63b6c0dcd
#: ../develop/plone/misc/facebook.rst:60
msgid "http://developers.facebook.com/docs/reference/plugins/like/"
msgstr ""

# 09b870cb46cd41048c986c53351f208b
#: ../develop/plone/misc/facebook.rst:63
msgid "OpenGraph metadata"
msgstr ""

# bd418af3792149fcae86fa4cb6e5ea45
#: ../develop/plone/misc/facebook.rst:65
msgid ""
"OpenGraph is Facebook page metadata protocol. You'll insert extra <meta> "
"tags on the page which will give additional information about the page to be"
" displayed with Facebook links."
msgstr ""

# 289c000aa60b4315844d0ae27432704c
#: ../develop/plone/misc/facebook.rst:69
msgid "http://developers.facebook.com/docs/opengraph/"
msgstr ""

# 4c2dc543de1043f38131abd8242e883b
#: ../develop/plone/misc/facebook.rst:71
msgid "Below is an example of filling in Facebook metadata"
msgstr ""

# 57252c77d86846cdad63d125f4cecf3b
#: ../develop/plone/misc/facebook.rst:73
msgid "Using content description in Facebook"
msgstr ""

# 2776cb20ecef46eb8f149ec7b29834bf
#: ../develop/plone/misc/facebook.rst:75
msgid "Having main image"
msgstr ""

# c2c26d85e6744da8a2564ff3f6540562
#: ../develop/plone/misc/facebook.rst:77
msgid "Having location"
msgstr ""

# 46f68d88b89a497d80e0ed14c5038dc3
#: ../develop/plone/misc/facebook.rst:79
msgid "Having contact info"
msgstr ""

# 85c9ede0cec241f098fdc347f112e98f
#: ../develop/plone/misc/facebook.rst:83
msgid ""
"You need to include your Facebook app or your Facebook user id as the admin "
"for the site in the metadata. Otherwise Facebook will report an error for "
"the page."
msgstr ""

# 1d069d3c1c3a426ba562231a31acf8a0
#: ../develop/plone/misc/facebook.rst:87
msgid "You can see Facebook id your yourself and your friends here"
msgstr ""

# 98ac049499f742749e4bb62f646c2f49
#: ../develop/plone/misc/facebook.rst:89
msgid "http://apps.facebook.com/whatismyid"
msgstr ""

# ab33c62ea66e413cb249e177f4e51e78
#: ../develop/plone/misc/facebook.rst:91
msgid ""
"Simple example. Add this to your :doc:`main_template.pt </adapt-and-"
"extend/theming/templates_css/template_basics>`. Supports Plone default "
"content types and news item image"
msgstr ""

# 96cd419c4f95469388b0317f4d4e0509
#: ../develop/plone/misc/facebook.rst:124
msgid "Complex example for custom content type"
msgstr ""

# 168ad8311e1b4109a5460a25f3f3cd28
#: ../develop/plone/misc/flowplayer.rst:3
msgid "Flowplayer"
msgstr ""

# c3a3c7aa329d41f1aa447b2ddf978a34
#: ../develop/plone/misc/flowplayer.rst:7
msgid "Using Flowplayer video player in your Plone add-ons."
msgstr ""

# c202c7c06c0446d3988bcd64766e4bd0
#: ../develop/plone/misc/flowplayer.rst:14
msgid "Flowplayer is a GPL'ed Flash-based video player."
msgstr ""

# a6ff5de570ac46bbbc8a8b6f86e63d57
#: ../develop/plone/misc/flowplayer.rst:16
msgid "Plone integration exists as an add-on product:"
msgstr ""

# 378bb936623445e39c3eb79288e7467a
#: ../develop/plone/misc/flowplayer.rst:18
msgid "http://plone.org/products/collective-flowplayer"
msgstr ""

# 7673fe2a5b4b415c8d0d3d412c496d20
#: ../develop/plone/misc/flowplayer.rst:21
msgid "Creating a custom Flowplayer"
msgstr ""

# 7772669c5a82492ca3df4b96b946d62b
#: ../develop/plone/misc/flowplayer.rst:23
msgid ""
"Here is a walkthrough how to create a custom content-type with a video field"
" which plays the uploaded video using Flowplayer in a page template with "
"parameters you define."
msgstr ""

# bbf3ae2769ab4e429fd85a7870de5a0b
#: ../develop/plone/misc/flowplayer.rst:27
msgid "Dexterity model definition::"
msgstr ""

# bb82053316ab4a2f98b7b7485194ebd5
#: ../develop/plone/misc/flowplayer.rst:41
msgid "Helper view Python code::"
msgstr ""

# ae3c6423bb4d45f782e4fa6e35da0283
#: ../develop/plone/misc/flowplayer.rst:55
msgid "Helper view template:"
msgstr ""

# 5c8ce5afe97d46d19002709b9f0a1962
#: ../develop/plone/misc/flowplayer.rst:75
msgid "Using the view:"
msgstr ""

# c0bdeb7ae111457a95e61d2b327a2be9
#: ../develop/plone/misc/flowplayer.rst:98
msgid "Javascript, registered in ``portal_javascripts``, doing the magic:"
msgstr ""

# 449392afb1674f0fb3c8bd22970d1923
#: ../develop/plone/misc/flowplayer.rst:172
msgid "Needed CSS:"
msgstr ""

# 946d0755d6be4decb9b430128852a675
#: ../develop/plone/misc/flowplayer.rst:186
msgid ""
"if your player is not displayed on the page load, but is displayed after you"
" click somewhere to the player container area, be sure there is no HTML code"
" nor text inside the player container HTML tag. Such code/text is considered"
" as player splash screen and player is waiting for click to the splash."
msgstr ""

# 10b6bc5821ec4fbe9ed6fef43f6c1feb
#: ../develop/plone/misc/flowplayer.rst:193
msgid "Non-buffered MP4 playback fix"
msgstr ""

# cd5f53910650488bbc58aff2565fb880
#: ../develop/plone/misc/flowplayer.rst:195
msgid ""
"MPEG4 files must be specially prepared (quick play fix), so that the "
"playback starts instantly and the player does not try to buffer the whole "
"file first"
msgstr ""

# 543ed3765111499a8fe6539a7a596b0d
#: ../develop/plone/misc/flowplayer.rst:199
msgid "https://twitter.com/moo9000/status/253947688276594688"
msgstr ""

# 5717861ee72944d09e0ec0bf84b15abc
#: ../develop/plone/misc/html.rst:3
msgid "HTML manipulation and transformations"
msgstr ""

# 5ff2ecae2faf4a55ae2ab50d1fd45c19
#: ../develop/plone/misc/html.rst:7
msgid "How to programmatically rewrite HTML in Plone."
msgstr ""

# e0addbbe05874188a93fd297acce338f
#: ../develop/plone/misc/html.rst:14
msgid ""
"It is recommended to use the `lxml <http://lxml.de/>`_ library for all HTML "
"DOM manipulation in Python."
msgstr ""

# 7546dea4895743c4a43d4b3b0e5e2085
#: ../develop/plone/misc/html.rst:17
msgid "Plone is no exception."
msgstr ""

# 07c21405c5b5453e81aaab1cfa5c6d14
#: ../develop/plone/misc/html.rst:20
msgid "Converting HTML to plain text"
msgstr ""

# 65441fa96ce642928f933a87d9960831
#: ../develop/plone/misc/html.rst:22
msgid ""
"The most common use case is to override ``SearchableText()`` to return HTML "
"content for portal_catalog for indexing."
msgstr ""

# 29920283a9424618af91f8a3a314f6f5
#: ../develop/plone/misc/html.rst:25
msgid ""
"http://stackoverflow.com/questions/6956326/custom-searchabletext-and-html-"
"fields-in-plone"
msgstr ""

# 621475c943b74d1293d0d4e591ccd3dc
#: ../develop/plone/misc/html.rst:28
msgid "Converting plain text to HTML"
msgstr ""

# 2245ce27a2514d21ba92da915fe4241e
#: ../develop/plone/misc/html.rst:30
msgid "You can use ``portal_transforms`` to do plain text -> HTML conversion."
msgstr ""

# dd79321ff8dd4d8d9ef178137b6fd439
#: ../develop/plone/misc/html.rst:32
msgid ""
"Below is an example how to create a Description field rendered with new line"
" support."
msgstr ""

# 5808379d46e340fe8ad6c195ce94c4a6
#: ../develop/plone/misc/html.rst:34
msgid "description.py::"
msgstr ""

# b09b510cf7c84fddaa2fa68a02a67633
#: ../develop/plone/misc/html.rst:68
msgid "Now you can do in your page template"
msgstr ""

# c1d2753712b24972b2fe2b55b275eae0
#: ../develop/plone/misc/html.rst:91
msgid "http://svn.plone.org/svn/collective/intelligenttext/trunk/README.txt"
msgstr ""

# b5da61c89e9f4f1c9fa02002b372c338
#: ../develop/plone/misc/html.rst:94
msgid "Rewriting relative links"
msgstr ""

# b10de96d235a4e1cbb3e72a93da04e33
#: ../develop/plone/misc/html.rst:96
msgid "Below is an example which:"
msgstr ""

# b7a76783158a42a29549f61a0514dd4f
#: ../develop/plone/misc/html.rst:98
msgid "rewrites all relative links of Page content as absolute;"
msgstr ""

# 841be925d3e84523b76824bc4d671862
#: ../develop/plone/misc/html.rst:99
msgid "removes some nasty tags from Page content;"
msgstr ""

# 5d4f0b66c10d4ea2a8f6396f0ec1c764
#: ../develop/plone/misc/html.rst:100
msgid "outputs the folder content and subcontent as one continuous page;"
msgstr ""

# 604a1f1f66674446a080e01ec2a8ca6a
#: ../develop/plone/misc/html.rst:101
msgid "is based on :doc:`Grok views </develop/addons/components/grok>`."
msgstr ""

# cda56e627eba43f0bd46b1bf820defd4
#: ../develop/plone/misc/html.rst:103
msgid "This is suitable for e.g. printing the whole folder in one pass."
msgstr ""

# 6b58073dfd0a41c283ff2ac9949162c9
#: ../develop/plone/misc/html.rst:105
msgid "``help.py``::"
msgstr ""

# e34d3fa61f544c4f98f01044f05c3417
#: ../develop/plone/misc/html.rst:215
msgid "``help.pt``"
msgstr ""

# a066ef349d5044248796f93973ea27d2
#: ../develop/plone/misc/index.rst:3
msgid "Miscellaneous information"
msgstr ""

# 87e60e6afddd42bcba63f6f9a7007ab9
#: ../develop/plone/misc/index.rst:5
msgid ""
"This section describes functions and APIs which are not directly related to "
"any bigger subsystems. Also some other information that does not fit in any "
"specific category"
msgstr ""

# 26d00366fa9d47a6a6d0d9e11896dcef
#: ../develop/plone/misc/index.rst:8
msgid "# Managing member profile (portal_membership under site root)"
msgstr ""

# 4abddd4f27024278a369139b98234ede
#: ../develop/plone/misc/monkeypatch.rst:3
msgid "Monkey-patching"
msgstr ""

# 35458d0e7b64457fa879411bfad22bd9
#: ../develop/plone/misc/monkeypatch.rst:5
msgid ""
"A monkey patch (also spelled monkey-patch, MonkeyPatch) is a way to extend "
"or modify the runtime code of dynamic languages (e.g. Smalltalk, JavaScript,"
" Objective-C, Ruby, Perl, Python, Groovy, etc.) without altering the "
"original source code."
msgstr ""

# 6cd45011cf4343b689f9afab589f018c
#: ../develop/plone/misc/monkeypatch.rst:10
msgid ""
"Plone community promotes conflict free way to do monkey patching using "
"`collective.monkeypatcher package "
"<https://pypi.python.org/pypi/collective.monkeypatcher>`_."
msgstr ""

# b823853552fe49b1824a789d0989a659
#: ../develop/plone/misc/monkeypatch.rst:15
msgid "Patching constants"
msgstr ""

# d255201a6c1e4ee4a5ecdb6408a1435b
#: ../develop/plone/misc/monkeypatch.rst:17
msgid ""
"Some modules (typically ``config.py`` files) include constant definitions "
"used throughout the package. Given that ``collective.monkeypatcher`` is "
"intended to patch methods you'll not be able to patch a constant "
"straightforward. Instead you'll have to make use of the ``handler`` option::"
msgstr ""

# 3224339559b64ced9d17c529cdf3900c
# 0618e8bf3d8b4a2e8deb78989c050d2a
#: ../develop/plone/misc/monkeypatch.rst:31
#: ../develop/plone/misc/monkeypatch.rst:62
msgid "And your ``patches.py`` module should include this::"
msgstr ""

# 5d863f58ada247ec8bb19626c0f4fb1a
#: ../develop/plone/misc/monkeypatch.rst:43
msgid ""
"This way the **original** ``SIZE_CONST`` constant would be replaced by the "
"result of the lambda function, which is our new constant."
msgstr ""

# 43e51a06fb8148a38c052e555786054f
#: ../develop/plone/misc/monkeypatch.rst:47
msgid "Patching @property methods"
msgstr ""

# 24f59c67ca9044beab94653df6362549
#: ../develop/plone/misc/monkeypatch.rst:49
msgid ""
"If you are to patch a ``@property`` decorated method you can use the "
"``handler`` configuration option::"
msgstr ""

# ae6790eb35224f738fd5a7de882b26bf
#: ../develop/plone/misc/monkeypatch.rst:77
msgid ""
"This way the **original** ``items`` method would be replaced by the result "
"of the lambda function, which is a ``@property`` decorated method written in"
" a different way."
msgstr ""

# ccf206a5d8a344a6b8c3880ae94b329d
#: ../develop/plone/misc/navigationtree.rst:3
msgid "Navigation trees"
msgstr ""

# 795f066b0e574ffa96b6c87f15322a24
#: ../develop/plone/misc/navigationtree.rst:9
msgid ""
"How navigation trees are generate in Plone and how to generate custom "
"navigation trees."
msgstr ""

# 86477035713a4317830b6d6031d06fb5
#: ../develop/plone/misc/navigationtree.rst:15
msgid "Plone exposes methods to build navigation trees."
msgstr ""

# 5d8d3ee14b9245679fc2d25c30a393ed
#: ../develop/plone/misc/navigationtree.rst:17
msgid ""
"`Products.CMFPlone.browser.navtree "
"<https://github.com/plone/Products.CMFPlone/blob/master/Products/CMFPlone/browser/navtree.py>`_"
msgstr ""

# d2cdf7afafb84b83ac38959f1cbfddcd
#: ../develop/plone/misc/navigationtree.rst:19
msgid ""
"`plone.app.layout.navigation.navtree.buildFolderTree "
"<https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/navigation/navtree.py>`_"
msgstr ""

# 1880e44dba2141f389224730148d2fe2
#: ../develop/plone/misc/navigationtree.rst:21
msgid "These are internally used by navigation portlet and sitemap."
msgstr ""

# 4dd0eeea101247c5affdcc59c43dd2b5
#: ../develop/plone/misc/navigationtree.rst:24
msgid "Creating a custom navigation tree"
msgstr ""

# 73df96b411584033a86bbe73e15f3177
#: ../develop/plone/misc/navigationtree.rst:26
msgid ""
"See `Products.PloneHelpCenter "
"<https://github.com/collective/Products.PloneHelpCenter/blob/0f2fac5a7216eb8c0d83736dbcbd6a4385f9b4f4/Products/PloneHelpCenter/content/ReferenceManual.py>`_"
" for full code."
msgstr ""

# c0ca24dfc74a4492a131c5c39358c195
#: ../develop/plone/misc/navigationtree.rst:28
msgid ""
"The following example builds Table of Contents for *Reference Manual* "
"content type::"
msgstr ""

# 4678c5ca373a49c8a500495a93fbb63b
#: ../develop/plone/misc/navigationtree.rst:43
msgid "Excluding items in the navigation tree"
msgstr ""

# f861b88963b344058bfb222997f4fc2d
#: ../develop/plone/misc/navigationtree.rst:45
msgid ""
"Your navigation tree strategy must define method ``nodeFilter()`` which can "
"check for portal_catalog metadata column ``exclude_from_nav``."
msgstr ""

# b799a4b0aa2c4ca0a500c01838f0ed95
#: ../develop/plone/misc/navigationtree.rst:48
msgid "Example (from Products.CMFPlone.broser.navtree)::"
msgstr ""

# 15d4e4408ec94fdd9aef7564bf7fc52d
#: ../develop/plone/misc/navigationtree.rst:61
msgid "Querying items in natural sort order"
msgstr ""

# 4c560c79510b43ffa31108461d2cc165
#: ../develop/plone/misc/navigationtree.rst:63
msgid ""
"Sometimes you want to display content items as they appear in Plone "
"navigation. Below is an example which builds a flat vobulary for a form "
"checbox list based on a custom portal_catalog query and root folder."
msgstr ""

# def53576c0e44f60a02f9e62759bb215
#: ../develop/plone/misc/navigationtree.rst:67
msgid "query_items_in_natural_sort_order::"
msgstr ""

# 7e77f19e593f47eab67f6d901d167991
#: ../develop/plone/misc/navigationtree.rst:119
msgid "How to use::"
msgstr ""

# 2a1ec408d46444148dbd43f42f768020
#: ../develop/plone/misc/normalizing_ids.rst:3
msgid "Normalizing ids"
msgstr ""

# e2a3695f4bfb4f19ac1a0b09b3a4fd14
#: ../develop/plone/misc/normalizing_ids.rst:7
msgid ""
"How to convert arbitrary text input to URL/CSS/file/programming safe ids."
msgstr ""

# 1a4e39dfbc7544109fd8a07553b22b85
#: ../develop/plone/misc/normalizing_ids.rst:14
msgid ""
"Normalizers turns arbitrary string (with unicode letters) to machine "
"friendly ASCII ids. Plone provides different id normalizers."
msgstr ""

# b065dcb055464465b112bac70041cffb
#: ../develop/plone/misc/normalizing_ids.rst:17
msgid "E.g::"
msgstr ""

# ee7adae10c7d440695e20b670e372309
#: ../develop/plone/misc/normalizing_ids.rst:21
msgid "Plone has conversion utilities for"
msgstr ""

# ac1e6add6cc448d89d06200e81ca552e
#: ../develop/plone/misc/normalizing_ids.rst:23
msgid "For URIs and URLs (plone.i18n.normalizer.interfaces.IURLNormalizer)"
msgstr ""

# 2e65d06bb4e24c91b29ec60d8250b914
#: ../develop/plone/misc/normalizing_ids.rst:25
msgid "For filenames"
msgstr ""

# 7e8d128f4bd64a929a8ad41c3a1a56a7
#: ../develop/plone/misc/normalizing_ids.rst:27
msgid "For HTML ids and CSS"
msgstr ""

# dd8b89f2a1a24ebdadaf1d4581ccb0a2
#: ../develop/plone/misc/normalizing_ids.rst:29
msgid ""
"Normalization depends on the locale. E.g. in English \"æ\" will be "
"normalized as \"ae\" but in Finnish it will be normalized \"å\" -> \"a\"."
msgstr ""

# d75246ba98284311b3c5313d1ec27da0
#: ../develop/plone/misc/normalizing_ids.rst:32
msgid ""
"See `plone.i18n.normalizers package "
"<https://github.com/plone/plone.i18n/blob/master/plone/i18n/normalizer/__init__.py>`_."
msgstr ""

# 1d2b4ebdaa4e45b9af7797f52af384ae
#: ../develop/plone/misc/normalizing_ids.rst:37
msgid "Simple example for CSS id::"
msgstr ""

# 8ec29cb2e92648f09c0f4eb8001e6126
#: ../develop/plone/misc/normalizing_ids.rst:45
msgid ""
"Hard-coded id localizer which directly uses class instance and does not "
"allow override by utility configuration. You can use normalizers this way "
"also when getUtility() is not available (e.g. start up code)::"
msgstr ""

# 32404eca6d114553a108f8716752d2d3
#: ../develop/plone/misc/normalizing_ids.rst:52
msgid "Language specific example for URL::"
msgstr ""

# 5fd376b4d4e5401596ae81be12051aee
#: ../develop/plone/misc/normalizing_ids.rst:60
msgid ""
"To see available language specific localizers, see the source code of "
"plone.i18n.normalizers package."
msgstr ""

# 9e3fd2b6254b4f318bff47c45696666b
#: ../develop/plone/misc/normalizing_ids.rst:62
msgid "More examples:"
msgstr ""

# 36bd60bdced84950909ac5d4af61a5d7
#: ../develop/plone/misc/normalizing_ids.rst:64
msgid ""
"`Static text portlets normalizes portlet title for CSS class "
"<https://github.com/plone/plone.portlet.static/blob/master/plone/portlet/static/static.py>`_."
msgstr ""

# 33cfa400fca749d7ac39ee5abe5656c9
#: ../develop/plone/misc/normalizing_ids.rst:67
msgid "Creating ids programmatically"
msgstr ""

# 3167d346ce9b444086f7b5ff30bb041c
#: ../develop/plone/misc/normalizing_ids.rst:69
msgid ""
"If you are creating content programmatically using invokeFactory() or by "
"calling the class constructor you need to provide the id yourself."
msgstr ""

# ab71c3e1cea448609639fe235edc5f87
#: ../develop/plone/misc/normalizing_ids.rst:72
msgid ""
"Below is an example how to generate id from a title. *container* is the "
"folderish object that will contain our new object.::"
msgstr ""

# 5ccf689080b74bd3b5b552aa11079cca
#: ../develop/plone/misc/normalizing_ids.rst:97
msgid ""
"`Enforcing normalization for old migrated context "
"<http://plone.org/documentation/how-to/how-to-force-all-your-old-content-"
"into-the-new-normalized-id-format>`_."
msgstr ""

# da2d1698d81043f08f8222ed3899ec96
#: ../develop/plone/misc/paster_templates.rst:3
msgid "Creating your own Paster templates"
msgstr ""

# 6d265ff3fa84492d8440aedb24e1e7cc
#: ../develop/plone/misc/paster_templates.rst:7
msgid ""
"How to create Paster code skeleton templates to easily add your own add-on "
"product types or code inside your add-on porduct."
msgstr ""

# 841e99a02fd64d4eaec0afe73153ee57
#: ../develop/plone/misc/paster_templates.rst:13
msgid ""
"Plone CMS and Python extensively use :doc:`paster code templating system "
"</develop/addons/paste>` to aid add-on product development."
msgstr ""

# f294c837c1c64d308fd4643942617663
#: ../develop/plone/misc/paster_templates.rst:16
msgid ""
"Paster allows you to create code from code skeleton templates, automatically"
" filling in your company name etc."
msgstr ""

# 8bad221f05e147cd9b652c00f25a7da2
#: ../develop/plone/misc/paster_templates.rst:19
msgid ""
"Default Plone templates are in `ZopeSkel "
"<http://plone.org/products/zopeskel>`_ package."
msgstr ""

# f8cba1b8209c4ea89102a6c439b03b3c
#: ../develop/plone/misc/paster_templates.rst:21
msgid "This document tells how to create your own paster templates"
msgstr ""

# d8a3159ce13244468cf7ec9edd1bb1bf
#: ../develop/plone/misc/paster_templates.rst:23
msgid ""
"For information how to use paster please refer to :doc:`paster section in "
"tutorials </develop/addons/paste>`"
msgstr ""

# e2aef43059b54cfab55dec0d60650a45
#: ../develop/plone/misc/paster_templates.rst:27
msgid ""
"http://wiki.pylonshq.com/display/pylonscookbook/Creating+Templates+For+The+paster+create+Command"
msgstr ""

# 66230f5a96d445e5baa9cd16efdd358b
#: ../develop/plone/misc/paster_templates.rst:29
msgid "http://plone.org/products/zopeskel"
msgstr ""

# 77df3a7064fc4faca3cd9b3157b17403
#: ../develop/plone/misc/paster_templates.rst:31
msgid "http://svn.plone.org/svn/collective/collective.dexteritypaste/trunk"
msgstr ""

# 9fde70f6a1bc41d399d3614722f5115a
#: ../develop/plone/misc/paster_templates.rst:33
msgid "http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/"
msgstr ""

# 51ed2fc761a640a19f8495ceed4f5c15
#: ../develop/plone/misc/paster_templates.rst:36
msgid "Extending ZopeSkel"
msgstr ""

# 888f48ce2e0a4638b2077319cc6578ef
#: ../develop/plone/misc/paster_templates.rst:38
msgid ""
"First you need to create a Python egg where your templates will be "
"contained. We use ZopeSkel's *plone* template, but generic Python template "
"should do as well."
msgstr ""

# c92ab83b8ff74c61abaaec803b881144
#: ../develop/plone/misc/paster_templates.rst:41
msgid "paster create -t plone gomobile.templates"
msgstr ""

# a22e454aa2d0436d93670d882225c242
#: ../develop/plone/misc/paster_templates.rst:45
msgid ""
"You do not need tests.py or configure.zcml files in the template package "
"itself."
msgstr ""

# 8c99cb0da1ff4b008260fbc2358f276d
#: ../develop/plone/misc/paster_templates.rst:48
msgid "setup.py entries"
msgstr ""

# b8174ee43d8e4dbba34a75bbe5d02201
#: ../develop/plone/misc/paster_templates.rst:50
msgid "Then we edit ``setup.py`` and add paster template entry points::"
msgstr ""

# 62f7a493841247aa9d72f9807d42c933
#: ../develop/plone/misc/paster_templates.rst:66
msgid ""
"You could also have \"subtemplates\" with local paster commands which add "
"more code into existing code skeletons::"
msgstr ""

# e9a825d261c14ee5874393b78257a6f7
#: ../develop/plone/misc/paster_templates.rst:75
msgid "Entry points"
msgstr ""

# b7f6915a024b4b5d84fb740a9e0ddc37
#: ../develop/plone/misc/paster_templates.rst:77
msgid ""
"Entrypoints allow different plug-in systems through using the standard "
"Python eggs and ``setup.py`` file. Plone 3.3+ picks Plone add-ons through "
"this way and ``paster`` command pick available templates from all available "
"eggs this way."
msgstr ""

# c66b650814b14090896ee545bbce3e35
#: ../develop/plone/misc/paster_templates.rst:83
msgid ""
"http://wiki.pylonshq.com/display/pylonscookbook/Using+Entry+Points+to+Write+Plugins"
msgstr ""

# 596db716825e4497bb68a9df9af177a9
#: ../develop/plone/misc/paster_templates.rst:86
msgid "Template class"
msgstr ""

# 09b0239a2ca64576b7cfa06dc14ee4f4
#: ../develop/plone/misc/paster_templates.rst:88
msgid ""
"Paster template is defined with a class referred from the entry point. Here "
"is an example how we extend the existing Plone template class"
msgstr ""

# 9481d99b53b44020ad19aa93ba062399
#: ../develop/plone/misc/paster_templates.rst:92
msgid "Variables and asking for the user input"
msgstr ""

# 51bbb281fca74ad68a960a34bc512178
#: ../develop/plone/misc/paster_templates.rst:94
msgid ""
"*ZopeSkel* contains facilities how to ask template input from the user who "
"is running Paster. It provides some sane way to give defaults and validate "
"the input."
msgstr ""

# bdc82c1b40804809b626e837e30d323e
#: ../develop/plone/misc/paster_templates.rst:99
msgid ""
"http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/abstract_buildout.py"
msgstr ""

# 0a06a29ac5674e25a50e2567fc8766ec
#: ../develop/plone/misc/paster_templates.rst:103
msgid ""
"ZopeSkel input definitions should work both on command line and on the web "
"based generator."
msgstr ""

# 09464b86f7a64080906bcf315f4f0024
#: ../develop/plone/misc/paster_templates.rst:106
msgid "Pre- and postcondition triggers"
msgstr ""

# 18cc9577443947c2b0f628caf4978fce
#: ../develop/plone/misc/paster_templates.rst:108
msgid ""
"If you want to run special code before the templates are run and after they "
"have successfully complete, ZopeSkel provides some logic for this."
msgstr ""

# 0da13265dc6a4239933ff719f14e3b4f
#: ../develop/plone/misc/paster_templates.rst:113
msgid "http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/hosting.py"
msgstr ""

# d434bd5af23442e3a617e50f4719d5e1
#: ../develop/plone/misc/paster_templates.rst:115
msgid ""
"http://pythonpaste.org/script/paste/script/templates.py.html?f=11&l=143#11"
msgstr ""

# b6cb3640d83f469b9af83e2b1e67e6a7
#: ../develop/plone/misc/paster_templates.rst:118
msgid "Template folder structure"
msgstr ""

# d9a9919418194058aed3e638f435423e
#: ../develop/plone/misc/paster_templates.rst:120
msgid ""
"All templates should go to ``templates`` folder in your ZopeSkel extension "
"namespace."
msgstr ""

# 8dc30429b5924ed39a5bfdf33a5b7dbc
#: ../develop/plone/misc/paster_templates.rst:122
msgid "Filenames and folder names can contain variable substitues as::"
msgstr ""

# bc827db3a6864d03984fe811ef47e17a
#: ../develop/plone/misc/paster_templates.rst:126
msgid "will be mapped to::"
msgstr ""

# 9f353276c095488fa5712c95dd23d183
#: ../develop/plone/misc/paster_templates.rst:131
msgid "Template files"
msgstr ""

# 90d6ff08778b43b08e790b5db0b06d14
#: ../develop/plone/misc/paster_templates.rst:133
msgid ""
"Files having special ``_tmpl`` extension will have string substitution "
"performed on then. Paster supports `Cheetah templates "
"<http://packages.python.org/Cheetah/users_guide/index.html>`_ (default) and "
"`Python string templates "
"<http://docs.python.org/release/2.5.2/lib/node40.html>`_"
msgstr ""

# d74144ab75774b5593bdb47496ceb73a
#: ../develop/plone/misc/paster_templates.rst:140
msgid ""
"http://svn.plone.org/svn/collective/collective.dexteritypaste/trunk/collective/dexteritypaste/templates/dexterity/setup.py_tmpl"
msgstr ""

# bf584edafd344969b662b157991eca41
#: ../develop/plone/misc/paster_templates.rst:142
msgid ""
"The best way to get the initial template files and folders for your add-on "
"template is to checkout some existing ZopeSkel package, like "
"*collective.dexteritypaste* and export its *templates* folder to your own "
"add-on template."
msgstr ""

# a8db377c6c46488cbf588d51c037b60c
#: ../develop/plone/misc/paster_templates.rst:148
msgid ""
"As writing of this I am not aware of any meta-template to create paster "
"templates. But should thing would be greatly beneficial."
msgstr ""

# 6a81834b2e5947baa76df83c7e5e03fd
#: ../develop/plone/misc/paster_templates.rst:153
msgid "Variable substitution"
msgstr ""

# db7aeb8e3d7440bf961ff2958a4dee43
#: ../develop/plone/misc/paster_templates.rst:155
msgid "Simple string variable substitution is like::"
msgstr ""

# 6e2167f10e8640658512075d0ccc5fbc
#: ../develop/plone/misc/paster_templates.rst:162
msgid ""
"http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/localcommands/templates/plone/portlet/tests/test_+portlet_filename+.py_tmpl"
msgstr ""

# 84d8a110af3444a6a141142b0a54de99
#: ../develop/plone/misc/paster_templates.rst:165
msgid "Default variables"
msgstr ""

# 7787cbf59c394c5590bc0f64f7e4b1d7
#: ../develop/plone/misc/paster_templates.rst:167
msgid ""
"Defaulte template variables are inherited from various base classes of "
"ZopeSkel templates. One good place to look them is ``basic_namespace.py`` "
"template declaration."
msgstr ""

# 43af80bd7d534a339d988214f0e26560
#: ../develop/plone/misc/paster_templates.rst:170
msgid "Useful snippets::"
msgstr ""

# aff84cf6395144fd8fb92c3ecb50f2cf
#: ../develop/plone/misc/paster_templates.rst:177
msgid ""
"http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/basic_namespace.py"
msgstr ""

# 646b9d88df45425285bb52d06b5e1a0b
#: ../develop/plone/misc/paster_templates.rst:180
msgid "Variable preparation"
msgstr ""

# c533099d2bdb4e85bd1b2e31b0093a05
#: ../develop/plone/misc/paster_templates.rst:182
msgid ""
"You can also prepare template variables in Python code in your Paster "
"template class's ``pre()`` method::"
msgstr ""

# 27e293abb53144a4b40957de1ddee6e9
#: ../develop/plone/misc/paster_templates.rst:208
msgid ""
"http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/localcommands/plone.py"
msgstr ""

# 3a39244ab41f483890f52eb773f56f0c
#: ../develop/plone/misc/paster_templates.rst:211
msgid "Escaping strings"
msgstr ""

# daae517de0c14403bc5c85f51b41a5f1
#: ../develop/plone/misc/paster_templates.rst:213
msgid ""
"If you have any page template (``*.pt``) files you need to templatetize you "
"will encounter problem that both Cheetah and Zope Page Templates use the "
"similar string expansion syntax causing a conflict."
msgstr ""

# bab1f32fcdc743b5ab990b00f94c8614
#: ../develop/plone/misc/paster_templates.rst:217
msgid "You can use \\ (backslash) before dollar sign to escape it."
msgstr ""

# f9a164b5a601461fba28ebf476e31580
#: ../develop/plone/misc/paster_templates.rst:224
msgid "Conditions and branching"
msgstr ""

# b28336847a7941619ff38a2f5afaf97d
#: ../develop/plone/misc/paster_templates.rst:226
msgid ""
"If you need to have if, for and buddies in the templates see Cheetah manual."
msgstr ""

# aaf8e81b99bf434681beb8fef40d00f5
#: ../develop/plone/misc/paster_templates.rst:230
msgid ""
"http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/templates/plone/+namespace_package+/+package+/configure.zcml_tmpl"
msgstr ""

# e79ce1a229fd4b61a5a47fe3657dc856
#: ../develop/plone/misc/paster_templates.rst:235
msgid ""
"Local commands define insert snippets which will be injected to the existing"
" files."
msgstr ""

# 11671c8532794fb3b63288755bdc8657
#: ../develop/plone/misc/paster_templates.rst:237
msgid "The marker for snippet injects is::"
msgstr ""

# 1cd23f800fed4dd381047dc325c58e89
#: ../develop/plone/misc/paster_templates.rst:241
msgid ""
"You need to put it to the comment format of the file type. Example for XML "
"would be (``configure.zcml_tmpl``)::"
msgstr ""

# 1783451857484c6aa187e36269fb23b0
#: ../develop/plone/misc/paster_templates.rst:245
msgid ""
"Local command injection templates have ``_insert`` in their filename "
"extension. Then the local command injection snippet "
"``configure.zcml_insert`` look like::"
msgstr ""

# 2e5336a20fe647d1a58a82a877754c48
#: ../develop/plone/misc/paster_templates.rst:258
msgid ""
"http://pythonpaste.org/script/developer.html#what-do-commands-look-like"
msgstr ""

# c8a0a7704d404a2994c0316508bd323a
#: ../develop/plone/misc/paster_templates.rst:260
msgid "Some examples"
msgstr ""

# 739f08701c5b4fbe86eb9a93a852513e
#: ../develop/plone/misc/paster_templates.rst:262
msgid ""
"http://svn.plone.org/svn/collective/collective.dexteritypaste/trunk/collective/dexteritypaste/templates/dexterity/+namespace_package+/+package+/configure.zcml_tmpl"
msgstr ""

# 490f3101353d4503b36360d91953970e
#: ../develop/plone/misc/paster_templates.rst:264
msgid ""
"http://svn.plone.org/svn/collective/collective.dexteritypaste/trunk/collective/dexteritypaste/localcommands/templates/dexterity/behavior/behavior/configure.zcml_insert"
msgstr ""

# 7b171db50e434f4fae3e97b7f617104c
#: ../develop/plone/misc/paster_templates.rst:267
msgid "Testing the templates"
msgstr ""

# 91624a5d22394ef7a263375012ccc2f7
#: ../develop/plone/misc/paster_templates.rst:269
msgid ""
"ZopeSkel provides some doctest based testing facilities to hook your "
"templates to automatic testing facilities, mainly for the regression "
"testing."
msgstr ""

# 9e9cf75c4f4745c8a89e8e19dd6ffa86
#: ../develop/plone/misc/paster_templates.rst:274
msgid ""
"http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/docs/plone3_buildout.txt"
msgstr ""

# dadc969ddcb9419ba58a3ec29ea68f28
#: ../develop/plone/misc/paster_templates.rst:276
msgid ""
"http://svn.plone.org/svn/collective/ZopeSkel/trunk/zopeskel/docs/localcommands.txt"
msgstr ""

# bdef0337508948b7bb820766dd02fe18
#: ../develop/plone/misc/paster_templates.rst:279
msgid "Developing template egg with paster and buildout.cfg"
msgstr ""

# e3975510b03243f5a9549396fc9b3086
#: ../develop/plone/misc/paster_templates.rst:281
msgid ""
"The preferred method to run paster with Plone is to have it automatically "
"pulled in and configured for you by :doc:`buildout </old-reference-"
"manuals/buildout/index>`."
msgstr ""

# f5e9d4c35fb242439bfc4b856904b9df
#: ../develop/plone/misc/paster_templates.rst:285
msgid "develop-eggs"
msgstr ""

# b2e6454ca25f4af6a3fb6eaebe88d6c0
#: ../develop/plone/misc/paster_templates.rst:287
msgid ""
"You need to specially mention to buildout which Python eggs are in source "
"code form."
msgstr ""

# ba52980bde6044d6b8b91af657accc97
#: ../develop/plone/misc/paster_templates.rst:290
msgid "You can use ``develop-eggs`` directive"
msgstr ""

# ee023d4030e240de810e4044b2d96cc6
#: ../develop/plone/misc/paster_templates.rst:292
msgid ""
"You can use buildout extensions designed for source code and version control"
" management, like `mr.developer "
"<https://pypi.python.org/pypi/mr.developer>`_."
msgstr ""

# fefa329595e94642abcf5337370bc0bc
#: ../develop/plone/misc/paster_templates.rst:295
msgid ""
"Then you need to declare ``[paster]`` part and section in ``buildout.cfg``::"
msgstr ""

# 752e1583be834243bcf343c79b0531b9
#: ../develop/plone/misc/paster_templates.rst:315
msgid "Rerun buildout."
msgstr ""

# 4675b8ad79c84568b44e0ded0d7b5b37
#: ../develop/plone/misc/paster_templates.rst:317
msgid "Now when you run paster command it should show your custom template::"
msgstr ""

# a5e1ce47936441c1b0b16323a17a01e6
#: ../develop/plone/misc/paster_templates.rst:330
msgid "Testing the generated product"
msgstr ""

# 01c44b1bc83d4a9a85adf6cb4352db50
#: ../develop/plone/misc/paster_templates.rst:332
msgid ""
"This checks that your template generates viable code. We use package called "
"``gomobiletheme.yourcompany`` in this examples."
msgstr ""

# de805623c01f482b81b73f5464d522e1
#: ../develop/plone/misc/paster_templates.rst:335
msgid "Steps"
msgstr ""

# 67883d06045a4597b6ac0fa44e883e96
#: ../develop/plone/misc/paster_templates.rst:337
msgid "Generate a product skeleton using ``paster`` in non-interactive mode"
msgstr ""

# 65457c27c5c447c0aaba96a33eac44bd
#: ../develop/plone/misc/paster_templates.rst:345
msgid ""
"Use -f switch or you might encounter problems with template inheritance."
msgstr ""

# 75161c7f13f8401dbe5a36987fdf614d
#: ../develop/plone/misc/paster_templates.rst:347
msgid ""
"`See paster bug regarding template inheritance and -f switch "
"<http://trac.pythonpaste.org/pythonpaste/ticket/445>`_."
msgstr ""

# ed166d25a433440482083e1631d1d009
#: ../develop/plone/misc/paster_templates.rst:349
msgid ""
"Put the newly created add-on skeleton to ``buildout.cfg`` in develop eggs "
"and eggs::"
msgstr ""

# eac4f48186ff4dc6803486daad7c1d73
#: ../develop/plone/misc/paster_templates.rst:357
msgid "Run buildout"
msgstr ""

# 2f7cdbc6de1b4c0b8a70afaad75977d0
#: ../develop/plone/misc/paster_templates.rst:363
msgid ""
"Run :doc:`testrunner "
"</manage/deploying/testing_tuning/testing_and_debugging/unit_testing>` for "
"the created add-on"
msgstr ""

# 65ae84bca5154553a89455f5beace7c8
#: ../develop/plone/misc/paster_templates.rst:369
msgid "See ``bin/paste create --help`` for other useful debug switches."
msgstr ""

# 0deb51158b9c4bd8a20e70c47fbe1b99
#: ../develop/plone/misc/plone5way.rst:2
msgid "Looking ahead towards Plone 5"
msgstr ""

# 23a6ff30ca8744b0ac9edfe89235c959
#: ../develop/plone/misc/plone5way.rst:5
msgid ""
"Concerns regarding removal of portal_skins and reliance on browser views"
msgstr ""

# 2a079efe043d464696d8dac1756a8800
#: ../develop/plone/misc/plone5way.rst:10
msgid "Specific Things We Like to Do with portal_skins"
msgstr ""

# f071c4fd0f154ba2a130e78278878760
#: ../develop/plone/misc/plone5way.rst:13
msgid ""
"This document includes a bunch of specific use cases showing how we as "
"integrators typically rely on portal_skin."
msgstr ""

# 0cc9c0f2002c42ddb3bd031fb9327f99
#: ../develop/plone/misc/plone5way.rst:16
msgid "Nathan Van Gheem's responses below are indented."
msgstr ""

# 4f34e4d18830450893ac015e05da16b5
#: ../develop/plone/misc/plone5way.rst:20
msgid "Live Sites"
msgstr ""

# a37a165f4432476ea0d50e23ffbb8372
#: ../develop/plone/misc/plone5way.rst:22
msgid ""
"We can modify live sites’ appearance without having to touch the file system"
" by putting things in the custom folder."
msgstr ""

# 858d6ee535404367b358dd2567ce296a
#: ../develop/plone/misc/plone5way.rst:27
msgid ""
"Plone has, and will always try to provide a rich TTW editing and "
"customization story. This is true with plone.app.theming and diazo. If all "
"skins are removed, we WILL provide an alternative way to customize template "
"TTW. Right now, it looks to me like making portal_view_customizations work "
"better."
msgstr ""

# 2e513ec2b0824d6991cefd9ba40fd9a9
#: ../develop/plone/misc/plone5way.rst:35
msgid "No Filesystem or Buildout Access"
msgstr ""

# f04ea997744b44c58cb249c2de7d4b85
#: ../develop/plone/misc/plone5way.rst:37
msgid ""
"We often do not have access to the file system nor can we run buildout."
msgstr ""

# 918b521a82fe4996addc4251bcf4b2ad
#: ../develop/plone/misc/plone5way.rst:40
msgid "See Live Sites response."
msgstr ""

# dff8c61cfa4a42f4a6acab2228f7aa8c
#: ../develop/plone/misc/plone5way.rst:43
msgid "Customizing a collection’s display"
msgstr ""

# 7c6e43fd4f1b41cc9fa6fa8bbb2c1ff9
#: ../develop/plone/misc/plone5way.rst:45
msgid ""
"We have some custom content types that we want to display using a "
"collection. We build the collection and specify “item type”.  We want the "
"display to show fields that are unique to the custom content types.  We "
"locate the collection view template, customize it, rename it (to, say, "
"custom_collection_view), enhance it to show the additional field values, "
"then in portal_types we add the new custom_collection_view to the list of "
"available views for Topics.  The collection’s “Display” menu now includes "
"the new custom_collection_view."
msgstr ""

# 369f210dbd0f48e690f0170456045a2f
#: ../develop/plone/misc/plone5way.rst:54
msgid ""
"First off, best case we still have a story to do the exact same thing only "
"with portal_view_customizations."
msgstr ""

# 3fb41b166d854778abbfbe3032b541d4
#: ../develop/plone/misc/plone5way.rst:57
msgid ""
"Secondly, it can be easier to hit that use-case with a combination of "
"collective.listingviews and diazo. There has been discussion of integrating "
"a lot of what collective.listingviews does and more into plone.app.theming."
msgstr ""

# adf36b7ee85947c9a7af2773faac2666
#: ../develop/plone/misc/plone5way.rst:63
msgid "Creating a cloned content type so that it has a different default view"
msgstr ""

# a5bea2d6b8ec4559b993a553e5149c3e
#: ../develop/plone/misc/plone5way.rst:65
msgid ""
"Let’s say a site has a custom content type based on Document but we want to "
"have the default view include boilerplate text around the rich text and "
"description. We would go to portal_types, clone the Document type, rename "
"the cloned type “Project”.  Then we go to portal_skins, find document_view, "
"customize it, rename it to project_view, and add the boilerplate text we "
"want.  Then back in portal_types for Project, we change the default view to "
"project_view.  This way, anywhere in the site we create a Project object, "
"its default view (its only view) shows the boilerplate text we wanted."
msgstr ""

# a96b8e583d2c4b668f541c8b60f4b113
#: ../develop/plone/misc/plone5way.rst:75
msgid ""
"Cloned content types will still be available with dexterity. In fact, it’ll "
"be incredibly more robust and powerful."
msgstr ""

# 669f8a6b39604b14b8985c15391d7e37
#: ../develop/plone/misc/plone5way.rst:79
msgid ""
"For the views, look to the previous point about using "
"collective.listingviews and diazo."
msgstr ""

# eede9949d8b64ef29388863d559d34bd
#: ../develop/plone/misc/plone5way.rst:84
msgid "Classic Portlets"
msgstr ""

# 795aeef531a740688b0ce290e13e4c8f
#: ../develop/plone/misc/plone5way.rst:86
msgid ""
"We use classic portlets a lot to put together (quickly) something that "
"displays arbitrary content."
msgstr ""

# b7d11cc4cce8482ab60b8cf29e4fcde6
#: ../develop/plone/misc/plone5way.rst:90
msgid ""
"There is nothing scheduled to get rid of portlet or the classic portlet "
"right now. portal_skins will still be there."
msgstr ""

# 02004fd5a6ae47bb97f92a48536ea1a2
#: ../develop/plone/misc/plone5way.rst:94
msgid ""
"That being said, I might need more specific use-cases of how you’re using "
"classic portlets in order to explain how it’d be a replacement."
msgstr ""

# 66d4018e1e7f45f482ad0ace20c06db0
#: ../develop/plone/misc/plone5way.rst:99
msgid "Things We Don’t Like About Having to Rely Only on Browser Views"
msgstr ""

# fcb592c60d344690b3e48807b7e2583a
#: ../develop/plone/misc/plone5way.rst:102
msgid "Why browser views are hard for integrators (non-developers):"
msgstr ""

# 027d459027dd481ea656c7962c4f9fdc
#: ../develop/plone/misc/plone5way.rst:104
msgid "We may not have file system access"
msgstr ""

# 17a536489cac4323831fd30cd9c83836
#: ../develop/plone/misc/plone5way.rst:105
msgid ""
"We may not want to have to (and are not in fact able to) create a product to"
" register a new view"
msgstr ""

# 2da92fb85d8f4b8ea087b14ddf1bbb6b
#: ../develop/plone/misc/plone5way.rst:107
msgid ""
"We may not want to have to re-run buildout (nor are we able to) to register "
"a new view"
msgstr ""

# 07213fc6de5b439fa3a3c597d3042cec
#: ../develop/plone/misc/plone5way.rst:109
msgid ""
"Unless a browser view is correctly registered, customizing it via "
"portal_view_customizations breaks Python methods associated with the view"
msgstr ""

# 582bff2b870444109848e0b9d2d97d2a
#: ../develop/plone/misc/plone5way.rst:113
msgid ""
"I hope I’ve addressed your concerns. The final point is valid and a concern "
"of mine also. We’ll need to make sure there is a way to customize all "
"templates safely. I sort of hope people simply won’t be doing TTW "
"customizations of templates as much anymore though and they’ll just use "
"diazo with something like listingviews."
msgstr ""

# 685dbab6274a452da9c01c3043f1bb67
#: ../develop/plone/misc/plone5way.rst:119
msgid ""
"Others might have different ideas about how things will work. Dylan Jay "
"might be someone that can give really good answers regarding these "
"questions."
msgstr ""

# 1aa8ea60e2bb4b9682723e9d7df81f48
#: ../develop/plone/misc/plone5way.rst:122
msgid ""
"A good discussion regarding some of these issues can be found at: "
"http://plone.293351.n2.nabble.com/enhanced-collections-views-"
"td7565206.html;cid=1372262563684-127"
msgstr ""

# f49ccc6646fd4695a5eadfa85072dac2
#: ../develop/plone/misc/plone5way.rst:125
msgid "The final response there has a good overview."
msgstr ""

# ea07c5ccfc7947929c1c7089acceab8a
#: ../develop/plone/misc/porg.rst:3
msgid "Running plone.org site locally"
msgstr ""

# 293f2700244f494490388488fd84be05
#: ../develop/plone/misc/porg.rst:10
msgid ""
"This document tells how to duplicate plone.org to your local machine. "
"Previous Plone development experience needed."
msgstr ""

# b24c78fdf8b046c381d611d288e6ad10
#: ../develop/plone/misc/porg.rst:14
msgid "Base buildout and Zope"
msgstr ""

# 7b6eba1b7a7847938e39aab9454aaf16
#: ../develop/plone/misc/porg.rst:16
msgid "Grab your own buildout copy from"
msgstr ""

# ad28e7c8af3e49dbaefbf9195dcbf1ce
#: ../develop/plone/misc/porg.rst:18
msgid "https://github.com/plone/Products.PloneOrg"
msgstr ""

# 62bf5631a97d4829955050c07e42fba0
#: ../develop/plone/misc/porg.rst:20
msgid "buildout it"
msgstr ""

# e5ecbe909575408a95a9c0445a7372da
#: ../develop/plone/misc/porg.rst:22
msgid "bin/instance fg"
msgstr ""

# 868751e8ffe24d2080c97c4ebc71b286
#: ../develop/plone/misc/porg.rst:25
msgid "XDV theming"
msgstr ""

# bf973a1bd4204f5097cffcacc8f8a325
#: ../develop/plone/misc/porg.rst:27
msgid "Enter xdv::"
msgstr ""

# c6274f0da0844329b127e6e05ff5748b
#: ../develop/plone/misc/porg.rst:31
msgid "Checkout dv.xdvserver::"
msgstr ""

# 854614f335044929b05c9d1a7fdbca08
#: ../develop/plone/misc/porg.rst:35
msgid "Get static folder to correct context::"
msgstr ""

# fb36ba75ff614ac58a4e6b322cc294f2
#: ../develop/plone/misc/porg.rst:39
msgid "Edit nginx.cfg::"
msgstr ""

# f0271f2a3ba3459ea2266c6451a96bda
#: ../develop/plone/misc/porg.rst:50
msgid ""
"NGINX build instructions for OSX: http://www.ravelrumba.com/blog/install-"
"nginx-webfaction/"
msgstr ""

# f300f05011bd4085a917ec261e19f19b
#: ../develop/plone/misc/porg.rst:52
msgid ""
"Add --with-pcre=/path/to/your/pcre-8.1 in nginx.cfg. This must point "
"extracted PCRE source code (you don't need to compile PCRE by hand, just get"
" the source)"
msgstr ""

# 33d01b62253a46acbba347b2c0da3572
#: ../develop/plone/misc/porg.rst:55
msgid "Build it::"
msgstr ""

# 454efa0ba09547a69b2f5d7d0473540b
#: ../develop/plone/misc/porg.rst:59
msgid "If nginx building fails you can reset it with::"
msgstr ""

# 291d438685fd4ac5ab5399f425e0f96a
#: ../develop/plone/misc/porg.rst:63
msgid "If your buildout fails with messages like::"
msgstr ""

# b77c12a4f3ae4be0b3c314c9e5ec7d60
#: ../develop/plone/misc/porg.rst:71
msgid "After buildout completes do ngingx configtest::"
msgstr ""

# 9fbb8e1e3fce4176867e5f07030d357a
#: ../develop/plone/misc/porg.rst:77
msgid "Then run it::"
msgstr ""

# df2789a787904901803275ea0d74f987
#: ../develop/plone/misc/porg.rst:81
msgid "Add see that this servers static plone.html::"
msgstr ""

# 23f7b8b671954e4fac4f636cffa76d9e
#: ../develop/plone/misc/porg.rst:86
msgid "Now you can edit nginx.cfg to pull content from your local Plone::"
msgstr ""

# fa6ec32747004c98af057c571464fa6d
#: ../develop/plone/misc/porg.rst:97
msgid "You also need to touch static/rules/default.xml and comment out::"
msgstr ""

# a4c2173b4bab4db3a19591c326fd369a
#: ../develop/plone/misc/porg.rst:104
msgid "Rebuild and restart nginx::"
msgstr ""

# 87c11bc9fb394368aa3a0bf41c79a8aa
#: ../develop/plone/misc/porg.rst:108
msgid "Start Plone instance::"
msgstr ""

# d30d59dca16c428fb10c3b843e970183
# 76dc9a1205344d0e85da72813cd62b7b
#: ../develop/plone/misc/porg.rst:113 ../develop/plone/misc/porg.rst:119
msgid "Try::"
msgstr ""

# c32f2acb70a7495ab0dc303b22ab0567
#: ../develop/plone/misc/porg.rst:117
msgid "This should give Zope access and unthemed Plone site."
msgstr ""

# e2f304f00e1a418fad186bcc5046ccda
#: ../develop/plone/misc/porg.rst:123
msgid ""
"It should show the themed default \"Welcome to Plone page\" instead of "
"static XDV HTML content  before."
msgstr ""

# b30d6ea41b164efa88c5a24f363d4fd1
#: ../develop/plone/misc/porg.rst:126
msgid "Notes"
msgstr ""

# 6796ae2f3deb4de18f4e46dfe0ce7357
#: ../develop/plone/misc/porg.rst:128
msgid "Front page theming is done by static/plone-wide.html"
msgstr ""

# 3b46e2349dc644cd9c3cb12e99406a6a
#: ../develop/plone/misc/portal_transforms.rst:3
msgid "Changing Portal Transforms Settings via Python"
msgstr ""

# 1bc5b6c8aba242e5a27ba5a18ad8d58e
#: ../develop/plone/misc/portal_transforms.rst:10
msgid ""
"If you have to change some portal_transforms settings you can't use a "
"Generic Setup config file for this (as of 2010-03-25, "
"Products.PortalTransforms 2.0b4). But you can change it with python and a "
"Generic Setup import step. Here's how to do it."
msgstr ""

# 055752a378bf4623beb59c4a8abf0fe9
#: ../develop/plone/misc/portal_transforms.rst:15
msgid ""
"Security: The configuration shown below allows users to use nasty HTML tags "
"which can be a security issue if not used carefully."
msgstr ""

# 0be5d23f893d4000a928c25619e182e8
#: ../develop/plone/misc/portal_transforms.rst:17
msgid "Let's say we have a plone package called MY.PACKAGE."
msgstr ""

# ed2b1202a5d14d049196fd3f31abadfe
#: ../develop/plone/misc/portal_transforms.rst:20
msgid "Writing an Generic Setup Import Step Method"
msgstr ""

# bd95af0987f04ae28bb0ac250b1e10d9
#: ../develop/plone/misc/portal_transforms.rst:22
msgid ""
"This setup method is defined in MY.PACKAGE/setuphandlers.py. It configures "
"the safe_html portal_transform a bit less paranoid about nasty tags and "
"valid_tags, so that content managers are allowed to insert iframe, object, "
"embed, param, script, style, tags and more into the TinyMCE editor::"
msgstr ""

# ba0dbc19c37745d880ec13c3871fe9f9
#: ../develop/plone/misc/portal_transforms.rst:86
msgid "Registering the Import Step Method with Generic Setup"
msgstr ""

# 7fd96b66d99c4ea0bd51d9c70a7bec6f
#: ../develop/plone/misc/portal_transforms.rst:88
msgid ""
"Add an import step in MY.PACKAGE/MYPROFILESDIR/PROFILENAME/import_steps.xml "
"like so:::"
msgstr ""

# cbeec188863140b9b3d28dc44e99ce40
#: ../develop/plone/misc/portal_transforms.rst:102
msgid ""
"And create the File MY.PACKAGE/MYPROFILESDIR/PROFILENAME/MY.PACKAGE-"
"PROFILENAME.txt, so that this import step is not run for any profile but "
"just for this one."
msgstr ""

# 311b69187d904c11b913e0ad92ef8239
#: ../develop/plone/misc/portal_transforms.rst:108
msgid "Calling the Import Step Method in ZMI, portal_setup"
msgstr ""

# 88d3cd6f8d514902ababb87c48cfd642
#: ../develop/plone/misc/portal_transforms.rst:110
msgid ""
"Goto your site's portal_setup in ZMI, select your registered profile and "
"import the import step \"MY.PACKAGE portal_transforms setup\". That's it."
msgstr ""

# 7203cd74448f4860ae93cc1d5b5317a0
#: ../develop/plone/misc/seo.rst:3
msgid "Search engine optimization (seo)"
msgstr ""

# 3adfe368a4bf42ef84315dfc9e6549a2
#: ../develop/plone/misc/seo.rst:7
msgid "How to make Plone more search engine aware"
msgstr ""

# 86c41f574c374c5d90aba229f0089eda
#: ../develop/plone/misc/seo.rst:14
msgid "Plone is very search-engine friendly out of the box."
msgstr ""

# f34bf8d3c4b3405faa6329e057092abc
#: ../develop/plone/misc/seo.rst:16
msgid ""
"You can further fine-tune your search engine optimizations with PloneSEO "
"add-on"
msgstr ""

# 52bd26a041d146cf83d3e063d9108ddc
#: ../develop/plone/misc/seo.rst:18
msgid "http://plone.org/products/plone-seo/"
msgstr ""

# 7aa1da024e1c4e2c9ee66b64758337f0
#: ../develop/plone/misc/seo.rst:21
msgid "robots.txt"
msgstr ""

# 2738605182f84c56bc0b9af0aadb74e6
#: ../develop/plone/misc/seo.rst:23
msgid "You probably want to exclude following from the search engine listing"
msgstr ""

# 01922d1a52fa4e5391ccff3fa5de1a0b
#: ../develop/plone/misc/seo.rst:25
msgid "Your image bank"
msgstr ""

# 9b4b4886ae734bdbb81e4d74cc1a8a3c
#: ../develop/plone/misc/seo.rst:27
msgid "All search listings"
msgstr ""

# 5802690830654cd0b52e5a990164b251
#: ../develop/plone/misc/seo.rst:29
msgid "Login form"
msgstr ""

# 8de40e9f08ed418e8390eac1bab266f4
#: ../develop/plone/misc/seo.rst:31
msgid "Send to form"
msgstr ""

# 8471be7afc2745bfa038f3c132cdcb07
#: ../develop/plone/misc/seo.rst:33
msgid "... generally all forms"
msgstr ""

# 5ae5e8360c274f899d051fec2c184fd5
#: ../develop/plone/misc/seo.rst:37
msgid ""
"http://opensourcehacker.com/2009/08/07/seo-tips-query-strings-multiple-"
"languages-forms-and-other-content-management-system-issues/"
msgstr ""

# 5fd8a6c3fb554a7cad441fb601eb8143
#: ../develop/plone/misc/seo.rst:40
msgid "Procedural robots.txt"
msgstr ""

# b5e1e46c9df5478590d1a9c6e9482896
#: ../develop/plone/misc/seo.rst:42
msgid ""
"Below is an example how to generate ``robots.txt`` in ZMI Python script. It "
"prevents accidental indexing of the site from non HTTP 80 ports if you need "
"to leave Zope direct port open for the world for some reason."
msgstr ""

# e892910446484548a7edb293a3fce127
#: ../develop/plone/misc/seo.rst:46
msgid "Create new Script (Python) in your site root in ZMI::"
msgstr ""

# 1b2d0acc51e34f14bd90cde2df039d2a
#: ../develop/plone/misc/slideshow.rst:3
msgid "Slidehows and carousels"
msgstr ""

# eb10cac572354b4ca94308d8a6273c26
#: ../develop/plone/misc/slideshow.rst:16
msgid "Header slideshows"
msgstr ""

# e34a480fb0914d43bbec5290e1b511f5
#: ../develop/plone/misc/slideshow.rst:18
msgid "`Products.Carousel <http://plone.org/products/carousel/>`_"
msgstr ""

# b0caa9e76d174c9e90b936ff369bec14
#: ../develop/plone/misc/slideshow.rst:20
msgid "AJAX'y image pop-ups"
msgstr ""

# d503f9171dea4f61a9952344ea057823
#: ../develop/plone/misc/slideshow.rst:22
msgid "http://plone.org/products/pipbox"
msgstr ""

# bec9988fc337400fb0df2a23a8cc0bfa
#: ../develop/plone/misc/slideshow.rst:25
msgid "Migrate Products.Slideshow to Products.Carousel"
msgstr ""

# 670f022be11042b88486d25c75bfe9ca
#: ../develop/plone/misc/slideshow.rst:27
msgid ""
"Here is a sample migration code to transform your site from one add-on to "
"another."
msgstr ""

# 4b9a2363f9a3421aa4054446df2237b2
#: ../develop/plone/misc/slideshow.rst:30
msgid ""
"We create a migration view which you can call by typing in view name "
"manually to web browser."
msgstr ""

# 7ff702c0f8f8400b8bd3ae9c789dba99
#: ../develop/plone/misc/slideshow.rst:33
msgid "This code will"
msgstr ""

# 816b10b3e52740cc971dd6ce3cb7d0b7
#: ../develop/plone/misc/slideshow.rst:35
msgid ""
"Scan site for folders which have Slideshow add-on enabled. In this example "
"we check against a predefined list (scanned earlier), but the code contains "
"example how to detect slideshow folders"
msgstr ""

# c2750af621a240378ef59eae1115d80e
#: ../develop/plone/misc/slideshow.rst:38
msgid "Create Carousel for those folders"
msgstr ""

# b738728b076f451cbafa0a8c7044982b
#: ../develop/plone/misc/slideshow.rst:40
msgid ""
"Create corresponds Carousel Banners for all Slideshow Image content items"
msgstr ""

# 782fcb1198e3485095772c12da3937e1
#: ../develop/plone/misc/slideshow.rst:42
msgid "Set some Carousel settings"
msgstr ""

# 7fe1e8be3fb14e01a58be8c98c3200d0
#: ../develop/plone/misc/slideshow.rst:44
msgid ""
"Make sure that we invalidate cache for content items going through migration"
msgstr ""

# 32329391d0de4b059da136c5c8512435
#: ../develop/plone/misc/slideshow.rst:46
msgid "Set a new default view for folders which were using slideshow"
msgstr ""

# f42b4ce3cdf740fca2559a342e7b25e3
#: ../develop/plone/misc/slideshow.rst:48
msgid "Also"
msgstr ""

# a5cf187f151149bd997959a79930605a
#: ../develop/plone/misc/slideshow.rst:50
msgid "After inspecting the process was ok you can delete migrated images"
msgstr ""

# 8babe2692ca14a6fb8c47d16ee37e1c5
#: ../develop/plone/misc/slideshow.rst:52
msgid "carousel.py::"
msgstr ""

# 74c89fa5b2754f9ebac13e2925517e0f
#: ../develop/plone/misc/slideshow.rst:341
msgid "ZCML bits::"
msgstr ""

# ac9a1e8d7a344c7c84533b3657e3b02c
#: ../develop/plone/misc/slideshow.rst:358
msgid "Setting every carousel widths on the site"
msgstr ""

# b8a06b809adc44e48a5f772fa2814c8e
#: ../develop/plone/misc/slideshow.rst:360
msgid ""
"Another example to manipulate Products.Carousel. This script will update all"
" carousel settings on the site to have new image width."
msgstr ""

# a53d949b65cb42dfaa04ed9c15f98b19
#: ../develop/plone/misc/slideshow.rst:407
msgid "AJAX full-size image loading for album views"
msgstr ""

# e6241a2adbb341f49c0747e49d66f4a8
#: ../develop/plone/misc/slideshow.rst:409
msgid ""
"Plone album views can be easily converted to pop-up image viewing with "
"PipBox."
msgstr ""

# cd5ee865843b49eda9a376e777da72a8
#: ../develop/plone/misc/slideshow.rst:411
msgid "Put the following to portal_properties / pipbox_properties"
msgstr ""

# 1f03680228ab48908507a55111ee58c8
#: ../develop/plone/misc/slideshow.rst:413
msgid "Album view <a> click handler::"
msgstr ""

# 1cf9497efb3841f48cd866441e797ba4
#: ../develop/plone/misc/slideshow.rst:420
msgid ""
"portal_javascript must be in debug mode while testing different "
"Products.PipBox handlers."
msgstr ""

# 2f62cb6af541426881353b854dee0379
#: ../develop/plone/misc/sql.rst:3
msgid "SQL"
msgstr ""

# 68c285379c684c20ad2312a10ada34ae
#: ../develop/plone/misc/sql.rst:7
msgid "Using SQL databases (MySQL, PostgreSQL, others) in Plone"
msgstr ""

# 607af71b580d4d12a2c4a9652190e65b
#: ../develop/plone/misc/sql.rst:14
msgid ""
"If you are building the codebase Plone behaves as any other Python "
"application."
msgstr ""

# 634d1a39c9b744028154cd61cb6be37e
#: ../develop/plone/misc/sql.rst:16
msgid ""
"Write your SQL related code using known available Python SQL libraries and "
"frameworks"
msgstr ""

# c0d670b65d31433ab78433a5d3f654ad
#: ../develop/plone/misc/sql.rst:18
msgid ""
"Plug your code to Plone HTML pages through :doc:`views "
"</develop/plone/views/browserviews>`"
msgstr ""

# b7a4847c7bd34679940a821248dae464
#: ../develop/plone/misc/sql.rst:20
msgid "Example Python SQL libraries"
msgstr ""

# 21fc3312eae84af0b3e720f9408525ea
#: ../develop/plone/misc/sql.rst:22
msgid "http://www.sqlalchemy.org/"
msgstr ""

# df69d5d7e15e4c58ab2b15b784cfd7ab
#: ../develop/plone/misc/sql.rst:25
msgid "ZSQL"
msgstr ""

# 1ea7cd2153474b6f936bb88c0a1dd1c0
#: ../develop/plone/misc/sql.rst:27
msgid ""
"ZSQL is something probably written before you knew what SQL is. Never ever "
"use ZSQL in new code. It's not following any modern best practices and has "
"history of 1990s code. You have been warned. Stay away. The grue is near."
msgstr ""

# e0261365614c4fa397ac760a883ea647
#: ../develop/plone/misc/upgrade.rst:3
msgid "Upgrade tips"
msgstr ""

# 6ec0808e129e494488bab64dd1aced37
#: ../develop/plone/misc/upgrade.rst:7
msgid "Advanced tips for upgrading Plone."
msgstr ""

# d33540f8f83c478a857bb756757a402b
#: ../develop/plone/misc/upgrade.rst:10
msgid "General Tips"
msgstr ""

# 77312a79a18d40e98cd6af9a0158d5ca
#: ../develop/plone/misc/upgrade.rst:12
msgid ""
"This guide contains some tips for Plone upgrades. For more Information, see "
"also the `Official Plone upgrade guide "
"<http://plone.org/documentation/manual/upgrade-guide>`_"
msgstr ""

# 9ad23a14c24747daa4b3160d0336c32f
#: ../develop/plone/misc/upgrade.rst:17
msgid "Recommended set-up"
msgstr ""

# 72d8d2dde97642d1bdc80db86da83a3d
#: ../develop/plone/misc/upgrade.rst:19
msgid "Test upgrade on your local development computer first."
msgstr ""

# f6e1a2422697461aa823cd1edba05748
#: ../develop/plone/misc/upgrade.rst:21
msgid ""
"Create two buildouts. One for the old Plone version (your existing buildout)"
" and one for new version."
msgstr ""

# 7343727fedee49a8b202b19d4b195769
#: ../develop/plone/misc/upgrade.rst:24
msgid ""
"Prepare the migration in old buildout. After all preparations are done, copy"
" Data.fs to new buildout and run plone_migration tool there."
msgstr ""

# 530fde4e031949e39e2580f050cebad1
#: ../develop/plone/misc/upgrade.rst:29
msgid "Clear catalog"
msgstr ""

# 1af74dcce7ad4cc3998c13a7d071a179
#: ../develop/plone/misc/upgrade.rst:31
msgid ""
"Before moving the Data.fs to new version, clear all site portal_catalog "
"information."
msgstr ""

# 10504cdf7c1840e5822c5cf9623847ac
#: ../develop/plone/misc/upgrade.rst:36
msgid "Fix persistent utilities"
msgstr ""

# c4dac59d2c614fc99c734370be9d7271
#: ../develop/plone/misc/upgrade.rst:38
msgid ""
"You might need to clean up some leftovers from uninstalled add-ons which "
"have not performed a clean uninstall."
msgstr ""

# acae45abf9c1460f9f5e1f9bd28075e1
#: ../develop/plone/misc/upgrade.rst:41
msgid "Use this utility:"
msgstr ""

# 2a8297c597ad4c4583aa585caa4aab1d
#: ../develop/plone/misc/upgrade.rst:43
msgid "https://pypi.python.org/pypi/wildcard.fixpersistentutilities"
msgstr ""

# 3ec44eb4d0894e8a8e8a3f65c2f5e954
#: ../develop/plone/misc/upgrade.rst:45
msgid "Perform this against old buildout"
msgstr ""

# f8623e5f16b44d519dcace8849968bf5
#: ../develop/plone/misc/upgrade.rst:49
msgid "Content Upgrades"
msgstr ""

# 5e24ca874c4444558c03c984490eb12f
#: ../develop/plone/misc/upgrade.rst:51
msgid ""
"For content migrations, `Products.contentmigration "
"<https://pypi.python.org/pypi/Products.contentmigration/>`_  can help you. "
"Documentation on how to use it can be found on `plone.org "
"<http://plone.org/documentation/kb/migrate-custom-types-with-"
"products.contentmigration>`_."
msgstr ""

# a3a2a9e6d3a94d9094974d35320af687
#: ../develop/plone/misc/upgrade.rst:58
msgid ""
"Migration from non-folderish to folderish Archetypes based content types"
msgstr ""

# 5aa2f13da5cc497b8bacc2476b084672
#: ../develop/plone/misc/upgrade.rst:60
msgid ""
"Non-folderish content types are missing some BTree attributes, which "
"folderish content types have (See "
"``Products.BtreeFolder2.BTreeFolder2Base._initBtrees`` )."
msgstr ""

# cf69700a9aa9450a8e8153a71befe67f
#: ../develop/plone/misc/upgrade.rst:64
msgid ""
"plone.app.folder provides an upgrade view to migrate pre-plone.app.folder "
"(or non-folderish) types to the new BTree based implementation (defined in: "
"``plone.app.folder.migration.BTreeMigrationView``)."
msgstr ""

# 01770014318840c18992859634a49af9
#: ../develop/plone/misc/upgrade.rst:68
msgid ""
"To upgrade your non-folderish content types to folderish ones, just call "
"``@@migrate-btrees`` on your Plone site root, and you're done."
msgstr ""

# de2667a9aa714a0c92317e4b2c56381a
#: ../develop/plone/misc/upgrade.rst:71
msgid "This applies to Archetypes based content types."
msgstr ""

# 9829c552142e4ed4bce8027694295cbc
#: ../develop/plone/misc/upgrade.rst:75
msgid "Upgrading theme"
msgstr ""

# 367d7acf6b284c33bbe2fbe66374f483
#: ../develop/plone/misc/upgrade.rst:77
msgid ""
"Make sure that your site them works on Plone 4. Official upgrade guide has "
"tips how the theme codebase should be upgraded."
msgstr ""

# faef6824ceaa46b5881a9ad39dc9eedd
#: ../develop/plone/misc/upgrade.rst:83
msgid "Theme fixing and portal_skins"
msgstr ""

# 2c50cbfbcc6e4439854fd761739334c0
#: ../develop/plone/misc/upgrade.rst:85
msgid "Your theme might be messed up after upgrade."
msgstr ""

# af1788494b2e4ce9a94bbc105bf23677
#: ../develop/plone/misc/upgrade.rst:87
msgid ""
"Try playing around setting in *portal_skins* *Properties* tab. You can "
"enable, disable and reorder skins layer applied in the theme."
msgstr ""

# 4203efba26364dadb71481aa25be91b3
#: ../develop/plone/misc/upgrade.rst:90
msgid ""
"Upgrade may change the default theme and you might want to restore custom "
"theme in *portal_skins*."
msgstr ""

# 05ebf776d30e412fbd7048ed3a1bab17
#: ../develop/plone/misc/upgrade.rst:95
msgid "Upgrade tips for plone.app.discussion"
msgstr ""

# a279dabd06de4c4eb965f8e137ae07a6
#: ../develop/plone/misc/upgrade.rst:98
msgid "Enabling plone.app.discussion after Plone 4.1 upgrade"
msgstr ""

# 62e2d578939b45618aca26ac8c8eeda9
#: ../develop/plone/misc/upgrade.rst:100
msgid ""
"After migration from an earlier version of Plone, you will may notice that "
"you do not have a *Discussion* control panel for ``plone.app.discussion``, "
"the new commenting infrastructure which now ships as part of new Plone "
"installs beyond version 4.1.  If a check of your *Site Setup* page reveals "
"that you do not have the *Discussion* control panel, implement the "
"following."
msgstr ""

# 82d75a3e23274d65ba2feebe7593c566
#: ../develop/plone/misc/upgrade.rst:108
msgid "Install plone.app.discussion manually"
msgstr ""

# 39d8db4bc7bb48b18db8a71f983cd3fe
#: ../develop/plone/misc/upgrade.rst:110
msgid "Log into your Plone site as a user with Manager access"
msgstr ""

# 61d730ded09b4c17a6649ca2a1448181
#: ../develop/plone/misc/upgrade.rst:111
msgid ""
"Browse to the following URL to manually install ``plone.app.discussion``::"
msgstr ""

# 9cc4d2ef22f34114949cbfee8f0c0c72
#: ../develop/plone/misc/upgrade.rst:115
msgid ""
"In the *Select Profile or Snapshot* drop-down menu, select ``Plone "
"Discussions``."
msgstr ""

# e4caa5b6b2b244c08cd524e5140102b3
#: ../develop/plone/misc/upgrade.rst:117
msgid "Click the ``Import all steps`` button at the bottom of the page."
msgstr ""

# 06cd9404abd0444b8810c357cb4656e4
#: ../develop/plone/misc/upgrade.rst:118
msgid ""
"Confirm that *Discussion* is now present as a control panel in your *Site "
"Setup*"
msgstr ""

# 97037bae64c64b98ac1440078db6febe
#: ../develop/plone/misc/upgrade.rst:123
msgid "Migrate existing comments"
msgstr ""

# ff095a1c15774307be8f729884fbbcc6
#: ../develop/plone/misc/upgrade.rst:125
msgid ""
"Follow the instructions regarding `How to migrate comments to "
"plone.app.discussion "
"<http://plone.org/products/plone.app.discussion/documentation/how-to/how-to-"
"migrate-comments-to-plone.app.discussion>`_ to migrate existing Plone "
"comments."
msgstr ""

# 156753207e3d41749522e88dcf536d92
#: ../develop/plone/misc/upgrade.rst:132
msgid "Fixing Creator details on existing comments"
msgstr ""

# 080b4f3d0f124960a42062f0d2396f5f
#: ../develop/plone/misc/upgrade.rst:134
msgid ""
"You may notice that some of your site's comments have the user's ID as their"
" Creator property.  At time of writing (for "
"``plone.app.discussion==2.0.10``), the Creator field should refer to the "
"user's full name and not their user ID. You'll likely notice that a number "
"of other fields, including ``author_username``, ``author_name`` and "
"``author_email`` are not present on some of your migrated comments.  Reasons"
" why comments get migrated but unsuccessfully are being investigated."
msgstr ""

# 91d7a9e5cbad4db8ae587ca5e653438f
#: ../develop/plone/misc/upgrade.rst:142
msgid ""
"This may change for future versions of ``plone.app.discussion``.  For now, "
"though, having the user ID left as the Creator is less than helpful and "
"means aspects like the username, name, and email not present affect "
"usability of comments."
msgstr ""

# 31937a26c56f4176bb035794817706a6
#: ../develop/plone/misc/upgrade.rst:147
msgid ""
"If a site has many comments with this issue, it is possible to step through "
"all of them and correct them.  Using a script like the following will "
"process each of the affected comments accordingly:"
msgstr ""

# 13386fa376184329a1724a6cfeb222d5
#: ../develop/plone/misc/upgrade.rst:176
msgid ""
"This can be run anywhere an Acquisition ``context`` object is available, "
"such as running your Zope instance in ``debug`` mode, an ipython prompt, or "
"some other function on the filesystem.  The ``getSite()`` function call can "
"(and may need to) be replaced with some other pre-existing context object if"
" that is more suitable."
msgstr ""

# 20d51cc95002443da2a08f9f30ed46f2
#: ../develop/plone/misc/upgrade.rst:182
msgid ""
"Keep in mind that this script was successfully used in a situation where no "
"possible collisions existed between correctly-migrated comments Creators' "
"full names and user IDs (the code looks up the Creator in the hope of "
"finding a valid Plone member).  So, if you had a situation where you had "
"some correctly migrated comments written by a user with ID ``david`` and "
"full name of ``Administrator``, and also had a user with the ID of "
"``Administrator``, then this script may not be suitable.  In the test "
"situation, the three attributes of ``author_username``, ``author_name``, and"
" ``author_email`` were observed as all being ``None``, so in checking for "
"this too, this may avoid problems.  Test the code first with something like "
"a ``print`` statement to ensure all comments will get modified correctly."
msgstr ""

# 83a19a9dcaa147d982dc07cffb883181
#: ../develop/plone/persistency/database.rst:3
msgid "ZODB Database"
msgstr ""

# dabb8cd1679f425eadbe58d80593ec8c
#: ../develop/plone/persistency/database.rst:7
msgid ""
"Plone uses the ZODB object database to store its data.  The ZODB can act "
"independently in-process, clustered over network or over another database "
"engine, like SQL."
msgstr ""

# cb04552ffb6a48e5ab704c3a8afb704b
#: ../develop/plone/persistency/database.rst:16
msgid ""
"Plone uses the ZODB database.  The ZODB happily stores any Python object "
"with any attributes |---| there is no need to write database schema or table"
" descriptions as there is with SQL-based systems. If data models are "
"described somehow the descriptions are written in Python, usually using "
"``zope.schema`` package."
msgstr ""

# 8e7e904c39974d17b3991afba6be6fd9
#: ../develop/plone/persistency/database.rst:23
msgid ""
"This chapter is about the basics of the ZODB, working with the ZODB database"
" directly, like tuning database settings."
msgstr ""

# 555a08d515a641eaa43a3cfea9f63d22
#: ../develop/plone/persistency/database.rst:26
msgid "More information about ZODB"
msgstr ""

# ea1bf888bb194ffb93bcf5aadaabe600
#: ../develop/plone/persistency/database.rst:28
msgid "http://www.zodb.org/"
msgstr ""

# c17801c484b94207994722c1e6191ebd
#: ../develop/plone/persistency/database.rst:30
msgid "`Documentation <http://zodb.readthedocs.org/>`_"
msgstr ""

# 2d5fea3e31c04b719305ed82c9c9e10f
#: ../develop/plone/persistency/database.rst:32
msgid "`API documentation <http://zodb.readthedocs.org/en/latest/api.html>`_"
msgstr ""

# 6f42bcd10bf344a7995e27ac69ca0e88
#: ../develop/plone/persistency/database.rst:35
msgid "Database files"
msgstr ""

# 721f2f3d7fc148d59cef6ee042a2f40f
#: ../develop/plone/persistency/database.rst:37
msgid ""
"Usually Plone's database is configured to file ``var/filestorage/Data.fs`` "
"and uploaded files can be found as BLOBs in ``var/blobstorage``."
msgstr ""

# ed2036bc31694a9780469f7dbadf0793
#: ../develop/plone/persistency/database.rst:42
msgid "Object database features"
msgstr ""

# 25127d6c22384c73a9b990497f76d38a
#: ../develop/plone/persistency/database.rst:44
msgid ""
"The ZODB is an object database.  It makes very easy to store different kinds"
" of contentish data in a graph, supporting subclassing (something which SQL "
"often does poorly)."
msgstr ""

# 12083ae2963e4e68b95523c1b5d903fc
#: ../develop/plone/persistency/database.rst:48
msgid ""
"Since the database stores objects, and the objects are defined in Python "
"code, you always need the corresponding Python source code to instantiate "
"the objects stored inside the ZODB.  This might feel awkward at first, but "
"you need to have MySQL running to read what's inside MySQL files stored on "
"your disk and so on ..."
msgstr ""

# f169e25d448d4611a6874985542bcadc
#: ../develop/plone/persistency/database.rst:55
msgid ""
"The ZODB database is not usable without the Python source code used to "
"create the data. The data is not readable using any SQL-based tools, and "
"there exist little tools to deal with the raw data. The way to access Plone "
"data is running Plone itself and performing queries through it."
msgstr ""

# 5f334e87e6b8491dbc002cd655f3c76d
#: ../develop/plone/persistency/database.rst:62
msgid ""
"Since correct source code is needed to read ZODB data, this poses a problem "
"for versioning. Even if you use the correct add-on product with proper "
"source code, if the source code version is wrong, it might not work.  Data "
"model attributes might be added, modified or deleted between source code "
"revisions, making data operations on the existing database fail by raising "
"Python exceptions (``AttributeError``, ``KeyError``)."
msgstr ""

# ce16014a96484ab980f48f17f9bea0dc
#: ../develop/plone/persistency/database.rst:69
msgid ""
"To work around the ZODB interoperability problems, products like "
"*ore.contentmirror* exist to duplicate Plone content data to read-only SQL "
"database."
msgstr ""

# 6fbaed61f5504286999909da0964de07
#: ../develop/plone/persistency/database.rst:74
msgid "Query and searching"
msgstr ""

# fd0420e36dd7428ea81a162ddce9de1d
#: ../develop/plone/persistency/database.rst:76
msgid ""
"ZODB does not provide query services as is i.e. there is no SELECT "
"statement."
msgstr ""

# c89903beb5b24deca0b1ab394fdf491c
#: ../develop/plone/persistency/database.rst:79
msgid ""
"Plone provides :doc:`cataloging "
"</develop/plone/searching_and_indexing/catalog>` service for this purpose."
msgstr ""

# b80a599681ae439887154f4362067c6d
#: ../develop/plone/persistency/database.rst:82
msgid "This gives some benefits"
msgstr ""

# 7606e3fb57b64c1b9170ed75425e7cb3
#: ../develop/plone/persistency/database.rst:84
msgid "You define yourself how data is indexed"
msgstr ""

# a581dd9a98ab4bd4b56cd809dda62c2a
#: ../develop/plone/persistency/database.rst:86
msgid ""
"The backend to perform queries is flexible - you can plug-in custom indexes"
msgstr ""

# ed45291c8c094baa9260f613b65eb4ce
#: ../develop/plone/persistency/database.rst:89
msgid ""
"portal_catalog default catalog is used to all content items to provide basic"
" CMS functionality easily"
msgstr ""

# 5d9637c0532e4d7aae95ab672a60d2fe
#: ../develop/plone/persistency/database.rst:92
msgid ""
"You can have optimized catalogs for specialized data (e.g. reference look-"
"ups using reference_catalog)"
msgstr ""

# 2d760b613ad04c4da608172a462d7f02
#: ../develop/plone/persistency/database.rst:96
msgid "Data model"
msgstr ""

# 585649baa1374461a9a807c3122e9a48
#: ../develop/plone/persistency/database.rst:98
msgid "There is no hardwired way for describe data in ZODB database."
msgstr ""

# be641da6640143e3b642c8e5f86fecab
#: ../develop/plone/persistency/database.rst:101
msgid ""
"Subclasses of ZODB ``persistent.Persistent`` class will have all their "
"attributes and referred objects written to the database using Python pickle "
"mechanism. Lists and dictionaries will be automatically converted to "
"persistent versions."
msgstr ""

# 2d71694935e24d6098de1d9c7f516757
#: ../develop/plone/persistency/database.rst:107
msgid "There are currently three primary ways to define data models in Plone"
msgstr ""

# 7e6645af068b40b185d48d7cb0d6dd31
#: ../develop/plone/persistency/database.rst:109
msgid ""
"Using zope.schema package (modern way) to describe Python object properties"
msgstr ""

# 7f4eeb9fa06a42d4aad4ba544dd36e08
#: ../develop/plone/persistency/database.rst:111
msgid "Using Archetypes content type subsystem (all Plone 3 content)"
msgstr ""

# 0495e4b0311946adbba0fdc3d7b37cc7
#: ../develop/plone/persistency/database.rst:113
msgid "Not defining the model, but relying on ad hoc object attributes"
msgstr ""

# 103768eef7e84ca29040ac770f87ebbe
#: ../develop/plone/persistency/database.rst:115
msgid ""
"Read about :doc:`zope.schema </develop/plone/forms/schemas>` how to define a"
" model for the data to be stored in ZODB database."
msgstr ""

# 616b0a769dd941b4ad42ce0a22637ef9
#: ../develop/plone/persistency/database.rst:120
msgid "Transactions and committing"
msgstr ""

# 6ff716afdb634d9cb862f5d67eedd918
#: ../develop/plone/persistency/database.rst:122
msgid ""
"`This in-depth SO answer <http://stackoverflow.com/questions/11254384/when-"
"to-commit-data-in-zodb/>`_ explains how committing works in ZODB."
msgstr ""

# 334fb7cbd4654e8ba0b736e0ae7c6799
#: ../develop/plone/persistency/database.rst:125
msgid "Savepoints and optimism regarding them"
msgstr ""

# ab173e70fd0b4525ab85e0a804fb82a0
#: ../develop/plone/persistency/database.rst:127
msgid "PersistentList and list differences when saving data"
msgstr ""

# 7882625853bf419bb63f8de96856ba60
#: ../develop/plone/persistency/database.rst:131
msgid "Browsing"
msgstr ""

# 17c3dd26439f47ff931e68617532fae6
#: ../develop/plone/persistency/database.rst:133
msgid ""
"You can explore ZODB with-in Plone using `ZODBBrowser "
"<http://plone.org/products/zodbbrowser>`_."
msgstr ""

# b9847ffcf3fb4347aca7167592c1682a
#: ../develop/plone/persistency/database.rst:136
msgid "Packing database"
msgstr ""

# 2f837e4c7f164d14bc1075a21672157d
#: ../develop/plone/persistency/database.rst:138
msgid ""
"As ZODB is append-only database it remembers all its history unless packed. "
"Packing will erase undo history."
msgstr ""

# c0dfcae5ac004465a8e92612387c4512
#: ../develop/plone/persistency/database.rst:140
msgid ""
"`Why you need to regularly pack ZODB database to keep the performance up "
"<http://www.sixfeetup.com/blog/optimize-your-plone-development-by-packing-"
"the-zodb>`_"
msgstr ""

# f5805180670a454da60162271cf52893
#: ../develop/plone/persistency/database.rst:142
msgid ""
"`Packing is similar to VACUUM in PostgreSQL "
"<http://stackoverflow.com/questions/11254384/when-to-commit-data-in-zodb/>`_"
msgstr ""

# b810e3199349467283f347a90b1a21ae
#: ../develop/plone/persistency/database.rst:145
msgid "Packing through-the-web"
msgstr ""

# 094f329071dc484f8bf77062ce292155
#: ../develop/plone/persistency/database.rst:147
msgid ""
"Manual packing can be executed through Zope Control Panel (not Plone control"
" panel) in Zope application server root (not Plone site root) in ZMI."
msgstr ""

# 770b5d82ea564b97bf1c5f5a6ef96d66
#: ../develop/plone/persistency/database.rst:151
msgid "Packing from command line"
msgstr ""

# 00e518e8036b4ca8aa87003c72e1f682
#: ../develop/plone/persistency/database.rst:153
msgid ""
"`plone.recipe.zeoserver <https://github.com/plone/plone.recipe.zeoserver/>`_"
" buildout recipe provides command called ``bin/zeopack`` inside buildout. It"
" allows you to trigger packing from the command line when Zope is clustered "
"ZEO configuration. ``zeopack`` command runs against an on-line site."
msgstr ""

# 8df287c35e434d26aad405439eaf9987
#: ../develop/plone/persistency/database.rst:158
msgid ""
"This command is useful to run in cron to keep your Data.fs file growing "
"forever. You can control the number of days of history to be kept, etc., "
"using buildout recipe variables."
msgstr ""

# 282fea0d8a8847618e070ea707dd9af8
#: ../develop/plone/persistency/database.rst:163
msgid "https://github.com/plone/plone.recipe.zeoserver"
msgstr ""

# 09590c6d5bb94dc5b9cad9687f7b1801
#: ../develop/plone/persistency/database.rst:166
msgid "Packing the database offline"
msgstr ""

# 3d72d25437bc40b68b59893db3898ec8
#: ../develop/plone/persistency/database.rst:168
msgid ""
"`See this blog post <http://blog.twinapex.fi/2009/09/01/packing-and-copying-"
"data-fs-from-production-server-for-local-development/>`_."
msgstr ""

# f7a92ac490244dcc818cb4c2665ee5d3
#: ../develop/plone/persistency/database.rst:170
msgid ""
"Example how to pack a copy of Data.fs in offline using Python snippet::"
msgstr ""

# d1aab34c155c481790b7a7154af4a564
#: ../develop/plone/persistency/database.rst:179
msgid ""
"As this depends on ZODB egg, the easiest way to run the snippet is to "
"``zopepy`` script from your ``buildout/bin`` folder::"
msgstr ""

# 60dc82fe82b647eda88f0143f4cb5de3
#: ../develop/plone/persistency/database.rst:184
msgid ""
"For more information, see :doc:`command-line scripts "
"</develop/plone/misc/commandline>`."
msgstr ""

# 2eee1d40469a4a37ab52fc490007ab82
#: ../develop/plone/persistency/database.rst:187
msgid "Visualizing object graphs"
msgstr ""

# 4468d93bd03d40f9a5de92191dbf146a
# 901dc1766b194832a8303ba6cdae5f84
#: ../develop/plone/persistency/database.rst:189
#: ../develop/plone/persistency/persistent.rst:238
msgid ""
"http://blog.hannosch.eu/2009/05/visualizing-persistent-structure-of.html"
msgstr ""

# b9759c69a9f64c6bbe78480a168b53fe
#: ../develop/plone/persistency/database.rst:191
msgid "http://david.wglick.org/2009/visualizing-the-zodb-with-graphviz/"
msgstr ""

# 8a9f918e219644cc81f4df2ab3b53b09
#: ../develop/plone/persistency/database.rst:194
msgid "Cache size"
msgstr ""

# 9c9e00590fd9481abd03cf87b9d9a566
#: ../develop/plone/persistency/database.rst:196
msgid ""
"`Understanding ZODB cache size option <https://mail.zope.org/pipermail/zodb-"
"dev/2010-March/013199.html>`_"
msgstr ""

# 668d8d2db7af4397bd05c4b4b7f9d5d0
#: ../develop/plone/persistency/database.rst:199
msgid "Integrity checks"
msgstr ""

# d8ff66aa9fdb4ae4ad62c32cfa0b6bb9
#: ../develop/plone/persistency/database.rst:201
msgid ""
"Especially when you back-up a Data.fs file, it is useful to run integrity "
"checks for the transferred files."
msgstr ""

# 4af42e98280c429e85ff5f55ea9e90fb
#: ../develop/plone/persistency/database.rst:203
msgid ""
"ZODB provides scripts ``fstest`` and ``fsrefs`` to check if Data.fs data is "
"intact and there are no problems due to low level disk corruption or bit "
"flip."
msgstr ""

# d1ad62928ab745bb8b94785e47767f5d
#: ../develop/plone/persistency/database.rst:206
msgid "http://wiki.zope.org/ZODB/FileStorageBackup"
msgstr ""

# 46c1d68b5b2d4e63aa380ff986d19954
#: ../develop/plone/persistency/database.rst:210
msgid ""
"It is recommended best practice to run integrity against your Data.fs "
"regularly. This is the only way to detect corruption which would otherwise "
"go unnoticed for a long time."
msgstr ""

# f3da239c8ee746409e782615b8b91191
#: ../develop/plone/persistency/database.rst:215
msgid "Restart and cache warm-up"
msgstr ""

# 31322642c6c748a5878750c602c1bce5
#: ../develop/plone/persistency/database.rst:217
msgid "Discussion why Plone is slow after restart"
msgstr ""

# cc29ab2e53f0416b8eaeca79e10434cb
#: ../develop/plone/persistency/database.rst:219
msgid "https://mail.zope.org/pipermail/zodb-dev/2013-March/014935.html"
msgstr ""

# f4dcf5e5aedb4620831b7493bbc8e5ea
#: ../develop/plone/persistency/database.rst:222
msgid "Recovering old data"
msgstr ""

# 07fa516bb7b64c67a13a76a1fb974ee8
#: ../develop/plone/persistency/database.rst:224
msgid "Instructions for undoing deleted data and fixing broken databases."
msgstr ""

# 8fa520eb2312448a815aa9507785a936
#: ../develop/plone/persistency/database.rst:226
msgid ""
"http://www.zopatista.com/plone/2008/12/18/saving-the-day-recovering-lost-"
"objects"
msgstr ""

# 0474c6a267194de396f5f972951e4a5d
#: ../develop/plone/persistency/database.rst:229
msgid "ZODB tips and tricks"
msgstr ""

# 2a565aaa126646e1ba494dd44ddc30eb
#: ../develop/plone/persistency/database.rst:233
msgid ""
"http://plone.org/events/regional/nola05/collateral/Chris%20McDonough-"
"ZODB%20Tips%20and%20Tricks.pdf"
msgstr ""

# 99e7dd91cb274df7827cdbc47dc4fe2f
#: ../develop/plone/persistency/index.rst:3
msgid "ZODB, persistency and transactions"
msgstr ""

# da7627d6eff94056b616b1b94641e189
#: ../develop/plone/persistency/lifecycle.rst:3
msgid "Object lifecycles"
msgstr ""

# 64de581d38974701b38847c7835515f6
#: ../develop/plone/persistency/lifecycle.rst:5
msgid "Plone has different lifecycles for different objects"
msgstr ""

# 2c5a204230c44006af12395abb170435
#: ../develop/plone/persistency/lifecycle.rst:7
msgid ""
"Persistent objects: These objects are transparently persistent. They look "
"like normal Python objects, but they are serialized to the disk if the "
"transaction completes successfully. Persistent object inherit from Zope's "
"various persistent classes: persistent.Persistent, PersistentDict, "
"PersistentList and they have special attributes like _p_mtime when the "
"object was last written to disk. To make object persistent, it must be "
"referred from Zope's App traversing graph. Examples: content objects, user "
"account objects."
msgstr ""

# ee24bcbcc1104efcb8d6ab83cb700fce
#: ../develop/plone/persistency/lifecycle.rst:15
msgid ""
"Request attached objects and thread-local objects: Each HTTP request is "
"processed by its own Python thread. These objects disappear when the request"
" has been processed. Examples: request object itself, getSite() thread-local"
" way to access the site object, request specific permission caches."
msgstr ""

# fd83e7c173ec4633921089918291a6dd
#: ../develop/plone/persistency/lifecycle.rst:20
msgid ""
"In-process objects, or \"static\" objects are created when the server "
"application is launched and they are gone when the application quits. "
"Usually these objects are set-up during Plone initialization and they are "
"read-only for served HTTP requests. Examples: content type vocabulary lists."
msgstr ""

# 9f93051f560849e4b9ea8d80b419dfeb
#: ../develop/plone/persistency/migrations.rst:3
msgid "Migrations"
msgstr ""

# d8295a363ec04471870a45e30dd4e6b9
#: ../develop/plone/persistency/migrations.rst:5
msgid ""
"Database migrations are needed if your internal data storage format changes "
"between versions."
msgstr ""

# f2891fdebbb643dbb3e54c85a2410f24
#: ../develop/plone/persistency/migrations.rst:8
msgid ""
"ZODB does not require you to set object format explicitly, like in SQL you "
"need to create table schema. However, your code will naturally fail if the "
"data format of the object is unexpected."
msgstr ""

# 94945a0b5dd149de8428ec701f4b59e0
#: ../develop/plone/persistency/migrations.rst:13
msgid ""
"`Changing instance attributes <http://www.zodb.org/documentation/guide/prog-"
"zodb.html#changing-instance-attributes>`_"
msgstr ""

# b47d1b87b00c44a992fb84c09d24f93b
#: ../develop/plone/persistency/persistent.rst:3
msgid "Persistent objects"
msgstr ""

# a99102da47b644b9af8e6b101adba43d
#: ../develop/plone/persistency/persistent.rst:7
msgid ""
"This document tells how to save objects to Plone/Zope database. Persistent "
"objects are automatically read and written from ZODB database in Plone and "
"they appear as normal Python objects in your code. This document clarifies "
"some of special properties, like with containers, when you deal with "
"persistent objects programmatically."
msgstr ""

# 27253c9318e94bc08cfec251ba5203d4
#: ../develop/plone/persistency/persistent.rst:18
msgid "**Q: How do I save() object in Plone**"
msgstr ""

# 70c439f3f576460b827636b5bdf91545
#: ../develop/plone/persistency/persistent.rst:20
msgid "**A: You don't**"
msgstr ""

# 1e9e273c38494b1db4d87a5814cadc48
#: ../develop/plone/persistency/persistent.rst:22
msgid ""
"Plone does this automatically for you. You just assign the file data as an "
"attribute of some persistent object. When the HTTP request completes, Zope "
"transaction manager will automatically update all changed persistent objects"
" to the database. There is no \"save\" as such in Zope world - it all is "
"transparent to the developer. If the transaction fails in any point, no data"
" is being written and you do not need to worry about the partial data being "
"written to the database."
msgstr ""

# 86a2d551fd4844ad869fe0d02409041f
#: ../develop/plone/persistency/persistent.rst:31
msgid ""
"Changed objects will be automatically saved (if they are attached to the "
"traversing graph)"
msgstr ""

# 86355dcb7ed1408d919b953b81488161
#: ../develop/plone/persistency/persistent.rst:34
msgid "Save will not occur if an exception is raised"
msgstr ""

# 3a8c190c687945dc9e958c7b343a1a47
#: ../develop/plone/persistency/persistent.rst:36
msgid ""
"If your data class inherits from higher level Plone base classes (all go up "
"to persistent.Persitent class). persistency is handled transparently for "
"you. Plone also handles transaction automatically for each HTTP request. "
"Unless you wish to do manual transactions there is no need to call "
"transaction.commit()."
msgstr ""

# 964df4ad5a2d476689c1af0e4c102912
#: ../develop/plone/persistency/persistent.rst:42
msgid ""
"If you want to do your own persistent classes please read the following"
msgstr ""

# a1b3bb838daa4a75ba35d9fa513cad35
#: ../develop/plone/persistency/persistent.rst:44
msgid ""
"`Writing a persistent class <http://www.zodb.org/documentation/guide/prog-"
"zodb.html#writing-a-persistent-class>`_"
msgstr ""

# 89b22b896f15403da34e4b792b6f3bc0
#: ../develop/plone/persistency/persistent.rst:46
msgid ""
"`About persistent objects "
"<http://www.zope.org/Documentation/Books/ZDG/current/Persistence.stx>`_"
msgstr ""

# 22ce4772d59b4a199044a79930884891
#: ../develop/plone/persistency/persistent.rst:48
msgid ""
"`Persistent interface description "
"<http://apidoc.zope.org/++apidoc++/Interface/persistent.interfaces.IPersistent/index.html>`_."
msgstr ""

# dfca288147ef40b9aa23067eb13ff8b4
#: ../develop/plone/persistency/persistent.rst:50
msgid ""
"`ZODB tips and tricks "
"<http://plone.org/events/regional/nola05/collateral/Chris%20McDonough-"
"ZODB%20Tips%20and%20Tricks.pdf>`_"
msgstr ""

# 6c878263b5db46b696820f0601ee7ede
#: ../develop/plone/persistency/persistent.rst:53
msgid "Lists and dictionaries"
msgstr ""

# d2b4196139ef4bbab47dae4a67c68dfd
#: ../develop/plone/persistency/persistent.rst:55
msgid ""
"If you modify objects inside persistent lists and dictionaries, the change "
"is not automatically reflected to the parent container."
msgstr ""

# 2ed273fa5cb448ec930c42b040a0188a
#: ../develop/plone/persistency/persistent.rst:58
msgid ""
"`Modifying mutable objects "
"<http://zodb.readthedocs.org/en/latest/working.html#handling-changes-to-"
"mutable-objects>`_"
msgstr ""

# 45cac708ea1045fa875e28a42cf15344
#: ../develop/plone/persistency/persistent.rst:61
msgid "PersistentList vs. normal Python list"
msgstr ""

# 0e2ae9f2b8ab4291ad914c9b6419e5d5
#: ../develop/plone/persistency/persistent.rst:63
msgid ""
"All items in normal Python list are stored as one write and loaded on one "
"write. PersistentList is slower, but allows individual objects picked from "
"the list without loading the whole list."
msgstr ""

# bcc28938a3d84ba4a841a5a83d21789e
#: ../develop/plone/persistency/persistent.rst:68
msgid "https://mail.zope.org/pipermail/zodb-dev/2009-December/013011.html"
msgstr ""

# 4d27a0c881214d7da17c3e3cf84bcc79
#: ../develop/plone/persistency/persistent.rst:72
msgid "Persistent, modifications, __setattr__ and transactions"
msgstr ""

# d79a736c6f164079b9563abf4d5d4d17
#: ../develop/plone/persistency/persistent.rst:74
msgid ""
"When Persitent object is modified, via attribute set or __setattr__() call, "
"the current transaction is converted to a write transaction. Write "
"transactions are usually undoable (visible on Zope's Undo tab)."
msgstr ""

# 691d727d696b4c2e9279a3107a36c610
#: ../develop/plone/persistency/persistent.rst:78
msgid ""
"If you are using Python property mutator and even if it does not write to "
"the object it still will trigger the object rewrite."
msgstr ""

# ac16f4a27edb49a8be701f0733067286
#: ../develop/plone/persistency/persistent.rst:83
msgid "https://mail.zope.org/pipermail/zodb-dev/2009-December/013047.html"
msgstr ""

# 9c8f47de81b84b568a21df67a820dc36
#: ../develop/plone/persistency/persistent.rst:86
msgid "Up-to-date reads"
msgstr ""

# 3329e0d469204d98b268573e7fb9dcbd
#: ../develop/plone/persistency/persistent.rst:88
msgid ""
"Normally, ZODB only assures that objects read are consistent, but not "
"necessarily up to date. Checking whether an object is up to date is "
"important when information read from one object is used to update another."
msgstr ""

# c0fc059b15494ba89efef22a2b194273
#: ../develop/plone/persistency/persistent.rst:92
msgid ""
"The following will force the object to use the most up-to-date version in "
"the transaction::"
msgstr ""

# cad5b8f37d2e45768650dc188b7153f6
#: ../develop/plone/persistency/persistent.rst:96
msgid ""
"A conflict error will be raised if the version of ob read by the transaction"
" isn't current when the transaction is committed."
msgstr ""

# b6f2364a6c2240e3b783b65f2dc7a4b4
#: ../develop/plone/persistency/persistent.rst:101
msgid "ZODB versions older than 3.10.0b5 do not support this feature."
msgstr ""

# ff261498e56f4777838fd80d5f210a7f
#: ../develop/plone/persistency/persistent.rst:105
msgid "https://pypi.python.org/pypi/ZODB3/3.10.0b5#b5-2010-09-02"
msgstr ""

# 9df60a4cabd54217b02566e6ac1fb52e
#: ../develop/plone/persistency/persistent.rst:108
msgid "Accessing broken objects"
msgstr ""

# 9e6743b409a84338b1867d6929b3d208
#: ../develop/plone/persistency/persistent.rst:110
msgid ""
"ZODB is object database. By default, it cannot load object from the database"
" if the code (Python class) is not present."
msgstr ""

# 41934f82aac24021beaeddd28cf98b2d
#: ../develop/plone/persistency/persistent.rst:114
msgid ""
"You can still access data in the objects by creating Python code \"stubs\" "
"which fake the non-existing classes in the run-time environment."
msgstr ""

# 86a3c2235a294a37ba385911fba4ee80
#: ../develop/plone/persistency/persistent.rst:119
msgid ""
"http://mockit.blogspot.com/2010/11/getting-broken-objects-out-of-zodb.html"
msgstr ""

# 36787e8e451043019de7a959b2abc703
#: ../develop/plone/persistency/persistent.rst:122
msgid "Fixing damaged objects"
msgstr ""

# a41276d8d9044f66820d7346905bc575
#: ../develop/plone/persistency/persistent.rst:124
msgid ""
"If your BTrees have been damaged, you can use ``dm.historical`` tool to "
"inspect the object history and rewind it to a working state."
msgstr ""

# 9c30a02979bc4e75b9cd90e3bb6f24ef
#: ../develop/plone/persistency/persistent.rst:127
msgid ""
"http://plone.293351.n2.nabble.com/Cleaning-up-damaged-BTree-can-t-delete-"
"folder-tp5761780p5773269.html"
msgstr ""

# e382555788534a439aa3b9e07b4f4155
#: ../develop/plone/persistency/persistent.rst:129
msgid "https://pypi.python.org/pypi/dm.historical/"
msgstr ""

# 6543a643439e432bb889c7911b3d285b
#: ../develop/plone/persistency/persistent.rst:133
msgid ":doc:`Deleting broken objects </develop/plone/content/deleting>`"
msgstr ""

# c972b030040449bc8d83e86b8505d5a0
#: ../develop/plone/persistency/persistent.rst:136
msgid "Volatile references"
msgstr ""

# b91de151dccc42c69176ce73814415c9
#: ../develop/plone/persistency/persistent.rst:138
msgid ""
"Volatile attributes are attributes on persistent objects which never get "
"stored. ZODB assumes variable is volatile if it has _v_ prefix."
msgstr ""

# f9c28cddf2f44d909eeed2338a21dec5
#: ../develop/plone/persistency/persistent.rst:141
msgid ""
"Volatiles are useful when framework expects the object to conform certain "
"interface, like form frameworks. However, your persistent object edited by "
"form cannot have persistent attributes for all variables the form expects to"
" see."
msgstr ""

# 232eb3cdbe794574b208f4ab8ea82f87
#: ../develop/plone/persistency/persistent.rst:191
msgid "Correct use of volatile variables in functions"
msgstr ""

# 7cc0d1fe067a4c5fb9130b186603fe36
# f0d8b18ea06c416c925d365d69328cd1
#: ../develop/plone/persistency/persistent.rst:193
#: ../develop/plone/persistency/persistent.rst:211
msgid "**WRONG**::"
msgstr ""

# c11ab1008a2e4b2c945b6627cb5659c3
# 72a6b96fd8d04fbabf335439272eab35
# a37875deb58f4eb1b3d6b74c3fc32d3a
#: ../develop/plone/persistency/persistent.rst:198
#: ../develop/plone/persistency/persistent.rst:205
#: ../develop/plone/persistency/persistent.rst:216
msgid "**RIGHT**::"
msgstr ""

# fe8e8642324a4f9b89ac17c7e335a225
#: ../develop/plone/persistency/persistent.rst:224
msgid "https://mail.zope.org/pipermail/zodb-dev/2010-May/013437.html"
msgstr ""

# be9500d33b9d4203be22a7d4f217d136
#: ../develop/plone/persistency/persistent.rst:228
msgid "Measuring persistent object sizes"
msgstr ""

# 406041a898ab48fe9fb270d5c48f3d81
#: ../develop/plone/persistency/persistent.rst:230
msgid "Get the size of the pickled object in the database."
msgstr ""

# b7e0ab45a236463aacc65f89ded00053
#: ../develop/plone/persistency/persistent.rst:232
msgid "Something like::"
msgstr ""

# 81610ef19313438aa885950c81af3fb2
# e069d77d3a8d4c2db4d33b0fb5310ac1
#: ../develop/plone/persistency/persistent.rst:240
#: ../develop/plone/persistency/storage.rst:130
msgid "http://plone.org/documentation/kb/debug-zodb-bloat"
msgstr ""

# 4a8c468ac4fc4696ab8ae7f94c4c5836
#: ../develop/plone/persistency/persistent.rst:242
msgid ""
"treeanalyze.py will give you the total size of a traverse graph "
"http://svn.erp5.org/erp5/trunk/utils/treenalyser.py?view=markup&pathrev=24405"
msgstr ""

# 7f9d86a2dd1a47148d267f9b57612d11
#: ../develop/plone/persistency/storage.rst:3
msgid "Storage"
msgstr ""

# ea04a2ceb8814d949c17c8cc09926d5a
#: ../develop/plone/persistency/storage.rst:7
msgid ""
"What kind of different storages (storing backends) ZODB has and how to use "
"them."
msgstr ""

# cf706b3b991b42eaae148f2244cd267b
#: ../develop/plone/persistency/storage.rst:15
msgid ""
"This page explains details how ZODB stores data. The information here is "
"important to know to understand Plone database behavior and how to optimize "
"your application."
msgstr ""

# 28c74b5021c545aeb634f5ccec33c140
#: ../develop/plone/persistency/storage.rst:19
msgid "Pickling"
msgstr ""

# 586abbe001e7429096d3f1d4fefb7126
#: ../develop/plone/persistency/storage.rst:21
msgid ""
"ZODB is object oriented database. All data in ZODB is `pickled Python "
"objects <http://docs.python.org/library/pickle.html>`_. Pickle is object "
"serialization module for Python."
msgstr ""

# b150af052d4347f0ae1ff775a79e9576
#: ../develop/plone/persistency/storage.rst:24
msgid ""
"Each time object is read and it is not cached, object is read from ZODB data"
" storage and unpickled"
msgstr ""

# 777bdb4aa5d74fc5b312669b87a72a76
#: ../develop/plone/persistency/storage.rst:26
msgid ""
"Each time object is written, it is pickled and transaction machinery appends"
" it to ZODB data storage"
msgstr ""

# 56813a5eb13945dc8cb65e0bf01613f2
#: ../develop/plone/persistency/storage.rst:28
msgid ""
"Pickle format is series of bytes. Here is example what it does look like::"
msgstr ""

# aa00fc2741de421399d861b187dfa758
#: ../develop/plone/persistency/storage.rst:41
msgid "It is not very human readable format."
msgstr ""

# 377793844c4347f1b52fc9910d8c5219
#: ../develop/plone/persistency/storage.rst:43
msgid ""
"Even if you use SQL based `RelStorage "
"<https://pypi.python.org/pypi/RelStorage/>`_ ZODB backends, the objects are "
"still pickled to the database; SQL does not support varying table schema per"
" row and Python objects do not have fixed schema format."
msgstr ""

# f0dbc61fb9a14ceeb748175822ff8555
#: ../develop/plone/persistency/storage.rst:48
msgid "Binary trees"
msgstr ""

# dfd332a076414c229636c3a04aca21e1
#: ../develop/plone/persistency/storage.rst:50
msgid ""
"Data is usually organized to binary trees or `BTrees "
"<http://wiki.zope.org/ZODB/guide/node6.html>`_ . More specifically, data is "
"usually stored as Object Oriented Binary Tree `OOBtree "
"<http://docs.zope.org/zope3/Code/BTrees/OOBTree/OOBTree/index.html>`_ which "
"provides Python object as key and Python object value mappings. Key is the "
"object id in the parent container as a string and value is any pickleable "
"Python object or primitive you store in your database."
msgstr ""

# a8ecb2ad2fab497a9869f6d70a751787
#: ../develop/plone/persistency/storage.rst:56
msgid ""
"`ZODB data structure interfaces "
"<http://svn.zope.org/ZODB/trunk/src/BTrees/Interfaces.py?rev=88776&view=markup>`_."
msgstr ""

# 75da0df0a64445f6943dade3cb4f9de6
#: ../develop/plone/persistency/storage.rst:58
msgid ""
"`Using BTrees example from Zope Docs "
"<http://zodb.org/documentation/articles/ZODB2.html#using-btrees>`_."
msgstr ""

# 81c4472918b94641ad51ad86c7dfbfe7
#: ../develop/plone/persistency/storage.rst:61
msgid "Buckets"
msgstr ""

# 3c9a86394a1f4b4fb62ed524e9d35f7c
#: ../develop/plone/persistency/storage.rst:63
msgid ""
"BTree stores data in buckets (`OOBucket "
"<http://docs.zope.org/zope3/Code/BTrees/OOBTree/OOBucket/index.html>`_)."
msgstr ""

# 12a3213b5523413eb92b97330d0a0ee8
#: ../develop/plone/persistency/storage.rst:65
msgid ""
"Bucket is the smallest unit of data which is written to the database once. "
"Buckets are loaded lazily: BTree only loads buckets storing values of keys "
"being accessed."
msgstr ""

# 27b8b77ef597477d81e2f7dd0e66bb0b
#: ../develop/plone/persistency/storage.rst:69
msgid ""
"BTree tries to stick as much data into one bucket once as possible. When one"
" value in bucket is changed the whole bucket must be rewritten to the disk."
msgstr ""

# 814b5f083ce542428c217ff9a1bb28a0
#: ../develop/plone/persistency/storage.rst:72
msgid ""
"`Default bucket size is 30 objects "
"<http://svn.zope.org/ZODB/trunk/src/BTrees/_OOBTree.c?rev=25186&view=markup>`_."
msgstr ""

# f78bfa1fda7b49198797f120d6051508
#: ../develop/plone/persistency/storage.rst:75
msgid "Storing as attribute vs. storing in BTree"
msgstr ""

# 2786e607fd43425da141f7aa9f48c733
#: ../develop/plone/persistency/storage.rst:77
msgid "Plone has two kinds of fundamental way to store data:"
msgstr ""

# 12de209bd689495e91ec32243ed0c5c2
#: ../develop/plone/persistency/storage.rst:79
msgid "Attribute storage (stores values directly in the pickled objects)."
msgstr ""

# 0eb80f342d244c93a89c16fa680b26df
#: ../develop/plone/persistency/storage.rst:81
msgid ""
"Annotation storage (OOBTree based). Plone objects have attribute "
"__annotations__ which is OOBtree for storing objects in name-conflict free "
"way."
msgstr ""

# 56df4cbec97044319eef257eb05659dd
#: ../develop/plone/persistency/storage.rst:84
msgid ""
"When storing objects in annotation storage, reading object values need at "
"least one extra database look up to load the first bucket of OOBTree."
msgstr ""

# 9e4150ef405c4c3b8f29bc737c2b0784
#: ../develop/plone/persistency/storage.rst:88
msgid ""
"If the value is going to be used frequently, and especially if it is read "
"when viewing the content object, storing it in an attribute is more "
"efficient than storing it in an annotation. This is because the "
"__annotations__ BTree is a separate persistent object which has to be loaded"
" into memory, and may push something else out of the ZODB cache."
msgstr ""

# 7233ab5b84754980907d4e5371b72249
#: ../develop/plone/persistency/storage.rst:93
msgid ""
"If the attribute stores a large value, it will increase memory usage, as it "
"will be loaded into memory each time the object is fetched from the ZODB."
msgstr ""

# d9b15d4f3a3c4110b0836e8242f4887e
#: ../develop/plone/persistency/storage.rst:97
msgid "BLOBs"
msgstr ""

# 7b8ce8263aea43fdb05b9af31400574b
#: ../develop/plone/persistency/storage.rst:99
msgid "BLOBs are large binary objects like files or images."
msgstr ""

# bb92bd5a5db74469b21fb99b115b1b4a
#: ../develop/plone/persistency/storage.rst:101
msgid ""
"BLOBs are supported since ZODB 3.8.x. Plone 3.x still uses ZODB 3.7.x by "
"default. ZODB 3.8.x works but it is not officially supported."
msgstr ""

# 29c6b27cda0f42a08cd2698f349b2ff1
#: ../develop/plone/persistency/storage.rst:105
msgid ""
"When you use BLOB interface to store and retrieve data, they are stored "
"physically as files on your file systems. File system, as the name says, was"
" designed to handle files and has far better performance on large binary "
"data as sticking the data into ZODB."
msgstr ""

# 9392325e8ae046afbde96ad2274058cd
#: ../develop/plone/persistency/storage.rst:110
msgid ""
"BLOBs are streamable which means that you can start serving the file from "
"the beginning of the file to HTTP wire without needing to buffer the whole "
"data to the memory first (slow)."
msgstr ""

# 3b77e6051ec941d88b26b08a55274f98
#: ../develop/plone/persistency/storage.rst:115
msgid "SQL values"
msgstr ""

# a1b75642e41f453b9cf6bed4bf81b30b
#: ../develop/plone/persistency/storage.rst:117
msgid ""
"Plone's Archetypes subsystem supports storing individual Archetypes fields "
"in SQL database. This is mainly `an integration feature "
"<http://plone.293351.n2.nabble.com/Work-with-Contents-in-SQL-database-"
"td5868800.html>`_. Read more about this in `Archetypes manual "
"<http://plone.org/products/archetypes/documentation/old/ArchetypesDeveloperGuide/index_html"
"#advanced-storage-manual>`_."
msgstr ""

# 225238421ae34d3cbbb5dbeea1797830
#: ../develop/plone/persistency/storage.rst:121
msgid "Transaction sizes"
msgstr ""

# b1635f94d20b4e338e578baa901ac040
#: ../develop/plone/persistency/storage.rst:123
msgid "Discussion pointers"
msgstr ""

# 8b29d2d48a80462c9f7a83069864a470
#: ../develop/plone/persistency/storage.rst:125
msgid "http://www.mail-archive.com/zodb-dev@zope.org/msg03398.html"
msgstr ""

# d476b1469e69491285749ad85b269db9
#: ../develop/plone/persistency/storage.rst:128
msgid "Analysing Data.fs content offline"
msgstr ""

# eb8547db67f14e35bd7f78e1e59b3b83
#: ../develop/plone/persistency/transactions.rst:3
msgid "Transactions"
msgstr ""

# 6199bfc4c7c54cb58fbb2e2d3ecaae08
#: ../develop/plone/persistency/transactions.rst:10
msgid ""
"Plone uses the `ZODB database "
"<http://en.wikipedia.org/wiki/Zope_Object_database>`_ which implements "
"`Multiversion concurrency control "
"<http://en.wikipedia.org/wiki/Multiversion_concurrency_control>`_."
msgstr ""

# e9f5ec726abd48be92b482649f1f9038
#: ../develop/plone/persistency/transactions.rst:15
msgid ""
"Plone will complete either *all* database modifications that occur during a "
"request, or *none* of them. It will never write incomplete data to the "
"database."
msgstr ""

# 1d83299b2a894ce98d76059c0158624f
#: ../develop/plone/persistency/transactions.rst:19
msgid "Plone and the underlying Zope handles transactions transparently."
msgstr ""

# a9a21a84b54f46938541f2b07909e861
#: ../develop/plone/persistency/transactions.rst:23
msgid ""
"Every transaction is a *read* transaction until any of the objects "
"participating in the transaction are mutated (object attribute set), turning"
" the transaction to a *write* transaction."
msgstr ""

# cb6d0901e64a4502b618e52117aca5bb
#: ../develop/plone/persistency/transactions.rst:29
msgid ""
"Old examples might refer to the ``get_transaction()`` function. This has "
"been replaced by ``transaction.get()`` in the later Zope versions."
msgstr ""

# 912ba038a1cc45f69fe9b633d7d9789c
#: ../develop/plone/persistency/transactions.rst:32
msgid ""
"Please read this `Zope transaction tutorial "
"<http://www.zope.org/Members/mcdonc/HowTos/transaction>`_ to get started how"
" to use transactions with your code."
msgstr ""

# e3ddfb178c5740268432f9f3c89929d0
#: ../develop/plone/persistency/transactions.rst:36
msgid "https://bugs.launchpad.net/zope2/+bug/143584"
msgstr ""

# b1fa1dd296c04cab9dbca6cd8576f5c7
#: ../develop/plone/persistency/transactions.rst:39
msgid "Using transactions"
msgstr ""

# 45e8d431e393438f915f60672ebb4510
#: ../develop/plone/persistency/transactions.rst:41
msgid ""
"Normally transactions are managed by Plone and the developer should not be "
"interested in them."
msgstr ""

# 581a1e6496a44f5caa350d369fd05c97
#: ../develop/plone/persistency/transactions.rst:44
msgid ""
"Special cases where one would want to manage transaction life-cycle may "
"include:"
msgstr ""

# 95402dc320294ef6bb4f87c85ef59905
#: ../develop/plone/persistency/transactions.rst:47
msgid "Batch creation or editing of many items once."
msgstr ""

# 7d9c4949dce84aa0b5ab1d6d9ceaddc2
#: ../develop/plone/persistency/transactions.rst:49
msgid "Example code:"
msgstr ""

# 3159e24d30314af6ab1215f1451a8be6
#: ../develop/plone/persistency/transactions.rst:51
msgid ""
"`transaction source code "
"<http://svn.zope.org/transaction/trunk/transaction/?rev=104430>`_."
msgstr ""

# b040549916824cf2b4596b2e47b9c904
#: ../develop/plone/persistency/transactions.rst:53
msgid "http://www.zope.org/Members/mcdonc/HowTos/transaction"
msgstr ""

# 79fa198ffa0044a696f2ac3ad42dc350
#: ../develop/plone/persistency/transactions.rst:55
msgid "https://bugs.launchpad.net/zope3/+bug/98382"
msgstr ""

# f9fd45fb941d4a959d1009bb7fc1632b
#: ../develop/plone/persistency/transactions.rst:59
msgid "Subtransactions"
msgstr ""

# 1136d9d01a124133a3531104f6c86cb6
#: ../develop/plone/persistency/transactions.rst:61
msgid ""
"Normally, a Zope transaction keeps a list of objects modified within the "
"transaction in a structure in RAM."
msgstr ""

# 324d8b38529b414cb945a936b717c8af
#: ../develop/plone/persistency/transactions.rst:64
msgid ""
"This list of objects can grow quite large when there is a lot of work done "
"across a lot of objects in the context of a transaction. *Subtransactions* "
"write portions of this object list out to disk, freeing the RAM required by "
"the transaction list. Using subtransactions can allow you to build "
"transactions involving objects whose combined size is larger than available "
"RAM."
msgstr ""

# 2dc74cfc9e204c9fbfd91278ee946341
#: ../develop/plone/persistency/transactions.rst:90
msgid "Failsafe crawling and committing in batches"
msgstr ""

# 10dac706200e455caeb58df71cee9aa5
#: ../develop/plone/persistency/transactions.rst:92
msgid ""
"In the case you need to access many objects in coherent and efficient "
"manner."
msgstr ""

# 19af20dfcc544c0093ad11ad7b76c4b2
#: ../develop/plone/persistency/transactions.rst:94
msgid ""
"https://bitbucket.org/gocept/gocept.linkchecker/src/80a127405ac06d2054e61dd62fcd643d864357a0/src/gocept/linkchecker/scripts"
"/crawl-site.py?at=default"
msgstr ""

# a2bd27cd3091465e907cfbc53e9eb1ab
#: ../develop/plone/persistency/transactions.rst:97
msgid "Transaction boundary events"
msgstr ""

# 7dd050bb3409439f8fdc521a1e5ddc0c
#: ../develop/plone/persistency/transactions.rst:99
msgid ""
"It is possible to perform actions before and after transaction is written to"
" the database."
msgstr ""

# 287549a5fd6840c0bf3b7a5fe0038ea0
#: ../develop/plone/persistency/transactions.rst:102
msgid ""
"http://svn.zope.org/transaction/trunk/transaction/_transaction.py?rev=81646&view=auto"
msgstr ""

# 4b6a727b72684689b075e0fade32b786
#: ../develop/plone/persistency/transactions.rst:105
msgid "Viewing transaction content and debugging transactions"
msgstr ""

# 5e6d5fc0240741db94fae4ad2b933f9e
#: ../develop/plone/persistency/transactions.rst:107
msgid ""
"Please see :doc:`Transaction troubleshooting "
"</manage/troubleshooting/transactions>`"
msgstr ""

# 2886a9d4871b414fbb5d0fdb0704a395
#: ../develop/plone/persistency/transactions.rst:110
msgid "Undoing transactions"
msgstr ""

# cc51607312664805bb0a0b9d7d39f972
#: ../develop/plone/persistency/transactions.rst:112
msgid ""
"Everything that has happened on Plone site can be undoed through the *Undo* "
"tab in ZMI, in site root. By default you can undo latest 20 transactions."
msgstr ""

# 4540ecd2f9774678bffdf4f8be8acfa5
#: ../develop/plone/persistency/transactions.rst:115
msgid ""
"If you need to raise this limit just replace all numbers of ``20`` with "
"higher value in file ``App/Undo.py``, restart site and now you can undo more"
" transactions."
msgstr ""

# 2a65394e1c9d43c392161d8df4d086b2
#: ../develop/plone/searching_and_indexing/catalog.rst:3
msgid "Catalogs"
msgstr ""

# efd5c5d3d5be40909d95f294aaefe143
#: ../develop/plone/searching_and_indexing/catalog.rst:7
msgid ""
"A brief introduction to ZCatalogs, the Catalog Tool and what they're used "
"for."
msgstr ""

# c44c5f1c1391495e812b01756ef4f23f
#: ../develop/plone/searching_and_indexing/catalog.rst:13
msgid "Why ZCatalogs?"
msgstr ""

# 89ac97b2ab8e405cbfd5c0dfa5add595
#: ../develop/plone/searching_and_indexing/catalog.rst:15
msgid ""
"Plone is built on the CMF, which uses the ZODB to store content in a very "
"free-form manner with arbitrary hierarchy and a lot of flexibility in "
"general. For some content use cases, however, it is very useful to treat "
"content as more ordered, or tabular. This is where ZCatalog comes in."
msgstr ""

# 3c073382a15a476a957fe07dbd1b7e11
#: ../develop/plone/searching_and_indexing/catalog.rst:21
msgid ""
"Searching, for example, requires being able to query content on structured "
"data such as dates or workflow states. Additionally, query results often "
"need to be sorted based on structured data of some sort. So when it comes to"
" searching it is very valuable to treat our free-form persistent ZODB "
"objects as if they were more tabular. ZCatalog indexes do exactly this."
msgstr ""

# 56c5f7ed25304a5f8908be8ac2e33bb7
#: ../develop/plone/searching_and_indexing/catalog.rst:28
msgid ""
"Since the ZCatalog is in the business of treating content as tabular when it"
" isn't necessarily so, it is very tolerant of any missing data or exceptions"
" when indexing. For example, Plone includes \"start\" and \"end\" indexes to"
" support querying events on their start and end dates.  When a page is "
"indexed, however, it doesn't have start or end dates.  Since the ZCatalog is"
" tolerant, it doesn't raise any exception when indexing the start or end "
"dates on a page. Instead it simply doesn't include pages in those indexes. "
"As such, it is appropriate to use indexes in the catalog to support querying"
" or sorting when not all content provides the data indexed."
msgstr ""

# 211df51e550b4213bdafee22264a8b2c
#: ../develop/plone/searching_and_indexing/catalog.rst:40
msgid ""
"This manual is intended to be a brief start guide to ZCatalogs, specially "
"aimed to tasks specific to Plone, and will not treat advanced ZCatalogs "
"concepts in depth. If you want to learn more about ZCatalogs in the context "
"of Zope, please refer to `The Zope Book, Searching and Categorizing "
"Content`_. If you want to perform advanced searches, `AdvancedQuery`_, which"
" is included with Plone since the 3.0 release, is what you're looking for. "
"See `Boolean queries (AdvancedQuery)`_ for a brief introduction."
msgstr ""

# 45a64ca580a34114833996e21ccad7ba
#: ../develop/plone/searching_and_indexing/catalog.rst:50
msgid "Quick start"
msgstr ""

# ac91e433cf02494f82d4af8e58cc869d
#: ../develop/plone/searching_and_indexing/catalog.rst:52
msgid ""
"Every ZCatalog is composed of indexes and metadata. Indexes are fields you "
"can search by, and metadata are copies of the contents of certain fields "
"which can be accessed without waking up the associated content object."
msgstr ""

# 857a25bdd9f742cd922deb84c1915668
#: ../develop/plone/searching_and_indexing/catalog.rst:57
msgid ""
"Most indexes are also metadata fields. For example, you can search objects "
"by *Title* and then display the *Title* of each object found without "
"fetching them, but note not all indexes need to be part of metadata."
msgstr ""

# 99f48d4b821a4b07be19a47b8df9261f
#: ../develop/plone/searching_and_indexing/catalog.rst:62
msgid ""
"When you search inside the catalog, what you get as a result is a list of "
"elements known as brains. Brains have one attribute for each metadata field "
"defined in the catalog, in addition to some methods to retrieve the "
"underlying object and its location. Metadata values for each brain are saved"
" in the metadata table of the catalog upon the (re)indexing of each object."
msgstr ""

# 7d9e96ef0eb84ec7b9d24f62789f03b1
#: ../develop/plone/searching_and_indexing/catalog.rst:69
msgid ""
"Brains are said to be lazy for two reasons; first, because they are only "
"created 'just in time' as your code requests each result, and second, "
"because retrieving a catalog brain doesn't wake up the objects themselves, "
"avoiding a huge performance hit."
msgstr ""

# abdc8ba0df3f4035988c496366bc4de1
#: ../develop/plone/searching_and_indexing/catalog.rst:74
msgid ""
"To see the ZCatalogs in action, fire up your favourite browser and open the "
"ZMI. You'll see an object in the root of your Plone site named "
"*portal\\_catalog*. This is the Catalog Tool, a Plone tool (like the "
"Membership Tool or the Quickinstaller Tool) based on ZCatalogs created by "
"default in every Plone site which indexes all the created content."
msgstr ""

# 61024c5487cf4c8ba0f445285963685b
#: ../develop/plone/searching_and_indexing/catalog.rst:81
msgid ""
"Open it and click the *Catalog* tab, at the top of the screen. There you can"
" see the full list of currently indexed objects, filter them by path, and "
"update and remove entries. If you click on any entry, a new tab (or window) "
"will open showing the metadata and index values for the selected indexed "
"object. Note that most fields are \"duplicated\" in the *Index Contents* and"
" *Metadata Contents* tables, but its contents have different formats, "
"because, as it was said earlier, indexes are meant to search by them, and "
"metadata to retrieve certain attributes from the content object without "
"waking it up."
msgstr ""

# c1c3bb03851a4844ad956b0bdda8138f
#: ../develop/plone/searching_and_indexing/catalog.rst:92
msgid ""
"Back to the management view of the Catalog Tool, if you click the *Indexes* "
"or the *Metadata* tab you'll see the full list of currently available "
"indexes and metadata fields, respectively, its types and more. There you can"
" also add and remove indexes and metadata fields. If you're working on a "
"test environment, you can use this manager view to play with the catalog, "
"but beware indexes and metadata are usually added through GenericSetup and "
"not using the ZMI."
msgstr ""

# 1c300a7e3f6343dcbcac6d7912c660fc
#: ../develop/plone/searching_and_indexing/catalog.rst:103
msgid "Other catalogs"
msgstr ""

# c86d37afe2b84541a20cb84ea4a637aa
#: ../develop/plone/searching_and_indexing/catalog.rst:105
msgid "Besides, the main portal catalog, the site contains other catalogs."
msgstr ""

# e83455d2623f42c5a9459706dd6e074a
#: ../develop/plone/searching_and_indexing/catalog.rst:107
msgid ""
"uid_catalog maintains object look up by Unique Identified (UID). UID is "
"given to the object when it is created and it does not change even if the "
"object is moved around the site."
msgstr ""

# fc21d729e71245839b0020480d82af80
#: ../develop/plone/searching_and_indexing/catalog.rst:110
msgid ""
"reference_catalog maintains inter-object references by object unique "
"identified (UID). Archetypes's ReferenceField uses this catalog. The catalog"
" contains indexes UID, relationship, sourceUID, targetId and targetUID."
msgstr ""

# 1de9d6898cb949c7a9edae062609f654
#: ../develop/plone/searching_and_indexing/catalog.rst:114
msgid ""
"Add-on products may install their own catalogs which are optimized for "
"specific purposes. For example, `betahaus.emaillogin "
"<https://pypi.python.org/pypi/betahaus.emaillogin>`_ creates email_catalog "
"is which is used to speed-up login by email process."
msgstr ""

# 7cfcd2a0c32b4bb58bcdb527547f5258
#: ../develop/plone/searching_and_indexing/catalog.rst:119
msgid "Manually indexing object to a catalog"
msgstr ""

# a0a35930810a4697b1c75087ca9e599f
#: ../develop/plone/searching_and_indexing/catalog.rst:121
msgid ""
"The default content object.reindexObject() is defined in `CMFCatalogAware "
"<http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/CMFCatalogAware.py?rev=102742&view=auto>`_"
" and will update the object data to portal_catalog."
msgstr ""

# d38c6d51161e46748a4956d73963c99e
#: ../develop/plone/searching_and_indexing/catalog.rst:125
msgid ""
"If your code uses additional catalogs, you need to manually update cataloged"
" values after the object has been modified."
msgstr ""

# cd901cf1603a4ff48a16258c8f59c1b4
#: ../develop/plone/searching_and_indexing/catalog.rst:134
msgid "Manually uncatalog object to a catalog"
msgstr ""

# c87239bc14574a578995580a0aab7a28
#: ../develop/plone/searching_and_indexing/catalog.rst:136
msgid "Sometimes is useful to uncatalog object."
msgstr ""

# ffb1627f9d6049b689b50a6a2901bbaf
#: ../develop/plone/searching_and_indexing/catalog.rst:138
msgid "code ::"
msgstr ""

# 94c622eb931e4e95888d73f6f7de592a
#: ../develop/plone/searching_and_indexing/catalog.rst:147
msgid "Rebuilding a catalog"
msgstr ""

# c0dd166f65c14b289f025e54051c504d
#: ../develop/plone/searching_and_indexing/catalog.rst:149
msgid ""
"Catalog rebuild means walking through all the objects on Plone site and "
"adding them to the catalog. Rebuilding the catalog is very slow as the whole"
" database must be read through. Reasons for you to do this in code could be"
msgstr ""

# 4d4448215d0742758fa5b540f718d9bc
#: ../develop/plone/searching_and_indexing/catalog.rst:153
msgid "Creating catalog after setting up objects in the unit tests"
msgstr ""

# ec61927e686444889ebbae36df5f5743
#: ../develop/plone/searching_and_indexing/catalog.rst:155
msgid "Rebuilding after massive content migration"
msgstr ""

# 6e9e2abcb3584ef38975580733667d53
#: ../develop/plone/searching_and_indexing/catalog.rst:157
msgid "How to trigger rebuild::"
msgstr ""

# d230ae5f7433411eb945c77a260005ec
#: ../develop/plone/searching_and_indexing/catalog.rst:163
msgid "Retrieving unique values from a catalog"
msgstr ""

# da35025be6a745b28e0e7329fccd4279
#: ../develop/plone/searching_and_indexing/catalog.rst:164
msgid ""
"Catalogs have a uniqueValues method associated with each index. There are "
"times when you will need to get a list of all the values currently stored on"
" a particular index. For example if you wanted the highest and lowest price "
"you might first need to retrieve the values currently indexed for price. "
"This example demonstrates how you can list all the unique values on an index"
" named 'price'."
msgstr ""

# 80c5e0112ac341edb040afaeaab24a3e
#: ../develop/plone/searching_and_indexing/catalog.rst:176
msgid ""
"the result would be a listing of all the prices stored in the 'price' "
"index::"
msgstr ""

# a22471305d3a4c42b0e8d5c047e6e20c
#: ../develop/plone/searching_and_indexing/catalog.rst:182
msgid "Minimal code for creating a new catalog"
msgstr ""

# 04596655594b4517a7f0453bf97a6a58
#: ../develop/plone/searching_and_indexing/catalog.rst:282
msgid "Register a new catalog via portal_setup"
msgstr ""

# 9135eb2503794b4e91dec381abea69d3
#: ../develop/plone/searching_and_indexing/catalog.rst:284
msgid "In toolset.xml add this lines"
msgstr ""

# eef42e3e76c7406a958299ee8d39643f
#: ../develop/plone/searching_and_indexing/catalog.rst:299
msgid "archetype_tool catalog map"
msgstr ""

# ac7dde00a66d405299839e820f309ce9
#: ../develop/plone/searching_and_indexing/catalog.rst:301
msgid ""
"archetype_tool maintains map between content types and catalogs which are "
"interested int them. When object is modified through Archetypes mechanisms, "
"Archetypes post change notification to all catalogs enlisted."
msgstr ""

# f503e45ea4534acb806707d512359eb2
#: ../develop/plone/searching_and_indexing/catalog.rst:305
msgid "See *Catalogs* tab on archetype_tool in Zope Management Interface."
msgstr ""

# b8c72bb3eeac454e90421b00619d54bc
#: ../develop/plone/searching_and_indexing/catalog.rst:308
msgid "Map an catalog for an new type"
msgstr ""

# 24fe24b324d340efb879f88c8c65a6da
#: ../develop/plone/searching_and_indexing/catalog.rst:310
msgid "code"
msgstr ""

# d1b70e34807c4a7d9c7c01ee6803380a
#: ../develop/plone/searching_and_indexing/catalog.rst:321
msgid "Additional info"
msgstr ""

# 085f15eba9be46f288a90947fdc0ff49
#: ../develop/plone/searching_and_indexing/catalog.rst:323
msgid ""
"`ZCatalog source code "
"<http://svn.zope.org/Zope/trunk/src/Products/ZCatalog/ZCatalog.py?rev=96262&view=auto>`_."
msgstr ""

# 899558c13cd24df3aa7302ac03f0e8f1
#: ../develop/plone/searching_and_indexing/catalog.rst:325
msgid "http://wyden.com/plone/basics/searching-the-catalog"
msgstr ""

# fe6d0c3e01ce42c1a8c93f5cebb22ca5
#: ../develop/plone/searching_and_indexing/index.rst:3
msgid "Queries, search and indexing"
msgstr ""

# a85c5425c3b2404aa1832cf14e4f01d2
#: ../develop/plone/searching_and_indexing/index.rst:5
msgid ""
"In plone, database index and search facilities are provided by "
"portal_catalog tool. There are two distinct functions. Indexing: All "
"searchable data is copied to the catalog when the object is indexed, to make"
" object searchable and listable. Querying: Search keys are matched against "
"the indexed catalog copies to return the indexed metadata of the object."
msgstr ""

# 9eb91404a2d9411e92490428d7a8c18f
#: ../develop/plone/searching_and_indexing/indexing.rst:3
msgid "Indexes and metadata"
msgstr ""

# a3a4137dbc624a8d83fd273f62771242
#: ../develop/plone/searching_and_indexing/indexing.rst:7
msgid ""
"How to program your custom fields and data queriable through portal_catalog."
msgstr ""

# ba1d0825305441118aaddf3f2598e04d
#: ../develop/plone/searching_and_indexing/indexing.rst:13
msgid "What does indexing mean?"
msgstr ""

# 9233c16df90a4d2a9a512f89b3e6942f
#: ../develop/plone/searching_and_indexing/indexing.rst:15
msgid ""
"Indexing is the action to make object data searchable. Plone stores "
"available indexes in the database. You can create them through-the-web and "
"inspect existing indexes in portal_catalog on Index tab."
msgstr ""

# 8447c15a39dd4302b4785c8be938f560
#: ../develop/plone/searching_and_indexing/indexing.rst:20
msgid ""
"The Catalog Tool can be configured through the ZMI or programatically in "
"Python but current best practice in the CMF world is to use GenericSetup to "
"configure it using the declarative *catalog.xml* file. The GenericSetup "
"profile for Plone, for example, uses the "
"*CMFPlone/profiles/default/catalog.xml* XML data file to configure the "
"Catalog Tool when a Plone site is created. It is fairly readable so taking a"
" quick look through it can be very informative."
msgstr ""

# 24fd2fbf4da544bbac7225cb3ced6655
#: ../develop/plone/searching_and_indexing/indexing.rst:29
msgid ""
"When using a GenericSetup extension profile to customize the Catalog Tool** "
"in your portal, you only need to include XML for the pieces of the catalog "
"you are changing. To add an index for the Archetypes location field, as in "
"the example above, a policy package could include the following "
"*profiles/default/catalog.xml*:"
msgstr ""

# 599dc0fd16bf4643a4928e29e1f3757e
#: ../develop/plone/searching_and_indexing/indexing.rst:45
msgid ""
"The GenericSetup import handler for the Catalog Tool also supports removing "
"indexes from the catalog if present using the \"remove\" attribute of the "
"*<index>* element. To remove the \"start\" and \"end\" indexes used for "
"events, for example, a policy package could include the following "
"*profiles/default/catalog.xml*:"
msgstr ""

# 7316e1706fea447583711d9d21649fe3
#: ../develop/plone/searching_and_indexing/indexing.rst:59
msgid "Warning"
msgstr ""

# 33d5427b4e684c0a8c366c537724eb60
#: ../develop/plone/searching_and_indexing/indexing.rst:61
msgid ""
"Care must be taken when setting up indexes with GenericSetup - if the import"
" step for a *catalog.xml* is run a second time (for example when you "
"reinstall the product), the indexes specified will be destroyed, losing all "
"currently indexed entries, and then re-created fresh (and empty!). If you "
"want to workaround this behaviour, you can either update the catalog "
"afterwards or add the indexes yourself in Python code using a custom import "
"handler."
msgstr ""

# 1e201b82e8ce4168a7635e44c635e561
#: ../develop/plone/searching_and_indexing/indexing.rst:69
msgid ""
"For more info, see this setuphandler "
"https://github.com/plone/plone.app.event/blob/master/plone/app/event/setuphandlers.py"
" in plone.app.event or these discussions on more about this problem:"
msgstr ""

# 35b4ce62f988467d98340d8f70e435bd
#: ../develop/plone/searching_and_indexing/indexing.rst:72
msgid ""
"http://plone.293351.n2.nabble.com/How-to-import-catalog-xml-without-"
"emptying-the-indexes-td2302709.html"
msgstr ""

# 441a2fd57dac4635ba881f99eb7d32c6
#: ../develop/plone/searching_and_indexing/indexing.rst:74
msgid "https://mail.zope.org/pipermail/zope-cmf/2007-March/025664.html"
msgstr ""

# 16ccdca7623a4b89abd1539aa383a7cb
#: ../develop/plone/searching_and_indexing/indexing.rst:78
msgid "Viewing indexes and indexed data"
msgstr ""

# 45866ec62fe34d1b89af4d4112faa56f
#: ../develop/plone/searching_and_indexing/indexing.rst:81
msgid "Indexed data"
msgstr ""

# d0cef4205a7b4b698acfbb03b9be787c
#: ../develop/plone/searching_and_indexing/indexing.rst:83
msgid "You can do this through portal_catalog tool in ZMI."
msgstr ""

# 6993d92374bf46659460f3fa49228718
# 389ed3eab4214fa38e472eaddce1e02e
#: ../develop/plone/searching_and_indexing/indexing.rst:85
#: ../develop/plone/searching_and_indexing/indexing.rst:97
msgid "Click portal_catalog in the portal root"
msgstr ""

# 5120e47c0b3747ae87ec65d322c4107d
#: ../develop/plone/searching_and_indexing/indexing.rst:87
msgid "Click *Catalog* tab"
msgstr ""

# 57caf93e3e464d79bd342b037853eeb2
#: ../develop/plone/searching_and_indexing/indexing.rst:89
msgid "Click any object"
msgstr ""

# 2a86b013aca940728908b08a60236110
#: ../develop/plone/searching_and_indexing/indexing.rst:92
msgid "Indexes and metadata columns"
msgstr ""

# 8dd271aa1bad4314999ecbd804666524
#: ../develop/plone/searching_and_indexing/indexing.rst:94
msgid ""
"Available indexes are stored in the database, not in Python code. To see "
"what indexes your site has"
msgstr ""

# 43cde22217534aa3a8ea2f34fa8e6c89
#: ../develop/plone/searching_and_indexing/indexing.rst:99
msgid "Click *Indexes* and *Metadata* tabs"
msgstr ""

# e7be02136fd649b790e1ef57fadf1d76
#: ../develop/plone/searching_and_indexing/indexing.rst:103
msgid "Creating an index"
msgstr ""

# 9afe8b3e380c46c1b42ea712f40ca52b
#: ../develop/plone/searching_and_indexing/indexing.rst:105
msgid ""
"To perform queries on custom data, you need to add the corresponding index "
"to portal_catalog first."
msgstr ""

# 130fea3318ba4b6baec431c05055e8ca
#: ../develop/plone/searching_and_indexing/indexing.rst:107
msgid ""
"E.g. If your :doc:`Archetypes </develop/plone/content/types>` content type "
"has a field::"
msgstr ""

# e26ebe5fd631443e9d065d366a7216eb
#: ../develop/plone/searching_and_indexing/indexing.rst:126
msgid ""
"You can add a new index which will *index* the value of this field, so you "
"can make queries based on it later."
msgstr ""

# ad9dfcbc20b54abf9d8975670241ecb7
#: ../develop/plone/searching_and_indexing/indexing.rst:129
msgid ""
"See more information about :doc:`accessor methods "
"</develop/plone/content/archetypes/fields>`."
msgstr ""

# 2a5b0dab11c04147ad7270924f387ba6
#: ../develop/plone/searching_and_indexing/indexing.rst:133
msgid ""
"If you want to create an index for content type you do not control yourself "
"or if you want to do some custom logic in your indexer, please see *Custom "
"index method* below."
msgstr ""

# 5fbe66ec0bff4d57957fb680bac49e15
#: ../develop/plone/searching_and_indexing/indexing.rst:138
msgid "Creating an index through the web"
msgstr ""

# d8d78b6a840641a7992a81b1589e14cf
#: ../develop/plone/searching_and_indexing/indexing.rst:140
msgid ""
"This method is suitable during development time - you can create an index to"
" your Plone database locally."
msgstr ""

# 222f2c2ee84c476cb3dd44cb2d2522ac
#: ../develop/plone/searching_and_indexing/indexing.rst:143
msgid "Go ZMI"
msgstr ""

# 6eb23df0b00d4a25b82f3016dd5aaa43
#: ../develop/plone/searching_and_indexing/indexing.rst:145
msgid "Click portal_catalog"
msgstr ""

# 605ca2c21bfd4d4284b6004e9c03bb80
#: ../develop/plone/searching_and_indexing/indexing.rst:147
msgid "Click Indexes tab"
msgstr ""

# 8c0442d55c6544278c37b8f6697a7ab3
#: ../develop/plone/searching_and_indexing/indexing.rst:149
msgid ""
"On top right corner, you have a drop down menu to add new indexes. Choose "
"the index type you need to add."
msgstr ""

# 7056697f08ca4243beccbc91a7836c48
#: ../develop/plone/searching_and_indexing/indexing.rst:151
msgid "Type: FieldIndex"
msgstr ""

# 39f47673fbe44e02bcc0d0a700f62b8b
#: ../develop/plone/searching_and_indexing/indexing.rst:153
msgid "Id: getMyCustomValue"
msgstr ""

# b751d99a31f04f1caccd79e04844f750
#: ../develop/plone/searching_and_indexing/indexing.rst:155
msgid "Indexed attributes: getMyCustomValue"
msgstr ""

# 74d83fa7d77a44da8528088a66cd81b9
#: ../develop/plone/searching_and_indexing/indexing.rst:157
msgid ""
"You can use Archetypes accessors methods directly as an indexed attribute. "
"In example we use ``getMyCustomValue`` for AT field ``customValue``."
msgstr ""

# c722fc12dc0c40928b736cc568160994
#: ../develop/plone/searching_and_indexing/indexing.rst:160
msgid ""
"The type of index you need depends on what kind queries you need to do on "
"the data. E.g. direct value matching, ranged date queries, free text search,"
" etc. need different kind of indexes."
msgstr ""

# 681f0b4297fc4597a74132413b8ed5a8
#: ../develop/plone/searching_and_indexing/indexing.rst:163
msgid "After this you can query portal_catalog::"
msgstr ""

# bedb5bfab22d418f8e6621adf3377737
#: ../develop/plone/searching_and_indexing/indexing.rst:171
msgid "Adding index using add-on product installer"
msgstr ""

# 0e1b65d6a72949ffa5cdf86bc1adc2ea
#: ../develop/plone/searching_and_indexing/indexing.rst:173
msgid ""
"You need to have your own add-on product which registers new indexes when "
"the add-on installer is run. This is the recommended method for repeated "
"installations."
msgstr ""

# a6f622d78f87483cb8ff6d08c98633be
#: ../develop/plone/searching_and_indexing/indexing.rst:177
msgid "You can create an index"
msgstr ""

# 6cafcd53d28848cd8952c3c719b89e7c
#: ../develop/plone/searching_and_indexing/indexing.rst:179
msgid "Using catalog.xml where XML is written by hand"
msgstr ""

# 1a567d6f06024bb9a979767d5961c18f
#: ../develop/plone/searching_and_indexing/indexing.rst:181
msgid ""
"Create the index through the web and export catalog data from a development "
"site using *portal_setup* tool *Export* functionality. The index is created "
"through-the-web as above, XML is generated for you and you can fine tune the"
" resulting XML before dropping it in to your add-on product."
msgstr ""

# e0492ab7a9db42fe8543fb7a945e2349
#: ../develop/plone/searching_and_indexing/indexing.rst:186
msgid "Create indexes in Python code of add-on custom import step."
msgstr ""

# 0ed66c295c754ed9a0001492fcbf2207
#: ../develop/plone/searching_and_indexing/indexing.rst:188
msgid ""
"As a prerequisitement, your add-on product must have :doc:`GenericSetup "
"profile support </develop/addons/components/genericsetup>`."
msgstr ""

# 7554dbe1dbdc4c34871dfbc106d206bd
#: ../develop/plone/searching_and_indexing/indexing.rst:191
msgid ""
"This way is repeatable: index gets created every time an add-on product is "
"installed. It is more cumbersome, however."
msgstr ""

# 72a82e78f0d54a1bacb6765f67e34f59
#: ../develop/plone/searching_and_indexing/indexing.rst:196
msgid ""
"There is a known issue of indexed data getting pruned when an add-on product"
" is reinstalled. If you want to avoid this then you need to create new "
"indexes in add-on installer custom setup step (Python code)."
msgstr ""

# 11ab13f5c9a6424781d7c7854ae87ad7
#: ../develop/plone/searching_and_indexing/indexing.rst:202
msgid ""
"The example below is not safe for data prune on reinstall. This file is "
"``profiles/default/catalog.xml`` It installs a new index called "
"``revisit_date`` of DateIndex type."
msgstr ""

# fcd7cb79df2746a8b03e63d2eaca7b82
#: ../develop/plone/searching_and_indexing/indexing.rst:218
msgid "http://maurits.vanrees.org/weblog/archive/2009/12/catalog"
msgstr ""

# b717ed55b2e048d6a880901267878941
#: ../develop/plone/searching_and_indexing/indexing.rst:221
msgid "Custom index methods"
msgstr ""

# e442ba3be41b4377942867c8ce2e1aff
#: ../develop/plone/searching_and_indexing/indexing.rst:223
msgid ""
"The `plone.indexer <https://pypi.python.org/pypi/plone.indexer>`_ package "
"provides method to create custom indexing functions."
msgstr ""

# 0723ca69f10d4f43ac1f7d97cc00908b
#: ../develop/plone/searching_and_indexing/indexing.rst:225
msgid ""
"Sometimes you want to index \"virtual\" attributes of an object computed "
"from existing ones, or just want to customize the way certain attributes are"
" indexed, for example, saving only the 10 first characters of a field "
"instead of its whole content."
msgstr ""

# 1f398ebe00914a069fb5a1f2eafac3cb
#: ../develop/plone/searching_and_indexing/indexing.rst:230
msgid ""
"To do so in an elegant and flexible way, Plone>=3.3 includes a new package, "
"`plone.indexer <https://pypi.python.org/pypi/plone.indexer>`_, which "
"provides a series of primitives to delegate indexing operations to adapters."
msgstr ""

# 630910771b4f4209bbdf09abf2ffc56e
#: ../develop/plone/searching_and_indexing/indexing.rst:235
msgid ""
"Let's say you have a content-type providing the interface ``IMyType``. To "
"define an indexer for your type which takes the first 10 characters from the"
" body text, just type (assuming the attribute's name is 'text'):"
msgstr ""

# 86e5ff155901481c8e6db8235182c09d
#: ../develop/plone/searching_and_indexing/indexing.rst:248
msgid ""
"Finally, register this factory function as a named adapter using ZCML. "
"Assuming you've put the code above into a file named ``indexers.py``:"
msgstr ""

# 2529b7333e1c4e318208662b0b7141df
#: ../develop/plone/searching_and_indexing/indexing.rst:256
msgid "And that's all! Easy, wasn't it?"
msgstr ""

# ec0bd85a00d246ab9cbc482ae035a295
#: ../develop/plone/searching_and_indexing/indexing.rst:258
msgid ""
"Note you can omit the ``for`` attribute because you passed this to the "
"``@indexer`` decorator, and you can omit the ``provides`` attribute because "
"the thing returned by the decorator is actually a class providing the "
"required ``IIndexer`` interface."
msgstr ""

# 0f15cd4fb29a40779fb2dd1fccfff391
#: ../develop/plone/searching_and_indexing/indexing.rst:263
msgid "To learn more about the *plone.indexer* package, read `its doctest`_."
msgstr ""

# 8a32878c889e4294b48edaf6cdc80327
#: ../develop/plone/searching_and_indexing/indexing.rst:266
msgid ""
"For more info about how to create content-types, refer to the `Archetypes "
"Developer Manual`_."
msgstr ""

# bed68d722650441c8494f92c57ce1e04
#: ../develop/plone/searching_and_indexing/indexing.rst:269
msgid ""
"**Important note:** If you want to adapt a out-of-the-box Archetypes "
"content-type like Event or News Item, take into account you will have to "
"feed the ``indexer`` decorator with the Zope 3 interfaces defined in "
"``Products.ATContentTypes.interface.*`` files, not with the deprecated Zope "
"2 ones into the ``Products.ATContentTypes.interfaces`` file."
msgstr ""

# 2c5ccddc705e40128fb1d29558aea3af
#: ../develop/plone/searching_and_indexing/indexing.rst:277
msgid "Creating a metadata column"
msgstr ""

# 13d78d44c4d54f3994287e9fc276c077
#: ../develop/plone/searching_and_indexing/indexing.rst:279
msgid ""
"The same rules and methods apply for metadata columns as creating index "
"above. The difference with metadata is that"
msgstr ""

# 683c72fb7ed54bdfb763048be027ddc7
#: ../develop/plone/searching_and_indexing/indexing.rst:282
msgid "It is not used for searching, only displaying the search result"
msgstr ""

# 3fdd32a81b9646dda9325ff320dbfd1a
#: ../develop/plone/searching_and_indexing/indexing.rst:284
msgid "You store always a value copy as is"
msgstr ""

# af5c5184fd7942b7a3c457030dc8b223
#: ../develop/plone/searching_and_indexing/indexing.rst:286
msgid "To create metadata colums in your ``catalog.xml`` add::"
msgstr ""

# 396732e9ab1f4d32909468b4de454b08
#: ../develop/plone/searching_and_indexing/indexing.rst:298
msgid "When indexing happens and how to reindex manually"
msgstr ""

# f1e0a589c9ab4445b44911c9129d1dee
#: ../develop/plone/searching_and_indexing/indexing.rst:300
msgid "Content item reindexing is run when"
msgstr ""

# 64d4b26956034b25bdebdbb2dd790725
#: ../develop/plone/searching_and_indexing/indexing.rst:302
msgid "Plone calls reindexObject() if"
msgstr ""

# bd15194fdf1a47c4a5c24960170ef833
#: ../develop/plone/searching_and_indexing/indexing.rst:304
msgid "The object is modified by the user using the standard edit forms"
msgstr ""

# 86efd383e05b4423b1aaa770ddb45e88
#: ../develop/plone/searching_and_indexing/indexing.rst:306
msgid "portal_catalog rebuild is run (from *Advanced* tab)"
msgstr ""

# 8a787753f19646d2a2c17312e757798f
#: ../develop/plone/searching_and_indexing/indexing.rst:308
msgid ""
"If you add a new index you need to run :doc:`Rebuild catalog "
"</develop/plone/searching_and_indexing/catalog>` to get the existing values "
"from content objects to new index."
msgstr ""

# ba6d322fa218494b94b9a77a08b0c0fe
#: ../develop/plone/searching_and_indexing/indexing.rst:312
msgid ""
"You might also want to call :doc:`reindexObject() "
"</develop/plone/searching_and_indexing/catalog>` method  manually in some "
"cases. This method is defined in the `ICatalogAware "
"<http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/interfaces/_content.py?rev=91414&view=auto>`_"
" interface."
msgstr ""

# 501c84cdca3543439b99effc65889007
#: ../develop/plone/searching_and_indexing/indexing.rst:318
msgid "You must call reindexObject() if you"
msgstr ""

# 6c36abb0e73d4b1581a63477fc1276b1
#: ../develop/plone/searching_and_indexing/indexing.rst:320
msgid "Directly call object field mutators"
msgstr ""

# 24b4b8768f9d45828c91057ba71fa82d
#: ../develop/plone/searching_and_indexing/indexing.rst:322
msgid "Otherwise directly change object data"
msgstr ""

# e8caa9fcef884d4181c8d69611146a58
#: ../develop/plone/searching_and_indexing/indexing.rst:326
msgid ""
"**Unit test warning:** Usually Plone reindexes modified objects at the end "
"of each request (each transaction). If you modify the object yourself you "
"are responsible to notify related catalogs about the new object data."
msgstr ""

# f830e215f84747cb817a6738e07f59be
#: ../develop/plone/searching_and_indexing/indexing.rst:330
msgid ""
"reindexObject() method takes the optional argument *idxs* which will list "
"the changed indexes. If idxs is not given, all related indexes are updated "
"even though they were not changed."
msgstr ""

# de2d4c02f3aa43f48e2a606880a58168
#: ../develop/plone/searching_and_indexing/indexing.rst:343
msgid ""
"Also, if you modify security related parameters (permissions), you need to "
"call reindexObjectSecurity()."
msgstr ""

# d27d294d604241e382908b98385c6762
#: ../develop/plone/searching_and_indexing/indexing.rst:347
msgid "Index types"
msgstr ""

# a9fef21e07234b27bb8d5e5380b943f8
#: ../develop/plone/searching_and_indexing/indexing.rst:349
msgid ""
"Zope 2 product PluginIndexes defines various portal_catalog index types used"
" by Plone."
msgstr ""

# 238745b041aa40558c61d0c910cab6e0
#: ../develop/plone/searching_and_indexing/indexing.rst:351
msgid "FieldIndex stores values as is"
msgstr ""

# b43e327860d54db88a1033cd70376a38
#: ../develop/plone/searching_and_indexing/indexing.rst:353
msgid ""
"DateIndex and DateRangeIndex store dates (Zope 2 DateTime objects) in "
"searhable format. The latter provides ranged searches."
msgstr ""

# 4a6efb189a9f44d5a7184ac539236348
#: ../develop/plone/searching_and_indexing/indexing.rst:356
msgid ""
"KeywordIndex allows keyword-style look-ups (query term is matched against "
"the all values of a stored list)"
msgstr ""

# 98fd2871a26e4b88bc5f5b772c431df5
#: ../develop/plone/searching_and_indexing/indexing.rst:358
msgid "ZCTextIndex is used for full text indexing"
msgstr ""

# 268fb7bdad70457eb87e47e0113c2678
#: ../develop/plone/searching_and_indexing/indexing.rst:360
msgid "ExtendedPathIndex_ is used for indexing content object locations."
msgstr ""

# 9e40dfd97168491a9594000c27bfb4d9
#: ../develop/plone/searching_and_indexing/indexing.rst:364
msgid "Default Plone indexes and metadata columns"
msgstr ""

# e310a8e9e3a444f3ac6a99ffdb1a93b2
#: ../develop/plone/searching_and_indexing/indexing.rst:366
msgid "Some interesting indexes"
msgstr ""

# efb493ec20e8482e8ac6559576fb0f35
#: ../develop/plone/searching_and_indexing/indexing.rst:368
msgid ""
"start and end: Calendar event timestamps, used to make up calendar portlet"
msgstr ""

# 3c7ce211896f4ffaa1147899303ca438
#: ../develop/plone/searching_and_indexing/indexing.rst:370
msgid "sortable_title: Title provided for sorting"
msgstr ""

# 6c3ac880ccf340e0b245d1e0bb3145b0
#: ../develop/plone/searching_and_indexing/indexing.rst:372
msgid "portal_type: Content type as it appears in portal_types"
msgstr ""

# 25aacc6d8ed841439b832455f8f8d8c6
#: ../develop/plone/searching_and_indexing/indexing.rst:374
msgid "Type: Translated, human readable, type of the content"
msgstr ""

# 5d6bd7026ba24b75b0cf28684915e629
#: ../develop/plone/searching_and_indexing/indexing.rst:376
msgid "path: Where the object is (getPhysicalPath accessor method)."
msgstr ""

# 386ffd06c9494b2f9a4579e33b90201a
#: ../develop/plone/searching_and_indexing/indexing.rst:378
msgid ""
"object_provides: What interfaces and marker interfaces object has. "
"KeywordIndex of interface full names."
msgstr ""

# ec569b9a3035462cbbb3a98cc5f912d9
#: ../develop/plone/searching_and_indexing/indexing.rst:381
msgid ""
"is_default_page: is_default_page is method in CMFPlone/CatalogTool.py "
"handled by plone.indexer, so there is nothing like object.is_default_page "
"and this method calls ptool.isDefaultPage(obj)"
msgstr ""

# 828b6ffc7b0d45fcb877a02e26e95c02
#: ../develop/plone/searching_and_indexing/indexing.rst:384
msgid "Some interesting columns"
msgstr ""

# b8f45a485508468591b7f2c291cb46d5
#: ../develop/plone/searching_and_indexing/indexing.rst:386
msgid "getRemoteURL: Where to go when the object is clicked"
msgstr ""

# 6a267b2ccc364d09ad846be82a98544b
#: ../develop/plone/searching_and_indexing/indexing.rst:388
msgid ""
"getIcon: Which content type icon is used for this object in the navigation"
msgstr ""

# 18303254db1143c197bcfa7aff90e21f
#: ../develop/plone/searching_and_indexing/indexing.rst:390
msgid ""
"exclude_from_nav: If True the object won't appear in sitemap, navigation "
"tree"
msgstr ""

# 1b796572ae484da2b28cfedd6f1712a9
#: ../develop/plone/searching_and_indexing/indexing.rst:393
msgid "Custom sorting by title"
msgstr ""

# 6db17830db2d4691aae2025d4af9aa47
#: ../develop/plone/searching_and_indexing/indexing.rst:395
msgid ""
"sortable_title is type of FieldIndex (raw value) and normal ``Title`` index "
"is type of searchable text."
msgstr ""

# 74caab218ddc4e3c9a81dbcb2a0dc073
#: ../develop/plone/searching_and_indexing/indexing.rst:397
msgid ""
"``sortable_title`` is generated from ``Title`` in "
"``Products/CMFPlone/CatalogTool.py``."
msgstr ""

# 4341bade132e45328d61fbdfbdc1da0f
#: ../develop/plone/searching_and_indexing/indexing.rst:399
msgid ""
"You can override ``sortable_title`` by providing an indexer adapter with a "
"specific interface of your content type."
msgstr ""

# 407d124b2aa64f5194129563213393d1
#: ../develop/plone/searching_and_indexing/indexing.rst:401
msgid "Example indexes.py::"
msgstr ""

# 8947962caf5e4d7880c50387e3741ae9
#: ../develop/plone/searching_and_indexing/indexing.rst:422
msgid "Related ``configure.zcml``"
msgstr ""

# 3b987317a23e4c7db2b20168893e5646
#: ../develop/plone/searching_and_indexing/indexing.rst:430
msgid "TextIndexNG3"
msgstr ""

# c9b26ffcd668452b9acf04108eace9b1
#: ../develop/plone/searching_and_indexing/indexing.rst:432
msgid ""
"`TextIndexNG3 <http://www.zopyx.com/projects/TextIndexNG3>`_ is advanced "
"text indexing solution for Zope."
msgstr ""

# dd2e35d1ce544f9ba3e3130d2b730948
#: ../develop/plone/searching_and_indexing/indexing.rst:434
msgid ""
"Please read TextIndexNG3 README.txt regarding how to add support for custom "
"fields. Besides installing TextIndexNG3 in GenericSetup XML you need to "
"provide a custom indexing adapter."
msgstr ""

# 7435f8c6dddd43739374faf7bc71168a
#: ../develop/plone/searching_and_indexing/indexing.rst:438
msgid "# Add TextIndexNG3 in catalog.xml. Example::"
msgstr ""

# acb9ee167ef94c0aa4aee687ce79ba0a
#: ../develop/plone/searching_and_indexing/indexing.rst:462
msgid ""
"# Create adapter which will add TextIndexNG3 indexing support for your "
"custom fields. Example::"
msgstr ""

# 0d0730041bf54f0692d74208cea46d05
#: ../develop/plone/searching_and_indexing/indexing.rst:535
msgid "# Add adapter in your ZCML::"
msgstr ""

# 82d9818730ae4baaa725b3f7ed62501f
#: ../develop/plone/searching_and_indexing/indexing.rst:540
msgid "Full-text searching"
msgstr ""

# 28b41a85e2f7476a99e40aa3e961be03
#: ../develop/plone/searching_and_indexing/indexing.rst:542
msgid ""
"Plone provides special index called ``SearchableText`` which is used on the "
"site full-text search. Your content types can override ``SearchableText`` "
"index with custom method to populate this index with the text they want to "
"go into full-text searching."
msgstr ""

# c22815751d18454f918541e800ba7652
#: ../develop/plone/searching_and_indexing/indexing.rst:546
msgid ""
"Below is an example of having ``SearchableText`` on a custom Archetypes "
"content class. This class has some methods which are not part of AT schema "
"and thus must be manually added to ``SearchableText``"
msgstr ""

# c3f1978bea2e4cb19ada6fe10473c1df
#: ../develop/plone/searching_and_indexing/indexing.rst:626
msgid ""
"http://toutpt.wordpress.com/2008/12/14/archetype_tool-queuecatalog-"
"becareful-with-indexing-with-plones-portal_catalog/"
msgstr ""

# 64c236dbabcd444c8066413a3137b285
#: ../develop/plone/searching_and_indexing/query.rst:3
msgid "Querying"
msgstr ""

# 3cb518da2638439c93f0f45d7f6c9bd2
#: ../develop/plone/searching_and_indexing/query.rst:7
msgid "How to programmatically search and query content from a Plone site."
msgstr ""

# 566bb10283724cc3901ca063120bb5f4
#: ../develop/plone/searching_and_indexing/query.rst:14
msgid ""
"*Querying* is the action to retrieve data from search indexes.  In Plone's "
"case this usually means querying content items using the ``portal_catalog`` "
"tool.  Plone uses the :doc:`portal_catalog "
"</develop/plone/searching_and_indexing/catalog>` tool to perform most "
"content-related queries. Special catalogs, like ``reference_catalog``, "
"exist, for specialized and optimized queries."
msgstr ""

# d015621d3d9e46788441480c940d293b
#: ../develop/plone/searching_and_indexing/query.rst:22
msgid "Accesing the ``portal_catalog`` tool"
msgstr ""

# 43e3875a0d0b44cbad06478402076e29
#: ../develop/plone/searching_and_indexing/query.rst:24
msgid ""
"Plone queries are performed using ``portal_catalog`` persistent tool which "
"is available as an persistent object at the site root."
msgstr ""

# 481cf2fc2f7744c0a4c8ec198c3308fc
#: ../develop/plone/searching_and_indexing/query.rst:32
msgid ""
"You can also use :doc:`ITools </develop/plone/misc/context>` tool to get "
"access to ``portal_catalog`` if you do not have Plone site object directly "
"available::"
msgstr ""

# d58e492f3f974d2486f0d0c9ecc072b5
#: ../develop/plone/searching_and_indexing/query.rst:40
msgid ""
"There is also a third way, using traversing. This is discouraged, as this "
"includes extra processing overhead::"
msgstr ""

# c71f3a854f31406ea64be40dd0f18312
#: ../develop/plone/searching_and_indexing/query.rst:46
msgid "... and the same in TAL template::"
msgstr ""

# 665aaf22c06f41668c0f998cdd61f628
#: ../develop/plone/searching_and_indexing/query.rst:51
msgid "A safer method is to use the ``getToolByName`` helper function::"
msgstr ""

# 59d18cffc47f4fdbaf21a0673151d880
#: ../develop/plone/searching_and_indexing/query.rst:57
msgid "Querying ``portal_catalog``"
msgstr ""

# d30dff352d1f4f5e9398cec849e9c796
#: ../develop/plone/searching_and_indexing/query.rst:60
msgid "To search for something and get the resulting brains, write::"
msgstr ""

# 771526c7751c40cc8a30c311cb28458b
#: ../develop/plone/searching_and_indexing/query.rst:64
msgid ""
"The catalog returns \"*brains*\". A brain is a lightweight proxy for a found"
" object, which has attributes corresponding to the metadata defined for the "
"catalog."
msgstr ""

# 7f585f9fbc2e43bf8a42319723d89d4d
#: ../develop/plone/searching_and_indexing/query.rst:68
msgid ""
"Where ``kwargs`` is a dictionary of index names and their associated query "
"values. Only the indexes that you care about need to be included. This is "
"really useful if you have variable searching criteria, for example, coming "
"from a form where the users can select different fields to search for. For "
"example::"
msgstr ""

# 15cc70a3bba747d584f112fc81011f8d
#: ../develop/plone/searching_and_indexing/query.rst:76
msgid ""
"It is worth pointing out at this point that the indexes that you include are"
" treated as a logical AND, rather than OR. In other words, the query above "
"will find all the items that are both an Event, AND in the review state of "
"pending."
msgstr ""

# f9245d94d5d144f7abd35bc6326ac43a
#: ../develop/plone/searching_and_indexing/query.rst:81
msgid ""
"Additionally, you can call the catalog tool directly, which is equivalent to"
" calling ``catalog.searchResults()``::"
msgstr ""

# 6ce5cd6b1c054b839560b06db473eba4
#: ../develop/plone/searching_and_indexing/query.rst:86
msgid ""
"If you call portal_catalog() without arguments it will return all indexed "
"content objects::"
msgstr ""

# 6a34299d3f1446379da4a1314bcbfbbe
#: ../develop/plone/searching_and_indexing/query.rst:94
msgid "The catalog tool queries return an iterable of catalog brain objects."
msgstr ""

# c169d95d039b46b88665f59f488e044f
#: ../develop/plone/searching_and_indexing/query.rst:96
msgid ""
"As mentioned previously, brains contain a subset of the actual content "
"object information. The available subset is defined by the metadata columns "
"in portal_catalog. You can see available metadata columns on the "
"portal_catalog \"Metadata\" tab in ZMI. For more information, see "
":doc:`indexing </develop/plone/searching_and_indexing/indexing>`."
msgstr ""

# 4ff05412fc4a4d36a410ed7f6434ba59
#: ../develop/plone/searching_and_indexing/query.rst:103
msgid "Available indexes"
msgstr ""

# bece419802ff4d9386d3c17e50846894
#: ../develop/plone/searching_and_indexing/query.rst:105
msgid ""
"To see the full list of available indexes in your catalog, open the ZMI "
"(what usually means navigating to *http://yoursiteURL/manage*) look for the "
"*portal\\_catalog* object tool into the root of your Plone site and check "
"the *Indexes* tab. Note that there are different types of indexes, and each "
"one admits different types of search parameters, and behave differently. For"
" example, *FieldIndex* and *KeywordIndex* support sorting, but *ZCTextIndex*"
" doesn't. To learn more about indexes, see `The Zope Book, Searching and "
"Categorizing Content "
"<http://docs.zope.org/zope2/zope2book/SearchingZCatalog.html>`_."
msgstr ""

# d79ab32112a04d30bf2c039643c8d17c
#: ../develop/plone/searching_and_indexing/query.rst:115
msgid "Some of the most commonly used ones are:"
msgstr ""

# b35178e9795a425d8580c6565dfb8540
#: ../develop/plone/searching_and_indexing/query.rst:118
msgid "The title of the content object."
msgstr ""

# 8b660c84bc9149b1bd88aba0455ca1a5
#: ../develop/plone/searching_and_indexing/query.rst:120
msgid "The description field of the content."
msgstr ""

# 7b2f9c9f9a9e479ea6e3e7c4937ad563
#: ../develop/plone/searching_and_indexing/query.rst:125
msgid "Subject"
msgstr ""

# e9c8cf72ccc54c13a808179c2055cce7
#: ../develop/plone/searching_and_indexing/query.rst:122
msgid "The keywords used to categorize the content. Example: ::"
msgstr ""

# 3ec39dacc3ec45e9be1e79e84fe28a0f
#: ../develop/plone/searching_and_indexing/query.rst:138
msgid "portal\\_type"
msgstr ""

# f0175830fc014eceb0870abde6028f26
#: ../develop/plone/searching_and_indexing/query.rst:128
msgid ""
"As its name suggest, search for content whose portal type is indicated. For "
"example: ::"
msgstr ""

# d5fa333fe24843788b64cb388a987572
#: ../develop/plone/searching_and_indexing/query.rst:134
msgid "You can also specify several types using a list or tuple format:"
msgstr ""

# 7e9f04804cf5423b8dc098926fbc555f
#: ../develop/plone/searching_and_indexing/query.rst:144
msgid "review\\_state"
msgstr ""

# fc33b2356fb249e691752073cacbbcd9
#: ../develop/plone/searching_and_indexing/query.rst:141
msgid "The current workflow review state of the content. For example: ::"
msgstr ""

# 878eff1c71d04988b3d12b8216e7a0d2
#: ../develop/plone/searching_and_indexing/query.rst:166
msgid "object\\_provides"
msgstr ""

# 2baee660ded041099c256a3743311171
#: ../develop/plone/searching_and_indexing/query.rst:147
msgid ""
"From Plone 3, you can search by the interface provided by the content. "
"Example: ::"
msgstr ""

# 0da0ebc176e549b0aecf97c33f27e90e
#: ../develop/plone/searching_and_indexing/query.rst:154
msgid ""
"Searching for interfaces can have some benefits. Suppose you have several "
"types, for example, event types like *Birthday*, *Wedding* and *Graduation*,"
" in your portal which implement the same interface (for example, "
"``IIsCauseForCelebration``). Suppose you want to get items of these types "
"from the catalog by their interface. This is more exact than naming the "
"types explicitly (like portal\\_type=['Birthday','Wedding','Graduation' ]), "
"because you don't really care what the types' names really are: all you "
"really care for is the interface. This has the additional advantage that if "
"products added or modified later add types which implement the interface, "
"these new types will also show up in your query."
msgstr ""

# 27e5a3758be246b5863dc89a3a771023
#: ../develop/plone/searching_and_indexing/query.rst:169
msgid "Brain result id"
msgstr ""

# fbb1707e5d5244f8acd0c73a47c148f7
#: ../develop/plone/searching_and_indexing/query.rst:171
msgid ""
"Result ID (RID) is given with the brain object and you can use this ID to "
"query further info about the object from the catalog."
msgstr ""

# fa3e657727614e2fa9aae6dd8abfd9e8
#: ../develop/plone/searching_and_indexing/query.rst:180
msgid "Brain result path"
msgstr ""

# 25c087204d174412a7b0a421c50eb752
#: ../develop/plone/searching_and_indexing/query.rst:182
msgid ""
"Brain result path can be extraced as string using ``getPath()`` method::"
msgstr ""

# 746acbbc9971431cbcbce504bec2aba4
#: ../develop/plone/searching_and_indexing/query.rst:189
msgid "Brain object schema"
msgstr ""

# 2acdfdfda9934a76bd9bf2deffec73c1
#: ../develop/plone/searching_and_indexing/query.rst:191
msgid ""
"To see what metadata columns a brain object contain, you can access this "
"information from ``__record_schema__`` attribute which is a dict."
msgstr ""

# feabb9ddb91343b5b528809b7988c8cb
#: ../develop/plone/searching_and_indexing/query.rst:209
msgid "What do those numbers represent?"
msgstr ""

# 76a858a5961942ceac642fe38e213339
#: ../develop/plone/searching_and_indexing/query.rst:213
msgid "Getting the underlying object, its path, and its URL from a brain"
msgstr ""

# a6f9f1a4ff074b75b6df62d14c2f957b
#: ../develop/plone/searching_and_indexing/query.rst:215
msgid ""
"As it was said earlier, searching inside the catalog returns catalog brains,"
" not the object themselves. If you want to get the object associated with a "
"brain, do::"
msgstr ""

# 4d62975cec1546b8890988bd6cd18f51
#: ../develop/plone/searching_and_indexing/query.rst:221
msgid "To get the path of the object without fetching it::"
msgstr ""

# 21d3e2f0684b4194ad1776bc4435a9a7
#: ../develop/plone/searching_and_indexing/query.rst:225
msgid ""
"which returns the path as an string, corresponding to "
"``obj.getPhysicalPath()``"
msgstr ""

# 6780892725eb4104a7f075774f488d7d
#: ../develop/plone/searching_and_indexing/query.rst:227
msgid ""
"And finally, to get the URL of the underlying object, usually to provide a "
"link to it::"
msgstr ""

# c13c864662104b7988046ac504d60874
#: ../develop/plone/searching_and_indexing/query.rst:232
msgid "which is equivalent to ``obj.absolute_url()``."
msgstr ""

# a87f8c0f0ca845a79923d5ee685a90ed
#: ../develop/plone/searching_and_indexing/query.rst:236
msgid ""
"Calling getObject() has performance implications. Waking up each object "
"needs a separate query to the database."
msgstr ""

# 1502ec7b6fc6488cb67f89426ea55be8
#: ../develop/plone/searching_and_indexing/query.rst:241
msgid "getObject() and unrestrictedSearchResults() permission checks"
msgstr ""

# 853f4c540ae645ddbff71ccfc097ccf4
#: ../develop/plone/searching_and_indexing/query.rst:243
msgid ""
"You cannot call getObject() for a restricted result, even in trusted code."
msgstr ""

# f9fd78c9fa9c4f3b8c2c70a600fe7f18
#: ../develop/plone/searching_and_indexing/query.rst:245
msgid "Instead, you need to use::"
msgstr ""

# 01a0caa6f9ac488a87c77761ff391695
#: ../develop/plone/searching_and_indexing/query.rst:251
msgid "How to call ``unrestrictedTraverse``"
msgstr ""

# fec5e964ca6e449e8c80fa4428afa4c1
#: ../develop/plone/searching_and_indexing/query.rst:255
msgid "http://www.mail-archive.com/zope-dev@zope.org/msg17514.html"
msgstr ""

# 35f85da39721431eacbac6e6b555dffa
#: ../develop/plone/searching_and_indexing/query.rst:259
msgid "Counting value of an specific index"
msgstr ""

# b8ac28b0655c4de588afd3da24113a10
#: ../develop/plone/searching_and_indexing/query.rst:261
msgid ""
"The efficient way of counting the number value of an index is to work "
"directly in this index. For example we want to count the number of each "
"portal_type. Quering via search results is a performance bootleneck for "
"that. Iterating on all brains put those in zodb cache. This method is also a"
" memory bottleneck. So the good way for do that"
msgstr ""

# d597ccb0c7744ca292aa1027c05d26a5
#: ../develop/plone/searching_and_indexing/query.rst:280
msgid "Sorting and limiting the number of results"
msgstr ""

# a62290d7ac2a4ea69e869f95449d7674
#: ../develop/plone/searching_and_indexing/query.rst:282
msgid ""
"To sort the results, use the sort\\_on and sort\\_order arguments. The "
"sort\\_on argument accepts any available index, even if you're not searching"
" by it. The sort\\_order can be either 'ascending' or 'descending', where "
"'ascending' means from A to Z for a text field. 'reverse' is an alias "
"equivalent to 'descending'. For example:"
msgstr ""

# 3b7436a4a75c4c48a327c48739fa98a8
#: ../develop/plone/searching_and_indexing/query.rst:293
msgid ""
"The catalog.searchResults() returns a list-like object, so to limit the "
"number of results you can just use Python's slicing. For example, to get "
"only the first 3 items:"
msgstr ""

# a0ca63766f784a6ea7f26bc83675c038
#: ../develop/plone/searching_and_indexing/query.rst:301
msgid ""
"In addition, ZCatalogs allow a sort\\_limit argument. The sort\\_limit is "
"only a hint for the search algorithms and can potentially return a few more "
"items, so it's preferable to use both ``sort_limit`` and slicing "
"simultaneously:"
msgstr ""

# c43b636dab864bb8a078f16147992e82
#: ../develop/plone/searching_and_indexing/query.rst:313
msgid ""
"portal_catalog query takes *sort_on* argument which tells the index used for"
" sorting. *sort_order* defines sort direction. It can be string \"reverse\"."
msgstr ""

# 5f9fda25895a45228e5c3757ab0bc87f
#: ../develop/plone/searching_and_indexing/query.rst:316
msgid ""
"Sorting is supported only on FieldIndexes. Due to nature of searchable text "
"indexes (they index split text, not strings) they cannot be used for "
"sorting. For example, to do sorting by title, an index called "
"*sortable_tite* should be used."
msgstr ""

# 50501c125ca5483aa9ba72fe898b026c
#: ../develop/plone/searching_and_indexing/query.rst:321
msgid "Example how to sort by id::"
msgstr ""

# c622204e4e624648ac61104ea9012082
#: ../develop/plone/searching_and_indexing/query.rst:330
msgid "Text format"
msgstr ""

# 205d407011304d779e76d52ca6401434
#: ../develop/plone/searching_and_indexing/query.rst:332
msgid ""
"Since most indexes use Archetypes accessors to index the field value, the "
"returned text is UTF-8 encoded. This is a limitation inherited from the "
"early ages of Plone."
msgstr ""

# 3acd317329ad46cf87490c09c8254092
#: ../develop/plone/searching_and_indexing/query.rst:336
msgid "To get unicode value for e.g. title you need to do the following::"
msgstr ""

# 3585e847a47146edaa437906a68767fb
#: ../develop/plone/searching_and_indexing/query.rst:346
msgid "Accessing indexed data"
msgstr ""

# 6b4802244a854328abcd29b008968835
#: ../develop/plone/searching_and_indexing/query.rst:348
msgid ""
"Normally you don't get copy of indexed data with brains, only metadata. You "
"can still access the raw indexed data if you know what you are doing by "
"using RID of the brain object."
msgstr ""

# 9eafadbc05e845ceb92fb3f4b840e180
#: ../develop/plone/searching_and_indexing/query.rst:390
msgid "You can also directly access a single index::"
msgstr ""

# 03f44035d5bb47e7a165d9894fc99947
#: ../develop/plone/searching_and_indexing/query.rst:404
msgid "Dumping portal catalog content"
msgstr ""

# 8878c38182714e0598d891e085c7bfa6
#: ../develop/plone/searching_and_indexing/query.rst:406
msgid "Following is useful in unit test debugging::"
msgstr ""

# 3759d44785b847f0ae55badef7b552a7
#: ../develop/plone/searching_and_indexing/query.rst:417
msgid "Bypassing query security check"
msgstr ""

# 51a411d6056d4034b2b33e2a50fce29e
#: ../develop/plone/searching_and_indexing/query.rst:421
msgid ""
"Security: All portal_catalog queries are limited to the current user "
"permissions by default."
msgstr ""

# 90346d294c0046958822e9a2d7c16c28
#: ../develop/plone/searching_and_indexing/query.rst:423
msgid ""
"If you want to bypass this restrictions, use the unrestrictedSearchResults()"
" method."
msgstr ""

# 5c5bf84038d84d589b6098142aa4db05
#: ../develop/plone/searching_and_indexing/query.rst:431
msgid ""
"With ``unrestrictedSearchResults()`` you need also a special way to get "
"access to the objects without triggering a security exception::"
msgstr ""

# d928c4fdcaf14b6ba22a94f4210fbdaf
#: ../develop/plone/searching_and_indexing/query.rst:437
msgid "Bypassing language check"
msgstr ""

# 1f519a3ad4834880bcb7485e5d0e4e27
#: ../develop/plone/searching_and_indexing/query.rst:441
msgid ""
"All portal_catalog() queries are limited to the selected language of current"
" user. You need to explicitly bypass the language check if you want to do "
"multilingual queries."
msgstr ""

# 704ea6617eff45c7bf1a178b4947af8a
#: ../develop/plone/searching_and_indexing/query.rst:445
msgid "Example of how to bypass language check::"
msgstr ""

# dc8e5026820b4462abf3f804b572f43b
#: ../develop/plone/searching_and_indexing/query.rst:449
msgid ""
"Some older LinguaPlone versions, which are still using ``LanguageIndex`` to "
"keep language information in portal_catalog() may require::"
msgstr ""

# f09d4ce1345a49b8ad9637e6357dbc28
#: ../develop/plone/searching_and_indexing/query.rst:456
msgid ""
"http://plone.293351.n2.nabble.com/Products-LinguaPlone-LanguageIndex-vs-"
"FieldIndex-td5554729.html#a5747819"
msgstr ""

# ea00baef72cb44b08841b8950d89920e
#: ../develop/plone/searching_and_indexing/query.rst:459
msgid "Bypassing Expired content check"
msgstr ""

# 020c442a65444f888faae3e2f13ebd45
#: ../develop/plone/searching_and_indexing/query.rst:461
msgid ""
"Plone and portal_catalog have a mechanism to list only active (non-expired) "
"content by default."
msgstr ""

# fb5a91730cfd40deb482785606271e9e
#: ../develop/plone/searching_and_indexing/query.rst:464
msgid "Below is an example of how the expired content check is made::"
msgstr ""

# 8c12e8dd1afc4fa3a78f725a93b03edd
#: ../develop/plone/searching_and_indexing/query.rst:471
msgid "See also::"
msgstr ""

# 74aa52cfe4f24ef6bfd2e316fb61e35a
#: ../develop/plone/searching_and_indexing/query.rst:477
msgid "None as query parameter"
msgstr ""

# 5f09bbc38e1c4a1f8e220c7a5b44e3f1
#: ../develop/plone/searching_and_indexing/query.rst:481
msgid ""
"Usually if you pass in None as the query value, it will match all the "
"objects instead of zero objects."
msgstr ""

# 1e3efe3b229241fbac403b25ddd7a4dd
#: ../develop/plone/searching_and_indexing/query.rst:485
msgid "Querying for None values is possible with AdvancedQuery_ (see below)."
msgstr ""

# 960aead1b0694db4a4f4e81c26ba8b10
#: ../develop/plone/searching_and_indexing/query.rst:489
msgid "Query by path"
msgstr ""

# 094ac5ce857440c9974a2bee3409c8e0
#: ../develop/plone/searching_and_indexing/query.rst:491
msgid ""
"ExtendedPathIndex_ is the index used for content object paths. The *path* "
"index stores the physical path of the objects."
msgstr ""

# d5ec9eafab9c44ec9548eab6be43e78b
#: ../develop/plone/searching_and_indexing/query.rst:495
msgid "** Warning: ** If you ever rename your Plone site instance, the path"
msgstr ""

# cbb9707f5f7c4bfea738b92cb885b7ef
#: ../develop/plone/searching_and_indexing/query.rst:495
msgid "index needs to be completely rebuilt."
msgstr ""

# 86d09ede99cb4a6f835008781a3e3f21
#: ../develop/plone/searching_and_indexing/query.rst:502
msgid "Searching for content within a folder"
msgstr ""

# a09f619de69443ba91d060ec2ff35614
#: ../develop/plone/searching_and_indexing/query.rst:504
msgid ""
"Use the 'path' argument to specify the physical path to the folder you want "
"to search into."
msgstr ""

# 44d36690e04b4634a6f468cb8aa0e800
#: ../develop/plone/searching_and_indexing/query.rst:507
msgid ""
"By default, this will match objects into the specified folder and all "
"existing sub-folders. To change this behaviour, pass a dictionary with the "
"keys 'query' and 'depth' to the 'path' argument, where"
msgstr ""

# f903a33c71424b689ea5e10744ff8e06
#: ../develop/plone/searching_and_indexing/query.rst:513
msgid "'query' is the physical path, and"
msgstr ""

# 1dce944ac69142039d0aaf6190333eb6
#: ../develop/plone/searching_and_indexing/query.rst:514
msgid ""
"'depth' can be either 0, which will return only the brain for the path "
"queried against, or some number greater, which will query all items down to "
"that depth (eg, 1 means searching just inside the specified folder, or 2, "
"which means searching inside the folder, and inside all child folders, etc)."
msgstr ""

# 5efebe1696004e569ff469f18cc5c29f
#: ../develop/plone/searching_and_indexing/query.rst:520
msgid ""
"The most common use case is listing the contents of an existing folder, "
"which we'll assume to be the ``context`` object in this example:"
msgstr ""

# e11a1ee560e4407380fc71636a1bb08e
#: ../develop/plone/searching_and_indexing/query.rst:532
msgid "Query multiple values"
msgstr ""

# 3633e81f93874f0d980d3e443f5988be
#: ../develop/plone/searching_and_indexing/query.rst:534
msgid ""
"``KeywordIndex`` index type indexes list of values. It is used e.g. by "
"Plone's categories (subject) feature and ``object_provides`` provided "
"interfaces index."
msgstr ""

# dfb84495f2d94ca9a11b644f38fcd4fa
#: ../develop/plone/searching_and_indexing/query.rst:538
msgid "You can either query"
msgstr ""

# 4876d0f43ee14a63a242923183bf672c
#: ../develop/plone/searching_and_indexing/query.rst:540
msgid "a single value in the list"
msgstr ""

# a35fef126f024320a997b8d143e4aee6
#: ../develop/plone/searching_and_indexing/query.rst:542
msgid "many values in the list (all must present)"
msgstr ""

# ac20bf37fcb74e7eb5b5570327f6884a
#: ../develop/plone/searching_and_indexing/query.rst:544
msgid "any value in the list"
msgstr ""

# 7af19a01dd064dbfa989d2eb90476577
#: ../develop/plone/searching_and_indexing/query.rst:546
msgid ""
"The index of the catalog to query is either the name of the keyword "
"argument, a key in a mapping, or an attribute of a record object."
msgstr ""

# c82b55b7bb8f4f3a856d325cb53f6303
#: ../develop/plone/searching_and_indexing/query.rst:550
msgid "Attributes of record objects"
msgstr ""

# 462246f0b5c746ff8fb7145a466992e8
#: ../develop/plone/searching_and_indexing/query.rst:552
msgid ""
"``query`` -- either a sequence of objects or a single value to be passed as "
"query to the index (mandatory)"
msgstr ""

# 47adcc9539f643ceba3326a26a82611f
#: ../develop/plone/searching_and_indexing/query.rst:555
msgid ""
"``operator`` -- specifies the combination of search results when query is a "
"sequence of values. (optional, default: 'or'). Allowed values: 'and', 'or'"
msgstr ""

# 6f547aa4185d40deb12a132075008679
#: ../develop/plone/searching_and_indexing/query.rst:559
msgid ""
"Below is an example of matching any of multiple values gives as a Python "
"list in KeywordIndex. It queries all event types and recurrence_days "
"KeywordIndex must match any of given dates::"
msgstr ""

# 873ed5aed70c428587f8d38ceb37eca4
#: ../develop/plone/searching_and_indexing/query.rst:576
msgid "Querying by interface"
msgstr ""

# a1b66247b37f42b7b6be83ca634dc1f9
#: ../develop/plone/searching_and_indexing/query.rst:578
msgid ""
"Suppose you have several content types (for example, event types like "
"'Birthday','Wedding','Graduation') in your portal which implement the same "
"interface (for example, ``IIsCauseForCelebration``). Suppose you want to get"
" items of these types from the catalog by their interface. This is more "
"exact than naming the types explicitly (like ``portal_type=['Birthday', "
"'Wedding', 'Graduation' ]``), because you don't really care what the types' "
"names really are: all you really care for is the interface."
msgstr ""

# 4c524017a88f4a04a3768482f8098351
#: ../develop/plone/searching_and_indexing/query.rst:586
msgid ""
"This has the additional advantage that if products added or modified later "
"add types which implement the interface, these new types will also show up "
"in your query."
msgstr ""

# 89502e4f5d55439ebcaa8ff00db84967
#: ../develop/plone/searching_and_indexing/query.rst:590
msgid "Import the interface::"
msgstr ""

# a697e5de6f4f41bfb179f8ce3e4151c3
#: ../develop/plone/searching_and_indexing/query.rst:595
msgid ""
"In a script, where you can't import the interface due to restricted Python, "
"you might do this::"
msgstr ""

# ee258647dd2348a6b26d3f7ba4a5bfcc
#: ../develop/plone/searching_and_indexing/query.rst:600
msgid ""
"The advantage of using ``.__identifier__`` instead instead of a dotted name-"
"string is that you will get errors at startup time if the interface cannot "
"be found. This will catch typos and missing imports."
msgstr ""

# 8df35293fe384708bacd1284709b44e7
# 60158ad98e594fc4922dc06265072ac0
#: ../develop/plone/searching_and_indexing/query.rst:605
#: ../develop/plone/security/selinux.rst:152
msgid "Caveats"
msgstr ""

# 69fc8bd9acf14a7cb16a46c1ed4141ed
#: ../develop/plone/searching_and_indexing/query.rst:607
msgid ""
"``object_provides`` is a KeywordIndex which indexes absolute Python class "
"names. A string matching is performed for the dotted name. Thus, you will "
"have zero results for this::"
msgstr ""

# 2584ca74910d4be4ac83d4ae79a34bb6
#: ../develop/plone/searching_and_indexing/query.rst:613
msgid ""
", because Products.ATContentTypes.interface imports everything from "
"``document.py``. But this will work::"
msgstr ""

# 0b75c0161c76440089175afdc9de658a
#: ../develop/plone/searching_and_indexing/query.rst:619
msgid ""
"As with all catalog queries, if you pass an empty value for search "
"parameter, it will return all results. so if the interface you defined would"
" yield a none type object, the search would return all values of "
"object_provides."
msgstr ""

# d4538dfbac6f478f955e58ba2511946d
#: ../develop/plone/searching_and_indexing/query.rst:623
msgid ""
"(Originally from `this tutorial <http://plone.org/documentation/how-to"
"/query-portal_catalog-for-interfaces>`_.)"
msgstr ""

# 34810cb52df7469aa897004dcb22dc2e
#: ../develop/plone/searching_and_indexing/query.rst:627
msgid ""
"Looks like query by Products.CMFCore.interfaces._content.IFolderish does not"
" seem to work in Plone 4.1 as this implementation information is not "
"populated in portal_catalog."
msgstr ""

# c829b9949cca4a37891394b9ce58da10
#: ../develop/plone/searching_and_indexing/query.rst:631
msgid "Query by content type"
msgstr ""

# 66b1ea97c46946809aaa4ea74c2c00c5
#: ../develop/plone/searching_and_indexing/query.rst:633
msgid "To get all catalog brains of certain content type on the whole site::"
msgstr ""

# 4f964e05de504f579c6de4c290aaa414
#: ../develop/plone/searching_and_indexing/query.rst:637
msgid "To see available type names, visit in portal_types tool in ZMI."
msgstr ""

# e80e386a525e4b9dab20599f0978f8ea
#: ../develop/plone/searching_and_indexing/query.rst:640
msgid "Query published items"
msgstr ""

# b878ba2b42bb45b68a5ecc7b54df26c2
#: ../develop/plone/searching_and_indexing/query.rst:642
msgid ""
"By default, the portal_catalog query does not care about the workflow state."
" You might want to limit the query to published items."
msgstr ""

# 06f4baf1b28a4d7dab4d772a34be2fd1
#: ../develop/plone/searching_and_indexing/query.rst:650
msgid ""
"review_state is a portal_catalog index which reads portal_workflow variable "
"\"review_state\". For more information, see what portal_workflow tool "
"*Content* tab in ZMI contains."
msgstr ""

# 3383b2b0b8ba4dd2aae156251dc2d4ac
#: ../develop/plone/searching_and_indexing/query.rst:654
msgid "Getting a random item"
msgstr ""

# a61651f5f06c44cba04fa490a2fb07e2
#: ../develop/plone/searching_and_indexing/query.rst:656
msgid ""
"The following view snippet allows you to get one random item on the site::"
msgstr ""

# 5304fa58bdfa4b1e9a69cfb2e0f9ef1f
#: ../develop/plone/searching_and_indexing/query.rst:687
msgid "Querying FieldIndexes by Range"
msgstr ""

# 402339b0a550437b84ba2c3db299a648
#: ../develop/plone/searching_and_indexing/query.rst:688
msgid ""
"The following examples demonstrate how to do range based queries. This is "
"useful if you want to find the \"minimum\" or \"maximum\" values of "
"something, the example assumes that there is an index called 'getPrice'."
msgstr ""

# 31fbf04581994e5db617fecf569444be
#: ../develop/plone/searching_and_indexing/query.rst:692
msgid "Get a value that is greater than or equal to 2::"
msgstr ""

# 4a7db3da169c4f44a7d816a56b61c9b2
#: ../develop/plone/searching_and_indexing/query.rst:696
msgid "Get a value that is less than or equal to 40::"
msgstr ""

# 94b9badd3dc245a1ba45d8e4b17fecda
#: ../develop/plone/searching_and_indexing/query.rst:700
msgid "Get a value that falls between 2 and 1000::"
msgstr ""

# ca0b42abb3554ddb9d737058e5867d17
#: ../develop/plone/searching_and_indexing/query.rst:705
msgid "Querying by date"
msgstr ""

# af398b51c2884bc784138c0f369a106f
#: ../develop/plone/searching_and_indexing/query.rst:707
msgid ""
"See `DateIndex "
"<http://svn.zope.org/Zope/trunk/src/Products/PluginIndexes/DateIndex/tests/test_DateIndex.py?rev=102443&view=auto>`_."
msgstr ""

# 8e5412f278dd46b4a4cf5c5180b4c651
#: ../develop/plone/searching_and_indexing/query.rst:715
msgid ""
"Note that ``effectiveRange`` may be a lot more efficient. This will return "
"only objects whose ``effective_date`` is in the past, ie. objects that are "
"not unpublished::"
msgstr ""

# 8efe11c9beec4502b32369315fb3b3ab
#: ../develop/plone/searching_and_indexing/query.rst:722
msgid ""
"Example 2 - how to get items one day old of FeedFeederItem content type::"
msgstr ""

# c5e56c186611442485fc5834df1686c4
#: ../develop/plone/searching_and_indexing/query.rst:738
msgid ""
"Example 3: how to get news items for a particular year in the template code"
msgstr ""

# c06421b74f6a4b0ba5f99dffa9c3ad99
#: ../develop/plone/searching_and_indexing/query.rst:769
msgid "Example 4 - how to get upcoming events of next two months::"
msgstr ""

# d41bb47276534d47ac444ed95111853c
#: ../develop/plone/searching_and_indexing/query.rst:795
msgid "http://www.ifpeople.net/fairsource/courses/material/apiPlone_en"
msgstr ""

# cc294402634d47a8a836d70afa099f21
#: ../develop/plone/searching_and_indexing/query.rst:798
msgid "Query by language"
msgstr ""

# 81ad38b1305f43cd8ec8139ccc7f8f5b
#: ../develop/plone/searching_and_indexing/query.rst:800
msgid "You can query by language::"
msgstr ""

# 9ca03848aca0410fa4c27c4552171c13
#: ../develop/plone/searching_and_indexing/query.rst:806
msgid "Products.LinguaPlone must be installed."
msgstr ""

# 16d085b0fae04938a00938ddd91f37d9
#: ../develop/plone/searching_and_indexing/query.rst:809
msgid "Boolean queries (AdvancedQuery)"
msgstr ""

# 24160fc3001e43dca8ed7bd06b941b7d
#: ../develop/plone/searching_and_indexing/query.rst:811
msgid ""
"AdvancedQuery is an add-on product for Zope's ZCatalog providing queries "
"using boolean logic. AdvancedQuery is developer level product, providing "
"Python interface for constructing boolean queries."
msgstr ""

# 3f3c71def01f48558ba87ed51dd66bfd
#: ../develop/plone/searching_and_indexing/query.rst:815
msgid ""
"AdvancedQuery monkey-patches ``portal_catalog`` to provide new method "
"``portal_catalog.evalAdvancedQuery()``."
msgstr ""

# 3ae6ad3b66b247e8bfae05a770ee4c5b
#: ../develop/plone/searching_and_indexing/query.rst:853
msgid ""
"Plone 3 ships with AdvancedQuery but it is not part of Plone. Always declare"
" AdvancedQuery dependency in your egg's setup.py install_requires."
msgstr ""

# 706af1b80a804af0af25365cff4a8723
#: ../develop/plone/searching_and_indexing/query.rst:858
msgid ""
"AdvancedQuery does not necessarily apply the same automatic limitations "
"which normal portal_catalog() queries do, like language and expiration date."
" Always check your query code against these limitations."
msgstr ""

# 6fae0d21c68448e796b17b4381b88a65
#: ../develop/plone/searching_and_indexing/query.rst:864
msgid "See AdvancedQuery_."
msgstr ""

# c0efc4791dc94efd8af50123951daedd
#: ../develop/plone/searching_and_indexing/query.rst:866
msgid ""
"http://plone.org/documentation/manual/upgrade-guide/version/upgrading-"
"plone-3-x-to-4.0/updating-add-on-products-for-plone-4.0/removed-advanced-"
"query"
msgstr ""

# 42de685042c24cdb8ef17c8417267e4b
#: ../develop/plone/searching_and_indexing/query.rst:870
msgid "Setting Up A New Style Query"
msgstr ""

# 7582879bad4343f493823f35f416c1b8
#: ../develop/plone/searching_and_indexing/query.rst:872
msgid ""
"With Plone 4.2, collections use so-called new-style queries by default. "
"These are, technically speaking, canned queries, and they appear to have the"
" following advantages over old-style collection's criteria:"
msgstr ""

# 2d2b2a1806334489baa8bb7ec0e61ad5
#: ../develop/plone/searching_and_indexing/query.rst:877
msgid ""
"They are not complicated sub-objects of collections, but comparably simple "
"subobjects that can be set using simple Python expressions."
msgstr ""

# d5bfbf71a0db45b4a2b8e05320fdc80c
#: ../develop/plone/searching_and_indexing/query.rst:879
msgid "These queries are apparently much faster to execute, as well as"
msgstr ""

# bb0721f42c264e158439dd83af80753e
#: ../develop/plone/searching_and_indexing/query.rst:880
msgid "much easier to understand, and"
msgstr ""

# bb984ca4028f4ea29c78b0d20f7919f3
#: ../develop/plone/searching_and_indexing/query.rst:881
msgid ""
"content-type agnostic in the sense that they are no longer tied to "
"ArcheTypes."
msgstr ""

# 3782bc3ddcb64990a2a4d641a95b1ede
#: ../develop/plone/searching_and_indexing/query.rst:884
msgid ""
"The easiest way to get into these queries is to grab a debug shell alongside"
" an instance, then fire up a browser pointing to that instance, then "
"manipulate the queries and watch the changes on the debug shell, if you want"
" to experiment. I've constructed a dummy collection for demonstration "
"purposes, named `testquery`. I've formatted the output a little, for "
"readability."
msgstr ""

# caaef66cf9034057aeb299b92f1e3e90
#: ../develop/plone/searching_and_indexing/query.rst:891
msgid "Discovering the query:"
msgstr ""

# e43a33a60815460eb2789ad5ee02b61c
#: ../develop/plone/searching_and_indexing/query.rst:919
msgid ""
"This output should be pretty self-explaining: This query finds objects that "
"were created today, which have \"my querystring\" in their description, are "
"of type \"Document\" (ie, \"Page\"), and have \"some_tag\" in their tag set "
"(you'll find that under \"Classification\"). Also, the results are being "
"sorted in reverse order of the Effective Date (ie, the publishing date). "
"We're getting at most 1000 results, which is the default cut-off."
msgstr ""

# 01a8c20e74984c75abfaf8b2de4219da
#: ../develop/plone/searching_and_indexing/query.rst:927
msgid ""
"You can set the query expression (individual parts are evaluated as logical "
"AND) using"
msgstr ""

# 42c0fa00e1e14867a7e338272a4a751c
#: ../develop/plone/searching_and_indexing/query.rst:931
msgid "The three parts of an individual query term are"
msgstr ""

# c06a36a06d6b40d39a39af71715563f6
#: ../develop/plone/searching_and_indexing/query.rst:933
msgid "'i': which index to query"
msgstr ""

# c35531294aad46ff92d1bfcd5533358a
#: ../develop/plone/searching_and_indexing/query.rst:934
msgid "'o': which operator to use (see `plone.app.querystring` for a list)"
msgstr ""

# 21537f1df0f148198675ab4686c794ec
#: ../develop/plone/searching_and_indexing/query.rst:935
msgid ""
"'v': the possible value of an argument to said operator - eg. the query "
"string."
msgstr ""

# e14cd1fc9de74793a6bfd03845f91577
#: ../develop/plone/searching_and_indexing/query.rst:937
msgid "Other parameters can be manipulated the same way:"
msgstr ""

# 880ac3339bbc40df97ed32b69a3805f2
#: ../develop/plone/searching_and_indexing/query.rst:943
msgid "Accessing metadata"
msgstr ""

# 8a9d6be4a765426ab297700aaf03daea
#: ../develop/plone/searching_and_indexing/query.rst:945
msgid ""
"Metadata is collected from the object during cataloging and is copied to "
"brain object for faster access (no need to wake up the actual object from "
"the database)."
msgstr ""

# ecd235e5207a45d09bf9f8bc05f9edb3
#: ../develop/plone/searching_and_indexing/query.rst:948
msgid ""
"ZCatalog brain objects use Python dictionary-like API to access metadata. "
"Below is a fail-safe example for a metadata access::"
msgstr ""

# 38edb00d2c54453b8c32fe2002972025
#: ../develop/plone/searching_and_indexing/query.rst:990
msgid ""
"This is for example purposes only - the code above is working, but not "
"optimal, and can be written up without waking up the object."
msgstr ""

# 43d750e44d844c5397bc9b50e8eb2664
#: ../develop/plone/searching_and_indexing/query.rst:994
msgid "Fuzzy search"
msgstr ""

# 272c56e9f5d745f1ad8dbe0098957ebf
#: ../develop/plone/searching_and_indexing/query.rst:996
msgid "https://pypi.python.org/pypi/c2.search.fuzzy/"
msgstr ""

# 5c8676c0c9b74e4b8c724b578f1fe62d
#: ../develop/plone/searching_and_indexing/query.rst:999
msgid "Unique values"
msgstr ""

# eedf3d89038741c19e2b2d0191c606a4
#: ../develop/plone/searching_and_indexing/query.rst:1001
msgid ""
"ZCatalog has *uniqueValuesFor()* method to retrieve all unique values for a "
"certain index. It is intended to work on FieldIndexes only."
msgstr ""

# 9a614612624b474a86023f441cc5c54e
#: ../develop/plone/searching_and_indexing/query.rst:1016
msgid "Performance"
msgstr ""

# 39b0e113379341f6b25cf5eb886236c3
#: ../develop/plone/searching_and_indexing/query.rst:1018
msgid ""
"The following community mailing list blog posts is very insightful about the"
" performance characteristics of Plone search and indexing:"
msgstr ""

# 1967ccd0e4a24b34bdf61b2a67867069
#: ../develop/plone/searching_and_indexing/query.rst:1021
msgid ""
"http://plone.293351.n2.nabble.com/Advice-for-site-with-very-large-number-of-"
"objects-millions-tp5513207p5529103.html"
msgstr ""

# 7de1bde4ded54c78aa0fd8f89f279a15
#: ../develop/plone/searching_and_indexing/query.rst:1024
msgid "Batching"
msgstr ""

# f1d45be23718455d8c4703932040f476
#: ../develop/plone/searching_and_indexing/query.rst:1026
msgid "Complete writeup"
msgstr ""

# 6975fde73d054a4cab8f567df7519eb9
#: ../develop/plone/searching_and_indexing/query.rst:1032
msgid ""
"orphan - the next page will be combined with the current page if it does not"
" contain more than orphan elements"
msgstr ""

# e54a03c66f974cd08f0e29f56a19c415
#: ../develop/plone/searching_and_indexing/query.rst:1035
msgid "Walking through all content"
msgstr ""

# 6c5a8e49bd2943d198b540f3030d5bfd
#: ../develop/plone/searching_and_indexing/query.rst:1037
msgid ""
"``portal_catalog()`` call without search parameters will return all indexed "
"site objects."
msgstr ""

# 319c443bc59547f29894d89e8072cc37
#: ../develop/plone/searching_and_indexing/query.rst:1040
msgid ""
"Here is an example how to crawl through Plone content to search HTML "
"snippets. This can be done by rendering every content object and check "
"whether certain substrings exists the output HTML This snippet can be "
"executed through-the-web in Zope Management Interface."
msgstr ""

# a67c0bdfa1cd487f99bd3e9ec52fc03b
#: ../develop/plone/searching_and_indexing/query.rst:1045
msgid ""
"This kind of scripting is especially useful if you need to find old links or"
" migrate some text / HTML snippets in the content itself. There might be "
"artifacts which only appear on the resulting pages (portlets, footer texts, "
"etc.) and thus they are invisible to the normal full text search."
msgstr ""

# 8a57a96323284a8ba10300653218105c
#: ../develop/plone/searching_and_indexing/query.rst:1076
msgid ""
"http://blog.mfabrik.com/2011/02/17/finding-arbitary-html-snippets-on-plone-"
"content-pages/"
msgstr ""

# 7f76a94091434342829130ab7cc6dc53
#: ../develop/plone/searching_and_indexing/query.rst:1079
msgid "Other notes"
msgstr ""

# 6dad17e13f5a44dba64089e2c41ea1cf
#: ../develop/plone/searching_and_indexing/query.rst:1081
msgid ""
"`Indexing tutorial <http://plone.org/documentation/tutorial/using-"
"portal_catalog/tutorial-all-pages>`_ on plone.org"
msgstr ""

# 76b1396c8a384a6e9181811b8a39891f
#: ../develop/plone/searching_and_indexing/query.rst:1083
msgid ""
"`Manual sorting example <http://www.universalwebservices.net/web-"
"programming-resources/zope-plone/advanced-sorting-of-plone-search-"
"results/>`_"
msgstr ""

# 282c6a69c28844f9a0d1b61d4c0f240f
#: ../develop/plone/searching_and_indexing/query.rst:1085
msgid ""
"`Getting all unique keywords <http://stackoverflow.com/questions/10497342"
"/python-plone-getting-all-unique-keywords-subject>`_"
msgstr ""

# 8381992095ff40a5ac7ad56a2bed4dd0
#: ../develop/plone/security/csrf.rst:2
msgid "Cross-Site Request Forgery (CSRF)"
msgstr ""

# a32f680d80e2413e8af21dfa39c6c3a0
#: ../develop/plone/security/csrf.rst:5
msgid "Plain usage"
msgstr ""

# 9646218d481547fb917708e4be31fff2
#: ../develop/plone/security/csrf.rst:7
msgid "Documentation: https://github.com/plone/plone.protect/"
msgstr ""

# 76c08799a7bf416f93e3e7d464603702
#: ../develop/plone/security/csrf.rst:10
msgid "z3c.form"
msgstr ""

# d28566915e644092a90c59e8dd0ffe26
#: ../develop/plone/security/csrf.rst:12
msgid ""
"z3c.form does not incude csrf protection yet: "
"https://bugs.launchpad.net/z3c.form/+bug/805794"
msgstr ""

# 8dffdb4ba8a14311b1e0c34a5c1b7d83
#: ../develop/plone/security/custom_permissions.rst:3
msgid "Custom permissions"
msgstr ""

# 8689b2bdd31b454a89b1483af7dc2e27
#: ../develop/plone/security/custom_permissions.rst:5
msgid "Creating special permissions for your product"
msgstr ""

# 573432340e4b411689433067a5d1c076
#: ../develop/plone/security/custom_permissions.rst:9
msgid "Define Zope 2 permissions in python code"
msgstr ""

# b961d80d812448c8b4de6288cc02e5b1
#: ../develop/plone/security/custom_permissions.rst:11
msgid ""
"If you want to protect certain actions in your product by a special "
"permission, you most likely will want to assign this permission to a role "
"when the product is installed.  You will want to use Generic Setup's "
"rolemap.xml to assign these permissions.  A new permission will be added to "
"the Zope instance by calling setDefaultRoles on it."
msgstr ""

# 52da1300a5d64d37922608f299b77fc0
#: ../develop/plone/security/custom_permissions.rst:17
msgid ""
"However, at the time when Generic Setup is run, almost none of your code has"
" actually been run, so the permission doesn't exist yet.  That's why we "
"define the permissions in permissions.py, and call this from __init__.py:"
msgstr ""

# 59f3ef6f8d214d4cb54678490e9c79a5
#: ../develop/plone/security/custom_permissions.rst:40
msgid ""
"When working with permissions, always use the variable name instead of the "
"string value.  This ensures that you can't make typos with the string value,"
" which are hard to debug.  If you do make a typo in the variable name, "
"you'll get an ImportError or NameError."
msgstr ""

# 08cc2b2396d2496aa4afa43f90931a49
#: ../develop/plone/security/custom_permissions.rst:47
msgid "Make the permissions available as a Zope 3 permissions"
msgstr ""

# e32e984a3f09451795b5eee51b386dff
#: ../develop/plone/security/custom_permissions.rst:49
msgid ""
"To use your permissions with BrowserViews/formlib/z3c.form, you need to make"
" them available available as Zope 3 permissions. This is done in ZCML using "
"a the <permission> directive. Example configure.zcml:"
msgstr ""

# f7fbdf13830c47008956f5da50c605ae
#: ../develop/plone/security/custom_permissions.rst:65
msgid ""
"It's convention to prefix the permission id with the name of the package "
"it's defined in and use lower case only. You have to take care that the "
"title matches exactly the permission string you used in permissions.py. "
"Otherwise a different, zope 3 only, permission is registered."
msgstr ""

# 9c844b57c561484d956d0c84359d214d
#: ../develop/plone/security/custom_permissions.rst:71
msgid ""
"You can use the permission to e.g. protect BrowserViews. Example "
"configure.zcml:"
msgstr ""

# 245b85a8cc89444e83438dd51945176d
#: ../develop/plone/security/custom_permissions.rst:95
msgid "Define both Zope 2 and Zope3 permissions in one Step in ZCML"
msgstr ""

# e7fcb6837b97489783eff3f1eca29ea5
#: ../develop/plone/security/custom_permissions.rst:97
msgid ""
"You can use `collective.autopermission "
"<https://pypi.python.org/pypi/collective.autopermission/1.0b1>`_ (`svn "
"repository "
"<http://svn.plone.org/svn/collective/collective.autopermission>`_) and "
"define both the Zope 2 and Zope 3 permission at once with the <permission> "
"zcml-directive. To do that install collective.autopermission. Either add "
"\"collective.autopermission\" to \"install_requires\" in setup.py or to your"
" buildout. Then include collective.autopermission's configure.zcml *before* "
"you define the permissions *and* before you use them.  "
"(collective.autopermission is not required in Zope 2.12/Plone 4 anymore!)"
msgstr ""

# 72199f1207b24e6f9c010416e91e7164
#: ../develop/plone/security/custom_permissions.rst:131
msgid ""
"Now you can use the permission both as a Zope 2 permission *('MyProduct: "
"MyPermission')* or a Zope 3 permission *('myproduct.mypermission')*. The "
"only disadvantage is that you can't import the permissionstring as a "
"variable from permissions.py."
msgstr ""

# 34aa9b7e3e8844bfba35572690946070
#: ../develop/plone/security/dynamic_roles.rst:3
msgid "Dynamic roles"
msgstr ""

# bbfb801d232944f09b880719dfadfbe7
#: ../develop/plone/security/dynamic_roles.rst:10
msgid ""
"Plone core's borg.localrole package allows you to hook into role-resolving "
"code and add roles dynamically. I.e. the role on the user depends on HTTP "
"request / environment conditions and is not something set in the site "
"database."
msgstr ""

# e2b7089e88e54dad8e9da2a6d2873306
#: ../develop/plone/security/dynamic_roles.rst:15
msgid "Creating a dynamic role"
msgstr ""

# 7880403382aa4a658b47a12a2fba8bd1
#: ../develop/plone/security/dynamic_roles.rst:17
msgid ""
"First :doc:`create an Ploneadd-on for your coding needs "
"</develop/addons/paste>`."
msgstr ""

# 02173e1bc0c44397a6e40a84e5025539
#: ../develop/plone/security/dynamic_roles.rst:19
msgid ""
"getRoles() function is called several times per request so you might want to"
" cache the result."
msgstr ""

# 545b2984729c437bad800be8f5c16c92
#: ../develop/plone/security/dynamic_roles.rst:22
msgid "There is a complex example below."
msgstr ""

# eddc13b2bc434d27b734720c3b23ac43
#: ../develop/plone/security/dynamic_roles.rst:24
msgid ""
"getAllRoles() is overridden to return a custom role which is not available "
"through normal security machinery. This is required because Plone/Zope "
"builds look-up tables based on the result of getAllRoles() and all possible "
"roles must appear there"
msgstr ""

# 8f9bfcda08bc4e0a86707f44ac491819
#: ../develop/plone/security/dynamic_roles.rst:29
msgid ""
"getRoles() is overridden to call custom getDummyRolesOnContext() which has "
"the actual logic to resolve the roles"
msgstr ""

# 65870801b5ea40ceb10e85e0ce19e118
#: ../develop/plone/security/dynamic_roles.rst:32
msgid ""
"An example code checks whether the context object implements a marker "
"interface and gives the user a role based on that"
msgstr ""

# a582662715ae495d89e3afff84ce1a90
#: ../develop/plone/security/dynamic_roles.rst:35
msgid "Example ``localroles.py``::"
msgstr ""

# cfbcd5295cea4043ae718636f804b8a4
#: ../develop/plone/security/dynamic_roles.rst:90
msgid ""
"Custom local role implementation is made effective using ZCML adapter "
"directive in your add-ons ``configure.zcml``::"
msgstr ""

# 6a32cbb3925f4e99a71308d487771719
#: ../develop/plone/security/dynamic_roles.rst:105
msgid ""
"If your dynamic role is not any of Plone's existing roles you need to "
":doc:`declare it with rolemap.xml </develop/plone/security/local_roles>`."
msgstr ""

# 8863b1a6e34e4cb3b926319a880e8009
#: ../develop/plone/security/index.rst:3
msgid "Security"
msgstr ""

# 23a7cd4142dd4ea287c2a8a5cfa3e346
#: ../develop/plone/security/index.rst:5
msgid "Zope provides various built-in security facilities"
msgstr ""

# 885a6c9ca9a34255a2cc63f93b7f8a8d
#: ../develop/plone/security/index.rst:7
msgid "User - role - permission three layer security model"
msgstr ""

# cae559d763744b3b9312b0a9a240e459
#: ../develop/plone/security/index.rst:9
msgid "Security declarations in ZCML for views, adapters, etc."
msgstr ""

# b69b38744d5549efa50dbe0e76443617
#: ../develop/plone/security/index.rst:11
msgid "RestrictedPython to evaluate sandboxed code"
msgstr ""

# efd88f47b3b44800a9178eb9a261dc22
#: ../develop/plone/security/local_roles.rst:3
msgid "Local roles"
msgstr ""

# c6944f615082448f95214eeee993a3f8
#: ../develop/plone/security/local_roles.rst:7
msgid "Creating and setting local roles of Plone members programmatically."
msgstr ""

# b5d77b495e4643f193077c341e82aaf8
#: ../develop/plone/security/local_roles.rst:14
msgid ""
"Local roles allows user accounts to have special privileges for a folder and"
" its children."
msgstr ""

# f38734c809fe4ebaa7506226015e33fa
#: ../develop/plone/security/local_roles.rst:17
msgid ""
"By default Plone has roles like ``Contributor``, ``Reader``, ``Editor``, "
"etc. and you can view these on the :guilabel:`Sharing` tab and in "
":term:`ZMI` :guilabel:`Security` tab."
msgstr ""

# 9f630df358c84dd39184db89eea31fc5
#: ../develop/plone/security/local_roles.rst:21
msgid ""
"Good introduction to roles: `Basic Roles and Permissions in Plone "
"<http://www.sixfeetup.com/blog/basic-roles-and-permissions-in-plone>`_"
msgstr ""

# 3ce8d356160441d6a64bea651d7fffb5
#: ../develop/plone/security/local_roles.rst:26
msgid "Creating a new role"
msgstr ""

# 402729c2075442c7bc44f47145b2de59
#: ../develop/plone/security/local_roles.rst:28
msgid ""
"New Plone roles can be created through the :doc:`GenericSetup rolemap.xml "
"</develop/addons/components/genericsetup>` file."
msgstr ""

# 7ae13fb91b0643d6be911622e2c77aa1
#: ../develop/plone/security/local_roles.rst:31
msgid "Example ``profiles/default/rolemap.xml``"
msgstr ""

# 2d59d183af0545e9a19d1ffb9a41a45b
#: ../develop/plone/security/local_roles.rst:47
msgid "Adding a role to the Sharing Tab"
msgstr ""

# d9355b49bd044da8aa21e6ba42f5092c
#: ../develop/plone/security/local_roles.rst:49
msgid ""
"To let the newly created role appear in the @@sharing tab, create a "
":doc:`GenericSetup sharing.xml </develop/addons/components/genericsetup>` "
"file."
msgstr ""

# f6657ebda5414ca382b191e9ef114e6a
#: ../develop/plone/security/local_roles.rst:52
msgid "Example ``profiles/default/sharing.xml``"
msgstr ""

# 7701da1b262d4cf1bab0e276c71de7ee
#: ../develop/plone/security/local_roles.rst:66
msgid ""
"The title is the name to be shown on the sharing page. The "
"required_permission is optional. If given, the user must have this "
"permission to be allowed to manage the particular role."
msgstr ""

# a937bd9c7170455daf441c540157f955
#: ../develop/plone/security/local_roles.rst:72
msgid ""
"For Plone 3, there is the `collective.sharingroles "
"<https://pypi.python.org/pypi/collective.sharingroles>`_ addon. Since Plone "
"4, this is `merged into plone.app.workflow "
"<https://github.com/plone/plone.app.workflow/commit/f9991ca0cc3dd2b8a2c392c145f44c21996eac67>`_."
msgstr ""

# fb6fa66c2b854c5fba87c8d33a052d4e
#: ../develop/plone/security/local_roles.rst:77
msgid "Setting local role"
msgstr ""

# e5431c6272bf41f3a9bfa0859b6b0ec5
#: ../develop/plone/security/local_roles.rst:79
msgid ""
"``manage_setLocalRoles`` is defined in `AccessControl.Role.RoleManager "
"<http://svn.zope.org/Zope/trunk/src/AccessControl/Role.py?rev=96262&view=markup>`_."
msgstr ""

# 4d002893b6f44367a46a1297e5ef6e54
#: ../develop/plone/security/local_roles.rst:87
msgid "Getting local roles"
msgstr ""

# bbdddcd3ac7a4668b4ef4cd86fb0ea01
#: ../develop/plone/security/local_roles.rst:89
msgid ""
"The ``get_local_roles()`` method returns currently-set local roles. This "
"does not return all the *effective* roles (which may include roles acquired "
"from the parent hierarchy). ``get_local_roles_for_userid()`` returns roles "
"for a particular user as a tuple."
msgstr ""

# 6c44971970e9467aac27300d48e0142a
#: ../develop/plone/security/local_roles.rst:101
msgid "Deleting local roles"
msgstr ""

# 4253ea42730241aaa87c31f3074ae413
#: ../develop/plone/security/local_roles.rst:103
msgid ""
"``manage_delLocalRoles(userids)`` takes a *list of usernames* as argument. "
"All local roles for these users will be cleared."
msgstr ""

# fabe352bea374490b2933d1b07966de0
#: ../develop/plone/security/local_roles.rst:106
msgid ""
"The following example (``membrane``-specific) will reset local roles based "
"on external input ::"
msgstr ""

# cd45d35a2889489a8a4aead338706eae
#: ../develop/plone/security/local_roles.rst:145
msgid "Local role caching"
msgstr ""

# fd076fde1c14466b99a3683e6671428d
#: ../develop/plone/security/local_roles.rst:147
msgid ""
"Resolving effective local roles is a cumbersome operation, so the result is "
"cached."
msgstr ""

# 0285dd2feecd4f15a0e548fd3e0f59c7
#: ../develop/plone/security/local_roles.rst:150
msgid ""
"**Unit testers**: Local roles are cached per request. You need to clear this"
" cache after modifying an object's local roles or switching user if you want"
" to get proper readings."
msgstr ""

# 490b761e747945d0adef01c14c0e3585
#: ../develop/plone/security/local_roles.rst:154
msgid "Unit test example method::"
msgstr ""

# 62aaff0d88b743e8a3e03d65abf48456
#: ../develop/plone/security/local_roles.rst:169
msgid "Debugging"
msgstr ""

# 51a562d316cc4326ab816dcb326c32aa
#: ../develop/plone/security/local_roles.rst:171
msgid ""
"Set your breakpoint in "
"``Products.PlonePAS.plugins.local_role.LocalRolesManager.getRolesInContext()``"
" and "
"``Products.PlonePAS.plugins.role.GroupAwareRoleManager.getRolesForPrincipal()``."
" There you see how roles for a given context are being resolved."
msgstr ""

# 0f0063cf05a141fe92ca6c65749b8b78
#: ../develop/plone/security/local_roles.rst:175
msgid "Check the ``acl_users.portal_role_manager`` tool via the :term:`ZMI`."
msgstr ""

# 4b4f77ba3810463a9e08a22f93ed3368
#: ../develop/plone/security/local_roles.rst:177
msgid ""
"Please see the `zopyx.plone.cassandra "
"<https://pypi.python.org/pypi/zopyx.plone.cassandra>`_ add-on product."
msgstr ""

# 5c32a084d9d84272b8f7ddde68cb9e3d
#: ../develop/plone/security/local_roles.rst:182
msgid ""
"http://toutpt.wordpress.com/2009/03/14/plone-and-local-roles-too-quiet/"
msgstr ""

# 2376e730e1bd462f85711eefccbe4c47
#: ../develop/plone/security/permission_lists.rst:3
msgid "Available permissions in Plone"
msgstr ""

# 6d1234b621ac465d9aed9bc5512714ad
#: ../develop/plone/security/permission_lists.rst:7
msgid ""
"What Zope security permissions you have available for your Plone coding"
msgstr ""

# daeb1bfc07364620a61d9e33c88504aa
#: ../develop/plone/security/permission_lists.rst:12
msgid "Listing different available permissions"
msgstr ""

# 7bff14cacc5049899b0907b9a900b7b5
#: ../develop/plone/security/permission_lists.rst:14
msgid "Each permission name is a string."
msgstr ""

# 5335c89fa1904df0aa02c69cecaaf095
#: ../develop/plone/security/permission_lists.rst:16
msgid ""
"To see available permissions, click Security tab at your site root in Zope "
"Management Interface."
msgstr ""

# 9aafbafc1ff94d148d677170a3f20865
#: ../develop/plone/security/permission_lists.rst:18
msgid ""
"In programming, use pseudoconstants instead of permission string values:"
msgstr ""

# 142f0c9caa9a49c0a9b5e5a85bc567ec
#: ../develop/plone/security/permission_lists.rst:20
msgid ""
"See `CMFCore.permissions "
"<http://svn.zope.org/Products.CMFCore/trunk/Products/CMFCore/permissions.py?rev=94487&view=markup>`_"
msgstr ""

# 14e8bfb62bc5427289039a9714c9c77d
#: ../develop/plone/security/permission_lists.rst:22
msgid ""
"See `AccessControl.Permissions "
"<http://svn.zope.org/Zope/trunk/src/AccessControl/Permissions.py?rev=96262&view=markup>`_"
msgstr ""

# bf83e948e62c4f8bbdcca1819dc0ac62
#: ../develop/plone/security/permission_lists.rst:24
msgid "For available ZCML permission mappings see:"
msgstr ""

# 2e20aa9e659b4ceda317898dbfc7ff14
#: ../develop/plone/security/permission_lists.rst:26
msgid ""
"`Products/Five/permissions.zcml "
"<http://svn.zope.org/Zope/trunk/src/Products/Five/permissions.zcml?rev=99146&view=markup>`_"
msgstr ""

# 81ace9c339204f63b15073e1a307728d
#: ../develop/plone/security/permission_lists.rst:28
msgid "Permissions such as ``cmf.ModifyPortalContent``, ``zope2.View``"
msgstr ""

# 91bca2057e56465187ad0e754d174d19
#: ../develop/plone/security/permission_lists.rst:30
msgid ""
"`zope/security/permissions.zcml "
"<http://svn.zope.org/zope.security/trunk/src/zope/security/permissions.zcml?rev=97988&view=markup>`_"
msgstr ""

# 128c418fae8f49af9a6ff657bba7ae19
#: ../develop/plone/security/permission_lists.rst:32
msgid "``zope.Public``"
msgstr ""

# 9c879198988d4e2a9d7ad084bd5a4354
#: ../develop/plone/security/permission_lists.rst:34
msgid ""
"or search for the string ``<permission`` in ``*.zcml`` files in the *eggs* "
"folder of your Plone development deployment."
msgstr ""

# 70e4a1c46a2947bb9d64dd5799bb9217
#: ../develop/plone/security/permission_lists.rst:37
msgid "Example using UNIX grep tool:"
msgstr ""

# 6494c0d6a8db446cbc9263aeb075df45
#: ../develop/plone/security/permission_lists.rst:44
msgid "Useful permissions"
msgstr ""

# 0565b236ce5f4ea991a83edafdb80d3c
#: ../develop/plone/security/permission_lists.rst:46
msgid "Permissions are shown by their verbose name in the :term:`ZMI`."
msgstr ""

# 98deebfae9fd44ae9291959ef7ff976e
#: ../develop/plone/security/permission_lists.rst:48
msgid "``View``"
msgstr ""

# 2730c983b5b84970887fcdf2689f4ed8
#: ../develop/plone/security/permission_lists.rst:49
msgid "This governs whether you are allowed to view some content."
msgstr ""

# 4874554b1447429f9cb25b2e9577b6b3
#: ../develop/plone/security/permission_lists.rst:53
msgid "``Access Contents Information``"
msgstr ""

# b53d3135b89b4c9dab1092ca57254b46
#: ../develop/plone/security/permission_lists.rst:51
msgid ""
"This permission allows access to an object, without necessarily viewing the "
"object. For example, a user may want to see the object's title in a list of "
"results, even though the user can't view the contents of that file."
msgstr ""

# 5bcd983b9ee24781a08dc866f4d2ab79
#: ../develop/plone/security/permission_lists.rst:56
msgid "``List folder contents``"
msgstr ""

# a25a54e4470d45aca002b918a5ecdfe5
#: ../develop/plone/security/permission_lists.rst:56
msgid ""
"This governs whether you can get a listing of the contents of a folder; it "
"doesn't check whether you have the right to view the objects listed."
msgstr ""

# d4b3dc985809419c826ab943a58c95da
#: ../develop/plone/security/permission_lists.rst:58
msgid "``Modify Portal Content``"
msgstr ""

# f41cb5309f4b466d9026346cac339a96
#: ../develop/plone/security/permission_lists.rst:59
msgid "This governs whether you are allowed to modify some content."
msgstr ""

# 040a24085bd742b69f2d84dd01c37376
#: ../develop/plone/security/permission_lists.rst:63
msgid "``Manage Portal``"
msgstr ""

# 9322b46ec44d450da1482cc0dc34e61c
#: ../develop/plone/security/permission_lists.rst:61
msgid ""
"This permission allows you to manage the portal. A number of views in the "
"plone control panel are protected with this view. If you plan to write a "
"reusable product, be very hesitant to use this permission, check whether a "
"custom permission might make more sense."
msgstr ""

# 1eacf10d7b1d4ebfbdcdd2c35d6ba534
#: ../develop/plone/security/permission_lists.rst:65
msgid ""
"There is no single permission for adding content. Every content type has its"
" own permission. If you create your own content type, create a custom add "
"permission for it."
msgstr ""

# b8bc32fba2ee4c08ad056a929e4201c8
#: ../develop/plone/security/permission_lists.rst:71
msgid "Permission name"
msgstr ""

# de7d506569c74391943c46fbfba216c7
#: ../develop/plone/security/permission_lists.rst:71
msgid "Permission name for ZCML"
msgstr ""

# 9e63fcff07344cab910a8c8223503b82
#: ../develop/plone/security/permission_lists.rst:73
msgid "View"
msgstr ""

# e992f7d458e84526ba9123bf14c643ad
#: ../develop/plone/security/permission_lists.rst:73
msgid "zope2.View"
msgstr ""

# d181e9b93c2642e6a25c0ddcda13572f
#: ../develop/plone/security/permission_lists.rst:74
msgid "Access contents information"
msgstr ""

# f82bf9f32d05492d8b88c287633f0db8
#: ../develop/plone/security/permission_lists.rst:74
msgid "zope2.AccessContentsInformation"
msgstr ""

# 9d300c00565a49e8a43999184a30b217
#: ../develop/plone/security/permission_lists.rst:75
msgid "List folder contents"
msgstr ""

# ad9b4b26f9894e3ba3d81d2e3a14fe54
#: ../develop/plone/security/permission_lists.rst:75
msgid "cmf.ListFolderContents"
msgstr ""

# cf71ddcef6524fe2bfbbdd0ea54b15fe
#: ../develop/plone/security/permission_lists.rst:76
msgid "Modify portal content"
msgstr ""

# 74f23fae4b5f4c81ac830609af411c48
#: ../develop/plone/security/permission_lists.rst:76
msgid "cmf.ModifyPortalContent"
msgstr ""

# 66f4074ea723493f8016a935b8a25840
#: ../develop/plone/security/permission_lists.rst:77
msgid "Manage portal"
msgstr ""

# 905a3ed41fe44c07a3fc1b9dc41ed553
#: ../develop/plone/security/permission_lists.rst:77
msgid "cmf.ManagePortal"
msgstr ""

# 585833103eea426d846d462326306d91
#: ../develop/plone/security/permission_lists.rst:80
msgid ""
"To reference a permission in code, you need the name as a string. Using "
"strings is a bad convention, all common permissions have a constant in "
"Products.CMFCore.permissions. So to perform a permission check propery, you "
"do something like this::"
msgstr ""

# 9c0a9df754cd45e3b2feab68291c7223
#: ../develop/plone/security/permission_lists.rst:91
msgid ""
"All standard permissions from above can be referenced by their Permission "
"name without spaces."
msgstr ""

# 7249eb8e0d7544a5a492d10855b93584
#: ../develop/plone/security/permission_lists.rst:95
msgid "http://markmail.org/thread/3izsoh2ligthfcou"
msgstr ""

# 207aa45d3a2447dea59c83dab3c4ef67
#: ../develop/plone/security/permissions.rst:7
msgid ""
"How to deal with permissions making your code permission-aware in Plone"
msgstr ""

# cb66e208f38243939277043988b93df6
#: ../develop/plone/security/permissions.rst:14
msgid ""
"Permissions control whether logged-in or anonymous users can execute code "
"and access content."
msgstr ""

# cf928f01de2e4a409a489d1db0cc6361
#: ../develop/plone/security/permissions.rst:17
msgid ""
"Permissions in Plone are managed by `Zope's AccessControl module "
"<http://svn.zope.org/AccessControl/trunk/src/AccessControl/>`_. Persistent "
"permission setting and getting by role heavy lifting is done by "
"`AccessControl.rolemanager.RoleManager "
"<http://svn.zope.org/AccessControl/trunk/src/AccessControl/rolemanager.py?view=auto>`_."
msgstr ""

# 11309f208bf0423abf0c197c9d3c2e7f
#: ../develop/plone/security/permissions.rst:22
msgid "Permission checks are done for:"
msgstr ""

# 2c0ee64877b34cf1a1cb1d48acadec53
#: ../develop/plone/security/permissions.rst:24
msgid ""
"every view/method which is hit by incoming HTTP request (Plone automatically"
" publishes traversable methods over HTTP);"
msgstr ""

# f369655b80cf4f91be9c84e730fd2909
#: ../develop/plone/security/permissions.rst:27
msgid ""
"every called method for :doc:`RestrictedPython scripts "
"</develop/plone/security/sandboxing>`."
msgstr ""

# 5875df32ff2a4e6e8dfa43f9cf999d63
#: ../develop/plone/security/permissions.rst:30
msgid ""
"The basic way of dealing with permissions is setting the ``permission`` "
"attribute of view declaration. For more information see :doc:`views "
"</develop/plone/views/browserviews>`."
msgstr ""

# 8ec662329eda4eb0845ac9db13e7df14
#: ../develop/plone/security/permissions.rst:35
msgid "Debugging permission errors: Verbose Security"
msgstr ""

# 4327409a81f24c39bc53845a2adadfb2
#: ../develop/plone/security/permissions.rst:37
msgid ""
"You can turn on ``verbose-security`` option in buildout to get better "
"traceback info when you encounter a permission problem on the site (you are "
"presented a login dialog)."
msgstr ""

# beca2fde690748baa7426a719667f201
#: ../develop/plone/security/permissions.rst:40
msgid "For the security reasons, this option is disabled by default."
msgstr ""

# a34c167e7ab64f2892100aa833ab5ef5
#: ../develop/plone/security/permissions.rst:42
msgid ""
"Set ``verbose-security = on`` in your buildout.cfg ``instance`` or related "
"section."
msgstr ""

# 6f903e4b96614c238fa42658fca7db13
#: ../develop/plone/security/permissions.rst:44
msgid "Rerun buildout"
msgstr ""

# 7479e59b68b34d4583c21f5611b44f75
#: ../develop/plone/security/permissions.rst:46
msgid ""
"Restart Plone properly after buildout ``bin/plonectl stop && bin/plonectl "
"start``"
msgstr ""

# 4e95acd40bc14fe589ef96c80b8f86e2
#: ../develop/plone/security/permissions.rst:48
msgid ""
"remove the ``Unauthorized`` exception from the list of ignored exceptions "
"inside the ``error_log`` object within the Plone root folder through the ZMI"
msgstr ""

# 60e0fdfdc3044fffa057f81af2dc7e24
#: ../develop/plone/security/permissions.rst:53
msgid "https://pypi.python.org/pypi/plone.recipe.zope2instance"
msgstr ""

# 6627dacc8a104c429f3b1f4a1920b992
#: ../develop/plone/security/permissions.rst:56
msgid "Checking if the logged-in user has a permission"
msgstr ""

# 0d2d8df4496341489c9aabe06fcd85a6
#: ../develop/plone/security/permissions.rst:58
msgid ""
"The following code checks whether the logged in user has a certain "
"permission for some object."
msgstr ""

# b74cbba36d0e462a858c259fe02974c2
#: ../develop/plone/security/permissions.rst:81
msgid "Checking whether a specific role has a permission"
msgstr ""

# 43ff14db68204364a63c645f151ac762
#: ../develop/plone/security/permissions.rst:83
msgid ""
"The following example uses the ``rolesOfPermission()`` method to check "
"whether the *Authenticated* role has a permission on a certain folder on the"
" site. The weirdness of the method interface is explained by the fact that "
"it was written for use in a :term:`ZMI` template::"
msgstr ""

# 1f4eef54165643579afa647f2a40ebe4
#: ../develop/plone/security/permissions.rst:108
msgid "Permission Access"
msgstr ""

# d5b2a2438b5e4d4aae718045fc73237d
#: ../develop/plone/security/permissions.rst:110
msgid ""
"Objects that are manageable :term:`TTW` inherit from `RoleManager  "
"<http://api.plone.org/CMF/1.5.4/private/AccessControl.Role.RoleManager-"
"class.html>`_. The API provided by this class permits you to manage "
"permissions."
msgstr ""

# b556e06f50954cffa87d57222ff3c786
#: ../develop/plone/security/permissions.rst:114
msgid "Example: see all possible permissions::"
msgstr ""

# ced776e3ce0243b296b1a17815d09ca0
#: ../develop/plone/security/permissions.rst:122
msgid "Show the security matrix of permission::"
msgstr ""

# 960590000faa441693e0e5f2a25b8b67
#: ../develop/plone/security/permissions.rst:145
msgid "Bypassing permission checks"
msgstr ""

# 0d85dc49d4a94d44a9ba0f9096c5d43d
#: ../develop/plone/security/permissions.rst:147
msgid ""
"The current user is defined by active security manager. During both "
"restricted and unrestricted execution certain functions may do their own "
"security checks (``invokeFactory``, workflow, search) to filter out results."
msgstr ""

# 30a6de2ef8974ca190f87faa635e2223
#: ../develop/plone/security/permissions.rst:153
msgid ""
"If a function does its own security checks, there is usually a code path "
"that will execute without security check. For example the methods below have"
" security-aware and raw versions:"
msgstr ""

# 6bb0d62d69ca480796da0def90eed75e
#: ../develop/plone/security/permissions.rst:157
msgid ""
"``context.restrictedTraverse()`` vs. ``context.unrestrictedTraverse()``"
msgstr ""

# 4b4f6ea9f7974ffebd385eece623c300
#: ../develop/plone/security/permissions.rst:159
msgid ""
"``portal_catalog.searchResults()`` vs. "
"``portal_catalog.unrestrictedSearchResults()``"
msgstr ""

# b35f97ff03154941b99ae759dc4cda6e
#: ../develop/plone/security/permissions.rst:161
msgid ""
"However, in certain situations you have only a security-aware code path "
"which is blocked for the current user. You still want to execute this code "
"path and you are sure that it does not violate your site security "
"principles."
msgstr ""

# bfed1da9f6b74164a9e4ebf3e8902d28
#: ../develop/plone/security/permissions.rst:166
msgid ""
"Below is an example how you can call any Python function and work around the"
" security checks by establishing a temporary "
"``AccessControl.SecurityManager`` with a special role."
msgstr ""

# c89b036e10a541568765dc3ccf708a2f
#: ../develop/plone/security/permissions.rst:232
msgid "For a more complete implementation of this technique, see:"
msgstr ""

# 698f57b6759e4760a98e68baba04082b
#: ../develop/plone/security/permissions.rst:234
msgid ""
"http://github.com/ned14/Easyshop/blob/master/src/easyshop.order/easyshop/order/adapters/order_management.py"
msgstr ""

# 7c73e1305c9b458e843b517b68ce1943
#: ../develop/plone/security/permissions.rst:237
msgid "Catching ``Unauthorized``"
msgstr ""

# d7029bb8d1e849c2ab5b641c8df02549
#: ../develop/plone/security/permissions.rst:239
msgid "Gracefully failing when the user does not have a permission. Example::"
msgstr ""

# 59f9e11406944105a151c487085efa4b
#: ../develop/plone/security/permissions.rst:251
msgid "Creating permissions"
msgstr ""

# e94792e8889e48be9a0295a9333a0eb2
#: ../develop/plone/security/permissions.rst:253
msgid ""
"Permissions are created declaratively in :term:`ZCML`. Before Zope 2.12 "
"(that is, before Plone 4), the `collective.autopermission`_ package was "
"required to enable this, but now it is standard behaviour."
msgstr ""

# cadc6e84221a4f5e868a18ec52690568
#: ../develop/plone/security/permissions.rst:260
msgid ""
"http://n2.nabble.com/creating-and-using-your-own-permissions-in-"
"Plone-3-tp339972p1498626.html"
msgstr ""

# 1a2a4c3aa00f4262ab2240e923f4e996
#: ../develop/plone/security/permissions.rst:262
msgid ""
"http://blog.fourdigits.nl/adding-zope-2-permissions-using-just-zcml-and-a"
"-generic-setup-profile"
msgstr ""

# a7a159df898441b4a5ee94a9aa4c0386
#: ../develop/plone/security/permissions.rst:288
msgid ""
"Now you can use the permission both as a Zope 2-style permission "
"(``MyProduct: MyPermission``) or a Zope 3-style permission "
"(``myproduct.mypermission``). The only disadvantage is that you can't import"
" the permission string as a variable from a ``permissions.py`` file, as you "
"can with permissions defined programmatically."
msgstr ""

# 026f63db975044369ea6e805dec569bf
#: ../develop/plone/security/permissions.rst:295
msgid ""
"By convention, the permission id is prefixed with the name of the package "
"it's defined in, and uses lowercase only. You have to take care that the "
"title matches the permission string you used in ``permissions.py`` exactly "
"--- otherwise a different, Zope 3 only, permission is registered."
msgstr ""

# 3bec3a4eef2d4977b2d081bd23a8d256
#: ../develop/plone/security/permissions.rst:301
msgid ""
"Zope 3 style permissions are necessary when using Zope 3 technologies such "
"as ``BrowserViews/formlib/z3c.form``. For example, from ``configure.zcml``:"
msgstr ""

# bcdd81ba58134dcfb39986032c8ec511
#: ../develop/plone/security/permissions.rst:325
msgid "Define Zope 2 permissions in Python code (old style)"
msgstr ""

# 31134d277a684a9e9b079fe24688432b
#: ../develop/plone/security/permissions.rst:327
msgid ""
"If you want to protect certain actions in your product by a special "
"permission, you most likely will want to assign this permission to a role "
"when the product is installed. You will want to use Generic Setup's "
"``rolemap.xml`` to assign these permissions.  A new permission will be added"
" to the Zope instance by calling ``setDefaultRoles`` on it."
msgstr ""

# a0cf3f0180b440729498e9f8d2d5cffd
#: ../develop/plone/security/permissions.rst:334
msgid ""
"However, at the time when Generic Setup is run, almost none of your code has"
" actually been run, so the permission doesn't exist yet.  That's why we "
"define the permissions in ``permissions.py``, and call this from "
"``__init__.py``:"
msgstr ""

# cb8d88f9c9c54a4baaab004e95e138f0
#: ../develop/plone/security/permissions.rst:338
msgid "``__init__.py``::"
msgstr ""

# 5cbb66b9737545bd9c9bf4b0b83f6dda
#: ../develop/plone/security/permissions.rst:342
msgid "``permissions.py``::"
msgstr ""

# da0857303c9c4bb592ad2e8fbaf171a7
#: ../develop/plone/security/permissions.rst:353
msgid ""
"When working with permissions, always use the variable name instead of the "
"string value.  This ensures that you can't make typos with the string value,"
" which are hard to debug.  If you do make a typo in the variable name, "
"you'll get an ``ImportError`` or ``NameError``."
msgstr ""

# 2af19f569f184a11949046a0484255e9
#: ../develop/plone/security/permissions.rst:360
msgid "Assigning permissions to users (roles)"
msgstr ""

# 120f5014b2914472bbdbc0596fe9abaf
#: ../develop/plone/security/permissions.rst:362
msgid ""
"Permissions are usually assigned to roles, which are assigned to users "
"through the web."
msgstr ""

# b5f6521bdfa941399a62390bd442329a
#: ../develop/plone/security/permissions.rst:365
msgid ""
"To assign a permission to a role, use ``profiles/default/rolemap.xml``:"
msgstr ""

# 6844655c479f40b4861d3f9abdc7372f
#: ../develop/plone/security/permissions.rst:380
msgid "Manually fix permission problems"
msgstr ""

# 1300df0c6e034086b93c8d0cba63be32
#: ../develop/plone/security/permissions.rst:382
msgid ""
"In the case you fiddle with permission and manage to lock out even the admin"
" user you can still fix the problem from the :doc:`debug prompt "
"</develop/plone/misc/commandline>`."
msgstr ""

# 0613df671f3f4840a3a1676c1edf19c0
#: ../develop/plone/security/permissions.rst:386
msgid ""
"Example debug session, restoring ``Access Contents Information`` for all "
"users::"
msgstr ""

# 0e2c55f5b7c5429493c4290352d8bdfc
#: ../develop/plone/security/sandboxing.rst:3
msgid "Sandboxing and RestrictedPython"
msgstr ""

# 5d8c363e8c2f4666953a922a37cae793
#: ../develop/plone/security/sandboxing.rst:7
msgid ""
"Legacy Plone code uses RestrictedPython sandboxing to secure each module and"
" class functions. This documentation tells how it happens."
msgstr ""

# 7207b41ce4bc415a90cbec501908fc45
#: ../develop/plone/security/sandboxing.rst:16
msgid "Plone has two sandboxing modes"
msgstr ""

# 8e5281571a1b475e8d51687532691437
#: ../develop/plone/security/sandboxing.rst:18
msgid ""
"Unrestricted: Python code is executed normally and the code can access the "
"full Zope application server environment. This includes other site instances"
" too. This is generally what happens when you write your own add-on and add "
"views for it."
msgstr ""

# 2385cb3a52c646e9ab2be2de7bbfac66
#: ../develop/plone/security/sandboxing.rst:23
msgid ""
"Restricted (RestrictedPython): scripts and evalutions are specially "
"compiled, have limited Python language functionality and every function call"
" is checked against the security manager. This is what happens when you try "
"to add Python code or customize page templates through Zope Management "
"Interface."
msgstr ""

# 6bafb866d9e74fd0895b08fd6919f5ee
#: ../develop/plone/security/sandboxing.rst:28
msgid ""
"Restricted execution is enabled only for **through-the-web** scripts and "
"**legacy code**:"
msgstr ""

# fec2c80e323b413cb2e6b36394bccf1c
#: ../develop/plone/security/sandboxing.rst:30
msgid ""
"Old style TAL page templates: everything you put inside page template "
"tal:content, tal:condition, etc. These templates are .pt templates "
"**without** accomppaning BrowserView"
msgstr ""

# ae928320beb94a7089adcf5063033f75
#: ../develop/plone/security/sandboxing.rst:34
msgid ""
"Script (Python) code is executed (plone_skins layer Python scripts and old "
"style form management)"
msgstr ""

# 03b58fe798454708848636d2d6d87746
#: ../develop/plone/security/sandboxing.rst:38
msgid ""
"RestrictedPython was bad idea and mostly causes headache. Avoid through-the-"
"web Zope scripts if possible."
msgstr ""

# 2a2bcf9bccbd413da02dc207aa1678a5
#: ../develop/plone/security/sandboxing.rst:41
msgid "For further information, read"
msgstr ""

# c0cc62f77b4543c1b243effc83a9a077
#: ../develop/plone/security/sandboxing.rst:43
msgid ""
"http://plone.293351.n2.nabble.com/Update-was-Plone-4-Chameleon-"
"compatibility-tp5612838p5614466.html"
msgstr ""

# 765c935401cf411193e61afb311b8cf6
#: ../develop/plone/security/sandboxing.rst:46
msgid "Whitelisting modules for RestrictedPython import"
msgstr ""

# 85e9de7385dd438083389c90bc1d9c06
#: ../develop/plone/security/sandboxing.rst:48
msgid ""
"http://plone.org/documentation/kb/using-unauthorized-modules-in-scripts"
msgstr ""

# a261602c5a7e435cb460ded6b6a81a8b
#: ../develop/plone/security/sandboxing.rst:51
msgid "Traversing special cases"
msgstr ""

# 8d10d90dfca547ffaa8c6f18bfe8b6ca
#: ../develop/plone/security/sandboxing.rst:53
msgid "Old style Zope object traversing mechanism does not expose"
msgstr ""

# 22bff5ff0ef8461f83c83879d311c4d7
#: ../develop/plone/security/sandboxing.rst:55
msgid ""
"Functions without docstring (the \"\"\" comment at the beginning of the "
"function)"
msgstr ""

# 5c0d94e544404567b12481bb767878b3
#: ../develop/plone/security/sandboxing.rst:57
msgid "Functions whose name begins with underscore (\"_\"-character)"
msgstr ""

# c178d86f2fed4ea88e5bdb5273fd80da
#: ../develop/plone/security/sandboxing.rst:60
msgid "Unit testing RestrictedPython code"
msgstr ""

# 5e6fbfb046384ab081fa77355ee85049
#: ../develop/plone/security/sandboxing.rst:62
msgid ""
"RestrictedPython_ code is problematic, because RestrictedPython hardening is"
" done on Abstract Syntax Tree level and effectively means all evaluated code"
" must be available in the source code form. This makes testing "
"RestrictedPython code little difficult."
msgstr ""

# 0438ab0f4a9641608d19ae667a1b87d5
#: ../develop/plone/security/sandboxing.rst:66
msgid "Below are few useful unit test functions::"
msgstr ""

# 1c4359670fc44b3f845971b8d85c6735
#: ../develop/plone/security/sandboxing.rst:153
msgid "Other references"
msgstr ""

# a4e75f9bdfa5402fabdc1641927e674a
#: ../develop/plone/security/sandboxing.rst:155
msgid "`zope.security <https://pypi.python.org/pypi/zope.security>`_"
msgstr ""

# a872c99bf4d746beabbeca2452d53132
#: ../develop/plone/security/selinux.rst:3
msgid "Using SELinux with Plone"
msgstr ""

# ed8514e2763b4792ba7182996c85578e
#: ../develop/plone/security/selinux.rst:7
msgid ""
"Tutorial on using SELinux with Plone, using Plone 4.3 and RedHat Linux 6.3."
msgstr ""

# cd1545c9d7454993924cbca4a5a68100
#: ../develop/plone/security/selinux.rst:14
msgid ""
"This document is a tutorial on using SELinux with Plone, using RedHat Linux "
"6.3 and Plone 4.3. It is applicable to any Linux distribution with small "
"changes."
msgstr ""

# b6fa1bcabf5c4986ad43e04dd3b18c5f
#: ../develop/plone/security/selinux.rst:17
msgid "About SELinux"
msgstr ""

# a9dfa501a60c409fa82fbf8c81fb0c7d
#: ../develop/plone/security/selinux.rst:19
msgid ""
"SELinux is a mandatory access control system, meaning that SELinux assigns "
"security *contexts* (presented by *labels*) to system resources, and allows "
"access only to the processes that have defined required levels of "
"authorization to the contexts. In other words, SELinux maintains that "
"certain *target* executables (having security contexts) can access (level of"
" access being defined explicitly) only certain files (having again security "
"context labels). In essence the contexts are roles, which makes SELinux a "
"Role Based Access Control system. It should be noted that even root is "
"usually just an ordinary user for RBAC systems, and will be contained like "
"any other user."
msgstr ""

# ef8f0516e6444f5796e9cf3fac085c82
#: ../develop/plone/security/selinux.rst:21
msgid ""
"The concept of contexts and labels can be slightly confusing at first. It "
"stems from the idea of chain of trust. A system that upholds that proper "
"authorization checks are being done is worthless if the system allows moving"
" the protected data to a place that does not have similar authorization "
"checks. Context labels are file system attributes, and when the file is "
"moved around the label (representing context) moves with the file. The "
"system is supposed to limit where the information can be moved, and the "
"contexts can be extended beyond file system (ie. labels on rows in database "
"systems), building complete information systems that will never hand over "
"data to a party that is unable (or unwilling) to take care of it."
msgstr ""

# ef377d03660c4d82baa714257b8fe6bc
#: ../develop/plone/security/selinux.rst:23
msgid ""
"Most SELinux policies *target* an executable, and define the contexts "
"(usually applied with labels to files) it can access by using *type "
"enforcement rules*. However there are also *capabilities* that control more "
"advanced features such as the ability to execute heap or stack, setuid, fork"
" process, bind into ports, or open TCP sockets. Most of the capabilities and"
" macros come from reference policy, which offers policy developers ready "
"solutions to most common problems. The reference policy shipped by Linux "
"distributions contains ready rules for some 350 targets, including "
"applications like most common daemons (sshd), and system services "
"(init/systemd)."
msgstr ""

# 61c1f4c60ad34b95b267989616a5d8ac
#: ../develop/plone/security/selinux.rst:25
msgid ""
"The value of SELinux is in giving administrators fine granularity of access "
"control far beyond the usual capabilities of \\*NIX systems. This is useful "
"especially in mitigating the impact of security vulnerabilities. The most "
"apparent downside to SELinux is the high skill requirements. To understand "
"most of SELinux - and to be able to maintain it effectively with 3rd party "
"applications - requires good abstraction skills, and especially the official"
" documentation is somewhat hard to digest. SELinux was never engineered to "
"be easy for administrators. It was engineered to be able to implement "
"complex security models like Bell-LaPadula and MLS."
msgstr ""

# 15517593fede475ca702bf95fe3359b4
#: ../develop/plone/security/selinux.rst:27
msgid ""
"There have been several myths about SELinux being heavy (in reality it comes"
" with ~3% overhead), or that it breaks all applications. There used to be "
"time (years ago) when SELinux applied itself by default on everything, and "
"if the application was not included in the shipped policies it probably "
"failed miserably. Most of the application developers and companies got "
"frustrated to the situation, and started recommending that SELinux should "
"always be disabled. Things have luckily changed drastically since then. "
"Today most SELinux implementations use what is called *targeted policy*, "
"which means that SELinux affects only applications that have explicit "
"policies. As a result SELinux does generally nothing to your 3rd party "
"applications - good or bad - until you enable it. This tutorial is meant to "
"give readers pointers on how to accomplish exactly that."
msgstr ""

# 2c1f3de1c408430097d9786bddc13169
#: ../develop/plone/security/selinux.rst:30
msgid "Creating new SELinux policy"
msgstr ""

# c4da59ba21a84c0c86bbb31939a0138b
#: ../develop/plone/security/selinux.rst:33
msgid "Prerequisities"
msgstr ""

# 62f6a2da77ed46ffa8cf85eb9510bbb3
#: ../develop/plone/security/selinux.rst:35
msgid "root access"
msgstr ""

# dfdcdba248874137ba45c7d8da54d736
#: ../develop/plone/security/selinux.rst:36
msgid ""
"Working SELinux (*sudo sestatus* reports **ENABLED**, and **enforcing**)"
msgstr ""

# 68351a0128304023b37d8bb9b9e42ccd
#: ../develop/plone/security/selinux.rst:37
msgid ""
"Preferably a system that uses *targeted policy* (see the output of previous "
"command)"
msgstr ""

# 3091f8a60d80450d9ea6ab8adace98ea
#: ../develop/plone/security/selinux.rst:38
msgid ""
"SELinux policy utilities installed (policycoreutils-python policycoreutils-"
"gui)"
msgstr ""

# 63ffb3e9950a4298a2c16535ffca29ca
#: ../develop/plone/security/selinux.rst:39
msgid "The application (in this case Plone) already installed"
msgstr ""

# 8c4b87370adf4d9fa05738f7a8d2c6d3
#: ../develop/plone/security/selinux.rst:42
msgid "Creating new policy"
msgstr ""

# 280d5c99b1e447f5acc616c8d9fa3fd1
#: ../develop/plone/security/selinux.rst:44
msgid ""
"Development starts usually by generating a policy skeleton with the "
"*sepolgen* (or sepolicy-generate) utility. It can generate several types of "
"templates, which come with a set of basic access rights. There are several "
"sepolgen versions out there, depending on the Linux distribution. The most "
"important differences between them are in the included templates. Creating "
"new policy is done with the following command: ::"
msgstr ""

# fda25b88e86c47bebe7f4d22a9923cbd
#: ../develop/plone/security/selinux.rst:48
msgid "Where the parameters are:"
msgstr ""

# ee9207ef51594fd791498c3544d599aa
#: ../develop/plone/security/selinux.rst:50
msgid ""
"**-n plone** gives the new policy name. Default is to use the name of the "
"executable, but we want to give a more generic name in this case."
msgstr ""

# fd27ccbcf54949d585b158e21d84e154
#: ../develop/plone/security/selinux.rst:51
msgid ""
"**-t 3** elects a template (\"*normal application*\") that gives some "
"commonly required access rights as a starting point"
msgstr ""

# 83959ad406d04dc7a7e7d7c77a5e6338
#: ../develop/plone/security/selinux.rst:52
msgid ""
"**/usr/local/Plone/zinstance/bin/plonectl** is the application that will get"
" a new context (*plonectl_exec_t*), which will get most of the type "
"enforcement rules."
msgstr ""

# 2822a76cf5f046db8d72d782f2bb0127
#: ../develop/plone/security/selinux.rst:54
msgid "The outcoming result will be four files:"
msgstr ""

# d99a2b2d54154009817402ef7e4ca9b6
#: ../develop/plone/security/selinux.rst:56
msgid ""
"**plone.te** Type enforcement file defining the access rules. **This file "
"contains most of the policy, and most of the rules go there.**"
msgstr ""

# 92aeef0c65d34c12991f0cebd03bfba2
#: ../develop/plone/security/selinux.rst:57
msgid ""
"**plone.if** Interface file defining what *other* policies can import from "
"your policy."
msgstr ""

# 588d444bb9ad44149ceecdd007eb9591
#: ../develop/plone/security/selinux.rst:58
msgid ""
"**plone.fc** File contexts file defining what context labels will be applied"
" to files and directories."
msgstr ""

# ddf895e4423a40759c944d4fe2f91fb4
#: ../develop/plone/security/selinux.rst:59
msgid ""
"**plone.sh** Setup script that will compile and install the policy to the "
"system configuration (both running and persistent)."
msgstr ""

# eeb00bca88fd4ae6b1ff1453e515db7e
#: ../develop/plone/security/selinux.rst:62
msgid "Labeling files"
msgstr ""

# 39b5c2cefe86409c8463dcbf3ac59a92
#: ../develop/plone/security/selinux.rst:64
msgid ""
"Before the actual development will start file context labeling rules should "
"be defined in **plone.fc**. You probably need some context (*plone_t*) for "
"all files related to Plone, context (*plone_rw_t*) with write rights to "
"*var* and the plonectl will need a context (*plonectl_exec_t*) that comes "
"with special rights. ::"
msgstr ""

# e92bb6e362b34790bf3f15a474fc97b4
#: ../develop/plone/security/selinux.rst:70
msgid ""
"The generated **plone.te** already tells SELinux what *plone_t* and "
"*plone_exec_t* are - valid file context types. The tools labeling files will"
" know what to do about them. However the *plone_rw_t* is must be introduced "
"before continuing, and the plone_t should be renamed to *plonectl_t* (to "
"describe the target better - important for managing more complex rules): ::"
msgstr ""

# c847f2b170ad4253a3706c1e546f345a
#: ../develop/plone/security/selinux.rst:77
msgid ""
"It is also a good idea to edit the restorecon commands at the end of "
"**plone.sh** to point to /usr/local/Plone and relabel all the files when the"
" policy is recompiled and installed: ::"
msgstr ""

# ed26516a8f624a98a8633e1c93ae981e
#: ../develop/plone/security/selinux.rst:82
msgid "Development process"
msgstr ""

# b606f03b80f5403fb89a8a8641c3bd2f
#: ../develop/plone/security/selinux.rst:84
msgid ""
"The basic policy development process for SELinux policies follows the "
"following pattern:"
msgstr ""

# 13ab21c4fae4438dbaff3884b0198691
#: ../develop/plone/security/selinux.rst:86
msgid "Add permissive rules"
msgstr ""

# b2e3c90bd7724e9691014cc0bc94e815
#: ../develop/plone/security/selinux.rst:87
msgid "Compile & install your policy"
msgstr ""

# eeccc8f020594076beece178c163e504
#: ../develop/plone/security/selinux.rst:88
msgid "Clear the audit logs"
msgstr ""

# bc10a3ac6bed4507966cda65d19d47be
#: ../develop/plone/security/selinux.rst:89
msgid "Run the application until it fails"
msgstr ""

# 3ed325e0e5bc4d21a397e35b31aa4f37
#: ../develop/plone/security/selinux.rst:90
msgid "Run audit2allow"
msgstr ""

# 8ed8018f0fa942f2983afc9f02239ba0
#: ../develop/plone/security/selinux.rst:91
msgid ""
"Study the output of audit2allow, and add more access rules to satisfy the "
"application"
msgstr ""

# 9ec57bf64cd2459ebf8ccce974cca34c
#: ../develop/plone/security/selinux.rst:92
msgid "Repeat from step 2 until everything works"
msgstr ""

# 0a73ecd03a694b9d8579a40453295c7f
#: ../develop/plone/security/selinux.rst:93
msgid "Remove permissive rules"
msgstr ""

# 1c31b56b1199458499768369c2474390
#: ../develop/plone/security/selinux.rst:96
msgid "Permissive rules"
msgstr ""

# 1d6eeb5372774397bc4117fe35100a05
#: ../develop/plone/security/selinux.rst:98
msgid ""
"Most applications require largish amount of rules just to start properly. To"
" reach a working set of rules faster you can switch your contexts to "
"permissive mode by editing the *PlonePython.te*: ::"
msgstr ""

# 5f8f4e98e60545b6a76d1bf7e4e1375f
#: ../develop/plone/security/selinux.rst:108
msgid ""
"Permissive in SELinux means that all actions by mentioned contexts will be "
"allowed to process, and the incidents (*access vector denials*) will be only"
" logged. This will allows to gather rules faster than going through the "
"complete development cycle."
msgstr ""

# d474b67117fb4dd69f3f8a43af1997a1
#: ../develop/plone/security/selinux.rst:111
msgid ""
"Please note that permissive rules have to be removed at some point, or the "
"policy will **not** protect the application as expected."
msgstr ""

# 9d78f930a59b4e87b7bc67459c31c45a
#: ../develop/plone/security/selinux.rst:114
msgid "Using audit2allow"
msgstr ""

# 4094f522723f4e34bcd90fb6a58309b4
#: ../develop/plone/security/selinux.rst:116
msgid ""
"Audit2allow can search both dmesg and the system audit logs for access "
"vector cache denials, and build suggestions based on them. Because the "
"output will be more understandable without extra noise, it is recommendable "
"to clear audit log between development cycles. Since it is probably not a "
"good idea to clear dmesg, it is suggested that you clear the system audit "
"logs, and instruct audit2allow to use them as source, for example: ::"
msgstr ""

# b19304abb7a34d4c9fd1781911ad2cc6
#: ../develop/plone/security/selinux.rst:122
msgid "There are couple useful parameters for running audit2allow:"
msgstr ""

# d40f2374fa5a4344a0c58f3f8dab2b13
#: ../develop/plone/security/selinux.rst:124
msgid "*-r* adds requires (\"imports\" from other policies) to the output"
msgstr ""

# a509111301194c83adb6226cefc04d72
#: ../develop/plone/security/selinux.rst:125
msgid ""
"*-R* makes audit2allow suggest compatible macros from other available "
"policies. Macros contain often more lenient access rules, but they also "
"reduce the amount of required rules. Using them will make the policy "
"slightly more platform dependent, but easier to maintain."
msgstr ""

# 1fa4e96e9aba47a9837a4e8c880744da
#: ../develop/plone/security/selinux.rst:126
msgid ""
"*-i /var/log/audit/audit.log* makes only to audit logs to be evaluated for "
"rules"
msgstr ""

# 8ecd7dc7019d425fbe1ed7e29e312cee
#: ../develop/plone/security/selinux.rst:129
msgid ""
"Always when in trouble, and you suspect access vector cache denial, use "
"audit2allow. If you can't figure out what is going on, also check out the "
"output of *audit2why*, similar tool that produces more human readable "
"reasons why access was denied. Beware though, audit2why is somewhat heavy."
msgstr ""

# d5c7e9223d10404994a8b0627767169b
#: ../develop/plone/security/selinux.rst:132
msgid "Example type enforcement rules"
msgstr ""

# 9382620f1aa54a3f94bd81d8b376db15
#: ../develop/plone/security/selinux.rst:134
msgid ""
"SELinux rules are actually quite simple. For instance the following rule "
"tells to *allow* the process that has context *plonectl_exec_t* access to "
"most common temporary files (*tmp_t*, defined in the reference policy), and "
"the level of access will allow it most of the things that are usually done "
"to files (but not all, for instance *setattr* is missing): ::"
msgstr ""

# 6438a9a1451e4106a8f77871c6c47321
#: ../develop/plone/security/selinux.rst:138
msgid ""
"For the previous to be usable the *tmp_t* and *file* have to be introduced "
"to the compiler, that will search for them from the other available "
"policies. Type is a grouping item that will usually point to a security "
"context (labeled files), while classes define what access types (ie. "
"getattr) can are available for the type. The term *type enforcement rule* "
"comes from the fact that SELinux rules define who can do what to the objects"
" that are linked to types. ::"
msgstr ""

# 418eea819d9544d6afe3a2f55e57f6d4
#: ../develop/plone/security/selinux.rst:145
msgid ""
"There are also macros that will help in accomplishing more complex tasks. "
"The following macro will give the executable right to bind to 8080/TCP: ::"
msgstr ""

# 33518bd4f8cd4b40b38d1179ab060341
#: ../develop/plone/security/selinux.rst:149
msgid ""
"To get an idea about what items are available the `Reference policy API "
"documentation <http://oss.tresys.com/docs/refpolicy/api/>`_ is the place go "
"to."
msgstr ""

# d1c6543621bc4da7b8ba6a5090638b6b
#: ../develop/plone/security/selinux.rst:154
msgid ""
"First of all, audit2allow is not a silver bullet. There are cases where your"
" application accesses something that it does not really require for "
"operation, for instance to scan your system for automatic configuration of "
"services. There are also cases where it prints nothing yet the application "
"clearly is denied access to something. That can be caused by *dontaudit* "
"rules, which silence logging of events that could generate too much noise. "
"In any case a healthy amount of criticism should be applied to everything "
"audit2allow output, especially when the suggested rules would give access "
"rights to outside application directories."
msgstr ""

# 7babb8c7bc2442d987392ee42843e815
#: ../develop/plone/security/selinux.rst:156
msgid ""
"Misconfiguration can cause either file labeling to fail, or the application "
"process not to get transitioned to proper executing context. If it seems "
"that the policy is doing nothing, check that the files are labeled correctly"
" (`ls -lFZ`), and the process is running in the correct context (`ps -efZ`)."
msgstr ""

# a2045b68224347da87c1caaef56f6337
#: ../develop/plone/security/selinux.rst:158
msgid ""
"Evaluating the file context rules (fules and their labels) is managed by a "
"heurestic algorithm, which gives precedence to more specific rules by "
"evaluating the length and precision of the path patterns. The patterns are "
"easy for beginner to misconfigure. When suspecting that the file context "
"rules are not getting applied correctly, always investigate `semanage "
"fcontext -l` to see what rules match your files."
msgstr ""

# 0f4da3596f344b68b975863c4bb2cdee
#: ../develop/plone/security/selinux.rst:161
msgid "Policies for Plone"
msgstr ""

# 4dabf6be06f943bf9f62cf28a2e82fc8
#: ../develop/plone/security/selinux.rst:163
msgid ""
"The following contains results of ordinary \"install, test & break, add "
"rules, repeat from beginning\" development cycle for a basic Plone SELinux "
"policy."
msgstr ""

# 6a7c93065afb4d26bbcf6e7bf53c142c
#: ../develop/plone/security/selinux.rst:166
msgid "Relabeling rights"
msgstr ""

# 6df57e5bcddc4b528c760aeea34f5cec
#: ../develop/plone/security/selinux.rst:168
msgid ""
"By default you might not have the right to give any of new security labels "
"to files, and *restorecon* may throw permission denied errors. To give the "
"SELinux utilities (using the context *setfiles_t*) the right to change the "
"security context based on the new types add the following rules: ::"
msgstr ""

# a8946794378648b2bff04ba4a310d4a6
#: ../develop/plone/security/selinux.rst:191
msgid ""
"If the transition is not done, the application will keep running in the "
"starting user's original context. Most likely that will be unconfined_t, "
"which means no SELinux restrictions will be applied to the process."
msgstr ""

# a44b40dd7cc44c5f96359723f30574cb
#: ../develop/plone/security/selinux.rst:194
msgid "Transition to context"
msgstr ""

# ceb5327d9376490696d8b780de0611d4
#: ../develop/plone/security/selinux.rst:196
msgid ""
"When you first run Plone (ie. \"plonectl fg\"), you will notice that it "
"doesn't run, complaining about bad interpreter. Audit2allow will instruct to"
" give rights to your uncontained_t context to run the python interpreter. "
"This is however wrong. You wish to first instruct SELinux to change the "
"process always to the new context (*plonectl_exec_t*) when the application "
"is run. You also wish to have the necessary rights to execute the "
"application so that the context transition can start: ::"
msgstr ""

# 67dcc5e478884b3998211364caa4bf89
#: ../develop/plone/security/selinux.rst:214
msgid ""
"Later when enough rules are in place for the application to run take a look "
"at the process context to see that the transitioning to *plonectl_exec_t* "
"works: ::"
msgstr ""

# 1f38513370744661b2ed903e277ceb13
#: ../develop/plone/security/selinux.rst:221
msgid "Common process requirements"
msgstr ""

# a9503647fb8149d1b30c80b12b4f744d
#: ../develop/plone/security/selinux.rst:223
msgid ""
"In order for any \\*NIX process to work some basic requirements must be met."
" Applications require for instance access to /dev/null, and PTYs: ::"
msgstr ""

# 2ed91bad573c4380b9983e7bac5e69f5
#: ../develop/plone/security/selinux.rst:234
msgid "Zope/PLONE"
msgstr ""

# 8abac5a32bbc47808dc6aea43373cb54
#: ../develop/plone/security/selinux.rst:236
msgid ""
"After running the plonectl commands (fg, start, stop) several times, and "
"adding the required rules you should end up with something like following. "
"First you will have a large amount of require stanzas for the rule compiler,"
" and then an intermediate amount of rules: ::"
msgstr ""

# 5f76873f9cc24ea8901d699132b1ec88
#: ../develop/plone/security/selinux.rst:278
msgid ""
"Gathering the previous audit2allow failed completely to report tcp_socket "
"read and write. Some system policy had probably introduced a *dontaudit* "
"rule, which quiesced the logging for that access vector denial. Luckily "
"Plone threw out very distinct Exception, which made resolving the issue "
"easy."
msgstr ""

# 2e9094f488d0488cbc45eff1b18a6a98
#: ../develop/plone/security/selinux.rst:281
msgid "ZEO"
msgstr ""

# 2ac807a207b64977b045cdc4701959c3
#: ../develop/plone/security/selinux.rst:283
msgid ""
"There are couple differences between standalone and ZEO installations. To "
"support both a boolean is probably good way to go. Booleans can be managed "
"like: ::"
msgstr ""

# 5424a416e0af4c289e74c75de1925b91
#: ../develop/plone/security/selinux.rst:290
msgid ""
"Installing Plone in ZEO mode will change the directory *zinstance* to "
"*zeocluster*. It is alright to either have both defined in **plone.fc**, or "
"to use regexp: ::"
msgstr ""

# 6511b024d45941a496c64a7f251c76a6
#: ../develop/plone/security/selinux.rst:296
msgid ""
"The differences to type enforcement policy consist mostly of more networking"
" abilities (which one probably should not allow unless really required), and"
" the ability to run shells (ie. bash): ::"
msgstr ""

# d20ff5ce93684732afccc00415398abc
#: ../develop/plone/security/selinux.rst:316
msgid "Maintenance utilities"
msgstr ""

# 75dba86ab0e743a4b1aa1da71a55dc73
#: ../develop/plone/security/selinux.rst:318
msgid ""
"The procedure for allowing maintenance utilities like *buildout* to work is "
"quite straight forward. First introduce a new context: ::"
msgstr ""

# e44b1e3bd43f44e89ee57d19bdea9300
#: ../develop/plone/security/selinux.rst:323
msgid "Then label the maintenance utilities using the context: ::"
msgstr ""

# fa1bdb846efc4396b3765162aef8d29f
#: ../develop/plone/security/selinux.rst:327
msgid ""
"Last, provide the necessary rules for relabeling, context transition, and "
"for the process to run without any restrictions: ::"
msgstr ""

# 7c29a1b8a31948268ed1b73cb0623dfc
#: ../develop/plone/security/selinux.rst:338
msgid ""
"After running maintenance tasks you should make sure the files have still "
"correct labels by running something like: ::"
msgstr ""

# bb2f2b994aca4073b43a41a0ac9ad0d1
#: ../develop/plone/security/selinux.rst:343
msgid ""
"See also \"setenforce Permissive\", which will disable enforcing SELinux "
"rules temporarily system wide."
msgstr ""

# 8ea153cd60334ac690a72f4ab08fe167
#: ../develop/plone/security/selinux.rst:346
msgid "Testing the policy"
msgstr ""

# 36331152bff44d3da12bf120729da7b2
#: ../develop/plone/security/selinux.rst:348
msgid ""
"Easiest way to test the policy is to label for instance the Python "
"executable as plone_exec_t by using *chcon*, and to test the policy using "
"Python scripts. For example: ::"
msgstr ""

# 595e0e726b7e442e88f7c7f0b1e40adf
#: ../develop/plone/security/selinux.rst:369
msgid ""
"This can easily be refined into automated testing. Other forms such as "
"Portlet inside running Plone process can also be used for testing."
msgstr ""

# bb9f816f96f5468688c55bd81c9ecbbc
#: ../develop/plone/security/selinux.rst:372
msgid "Deploying the policy"
msgstr ""

# eba80bf17775451c8c98e4a3f6a527b9
#: ../develop/plone/security/selinux.rst:374
msgid ""
"SELinux policies can be installed simply by running *semodule -n -i "
"<compiled_policy.pp>*. In case packaging is required (for rolling out Plone "
"instances automatically, or for use with centralized management tools like "
"Satellite) it is easy to accomplish with rpm. In order to do that first "
"install the rpm building tools: ::"
msgstr ""

# 51a036d3e09a4b9199e9dd1abf7c0acd
#: ../develop/plone/security/selinux.rst:378
msgid "Then modify the following RPM spec file to suit your needs: ::"
msgstr ""

# 5042ddefbe7542ad941c5bf28da817b1
#: ../develop/plone/security/selinux.rst:438
msgid "The rpm packages will be built by running the rpmbuild: ::"
msgstr ""

# f70e127f489c4c1ba468317e19bdc6f0
#: ../develop/plone/security/selinux.rst:445
msgid "External resources"
msgstr ""

# 53b42971ed8642bfb8ef37837c5f9592
#: ../develop/plone/security/selinux.rst:447
msgid ""
"The following external resources are sorted by probable usefulness to "
"someone who is beginning working with SELinux:"
msgstr ""

# 5a6d22091246413d99cbc7ddeb492c35
#: ../develop/plone/security/selinux.rst:449
msgid ""
"`Fedora SELinux FAQ <https://docs.fedoraproject.org/en-"
"US/Fedora/13/html/SELinux_FAQ/index.html>`_"
msgstr ""

# 1d2caae7e60245a2bd40abbb937f9866
#: ../develop/plone/security/selinux.rst:450
msgid "`Reference policy API <http://oss.tresys.com/docs/refpolicy/api/>`_"
msgstr ""

# 2f3626ca24094f4c826d515bdd421dcd
#: ../develop/plone/security/selinux.rst:451
msgid "`NSA - SELinux FAQ <http://www.nsa.gov/research/selinux/faqs.shtml>`_"
msgstr ""

# 4827ff84403d442bb71b6f4fd34dfc1b
#: ../develop/plone/security/selinux.rst:452
msgid ""
"`NSA - SELinux main website "
"<http://www.nsa.gov/research/selinux/index.shtml>`_"
msgstr ""

# e1b30ebeec2e43f4a8cc7216b91dd9be
#: ../develop/plone/security/selinux.rst:453
msgid "`Official SELinux project wiki <http://selinuxproject.org/>`_"
msgstr ""

# a1e4400c6d6e4b2e98cf5c13212e2c63
#: ../develop/plone/security/selinux.rst:454
msgid ""
"`Red Hat Enterprise SELinux Policy Administration (RHS429) classroom course "
"<https://www.redhat.com/training/courses/rhs429/>`_"
msgstr ""

# 185e0c89b73c4200bf60bf6f65a13d9a
#: ../develop/plone/security/selinux.rst:455
msgid ""
"`Tresys Open Source projects <http://www.tresys.com/open-source.php>`_ (IDE,"
" documentation about the reference policy, and several management tools)"
msgstr ""

# 02a0d3ad6d5f4193a0e3353dc2dc7b1b
#: ../develop/plone/serving/ftp.rst:3
msgid "FTP"
msgstr ""

# 12de5d6e7bc94f22bb22636eec4325eb
#: ../develop/plone/serving/ftp.rst:5
msgid "Plone/Zope supports FTP in the default configuration."
msgstr ""

# 5496d3456d6f42568daf77f564a6c2d8
#: ../develop/plone/serving/ftp.rst:7
msgid ""
"FTP support is not very well maintained. WebDAV protocol is recommended over"
" FTP."
msgstr ""

# f7bd82b013c7413db5c831621d1e1fc0
#: ../develop/plone/serving/ftp.rst:10
msgid "Enabling FTP"
msgstr ""

# f4410365b05b4fe6b132f77c86f3c1bf
#: ../develop/plone/serving/ftp.rst:12
msgid ""
"`See zope2instance recipe "
"<https://pypi.python.org/pypi/plone.recipe.zope2instance>`_."
msgstr ""

# 13d67f0f48c340bfafa9256feeee6d27
#: ../develop/plone/serving/http_request_and_response.rst:3
msgid "HTTP request and response"
msgstr ""

# 4851713241b94e28b04cd954094042cb
#: ../develop/plone/serving/http_request_and_response.rst:7
msgid ""
"Accessing and manipulating Zope's HTTP request and response objects "
"programmatically."
msgstr ""

# ae17042211d9449a8155096e429ce69d
#: ../develop/plone/serving/http_request_and_response.rst:14
msgid "This chapter explains the basics of Zope HTTP requests and responses:"
msgstr ""

# 41a7fa7e4f784fcbbcc5d7fae7be4033
#: ../develop/plone/serving/http_request_and_response.rst:16
msgid "request and response objects lifecycle;"
msgstr ""

# d792c042f81f45cca75029ef8599512f
#: ../develop/plone/serving/http_request_and_response.rst:17
msgid "data which can be extracted from the request;"
msgstr ""

# aa704d0871944e81bdb0e7d5b50e9012
#: ../develop/plone/serving/http_request_and_response.rst:18
msgid "data which can be placed on the response."
msgstr ""

# 0357754225704d7189bc8c958475a79f
#: ../develop/plone/serving/http_request_and_response.rst:21
msgid "Lifecycle"
msgstr ""

# 67488fa87d494445a1d4ca517f367fd7
#: ../develop/plone/serving/http_request_and_response.rst:23
msgid ""
"Unlike some other web frameworks, in Plone you do not explicitly create or "
"return HTTP response objects.  A HTTP request object always has a HTTP "
"response object associated with it, and the response object is created as "
"soon as the request hits the webserver."
msgstr ""

# 1ea9799367874a509ca23f27cb5b1b9b
#: ../develop/plone/serving/http_request_and_response.rst:28
msgid ""
"The response is available for the whole lifetime of request processing.  "
"This effectively allows you to set and modify response headers at any point "
"in the code."
msgstr ""

# 7622e1821e0d43cea12f8ff7482c2170
#: ../develop/plone/serving/http_request_and_response.rst:33
msgid "Webservers"
msgstr ""

# 503d3bc04717496198cf8eab280fe7be
#: ../develop/plone/serving/http_request_and_response.rst:35
msgid ""
"Usually Plone runs on Zope's ZServer_ (based on Sam Rushing's Medusa_). "
"Other alternatives are WSGI_ compatible web servers like Repoze_."
msgstr ""

# d7bf6372bdac4e4a8797e0b42e5220e8
#: ../develop/plone/serving/http_request_and_response.rst:38
msgid "The web server will affect how your HTTP objects are constructed."
msgstr ""

# 69a5a50f65624622b8da679b748261a8
#: ../develop/plone/serving/http_request_and_response.rst:42
msgid "HTTP Request"
msgstr ""

# 71c90ca991564e57a90f105283a7123b
#: ../develop/plone/serving/http_request_and_response.rst:44
msgid ""
"All incoming HTTP requests are wrapped in Zope's ZPublisher_ HTTPRequest_ "
"objects. This is a multi-mapping: it contains mappings for environment "
"variables, other variables, form data, and cookies, but the keys of all "
"these mappings can also be looked up directly on the request object (i.e. "
"``request['some_form_id']`` and ``request.form['some_form_id']`` are "
"equivalent)."
msgstr ""

# 50cb28f0337d45be84ca0a1cde6cf7c3
#: ../develop/plone/serving/http_request_and_response.rst:51
msgid ""
"Usually your view function or instance will receive an HTTP request object, "
"along with a traversed context, as its construction parameter."
msgstr ""

# cdad494013184dd8b94c329a5caff793
#: ../develop/plone/serving/http_request_and_response.rst:54
msgid "You can access the request in your view::"
msgstr ""

# ccdc610a7c5544bf8e5520c83002f741
#: ../develop/plone/serving/http_request_and_response.rst:71
msgid "Request method"
msgstr ""

# 4019f293c0ef48ddb84c557e5a37face
#: ../develop/plone/serving/http_request_and_response.rst:73
msgid "The request method (GET or POST) can be read::"
msgstr ""

# 4903a64c65b643cc840b8453c24ce38e
#: ../develop/plone/serving/http_request_and_response.rst:79
msgid "Request URL"
msgstr ""

# 374a7fe46f1244d49e4088d872815e4c
#: ../develop/plone/serving/http_request_and_response.rst:81
msgid "To get the requested URL::"
msgstr ""

# 8be224924beb4a0fbe7b21893f7c5b64
#: ../develop/plone/serving/http_request_and_response.rst:86
msgid ""
"To get the URL of the served object use the following (this might be "
"different from the requested URL, since Plone does all kinds of default page"
" and default view magic)::"
msgstr ""

# 4858909cf610409599d72f171eec6887
#: ../develop/plone/serving/http_request_and_response.rst:95
msgid "URLs, as accessed above, do not contain query string."
msgstr ""

# 9aa86cd3fd484b9f94dae805430fcda9
# 1100255278e242689e59371c88f4ae37
#: ../develop/plone/serving/http_request_and_response.rst:98
#: ../develop/plone/serving/http_request_and_response.rst:244
msgid "Query string"
msgstr ""

# 65f4fd0f5c9148a6a2cff3e12e554892
#: ../develop/plone/serving/http_request_and_response.rst:100
msgid "The unparsed query string can be accessed."
msgstr ""

# c130f43617e24a7cb200244e3b2b3845
#: ../develop/plone/serving/http_request_and_response.rst:102
msgid "E.g. if you go to ``http://localhost:8080/site?something=foobar``::"
msgstr ""

# 6de91411fcbe469b8437bf0df4be08de
#: ../develop/plone/serving/http_request_and_response.rst:107
msgid ""
"If the query string is not present in the HTTP request, it is an empty "
"string."
msgstr ""

# e0147ae5d01f424a89266a8a930f2841
#: ../develop/plone/serving/http_request_and_response.rst:111
msgid ""
"You can also use the ``request.form`` dictionary to access parsed query "
"string content."
msgstr ""

# 12655842984e4fd6a78320fc44b9ac2e
#: ../develop/plone/serving/http_request_and_response.rst:115
msgid "Request path"
msgstr ""

# ea09aade92c943189877082202be3268
#: ../develop/plone/serving/http_request_and_response.rst:117
msgid ""
"The request URI path can be read from ``request.path``, which returns a list"
" of path components.  ``request.path`` is a virtual path, and has the site "
"id component removed from it."
msgstr ""

# 47120ea3f78c494285b2bf48b94708bf
#: ../develop/plone/serving/http_request_and_response.rst:125
msgid "Other possible headers::"
msgstr ""

# d2546ba85bb34792b45ed618b95aa59d
#: ../develop/plone/serving/http_request_and_response.rst:130
msgid "What's the difference?"
msgstr ""

# f08bb38f8ca9456a8e585624520e9cd5
#: ../develop/plone/serving/http_request_and_response.rst:133
msgid "``REQUEST_URI``"
msgstr ""

# 0b4bc1bf78dc417a9bddf1c2f3108d70
#: ../develop/plone/serving/http_request_and_response.rst:135
msgid ""
"To get the variable which corresponds to ``REQUEST_URI`` in e.g. PHP the "
"following helps::"
msgstr ""

# faf407ff08a048759904e403a546c755
#: ../develop/plone/serving/http_request_and_response.rst:150
msgid "http://www.teamrubber.com/blog/_serverrequest_uri-in-zope/"
msgstr ""

# f482c84a19c044e4a84746ec01291164
#: ../develop/plone/serving/http_request_and_response.rst:152
msgid "http://www.doughellmann.com/PyMOTW/urlparse/index.html"
msgstr ""

# ee687e5488184b4e9de8ed375f67079c
#: ../develop/plone/serving/http_request_and_response.rst:155
msgid "Request client IP"
msgstr ""

# 1618f0c5cec84032b98bb55696144b59
#: ../develop/plone/serving/http_request_and_response.rst:176
msgid ""
"For functional tests based on ``zope.testbrowser`` use the ``addHeader`` "
"method to add custom headers to a browser."
msgstr ""

# 0c09c4db2e7d4275a5b35dca1a27b343
#: ../develop/plone/serving/http_request_and_response.rst:180
msgid "``GET`` variables"
msgstr ""

# 91017d3f9ec341d9beee4ba09af0df0d
#: ../develop/plone/serving/http_request_and_response.rst:182
msgid ""
"HTTP ``GET`` variables are available in ``request.form`` if the "
"``REQUEST_METHOD`` was ``GET``."
msgstr ""

# 387736d1808045aebab6415ad7c5e197
#: ../develop/plone/serving/http_request_and_response.rst:191
msgid "``POST`` variables"
msgstr ""

# 11060aa17b9247669225db4e4c8cff4a
#: ../develop/plone/serving/http_request_and_response.rst:193
msgid "HTTP ``POST`` varibles are available in ``request.form``::"
msgstr ""

# 9d53eef84a7b42e09fe0927f3a0ca937
#: ../develop/plone/serving/http_request_and_response.rst:197
msgid "There is no difference in accessing ``GET`` and ``POST`` variables."
msgstr ""

# 7f03179a9a8449128e01bd4aab0625f2
#: ../develop/plone/serving/http_request_and_response.rst:200
msgid "Request body"
msgstr ""

# d6101aee0d59444eb25f7e9704a5df05
#: ../develop/plone/serving/http_request_and_response.rst:201
msgid ""
"The request body can be retrieved from the HTTPRequest_ object by using the "
"get method with the key ``BODY``::"
msgstr ""

# 9e68b6eb0e784ad58927d5e92a96b9f0
#: ../develop/plone/serving/http_request_and_response.rst:207
msgid "HTTP headers"
msgstr ""

# 22766d60f87046ababf63164125385d7
#: ../develop/plone/serving/http_request_and_response.rst:209
msgid ""
"HTTP headers are available through ``request.get_header()`` and the "
"``request.environ`` dictionary."
msgstr ""

# 28c683b6f59342b68977689f88512ef9
#: ../develop/plone/serving/http_request_and_response.rst:219
msgid "Dumping all headers::"
msgstr ""

# c656640b382c4a8ca187c721a39c763e
#: ../develop/plone/serving/http_request_and_response.rst:224
msgid "A simple ZMI Python script to dump all HTTP request headers::"
msgstr ""

# 33e2a23e953347a9b4f14866707c6dd6
#: ../develop/plone/serving/http_request_and_response.rst:246
msgid "To access the raw HTTP ``GET`` query string::"
msgstr ""

# 08e13b1539e543ffbcf28b273b0a4123
#: ../develop/plone/serving/http_request_and_response.rst:252
msgid "Web environment"
msgstr ""

# a3ad5181498b416fab06b2766d0250b5
#: ../develop/plone/serving/http_request_and_response.rst:254
msgid ""
"The web server exposes its own environment variables in ``request.other`` "
"(ZServer_) or ``request.environ`` (Repoze_ and other WSGI_-based web "
"servers)::"
msgstr ""

# aa342b4ef12a45c3a88df7b612a2ec57
#: ../develop/plone/serving/http_request_and_response.rst:264
msgid "Hostname"
msgstr ""

# ba33f66b04824e01a6141bc148cf2b4a
#: ../develop/plone/serving/http_request_and_response.rst:266
msgid ""
"Below is an example to get the HTTP server name in a safe manner, taking "
"virtual hosting into account::"
msgstr ""

# 951a424fa07a49d18637cf8c3bab787f
#: ../develop/plone/serving/http_request_and_response.rst:295
msgid "http://httpd.apache.org/docs/2.1/mod/mod_proxy.html#x-headers"
msgstr ""

# 0bf3d1a51d4947ae8ae5effef7bf9d56
#: ../develop/plone/serving/http_request_and_response.rst:297
msgid ""
"http://zotonic.googlecode.com/hg/doc/varnish.zotonic.vcl (X-Forwarded-Host)"
msgstr ""

# 5f5379ecaeb84f83a6dcfac4a38f8d0d
#: ../develop/plone/serving/http_request_and_response.rst:302
msgid "Request port"
msgstr ""

# 7f26fc6310824237891c720e3184322a
#: ../develop/plone/serving/http_request_and_response.rst:304
msgid ""
"It is possible to extract the Zope instance port from the request.  This is "
"useful e.g. for debugging purposes if you have multiple ZEO front ends "
"running, and you want to identify them easily::"
msgstr ""

# f90d7bf55d054d509cf5691ae07518cb
#: ../develop/plone/serving/http_request_and_response.rst:312
msgid ""
"The ``SERVER_PORT`` variable returns the port number as a string, not an "
"integer."
msgstr ""

# 0a06fad690bc447fb6e49907ef964c0b
#: ../develop/plone/serving/http_request_and_response.rst:316
msgid ""
"This port number is not the one visible to the external traffic (port 80, "
"HTTP)"
msgstr ""

# 42dec04f74b44d6cb80d7025d3db61e8
#: ../develop/plone/serving/http_request_and_response.rst:319
msgid "Published object"
msgstr ""

# 108011a859574537937d12d83388c87f
#: ../develop/plone/serving/http_request_and_response.rst:321
msgid ""
"``request[\"PUBLISHED\"]`` points to a view, method or template which was "
"the last item in the traversing chain to be called to render the actual "
"page."
msgstr ""

# b64105ae05fc4a69864aad95c71268b4
#: ../develop/plone/serving/http_request_and_response.rst:324
msgid ""
"To extract the relevant content item from this information you can do e.g. "
"in the after publication hook::"
msgstr ""

# 5cfefe5a4fb644a4a2ddfac2c3517fcb
#: ../develop/plone/serving/http_request_and_response.rst:337
msgid "You might also want to filter out CSS etc. requests"
msgstr ""

# ac7b1ee5c20045038ee45fa4c745dd78
#: ../develop/plone/serving/http_request_and_response.rst:339
msgid ""
"Please note that ``request[PUBLISHED]`` is set after language negotiation "
"and authentication"
msgstr ""

# 164d2310ce994192b9a721443c7b6506
#: ../develop/plone/serving/http_request_and_response.rst:341
msgid ""
"`More complete example "
"<https://github.com/miohtama/silvuple/blob/master/silvuple/negotiator.py>`_"
msgstr ""

# e700e044dd644a1f9cb67a63438034e7
#: ../develop/plone/serving/http_request_and_response.rst:344
msgid "Flat access"
msgstr ""

# cf4e15a2a7e34202aba0b73feacbb557
#: ../develop/plone/serving/http_request_and_response.rst:346
msgid ""
"``GET``, ``POST`` and web environment variables are flat mapped to the "
"request object as a dictionary look up::"
msgstr ""

# 25f6692fb37244e98480d0cc014cf0f5
#: ../develop/plone/serving/http_request_and_response.rst:356
msgid "Request mutability"
msgstr ""

# 672071d6acbb4f058e132e96a3ec7bbb
#: ../develop/plone/serving/http_request_and_response.rst:358
msgid ""
"Even if you can write and add your own attributes to HTTP request objects, "
"this behavior is discouraged. If you need to create cache variables for "
"request lifecycle use annotations_."
msgstr ""

# 193eeba2b482421bbe31c5cc23065a31
#: ../develop/plone/serving/http_request_and_response.rst:362
msgid "Add link to internal annotations examples when written."
msgstr ""

# e8d5d4b7c354433d80122962a9fc76da
#: ../develop/plone/serving/http_request_and_response.rst:366
msgid "Accessing HTTP request outside context"
msgstr ""

# 0399998c5e24421cbca1b692166e34d3
#: ../develop/plone/serving/http_request_and_response.rst:368
msgid ""
"There are often cases where you would like to get hold of the HTTP request "
"object, but the underlying framework does not pass it to you.  In these "
"cases you have two ways to access the request object:"
msgstr ""

# 7e841b4eca0840eead6f622e004964e7
#: ../develop/plone/serving/http_request_and_response.rst:372
msgid ""
"Use *acquisition* to get the request object from the site root. When Plone "
"site traversal starts, the HTTP request is assigned to current site object "
"as the ``site.REQUEST`` attribute."
msgstr ""

# decafbe7eec640bc8bccaff2fd5f5c34
#: ../develop/plone/serving/http_request_and_response.rst:376
msgid "Use https://pypi.python.org/pypi/five.globalrequest."
msgstr ""

# ed752ec117ff48b19025333b510e1a64
#: ../develop/plone/serving/http_request_and_response.rst:378
msgid "Example of getting the request using acquisition::"
msgstr ""

# c0ff19aa2c004d9d8efc33543c5933cc
#: ../develop/plone/serving/http_request_and_response.rst:395
msgid "zope.globalrequest.getRequest"
msgstr ""

# b3f59a8eef8041fe839129c2179a2efa
#: ../develop/plone/serving/http_request_and_response.rst:399
msgid "https://pypi.python.org/pypi/five.globalrequest"
msgstr ""

# ad4f682092494e8bb68b0443fa90e9f3
#: ../develop/plone/serving/http_request_and_response.rst:403
msgid "HTTP response"
msgstr ""

# 340b339b3e194601a76b37deb1d639e0
#: ../develop/plone/serving/http_request_and_response.rst:405
msgid ""
"Usually you do not return HTTP responses directly from your views. Instead, "
"you modify the existing HTTP response object (associated with the request) "
"and return the object which will be HTTP response payload."
msgstr ""

# 78625e75159b47d5821db84029c77c92
#: ../develop/plone/serving/http_request_and_response.rst:409
msgid "The returned payload object can be:"
msgstr ""

# 8a3f60ea7a0149cfa38015fe523d0414
#: ../develop/plone/serving/http_request_and_response.rst:411
msgid "a string (str) 8-bit raw data; or"
msgstr ""

# 4c40d338d85444d785bd155a8e161eaf
#: ../develop/plone/serving/http_request_and_response.rst:412
msgid "an iterable: the response is streamed, instead of memory-buffered."
msgstr ""

# c3f8460cc6fa46cfaeb53837d7228de1
#: ../develop/plone/serving/http_request_and_response.rst:415
msgid "Accessing response"
msgstr ""

# 6624f79826dc4468829459d929adc769
#: ../develop/plone/serving/http_request_and_response.rst:417
msgid "You can access the HTTP response if you know the request::"
msgstr ""

# 318e0868d43c48a581098f6fc4a74849
#: ../develop/plone/serving/http_request_and_response.rst:433
msgid "Response headers"
msgstr ""

# 4a76f0813d8a4c74a29bb05cea985b5a
#: ../develop/plone/serving/http_request_and_response.rst:435
msgid "Use HTTPResponse_ ``setHeader()`` to set headers::"
msgstr ""

# 1b4922f7dee549099d2f1654458dac54
#: ../develop/plone/serving/http_request_and_response.rst:442
msgid "Content disposition"
msgstr ""

# f77928a0265c42fc8a6af509559e19f1
#: ../develop/plone/serving/http_request_and_response.rst:444
msgid ""
"The ``Content-Disposition`` header is used to set the filename of a "
"download. It is also used by Flash 10 to check whether Flash download is "
"valid."
msgstr ""

# 39c9cbf0eee0435bb235bfa9e72fc331
#: ../develop/plone/serving/http_request_and_response.rst:447
msgid "Example of setting the download and downloadable filename::"
msgstr ""

# 57af7166ba1647319d8f60f036a66ad0
#: ../develop/plone/serving/http_request_and_response.rst:458
msgid "http://www.littled.net/new/2008/10/17/plone-and-flash-player-10/"
msgstr ""

# 4f0d917f5a1c47b3af81ce7c698740ec
#: ../develop/plone/serving/http_request_and_response.rst:459
msgid "http://support.microsoft.com/kb/260519"
msgstr ""

# 2a475ba350b443c2ac3070a0175fb22a
#: ../develop/plone/serving/http_request_and_response.rst:462
msgid "Return code"
msgstr ""

# 4b603bc18ecd49239d189c7c4ca9ec16
#: ../develop/plone/serving/http_request_and_response.rst:464
msgid ""
"Use ``HTTPResponse.setStatus(self, status, reason=None, lock=None)`` to set "
"HTTP return status (\"404 Not Found\", \"500 Internal Error\", etc.)."
msgstr ""

# c171f956230a40c7a0c1f2fc35f83479
#: ../develop/plone/serving/http_request_and_response.rst:467
msgid ""
"If ``lock=True``, no further modification of the HTTPResponse status are "
"allowed, and will fail silently."
msgstr ""

# 81ae0186d546479daec34a7353052abf
#: ../develop/plone/serving/http_request_and_response.rst:471
msgid "Response body"
msgstr ""

# ba8fb9b7fc8a4b7783ef3df8baf56256
#: ../develop/plone/serving/http_request_and_response.rst:473
msgid ""
"You might want to read or manipulate the response body in the post-"
"publication hook."
msgstr ""

# 1372741c76ff4f0abe12fdb67f31b5dc
#: ../develop/plone/serving/http_request_and_response.rst:476
msgid ""
"The response body is not always a string or basestring: it can be a "
"generator or iterable for blob data."
msgstr ""

# 7f9f1d81d1f0450b8f08d0568de62372
#: ../develop/plone/serving/http_request_and_response.rst:479
msgid "The body is available as the ``response.body`` attribute."
msgstr ""

# 1cb8d226131f449eb33c72acf99cf4de
#: ../develop/plone/serving/http_request_and_response.rst:481
msgid "You can change the body using setBody and locking it::"
msgstr ""

# fcefeee0170546b3a392d01ac598697c
#: ../develop/plone/serving/http_request_and_response.rst:486
msgid ""
"If ``lock=True``, no further modification of the HTTPResponse body are "
"allowed, and will fail silently."
msgstr ""

# 02c93534c6744c97a87ce20673bf8d59
#: ../develop/plone/serving/http_request_and_response.rst:490
msgid "Redirects"
msgstr ""

# cb3bb498b09c41fe8f0a4809cfff7042
#: ../develop/plone/serving/http_request_and_response.rst:492
msgid "**Real redirects**"
msgstr ""

# e7681b5723c34be8beaa010689bfd9c3
#: ../develop/plone/serving/http_request_and_response.rst:494
msgid "Use the ``response.redirect()`` method::"
msgstr ""

# 557eb58da4614399b7c4dbb59d25d7db
#: ../develop/plone/serving/http_request_and_response.rst:502
msgid ""
"You can lock the status to not let other change the status later in the "
"process ::"
msgstr ""

# d6962a562fc743c5b0cb4be831f291f0
#: ../develop/plone/serving/http_request_and_response.rst:507
msgid "**Javascript redirects**"
msgstr ""

# ed0a264b9fe34a18b25823876f387085
#: ../develop/plone/serving/http_request_and_response.rst:509
msgid ""
"You can invoke this Javascript redirect trick from a page template head slot"
" in a hacky way"
msgstr ""

# 325bd45b98034b21bb982cb324e170fe
# 5815d1a51dce4a898004a723394995de
#: ../develop/plone/serving/http_request_and_response.rst:521
#: ../develop/plone/sessions/cookies.rst:3
msgid "Cookies"
msgstr ""

# b8275a0a5cfa49ba850e7c2d5953a621
#: ../develop/plone/serving/http_request_and_response.rst:523
msgid "See :doc:`cookies documentation </develop/plone/sessions/cookies>`."
msgstr ""

# d57efaf43c6b4b839aeca4e0c4596a3d
#: ../develop/plone/serving/http_request_and_response.rst:526
msgid "Middleware-like hooks"
msgstr ""

# 0c4f4b8384e64d2f96474c5a33356f2e
#: ../develop/plone/serving/http_request_and_response.rst:528
msgid ""
"Plone does not have a middleware concept, as everything happens through "
"traversal. Middleware behavior can be emulated with the *before traverse* "
"hook. This hook can be installed on any persistent object in the traversing "
"graph. The hook is persistent, so it is a database change and must be "
"installed using custom GenericSetup Python code."
msgstr ""

# 212130d2b4684d26a67b6f88275a19da
#: ../develop/plone/serving/http_request_and_response.rst:536
msgid ""
"Before traverse hooks cannot create new HTTP responses, or return "
"alternative HTTP responses.  Only exception-like HTTP response modification "
"is supported, e.g. HTTP redirects. If you need to rewrite the whole "
"response, the post-publication hook must be used."
msgstr ""

# b5c812f618d846458c2996ae62d6d579
#: ../develop/plone/serving/http_request_and_response.rst:543
msgid ""
"http://blog.fourdigits.nl/changing-your-plone-theme-skin-based-on-the-"
"objects-portal_type"
msgstr ""

# 805e489fa6614788a1d327190dd6c99c
#: ../develop/plone/serving/http_request_and_response.rst:545
msgid "http://zebert.blogspot.com/2008_01_01_archive.html"
msgstr ""

# 118f311dd7a441619565a460814850f3
#: ../develop/plone/serving/http_request_and_response.rst:547
msgid ""
"http://svn.repoze.org/thirdparty/zopelib/branches/2.9.8/ZPublisher/tests/testBeforeTraverse.py"
msgstr ""

# 6998e0cfbfe642149d48ff3d8fdcf9d6
#: ../develop/plone/serving/http_request_and_response.rst:551
msgid ""
"Redirector: "
"https://plonegomobile.googlecode.com/svn/trunk/gomobile/gomobile.mobile/gomobile/mobile/postpublication.py"
msgstr ""

# 3872a748aa6f45f3b4447f49ba7f56a4
#: ../develop/plone/serving/http_request_and_response.rst:554
msgid "Transform chain"
msgstr ""

# a29e094df1bc4e899af18ec6d6a2bae8
#: ../develop/plone/serving/http_request_and_response.rst:556
msgid ""
"Transform chain is a hook into repoze.zope2 that allows third party packages"
" to register a sequence of hooks that will be allowed to modify the response"
" before it is returned to the browser."
msgstr ""

# f73d79ea549d478ebd2410e99cdc526c
#: ../develop/plone/serving/http_request_and_response.rst:559
msgid "It is used e.g. by ``plone.app.caching``."
msgstr ""

# 08cd6954eb5941bbb863c3ea9593085c
#: ../develop/plone/serving/http_request_and_response.rst:563
msgid "https://pypi.python.org/pypi/plone.transformchain"
msgstr ""

# 2915fbed36584270890990377d491a36
#: ../develop/plone/serving/http_request_and_response.rst:566
msgid "Post-publication hook"
msgstr ""

# 49e7e2efbaa04692bc86ae49e83aff8a
#: ../develop/plone/serving/http_request_and_response.rst:568
msgid "The post-publication hook is run when:"
msgstr ""

# 82028009b2234191980b15cd7dddb14b
#: ../develop/plone/serving/http_request_and_response.rst:570
msgid "the context object has been traversed;"
msgstr ""

# 3b02aff69e3245309f8ad4a08f841203
#: ../develop/plone/serving/http_request_and_response.rst:571
msgid "after the view has been called and the view has rendered the response;"
msgstr ""

# 59ef3db9d1e54cf99e2689b5f2f7014e
#: ../develop/plone/serving/http_request_and_response.rst:572
msgid "before the response is sent to the browser;"
msgstr ""

# af9b0437d09744b9891172a5a9442ecd
#: ../develop/plone/serving/http_request_and_response.rst:573
msgid "before the transaction is committed."
msgstr ""

# 33f41fa3d2824c94bbf4dab14b6ab9d8
#: ../develop/plone/serving/http_request_and_response.rst:575
msgid ""
"This is practical for caching purposes: it is the ideal place to determine "
"and insert caching headers into the response."
msgstr ""

# 7ba3c700c2234dc6b1991401134ce716
#: ../develop/plone/serving/http_request_and_response.rst:578
msgid ""
"Read more at the `plone.postpublicationhook package page "
"<https://pypi.python.org/pypi/plone.postpublicationhook/>`_."
msgstr ""

# 6676925ad6594eab961544b52468c347
#: ../develop/plone/serving/http_request_and_response.rst:582
msgid "Custom redirect mappings"
msgstr ""

# b2329a435f754939a4a1617078c2f453
#: ../develop/plone/serving/http_request_and_response.rst:584
msgid ""
"Below is an example how you use :doc:`five.grok "
"</develop/addons/components/grok>` to install an event handler which checks "
"in the site root for a TTW Python script and if such exist it asks it to "
"provide a HTTP redirect."
msgstr ""

# 73bf2d3452794f779297520a957e82ec
#: ../develop/plone/serving/http_request_and_response.rst:588
msgid "This behavior allows you to write site-wide redirects easily"
msgstr ""

# b258b805a5c44bc893a43afb1cd19940
#: ../develop/plone/serving/http_request_and_response.rst:590
msgid "In Python (thank god no Apache regular expressions)"
msgstr ""

# cb04acf1f4614053ab6182579833724c
#: ../develop/plone/serving/http_request_and_response.rst:592
msgid "Redirects can access Plone content items"
msgstr ""

# 4ce7e94061204597a203b4d16bdc0ae5
#: ../develop/plone/serving/http_request_and_response.rst:594
msgid ""
"You can easily have some redirects migrated from the old (non-Plone) sites"
msgstr ""

# e02d0f177ca14d8fb78775145b7fd22d
#: ../develop/plone/serving/http_request_and_response.rst:596
msgid ""
"``redirect.py`` - no modifications needed for your site, just copy-paste "
"this to your Grok add-on folder. Remember to add ``url`` to *Parameter list*"
" of the script on the script edit view::"
msgstr ""

# 276f1016ee7c4b829753823fda453623
#: ../develop/plone/serving/http_request_and_response.rst:670
msgid ""
"Then an example ``redirect_handler`` script added through ZMI. Remember to "
"add ``url`` to the *Parameter List* field of TTW interface::"
msgstr ""

# 10d04270f9e946609ce43f760756bb3c
#: ../develop/plone/serving/http_request_and_response.rst:676
msgid "Or more complex example::"
msgstr ""

# 647bdbd426be4adca29615d7a7df4d96
#: ../develop/plone/serving/http_request_and_response.rst:701
msgid "Extracting useful information in the post-publication hook"
msgstr ""

# 045b01b1fb3b45c0875ce11eed64275b
#: ../develop/plone/serving/http_request_and_response.rst:740
msgid "Cross-origin resource sharing (CORS)"
msgstr ""

# 339f20f0155548e9a1195a1ac43d6f31
#: ../develop/plone/serving/http_request_and_response.rst:742
msgid "Complete."
msgstr ""

# 74796c22346b45799be7df9b775a9f06
#: ../develop/plone/serving/http_request_and_response.rst:744
msgid "http://enable-cors.org/"
msgstr ""

# 4aeaf74f7be7460282e81255da32ea4a
#: ../develop/plone/serving/http_request_and_response.rst:746
msgid "https://developer.mozilla.org/En/HTTP_access_control"
msgstr ""

# 79ed3b1b136443fba7ef94e56173dd6e
#: ../develop/plone/serving/index.rst:3
msgid "HTTP serving and traversing site data"
msgstr ""

# a34fe4efdb9d4eb286890d8892f1d555
#: ../develop/plone/serving/index.rst:5
msgid ""
"Serving content from your site to your users is effectively a mechanism to "
"generate HTTP responses to HTTP requests."
msgstr ""

# 1913d482ef4e4b8fa7749561d7376019
#: ../develop/plone/serving/index.rst:8
msgid ""
"In Plone, answering to HTTP requests can be divided to three subproblems:"
msgstr ""

# dc4d900c7cd14c54a94062d52d5f3e08
#: ../develop/plone/serving/index.rst:10
msgid "managing the lifecycle of the HTTP request and response pair;"
msgstr ""

# adc23d812b5d437abb3deebb110ec8d7
#: ../develop/plone/serving/index.rst:11
msgid "publishing, by traversing the request to the target object by its URI;"
msgstr ""

# 119810f5aa10436398b3d1c7d9cdad9a
#: ../develop/plone/serving/index.rst:12
msgid "choosing different parts of the code depending on active layers."
msgstr ""

# 4d67ad612490438a8212e83be3330a39
#: ../develop/plone/serving/index.rst:14
msgid ""
"Plone and Zope 2 application servers support FTP, WebDAV and XML-RPC "
"protocols besides plain HTTP."
msgstr ""

# aa805c117c074923b08430562a2415dc
#: ../develop/plone/serving/publishing.rst:3
msgid "Publishing"
msgstr ""

# 59dd596d17f74f5096e14ab67fa87636
#: ../develop/plone/serving/publishing.rst:5
msgid ""
"To *publish* an object means to make it available in the Zope traversal "
"graph and URLS."
msgstr ""

# 25d4293f3f104c42a2f921aecc230a0a
#: ../develop/plone/serving/publishing.rst:8
msgid ""
"A published object may have a reverse-mapping of object to path via "
"``getPhysicalPath()`` and ``absolute_url()`` but this is not always the "
"requirement."
msgstr ""

# 256189683a834ef4896704a6d4ea8dbf
#: ../develop/plone/serving/publishing.rst:12
msgid ""
"You can publish objects by providing a ``browser:page`` view which "
"implements the ``zope.publisher.interfaces.IPublishTraverse`` interface."
msgstr ""

# 030190e02eda4090958b38e9706e0721
#: ../develop/plone/serving/publishing.rst:16
msgid "Example publishers"
msgstr ""

# be424646cca54ce0904b3d7184a486d9
#: ../develop/plone/serving/publishing.rst:18
msgid ""
"A widget to make specified files downloadable: "
"`plone.formwidgets.namedfile.widget "
"<https://github.com/plone/plone.formwidget.namedfile/blob/master/plone/formwidget/namedfile/widget.py>`_."
msgstr ""

# 0931a1691e0e486f82f1b7dc9c50a74d
#: ../develop/plone/serving/traversing.rst:3
msgid "Traversing"
msgstr ""

# e1e429471c2e4845b02b190d9ac9a810
#: ../develop/plone/serving/traversing.rst:7
msgid ""
"Plone content is organized to a tree. Traversing means looking up content "
"from this tree by path. When HTTP request hits a Plone server, Plone will "
"traverse the corresponding content item and its view function by URI."
msgstr ""

# 78c7907e19d643878f775d275519e948
#: ../develop/plone/serving/traversing.rst:17
msgid ""
"In Plone, all content is mapped to a single tree: content objects, user "
"objects, templates, etc.  Even most object methods are directly mapped to "
"HTTP-accessible URIs."
msgstr ""

# 46c784f5fe574abba4bfbbc7dd905c1c
#: ../develop/plone/serving/traversing.rst:21
msgid ""
"Each object has a path depending on its location. :term:`Traversal` is a "
"method of getting a handle on a persistent object in the ZODB object graph "
"from its path."
msgstr ""

# 46a39c851711429f8a460026b9e2bb43
#: ../develop/plone/serving/traversing.rst:25
msgid "Traversal can happen in two places:"
msgstr ""

# c55a996ea54c4ee19dece503a9ed4a28
#: ../develop/plone/serving/traversing.rst:27
msgid ""
"When an HTTP request hits the server, the method on the object which will "
"generate the HTTP response is looked up using traversal."
msgstr ""

# ed547e9f4257431094ccd37164c6047c
#: ../develop/plone/serving/traversing.rst:30
msgid ""
"You can manually traverse the ZODB tree in your code to locate objects by "
"their path."
msgstr ""

# f17337d0ae29445c83927567e6ff9642
#: ../develop/plone/serving/traversing.rst:33
msgid ""
"When an HTTP request is being published the traversing happens in "
"``ZPublisher.BaseRequest.traverse``"
msgstr ""

# 4819e276000c47be98867188338d06d3
#: ../develop/plone/serving/traversing.rst:36
msgid ""
"http://svn.zope.org/Zope/trunk/src/ZPublisher/BaseRequest.py?rev=122282&view=auto"
msgstr ""

# a029f7286ab24434a1e44523744190fe
#: ../develop/plone/serving/traversing.rst:38
msgid ""
"... but Zope includes other traversers, like ``unrestrictedTraverse()`` in "
"the OFS module.  Different traversing methods behave differently and may "
"fire different events."
msgstr ""

# 12c586a12fdb48fa9f57afd2b38803a9
#: ../develop/plone/serving/traversing.rst:43
msgid "Object ids"
msgstr ""

# 69415a143b284ef0ba92661dc8afccd7
#: ../develop/plone/serving/traversing.rst:45
msgid ""
"Each content object has an id string which identifies the object in the "
"parent container.  The id string is visible in the browser address bar when "
"you view the object.  Ids are also visible in the Zope Management interface."
msgstr ""

# a43c78af0578472f9fcc77a57e9f869e
#: ../develop/plone/serving/traversing.rst:49
msgid ""
"Besides id strings, the content objects have Unique Identifiers, or UID_, "
"which do not change even if the object is moved or renamed."
msgstr ""

# b30f755bd01f47de973d23b6b6a845ac
#: ../develop/plone/serving/traversing.rst:52
msgid ""
"Though it's technically possible for ids to contain spaces or slashes, this "
"is seldom a good idea, as it complicates working with ids in various "
"situations."
msgstr ""

# 0670c425e8e443d0b267e06b75e77170
#: ../develop/plone/serving/traversing.rst:57
msgid "Path"
msgstr ""

# 1756e7a8f02947119010c0f469272a9b
#: ../develop/plone/serving/traversing.rst:59
msgid ""
"The Zope *path* is the location of the object in the object graph. It is a "
"sequence of id components from the parent node(s) to the child separated by "
"slashes."
msgstr ""

# e5542fcc035449b19a6375e6171e85b9
#: ../develop/plone/serving/traversing.rst:63
msgid ""
"A path need not always be a sequence of object ids. During traversal, an "
"object may consume subsequent path elements, interpreting them however it "
"likes."
msgstr ""

# dfe8185ad11847cdbef63de74a0659ce
#: ../develop/plone/serving/traversing.rst:72
msgid "Exploring Zope application server"
msgstr ""

# 94d6869379f44090b583feed8d2c87ab
#: ../develop/plone/serving/traversing.rst:74
msgid ""
"You can use the Zope Management interface to explore the content of your "
"Zope application server:"
msgstr ""

# 2a95b7dd2acf4ec682ee5e320614a0c3
#: ../develop/plone/serving/traversing.rst:77
msgid "Sites"
msgstr ""

# 86a44b5451804e96a0edee9ef51ea5cb
#: ../develop/plone/serving/traversing.rst:79
msgid "Folders within the sites"
msgstr ""

# 0fe65cdd22ae47baae5f11a4ebd24ca0
#: ../develop/plone/serving/traversing.rst:83
msgid ""
"The ZMI does not expose individual attributes. It only exposes traversable "
"content objects."
msgstr ""

# 6ca3be0b8728451e842953a2dacbf402
#: ../develop/plone/serving/traversing.rst:87
msgid "Attribute traversing"
msgstr ""

# 691efc6fc2bd4138b697e94f1de89195
#: ../develop/plone/serving/traversing.rst:89
msgid "Zope exposes child objects as attributes."
msgstr ""

# d453850e22a243f7a9562286dd469005
#: ../develop/plone/serving/traversing.rst:101
msgid "Container traversing"
msgstr ""

# 7ec73d6d3cc643ac83821f917429b83b
#: ../develop/plone/serving/traversing.rst:103
msgid "Zope exposes child objects as container accessor."
msgstr ""

# 0642d930ba6c4ebfa8137531faed70b1
#: ../develop/plone/serving/traversing.rst:116
msgid "Traversing by full path"
msgstr ""

# 8b782b58867b421e91a4afdc4b8db826
#: ../develop/plone/serving/traversing.rst:118
msgid ""
"Any content object provides the methods ``restrictedTraverse()`` and "
"``unrestrictedTraverse()``.  See Traversable_."
msgstr ""

# ee272c64f0be4cc394579f1008908aca
#: ../develop/plone/serving/traversing.rst:121
msgid ""
"**Security warning**: ``restrictedTraverse()`` executes with the privileges "
"of the currently logged-in user.  An Unauthorized_ exception is raised if "
"the code tries to access an object for which the user lacks the *Access "
"contents information* and *View* permissions."
msgstr ""

# df722272768d4aeb98c9ec3de24ee3ce
#: ../develop/plone/serving/traversing.rst:135
msgid ""
"``restrictedTraverse()``/``unrestrictedTraverse()`` does not honor "
"``IPublishTraverse`` adapters. `Read more about the issue in this discussion"
" <http://mail.zope.org/pipermail/zope-dev/2009-May/036665.html>`_."
msgstr ""

# 41ea590378ee445689e361666c2c36cb
#: ../develop/plone/serving/traversing.rst:141
msgid "Getting the object path"
msgstr ""

# 5a61d4df53ea446e9997d5634ecca37b
#: ../develop/plone/serving/traversing.rst:143
msgid "An object has two paths:"
msgstr ""

# 9f80bb50ca3e47168259f20df2b03d88
#: ../develop/plone/serving/traversing.rst:145
msgid ""
"The *physical path* is the absolute location in the current ZODB object "
"graph. This includes the site instance name as part of it."
msgstr ""

# 21275562815d480e8ecf3028ad961df4
#: ../develop/plone/serving/traversing.rst:148
msgid ""
"The *virtual path* is the object location relative to the Plone site root."
msgstr ""

# aee240d602e849a2ab1c06be5ecc0485
#: ../develop/plone/serving/traversing.rst:150
msgid ""
"**Path mangling warning**: Always store paths as virtual paths, or "
"persistently stored paths will corrupt if you rename your site instance."
msgstr ""

# 107557b7ebdc4e5398914c9dbea5827c
#: ../develop/plone/serving/traversing.rst:153
msgid "See Traversable_."
msgstr ""

# a9d8a07b9e0148faadd2c506e4ef836d
#: ../develop/plone/serving/traversing.rst:156
msgid "Getting physical path"
msgstr ""

# 926dab790d75479285cd7ce1e22d9f53
#: ../develop/plone/serving/traversing.rst:158
msgid "Use ``getPhysicalPath()``. Example::"
msgstr ""

# 3280b8fa2d3f4b4694e812f9fa5b6f5d
#: ../develop/plone/serving/traversing.rst:163
msgid "Getting virtual path"
msgstr ""

# f1b21366349b4272828622a665c496b9
#: ../develop/plone/serving/traversing.rst:165
msgid ""
"For content items you can use ``absolute_url_path()`` from `OFS.Traversable "
"<http://svn.zope.org/Zope/trunk/src/OFS/Traversable.py?rev=122638&view=auto>`_::"
msgstr ""

# 44606dc7f86b46e0a29041f271b68c10
#: ../develop/plone/serving/traversing.rst:170
msgid ""
"Map physical path to virtual path using HTTP request object "
"``physicalPathToVirtualPath()``. Example::"
msgstr ""

# 7e8f2efa189e475c9d114d7ca9277468
#: ../develop/plone/serving/traversing.rst:181
msgid ""
"The virtual path is not necessarily the path relative to the site root, "
"depending on the virtual host configuration."
msgstr ""

# a4fb5e9a670d402a8146c70002a11b03
#: ../develop/plone/serving/traversing.rst:185
msgid "Getting item path relative to the site root"
msgstr ""

# a57e849570204ac8806ac15575144279
#: ../develop/plone/serving/traversing.rst:187
msgid "There is no a direct, easy way to accomplish this."
msgstr ""

# cfdb8979b5f745f7a37f212785a03416
#: ../develop/plone/serving/traversing.rst:216
msgid "Getting canonical object (breadcrumbs, visual path)"
msgstr ""

# 976ecea1fb9e4528a6046250676dd3f3
#: ../develop/plone/serving/traversing.rst:218
msgid ""
"The visual path is presented in the breadcrumbs. It is how the site visitor "
"sees the object path."
msgstr ""

# 120f7ae10b694088aee8a2fcac6cba66
#: ../develop/plone/serving/traversing.rst:221
msgid "It may differ from the physical path:"
msgstr ""

# b01745b2d3134cc98fbc574d5ccbc69e
#: ../develop/plone/serving/traversing.rst:223
msgid "The *default content item* is not shown in the visual path."
msgstr ""

# d23738a22444483a9e14db054fb379d1
#: ../develop/plone/serving/traversing.rst:224
msgid "The *default view* is not shown in the visual path."
msgstr ""

# aba757499bfb4347b79a296588296182
#: ../develop/plone/serving/traversing.rst:226
msgid ""
"The canonical object is the context object which the user sees from the "
"request URL:"
msgstr ""

# 56b4da83e714494d8000a387e11a5ab4
#: ../develop/plone/serving/traversing.rst:236
msgid "Getting object URL"
msgstr ""

# bd53829d12e54cfd9b1e451599265690
#: ../develop/plone/serving/traversing.rst:238
msgid "Use ``absolute_url()``. See Traversable_."
msgstr ""

# e0a77ad48be84b57b32dd1f3726105dd
#: ../develop/plone/serving/traversing.rst:240
msgid ""
"**URL mangling warning**: ``absolute_url()`` is sensitive to virtual host "
"URL mappings. ``absolute_url()`` will return different results depending on "
"if you access your site from URLs http://yourhost/ or "
"http://yourhost:8080/Plone.  Do not persistently store the result of "
"``absolute_url()``."
msgstr ""

# dd449edb3e774ec6affcb29b74931574
#: ../develop/plone/serving/traversing.rst:251
msgid "Getting the parent"
msgstr ""

# ddbb1e25efc741f398c877e6278030ef
#: ../develop/plone/serving/traversing.rst:253
msgid ""
"The object *parent* is accessible is acquisition_ chain for the object is "
"set."
msgstr ""

# 8ec8e046130e4de5b227bfc17d284cf6
#: ../develop/plone/serving/traversing.rst:256
msgid "Use ``aq_parent``::"
msgstr ""

# ed354c0d3bb14661b987555d83629f9d
#: ../develop/plone/serving/traversing.rst:260
msgid ""
"The parent is defined as ``__parent__`` attribute of the object instance::"
msgstr ""

# 22cee1445de343f39da8eeae77511c38
#: ../develop/plone/serving/traversing.rst:264
msgid "``__parent__`` is set when object's ``__of__()`` method is called::"
msgstr ""

# 6c58dc4576ad486ebd162f3ba7ec8dbe
#: ../develop/plone/serving/traversing.rst:270
msgid "Getting all parents"
msgstr ""

# b20990267b734e4980fe171a808e80df
#: ../develop/plone/serving/traversing.rst:307
msgid "Getting the site root"
msgstr ""

# de4eb21599f547c6b8da4a941314a82d
#: ../develop/plone/serving/traversing.rst:309
msgid ""
"You can resolve the site root if you have the handle to any context object."
msgstr ""

# e64fedfe78e247dd936425a35dfc2579
#: ../develop/plone/serving/traversing.rst:312
msgid "Using portal_url tool"
msgstr ""

# 363e2c49b7ef4e3f97eab268952a2ea2
#: ../develop/plone/serving/traversing.rst:322
msgid "You can also do shortcut using acquisition::"
msgstr ""

# 5d23ed7bf179483ba754844e6e624241
#: ../develop/plone/serving/traversing.rst:326
msgid ""
"Application code should use the ``getToolByName`` method, rather than simply"
" acquiring the tool by name, to ease forward migration (e.g., to Zope3)."
msgstr ""

# 736a3e3e022f4e7caaaa841488383c99
#: ../develop/plone/serving/traversing.rst:331
msgid "Using ``getSite()``"
msgstr ""

# 86bc76bd4a8b485fbb0653ac7cf13f8d
#: ../develop/plone/serving/traversing.rst:333
msgid ""
"Site is also stored as a thread-local variable. In Zope each request is "
"processed in its own thread. Site thread local is set when the request "
"processing starts."
msgstr ""

# a2df11d80894407aa22085757d26a284
#: ../develop/plone/serving/traversing.rst:337
msgid ""
"You can use this method even if you do not have the context object "
"available, assuming that your code is called after Zope has traversed the "
"context object once."
msgstr ""

# dda8173d80df4ba9bdb6a48d4a5a57f7
#: ../develop/plone/serving/traversing.rst:347
msgid ""
"Before Plone 4.3 getSite resided in zope.app.component.hooks. See "
"http://plone.org/documentation/manual/upgrade-guide/version/upgrading-"
"plone-4.2-to-4.3/referencemanual-all-pages"
msgstr ""

# cf1c9c247a514109897f9c41f03bb884
#: ../develop/plone/serving/traversing.rst:350
msgid ""
"Due to the fact that Plone does not show the default content item as a "
"separate object, the page you are viewing in the browser from the site root "
"URL is not necessary the root item itself. For example, in the default Plone"
" installation this URL internally maps to Page whose id is ``front-page`` "
"and you can still query the actual parent object which is the site root."
msgstr ""

# bd3c569216394d8195bbd481ca3eddc3
#: ../develop/plone/serving/traversing.rst:357
msgid ""
"If you need to traverse using user visible breadcrumbs, see how breadcrumbs "
"viewlet code does it."
msgstr ""

# 8f98f439f30c4740a30f869c11d160b6
#: ../develop/plone/serving/traversing.rst:361
msgid "Traversing back to the site root"
msgstr ""

# cc14a264ca504e959e82d61c7703066f
#: ../develop/plone/serving/traversing.rst:363
msgid ""
"Sometimes ``getSite()`` or ``portal_url`` are not available, but you still "
"have the acquisition chain intact. In these cases you can simply traverse "
"parent objects back to the site root using ``aq_parent`` accessor::"
msgstr ""

# 4af18f16fdd94fa089ce209ce082a618
#: ../develop/plone/serving/traversing.rst:386
msgid "Checking for the site root"
msgstr ""

# cafad1f6eb584228bc4ce4c6f99b4885
#: ../develop/plone/serving/traversing.rst:388
msgid "You can check if the current context object is Plone the site root::"
msgstr ""

# 056d58c0dc804d7187585db55a8bbb51
#: ../develop/plone/serving/traversing.rst:398
msgid "Navigation root"
msgstr ""

# 81a835f628054d5bb41e70b91c615b29
#: ../develop/plone/serving/traversing.rst:400
msgid ""
"In Plone, the Plone site root is not necessarily the navigation root (one "
"site can contain many navigation trees for example for the nested subsites)."
msgstr ""

# ba485202887e4992adcd25ce9b4fc2d1
#: ../develop/plone/serving/traversing.rst:403
msgid ""
"The navigation root check has the same mechanism as the site root check::"
msgstr ""

# 247ba6139182410cb357ad366eef1f3c
#: ../develop/plone/serving/traversing.rst:414
msgid "http://plone.org/products/plone/roadmap/234"
msgstr ""

# 028824b7eeac452e97dfe44003c78988
#: ../develop/plone/serving/traversing.rst:417
msgid "Getting Zope application server handle"
msgstr ""

# 6e6796bb197f4c07a4a83c540818b600
#: ../develop/plone/serving/traversing.rst:419
msgid ""
"You can also access other sites within the same application server from your"
" code."
msgstr ""

# e160a3a160724afa8e23edfe23995af9
#: ../develop/plone/serving/traversing.rst:429
msgid "Acquisition effect"
msgstr ""

# 87b8fc367e1d4be8ae51f4664d4f9f83
#: ../develop/plone/serving/traversing.rst:431
msgid ""
"Sometimes traversal can give you attributes which actually do not exist on "
"the object, but are inherited from the parent objects in the persistent "
"object graph. See :term:`acquisition`."
msgstr ""

# 7ad25719b26146258a374b2461e8008f
#: ../develop/plone/serving/traversing.rst:436
msgid "Default content item"
msgstr ""

# 6bfc3fd36f694d9cbdceffd1be58f373
#: ../develop/plone/serving/traversing.rst:438
msgid ""
"Default content item or view sets some challenges for the traversing, as the"
" object published path and internal path differ."
msgstr ""

# 5d1970e0c33f43f9be16364398e55194
#: ../develop/plone/serving/traversing.rst:441
msgid ""
"Below is an example to get the folder of the published object (parent folder"
" for the default item) in page templates:"
msgstr ""

# 4fd8bd2316cd43fca029631713a6c292
#: ../develop/plone/serving/traversing.rst:453
msgid ""
"See :doc:`plone_context_state helper "
"</develop/addons/helloworld/extend/content>`"
msgstr ""

# 52f84b0c1d734181bf87190323726a7f
#: ../develop/plone/serving/traversing.rst:456
msgid "Checking if an item is the site front page"
msgstr ""

# 1bc39d6f36474d97a0e4881c0973d546
#: ../develop/plone/serving/traversing.rst:458
msgid "Example code below::"
msgstr ""

# 65525fb95dd04e04a8daec2f66248c2d
#: ../develop/plone/serving/traversing.rst:478
msgid "Custom traversal"
msgstr ""

# 981f095408b54ac3a21f53e180c16ce5
#: ../develop/plone/serving/traversing.rst:480
msgid "There exist many ways to make your objects traversable:"
msgstr ""

# 997380f42aba4e449e4d070a60d36274
#: ../develop/plone/serving/traversing.rst:482
msgid ""
"``__getitem__()`` which makes your objects act like Python dictionary. This "
"is the simplest method and recommended."
msgstr ""

# 6452b7a36f304fafb3b9545912fb5229
#: ../develop/plone/serving/traversing.rst:485
msgid ""
"``IPublishTraverse`` interface. There is an example below and works for "
"making nice urls and path munging."
msgstr ""

# 9c4c3c59e2c74edb843d2b0230a61680
#: ../develop/plone/serving/traversing.rst:488
msgid ""
"``ITraversable`` interface. You can create your own traversing hooks. "
"``zope.traversing.interfaces.ITraversable`` provides an interface "
"traversable objects must provider. You need to register ``ITraversable`` as "
"adapter for your content types.  This is only for publishing methods for "
"HTTP requests."
msgstr ""

# eada9c2ed9a7405da362de9c05a650b4
#: ../develop/plone/serving/traversing.rst:494
msgid ""
"``__bobo_traverse__()`` which is an archaic method from the early 2000s."
msgstr ""

# e6c81e24d39f4052bee323e5d6b85042
#: ../develop/plone/serving/traversing.rst:496
msgid ""
"Zope traversal is a minefield. There are different traversers. One is the "
"*ZPublisher traverser* which does HTTP request looks.  One is "
"``OFS.Traversable.unrestrictedTraverse()`` which is used when you call "
"traverse from Python code. Then another case is "
"``zope.tales.expression.PathExpr`` which uses a really simple traverser."
msgstr ""

# e999e720925b43c983c6a479ce91dc3c
#: ../develop/plone/serving/traversing.rst:502
msgid ""
"If an ``AttributeError`` is risen inside a ``traverse()`` function bad "
"things happen, as Zope publisher specially handles this and raises a "
"``NotFound`` exception which will mask the actual problem."
msgstr ""

# 9821b7731c6449ab9c7536161f1bbca3
#: ../develop/plone/serving/traversing.rst:506
msgid "Example using ``__getitem__()``::"
msgstr ""

# f31c7bc848f84eadaac081718d9473bf
#: ../develop/plone/serving/traversing.rst:542
msgid "Example using ``IPublishTraverse``::"
msgstr ""

# afbaf703b10b447eac8cb3d0f54c74c4
#: ../develop/plone/serving/traversing.rst:603
msgid "More information:"
msgstr ""

# f0dd811aa82047eebc87ebf62d855998
#: ../develop/plone/serving/traversing.rst:605
msgid ""
"http://play.pixelblaster.ro/blog/archive/2006/10/21/custom-traversing-with-"
"five-and-itraversable"
msgstr ""

# af6aa2c59be3425b97405ab927178257
#: ../develop/plone/serving/traversing.rst:608
msgid "Traverse events"
msgstr ""

# e1b08db9d8cd4fe6be174f4ad6be771c
#: ../develop/plone/serving/traversing.rst:610
msgid ""
"Use ``zope.traversing.interfaces.IBeforeTraverseEvent`` for register a "
"traversing hook for Plone site object or such."
msgstr ""

# 44ba958e139d47fb9c72eaf969a77b3d
#: ../develop/plone/serving/traversing.rst:627
msgid ""
"Use ``ZPublisher.BeforeTraverse`` to register traverse hooks for any "
"objects."
msgstr ""

# 29f4dc5450c64f1b85da539b84fcaf67
#: ../develop/plone/serving/traversing.rst:630
msgid "Example - not sure if before travese hooks are persistent or not"
msgstr ""

# c6412f7e511745c6a32ec385e0a305c5
#: ../develop/plone/serving/traversing.rst:633
msgid "Advanced traversing with search conditions"
msgstr ""

# 8456aa1668d54234a4bd3ba103bb8374
#: ../develop/plone/serving/traversing.rst:635
msgid ""
"All Plone content should exist in the :doc:`portal_catalog "
"</develop/plone/searching_and_indexing/query>`.  Catalog provides fast query"
" access with various indexes to the Plone content."
msgstr ""

# a0076912863f4c4189dd24a1ed6ed354
#: ../develop/plone/serving/traversing.rst:642
msgid "See object publishing_."
msgstr ""

# 8e81ff6b07ce4e0b8479be7c09bd7fe0
#: ../develop/plone/serving/webdav.rst:3
msgid "WebDAV"
msgstr ""

# 119d5919beec48f8904d8b208fbddd1f
#: ../develop/plone/serving/webdav.rst:7
msgid ""
"WebDAV is a protocol to manage your site directly from MS Windows Explorer "
"and such.  Plone supports WebDAV without add-ons."
msgstr ""

# 0b808f43a8e143b5ae14105f2339df60
#: ../develop/plone/serving/webdav.rst:15
msgid ""
"WebDAV is enabled by default. A Zope server listening on port 8080 will also"
" accept WebDAV traffic on that port. For common cases, client-side tools "
"should work reasonably well. (http://plone.293351.n2.nabble.com/webdav-"
"status-td7570063.html) (http://stackoverflow.com/questions/9127269/how-can-i"
"-stop-people-accessing-a-plone-server-via-webdav)"
msgstr ""

# 9f5a8fd53ce1411d918da23da6d0260f
#: ../develop/plone/serving/webdav.rst:22
msgid "Enabling WebDAV on an extra port in Zope"
msgstr ""

# 6a5d7707bfa043edb77c1ad56a8ee172
#: ../develop/plone/serving/webdav.rst:24
msgid ""
"Modify your buildout configuration's client setup to add a webdav address:"
msgstr ""

# e701df54a57a427ab0aa126ba52846a6
#: ../develop/plone/serving/webdav.rst:26
msgid "Short ``buildout.cfg`` example::"
msgstr ""

# b113ca66dd1d4102a51be57fc3684398
#: ../develop/plone/serving/webdav.rst:35
msgid ""
"Alternative ``buildout.cfg`` configuration snippet which might be needed for"
" some WebDAV clients::"
msgstr ""

# 26b742a6b4274001a483ca79d2d2fa29
#: ../develop/plone/serving/webdav.rst:47
msgid ""
"These snippets will be in the **generated** ``parts/instance/etc/zope.conf``"
" after buildout has been re-run."
msgstr ""

# 9bf9c04219f74f98ba24384052d05d74
#: ../develop/plone/serving/webdav.rst:50
msgid ""
"This will enable the WebDAV server on http://www.mydomain.com:1980/. Note "
"that you cannot use this URL in your web browser, just in WebDAV clients. "
"Using the web browser will give you an error message ``AttributeError: "
"manage_FTPget``. You could also just run the WebDAV server on ``localhost`` "
"with address 1980, forcing you to either use a WebDAV client locally or "
"proxy WebDAV through Apache."
msgstr ""

# 898a501e596e4ce888212b304b898d7f
#: ../develop/plone/serving/webdav.rst:58
msgid "Disabling WebDAV"
msgstr ""

# 8d528f01d977467bb2f40a4bcd06ece0
#: ../develop/plone/serving/webdav.rst:60
msgid ""
"You can't disable WebDAV in Plone itself, it's tightly integrated in Zope. "
"You could take away the \"Access WebDAV\" permission from everyone, but the "
"Zope server will still answer each request."
msgstr ""

# 36333e5447934f49a40c3214e2fcfb54
#: ../develop/plone/serving/webdav.rst:64
msgid ""
"What you can do: Make your web server filter out the WebDAV commands. This "
"will stop WebDAV requests from reaching your Zope server."
msgstr ""

# b864a0e17c994396b38f136a9b8b556e
#: ../develop/plone/serving/webdav.rst:68
msgid "Nginx"
msgstr ""

# 0505f410f2ca4b4aa4adf5f8e4448e06
#: ../develop/plone/serving/webdav.rst:70
msgid "For nginx, this is done by adding::"
msgstr ""

# a2cfc7b4ea7448a3a1257426e3f472d6
#: ../develop/plone/serving/webdav.rst:74
msgid ""
"to the server block in your nginx.conf. "
"(http://wiki.nginx.org/HttpDavModule)"
msgstr ""

# 48052d5efccf4053941e8a61dd7085c0
#: ../develop/plone/serving/webdav.rst:76
msgid "If you do not use the HttpDavModule, you can add::"
msgstr ""

# 773cbd7c6dd5482abe9a723b94f4fcff
#: ../develop/plone/serving/webdav.rst:82
msgid "to the location block."
msgstr ""

# b5b179bb150d467c8a586afcef445add
#: ../develop/plone/serving/webdav.rst:85
msgid "Apache"
msgstr ""

# 3e012b54c19b46679f35c3371f251176
#: ../develop/plone/serving/webdav.rst:87
msgid ""
"For Apache, you can use the ``limit`` statement, see "
"http://httpd.apache.org/docs/current/mod/core.html#limit"
msgstr ""

# b2bfa3302dfb4cda811b9aff06d30f08
#: ../develop/plone/serving/webdav.rst:91
msgid "Supporting WebDAV in your custom content"
msgstr ""

# b79dffcd2f0543588bc7489f3fdf54d0
#: ../develop/plone/serving/webdav.rst:93
msgid ""
"Please read more about it in the `Dexterity WebDAV manual "
"<https://github.com/plone/plone.dexterity/blob/master/docs/WebDAV.txt>`_."
msgstr ""

# d42c03dc70ca469999c1e9c5ce0d2eda
#: ../develop/plone/serving/webdav.rst:97
msgid "WebDAV notes"
msgstr ""

# d80cbfc6629241e2b66aa0edad21f738
#: ../develop/plone/serving/webdav.rst:99
msgid ""
"WebDAV uses a number of HTTP verbs to perform different operations. The "
"following notes describe how they are implemented in Zope 2 and Dexterity."
msgstr ""

# 810db06d682e4c479c77cb616403fd8a
#: ../develop/plone/serving/webdav.rst:105
msgid ""
"Basic WebDAV support can be found in the ``webdav`` package. This defines "
"two base classes, ``webdav.Resource.Resource`` and "
"``webdav.Collection.Collection``.  ``Collection`` extends ``Resource``. "
"These are mixed into item and container content objects, respectively."
msgstr ""

# 30c04cecac3b49659f4212ba60dc46ee
#: ../develop/plone/serving/webdav.rst:110
msgid ""
"The webdav package also defines the ``NullResource`` object. A "
"``NullResource`` is a kind of placeholder, which supports the HTTP verbs "
"``HEAD``, ``PUT``, and ``MKCOL``."
msgstr ""

# 6a96a39b68c54020b4bc70c923ae30c1
#: ../develop/plone/serving/webdav.rst:114
msgid ""
"Containers based on ``ObjectManager`` (including those in Dexterity) will "
"return a ``NullResource`` if they cannot find the requested object and the "
"request is a WebDAV request."
msgstr ""

# ffe34d64e7df4bde9b9119a11b1937d6
#: ../develop/plone/serving/webdav.rst:118
msgid ""
"The ``zope.filerepresentation`` package defines a number of interfaces which"
" are intended to help manage file representations of content objects. "
"Dexterity uses these interfaces to allow the exact file read and write "
"operations to be overridden without subclassing."
msgstr ""

# f84c248adc304878be4e70a834f0e811
#: ../develop/plone/serving/webdav.rst:124
msgid "``HEAD``"
msgstr ""

# 64b3b0e8637c4840827a21872b68f1e5
#: ../develop/plone/serving/webdav.rst:126
msgid "A ``HEAD`` request retrieves headers only."
msgstr ""

# c2c2efa41c8e4a62a495f596fb1a28fe
#: ../develop/plone/serving/webdav.rst:128
msgid ""
"``Resource.HEAD()`` sets ``Content-Type`` based on ``self.content_type()``, "
"``Content-Length`` based on ``self.get_size()``, ``Last-Modified`` based on "
"``self._p_mtime``, and an ETag based on ``self.http__etag()``, if available."
msgstr ""

# dd9e61ae83644df3a69d6f863b898d4d
#: ../develop/plone/serving/webdav.rst:132
msgid ""
"``Collection.HEAD()`` looks for ``self.index_html.HEAD()`` and returns its "
"value if that exists. Otherwise, it returns a ``405 Method Not Allowed`` "
"response. If there is no ``index_html`` object, it returns ``404 Not "
"Found``."
msgstr ""

# 80dbbb9791004047a189a31d4d4bd194
#: ../develop/plone/serving/webdav.rst:137
msgid "``GET``"
msgstr ""

# 8db7d0601978459aaf422c2f5c976ea0
#: ../develop/plone/serving/webdav.rst:139
msgid "A ``GET`` request retrieves headers and body."
msgstr ""

# 9a8cbe1856804f49b1afe53b60e7b04a
#: ../develop/plone/serving/webdav.rst:141
msgid ""
"Zope calls ``manage_DAVget()`` to retrieve the body. The default "
"implementation calls ``manage_FTPget()``."
msgstr ""

# 0b629db26bba40aaabe6efb1491c6ca9
#: ../develop/plone/serving/webdav.rst:144
msgid ""
"In Dexterity, ``manage_FTPget()`` adapts ``self`` to ``IRawReadFile`` and "
"uses its ``mimeType`` and ``encoding`` properties to set the ``Content-"
"Type`` header, and its ``size()`` method to set ``Content-Length``."
msgstr ""

# a8a2fd91e7f34b4fbe6052e058b26a80
#: ../develop/plone/serving/webdav.rst:148
msgid ""
"If the ``IRawReadFile`` adapter is also an ``IStreamIterator``, it will be "
"returned for the publisher to consume directly. This provides for efficient "
"serving of large files, although it does require that the file can be read "
"in its entirety with the ZODB connection closed. Dexterity solves this "
"problem by writing the file content to a temporary file on the server."
msgstr ""

# ec9e2ce8bded45a2963a2f8b1fa6b647
#: ../develop/plone/serving/webdav.rst:154
msgid ""
"If the ``IRawReadFile`` adapter is not a stream iterator, its contents are "
"returned as a string, by calling its ``read()`` method. Note that this loads"
" the entire file contents into memory on the server."
msgstr ""

# bc0b5c46dd124c1b85612e3d88cf659e
#: ../develop/plone/serving/webdav.rst:158
msgid ""
"The default ``IRawReadFile`` implementation for Dexterity content returns an"
" :RFC:`2822` style message document. Most fields on the object and any "
"enabled behaviours will be turned into UTF-8 encoded headers. The primary "
"field, if any, will be returned in the body, also most likely encoded as an "
"UTF-8 encoded string. Binary data may be base64 encoded instead."
msgstr ""

# d39d3a8bb2b04d698188ff9ef4edba3c
#: ../develop/plone/serving/webdav.rst:164
msgid ""
"A type which wishes to override this behaviour can provide its own adapter. "
"For example, an image type could return the raw image data."
msgstr ""

# 13912d716b2546b68b80433093132861
#: ../develop/plone/serving/webdav.rst:168
msgid "``PUT``"
msgstr ""

# 494169b891254aeebd2f93e3b7201da8
#: ../develop/plone/serving/webdav.rst:170
msgid ""
"A ``PUT`` request reads the body of a request and uses it to update a "
"resource that already exists, or to create a new object."
msgstr ""

# a1e4ae410c134d5f8395e27664550dea
#: ../develop/plone/serving/webdav.rst:173
msgid ""
"By default ``Resource.PUT()`` fails with ``405 Method Not Allowed``. That "
"is, it is not by default possible to ``PUT`` to a resource that already "
"exists. The same is true of ``Collection.PUT()``."
msgstr ""

# dc8870cc732749f384051b1c5d5d173e
#: ../develop/plone/serving/webdav.rst:177
msgid ""
"In Dexterity, the ``PUT()`` method is overridden to adapt self to "
"``zope.filerepresentation.IRawWriteFile``, and call its ``write()`` method "
"one or more times, writing the contents of the request body, before calling "
"``close()``. The ``mimeType`` and ``encoding`` properties will also be set "
"based on the value of the ``Content-Type`` header, if available."
msgstr ""

# 242c3f739fe14a6e87d8d436d294cdf2
#: ../develop/plone/serving/webdav.rst:183
msgid ""
"The default implementation of ``IRawWriteFile`` for Dexterity objects "
"assumes the input is an :RFC:`2822` style message document. It will read "
"header values and use them to set fields on the object or in behaviours, and"
" similarly read the body and update the corresponding primary field."
msgstr ""

# ce470fcb27714522bfe0de701bf37733
#: ../develop/plone/serving/webdav.rst:188
msgid ""
"``NullResource.PUT()`` is responsible for creating a new content object and "
"initialising it (recall that a ``NullResource`` may be returned if a WebDAV "
"request attempts to traverse to an object which does not exist). It sniffs "
"the content type and body from the request, and then looks for the "
"``PUT_factory()`` method on the parent folder."
msgstr ""

# d7bab52fd31e4d77a31193dde01285f5
#: ../develop/plone/serving/webdav.rst:194
msgid ""
"In Dexterity, ``PUT_factory()`` is implemented to look up an "
"``IFileFactory`` adapter on self and use it to create the empty file. The "
"default implementation will use the ``content_type_registry`` tool to "
"determine a type name for the request (e.g. based on its extension or MIME "
"type), and then construct an instance of that type."
msgstr ""

# 64a57620cd784253ad87ef48f0ab1f48
#: ../develop/plone/serving/webdav.rst:200
msgid ""
"Once an instance has been constructed, the object will be initialised by "
"calling its ``PUT()`` method, as above."
msgstr ""

# 577c9b08c91841aebd2070b709d5bdb4
#: ../develop/plone/serving/webdav.rst:203
msgid ""
"Note that when content is created via WebDAV, an ``IObjectCreatedEvent`` "
"will be fired from the ``IFileFactory`` adapter, just after the object has "
"been constructed. At this point, none of its values will be set. "
"Subsequently, at the end of the ``PUT()`` method, an "
"``IObjectModifiedEvent`` will be fired. This differs from the event sequence"
" of an object created through the web. Here, only an ``IObjectCreatedEvent``"
" is fired, and only *after* the object has been fully initialised."
msgstr ""

# 493fbc106ab240738e4e8613410d204b
#: ../develop/plone/serving/webdav.rst:212
msgid "``DELETE``"
msgstr ""

# 629f3bc3ab9744c1ab47a460363f19db
#: ../develop/plone/serving/webdav.rst:214
msgid "A ``DELETE`` request instructs the WebDAV server to delete a resource."
msgstr ""

# 376856497ae74e139c0bf971f6b6007d
#: ../develop/plone/serving/webdav.rst:216
msgid ""
"``Resource.DELETE()`` calls ``manage_delObjects()`` on the parent folder to "
"delete an object."
msgstr ""

# 5c6e4dc24896472dac23ae30816790da
#: ../develop/plone/serving/webdav.rst:219
msgid ""
"``Collection.DELETE()`` does the same, but checks for write locks of all "
"children of the collection, recursively, before allowing the delete."
msgstr ""

# f2ef9916fb3841d48f7710aeb297abb7
#: ../develop/plone/serving/webdav.rst:223
msgid "``PROPFIND``"
msgstr ""

# be53f1ff13b3427d8e6c0726ac7c09e2
#: ../develop/plone/serving/webdav.rst:225
msgid ""
"A ``PROPFIND`` request returns all or a set of WebDAV properties. WebDAV "
"properties are metadata used to describe an object, such as the last "
"modified time or the author."
msgstr ""

# dc49356cd567400190e8042fd5eba302
#: ../develop/plone/serving/webdav.rst:229
msgid ""
"``Resource.PROPFIND()`` parses the request and then looks for a "
"``propertysheets`` attribute on self."
msgstr ""

# 7f823e51cb39489280dda89eb45e268b
#: ../develop/plone/serving/webdav.rst:232
msgid ""
"If an ``allprop`` request is received, it calls ``dav__allprop()``, if "
"available, on each property sheet. This method returns a list of name/value "
"pairs in the correct WebDAV XML encoding, plus a status."
msgstr ""

# 052b987513e24eb0aba32f256d6f9e56
#: ../develop/plone/serving/webdav.rst:236
msgid ""
"If a ``propnames`` request is received, it calls ``dav__propnames()``, if "
"available, on each property sheet. This method returns a list of property "
"names in the correct WebDAV XML encoding, plus a status."
msgstr ""

# d75b9ee2886b456da9407ceae7a54bfe
#: ../develop/plone/serving/webdav.rst:240
msgid ""
"If a ``propstat`` request is received, it calls ``dav__propstats()``, if "
"available, on each property sheet, for each requested property. This method "
"returns a property name/value pair in the correct WebDAV XML encoding, plus "
"a status."
msgstr ""

# e792d8ab76df477196692d9e3ab46cde
#: ../develop/plone/serving/webdav.rst:245
msgid ""
"The ``PropertyManager`` mixin class defines the ``propertysheets`` variable "
"to be an instance of ``DefaultPropertySheets``. This in turn has two "
"property sheets, ``default``, a ``DefaultProperties`` instance, and "
"``webdav``, a ``DAVProperties`` instance."
msgstr ""

# 0a2b7f01abbc4f5fb35a06b928d8e675
#: ../develop/plone/serving/webdav.rst:250
msgid ""
"The ``DefaultProperties`` instance contains the main property sheet. This "
"typically has a ``title`` property, for example."
msgstr ""

# 0031bfae1c1f4106a7898c2a2a348839
#: ../develop/plone/serving/webdav.rst:253
msgid ""
"``DAVProperties`` will provides various core WebDAV properties. It defines a"
" number of read-only properties: ``creationdate``, ``displayname``, "
"``resourcetype``,  ``getcontenttype``, ``getcontentlength``, ``source``, "
"``supportedlock``, and ``lockdiscovery``. These in turn are delegated to "
"methods prefixed with ``dav__``, so e.g. reading the ``creationdate`` "
"property calls ``dav__creationdate()`` on the property sheet instance. These"
" methods in turn return values based on the property manager instance (i.e. "
"the content object). In particular:"
msgstr ""

# b416b0e6ef864366ac96f4799034bc15
#: ../develop/plone/serving/webdav.rst:262
msgid "``creationdate``"
msgstr ""

# 31e4fb6fc93141d8ad4b01840aae6a2b
#: ../develop/plone/serving/webdav.rst:263
msgid "returns a fixed date (January 1st, 1970)."
msgstr ""

# cf7c4ee67679401a8ce856ab7aa75c57
#: ../develop/plone/serving/webdav.rst:264
msgid "``displayname``"
msgstr ""

# 209e37e9bc96406482f9c28f8283c8a8
#: ../develop/plone/serving/webdav.rst:265
msgid "returns the value of the ``title_or_id()`` method"
msgstr ""

# 50261dec0b15401db624a844e77ddd25
#: ../develop/plone/serving/webdav.rst:266
msgid "``resourcetype``"
msgstr ""

# 48dfdfca63124ffeb24e02b167e4b501
#: ../develop/plone/serving/webdav.rst:267
msgid "returns an empty string or <n:collection/>"
msgstr ""

# f6ff5ab8e12749f8a5a7802839dec587
#: ../develop/plone/serving/webdav.rst:268
msgid "``getlastmodified``"
msgstr ""

# 0df8e20443794acdab426dc42f7b7f5b
#: ../develop/plone/serving/webdav.rst:269
msgid "returns the ZODB modification time"
msgstr ""

# 634d0b7dee784fa78c4f538103511bd1
#: ../develop/plone/serving/webdav.rst:273
msgid "``getcontenttype``"
msgstr ""

# c82b2fc2ef144775b60ac24b3153eeab
#: ../develop/plone/serving/webdav.rst:271
msgid ""
"delegates to the ``content_type()`` method, falling back on the "
"``default_content_type()`` method. In Dexterity, ``content_type()`` is "
"implemented to look up the ``IRawReadFile`` adapter on the context and "
"return the value of its ``mimeType`` property."
msgstr ""

# 29b2f086fdbe49439b149f9026553484
#: ../develop/plone/serving/webdav.rst:279
msgid "``getcontentlength``"
msgstr ""

# 78a14f3de68b46e28c484a9d92071def
#: ../develop/plone/serving/webdav.rst:276
msgid ""
"delegates to the ``get_size()`` method (which is also used for the \"size\" "
"column in Plone folder listings). In Dexterity, this looks up a "
"``zope.size.interfaces.ISized`` adapter on the object and calls "
"``sizeForSorting()``. If this returns a unit of ``'bytes'``, the value "
"portion is used. Otherwise, a size of 0 is returned."
msgstr ""

# 40f6c624d0ee476288fc23170d2d0e14
#: ../develop/plone/serving/webdav.rst:281
msgid "``source``"
msgstr ""

# 93cd28cc9d5e42b4bbf7e53820e37b46
#: ../develop/plone/serving/webdav.rst:282
msgid "returns a link to ``/document_src``, if that attribute exists"
msgstr ""

# 2fd822b9378046fd821348a2b638e2d0
#: ../develop/plone/serving/webdav.rst:283
msgid "``supportedlock``"
msgstr ""

# 79ac29dff0a34aea8b5c545cec12a00c
#: ../develop/plone/serving/webdav.rst:284
msgid "indicates whether ``IWriteLock`` is supported by the content item"
msgstr ""

# 44739eb92303494aae92a793a0006105
#: ../develop/plone/serving/webdav.rst:286
msgid "``lockdiscovery``"
msgstr ""

# d7c08c6e82114a6ba12ddb484bcf8b55
#: ../develop/plone/serving/webdav.rst:286
msgid "returns information about any active locks"
msgstr ""

# 30186722fc3147b7be614d6fa1a0bba3
#: ../develop/plone/serving/webdav.rst:288
msgid ""
"Other properties in this and any other property sheets are returned as "
"stored when requested."
msgstr ""

# 25a6f3987a964cb7867c562576aced5a
#: ../develop/plone/serving/webdav.rst:291
msgid ""
"If the ``PROPFIND`` request specifies a depth of 1 or infinity (i.e. the "
"client wants properties for items in a collection), the process is repeated "
"for all items returned by the ``listDAVObjects()`` methods, which by default"
" returns all contained items via the ``objectValues()`` method."
msgstr ""

# 80d7ca41a20b49bf8177f2227a832862
#: ../develop/plone/serving/webdav.rst:299
msgid "``PROPPATCH``"
msgstr ""

# 0a80dda128a74a939befd43a494a2ec0
#: ../develop/plone/serving/webdav.rst:301
msgid ""
"A ``PROPPATCH`` request is used to update the properties on an existing "
"object."
msgstr ""

# 74b3eaa4e67e4b128bafe00d2fe770c3
#: ../develop/plone/serving/webdav.rst:303
msgid ""
"``Resource.PROPPATCH()`` deals with the same types of properties from "
"property sheets as ``PROPFIND()``. It uses the ``PropertySheet`` API to add "
"or update properties as appropriate."
msgstr ""

# e8d7265675694302833a0dda35b1cf8e
#: ../develop/plone/serving/webdav.rst:308
msgid "``MKCOL``"
msgstr ""

# 36846bcc27264b1a9928f221542e4696
#: ../develop/plone/serving/webdav.rst:310
msgid ""
"A ``MKCOL`` request is used to create a new collection resource, i.e. create"
" a new folder."
msgstr ""

# dac6ec8d423c4b8a94ba2f4a7b7fad3b
#: ../develop/plone/serving/webdav.rst:313
msgid ""
"``Resource.MKCOL()`` raises 405 Method Not Allowed, because the resource "
"already exists (remember that in WebDAV, the ``MKCOL`` request, like a "
"``PUT`` for a new resource, is sent with a location that specifies the "
"desired new resource location, not the location of the parent object)."
msgstr ""

# 02f497702da943f6bbf780ebe64a6947
#: ../develop/plone/serving/webdav.rst:318
msgid ""
"``NullResource.MKCOL()`` handles the valid case where a ``MKCOL`` request "
"has been sent to a new resource. After checking that the resource does not "
"already exist, that the parent is indeed a collection (folderish item), and "
"that the parent is not locked, it calls the ``MKCOL_handler()`` method on "
"the parent folder."
msgstr ""

# d5efc2f7954f43e5b040d0a4d0f0a6ab
#: ../develop/plone/serving/webdav.rst:324
msgid ""
"In Dexterity, ``MKCOL()_handler`` is overridden to adapt self to an "
"``IDirectoryFactory`` from ``zope.filerepresentation`` and use this to "
"create a directory. The default implementation simply calls "
"``manage_addFolder()`` on the parent. This will create an instance of the "
"``Folder`` type."
msgstr ""

# 593bed1253e844c6828a09f6ffae90c4
#: ../develop/plone/serving/webdav.rst:330
msgid "``COPY``"
msgstr ""

# 517b7fc5d78d49eab27777e50f952267
#: ../develop/plone/serving/webdav.rst:332
msgid "A ``COPY`` request is used to copy a resource."
msgstr ""

# c1ba7fe87abc4c1a8bdaa25c3deff17e
#: ../develop/plone/serving/webdav.rst:334
msgid ""
"``Resource.COPY()`` implements this operation using the standard Zope "
"content object copy semantics."
msgstr ""

# d4b901defa5a4843bd88e43e9b9888e6
#: ../develop/plone/serving/webdav.rst:338
msgid "``MOVE``"
msgstr ""

# 549518aae75c4c81942708c81c76e428
#: ../develop/plone/serving/webdav.rst:340
msgid "A ``MOVE`` request is used to relocate or rename a resource."
msgstr ""

# 998260b4193d4981bd2484c313726351
#: ../develop/plone/serving/webdav.rst:342
msgid ""
"``Resource.MOVE()`` implements this operation using the standard Zope "
"content object move semantics."
msgstr ""

# 013c684722504cdd88f377dda161a07f
#: ../develop/plone/serving/webdav.rst:346
msgid "``LOCK``"
msgstr ""

# 2468defdee3845518e3cddeaa94363ed
#: ../develop/plone/serving/webdav.rst:348
msgid "A ``LOCK`` request is used to lock a content object."
msgstr ""

# 5eab1c666beb49068c64625842911aab
#: ../develop/plone/serving/webdav.rst:350
msgid ""
"All relevant WebDAV methods in the ``webdav`` package are lock aware. That "
"is, they check for locks before attempting any operation that would violate "
"a lock."
msgstr ""

# 8decfd8b20ad4a18ba33c7c474b397a8
#: ../develop/plone/serving/webdav.rst:355
msgid ""
"Also note that ``plone.locking`` uses the lock implementation from the "
"``webdav`` package by default."
msgstr ""

# 0e15245977c64a69b4085eaa560864cc
#: ../develop/plone/serving/webdav.rst:358
msgid "``Resource.LOCK()`` implements locking and lock refresh support."
msgstr ""

# 9211f96004b8403ba370bd9a065eb3cd
#: ../develop/plone/serving/webdav.rst:360
msgid ""
"``NullResource.LOCK()`` implements locking on a ``NullResource``. In effect,"
" this means locking the name of the non-existent resource. When a "
"``NullResource`` is locked, it is temporarily turned into a "
"``LockNullResource`` object, which is a persistent object set onto the "
"parent (remember that a ``NullResource`` is a transient object returned when"
" a child object cannot be found in a WebDAV request)."
msgstr ""

# b1b8275e7dbb484da32be0e7306467a6
#: ../develop/plone/serving/webdav.rst:368
msgid "``UNLOCK``"
msgstr ""

# a5fb3d7c677049a7b38e7789819f1231
#: ../develop/plone/serving/webdav.rst:370
msgid "An ``UNLOCK`` request is used to unlock a locked object."
msgstr ""

# a30b5214e2404ea2b0a5c46469b3a212
#: ../develop/plone/serving/webdav.rst:372
msgid "``Resource.UNLOCK()`` handles unlock requests."
msgstr ""

# 0627475508224f4593ff64addbbd6750
#: ../develop/plone/serving/webdav.rst:374
msgid ""
"``LockNullResource.UNLOCK()`` handles unlocking of a ``LockNullResource``. "
"This deletes the ``LockNullResource`` object from the parent container."
msgstr ""

# 3a9b54f6a6c8456b8f17af89fdb63b44
#: ../develop/plone/serving/webdav.rst:378
msgid "Fields on container objects"
msgstr ""

# db006dd114d843fcb7b0c76009709d4d
#: ../develop/plone/serving/webdav.rst:380
msgid ""
"When browsing content via WebDAV, a container object (folderish item) will "
"appear as a folder. Most likely, this object will also have content in the "
"form of schema fields. To make this accessible, Dexterity containers expose "
"a pseudo-file with the name '_data', by injecting this into the return value"
" of ``listDAVObjects()`` and adding a special traversal hook to allow its "
"contents to be retrieved."
msgstr ""

# f610117e99a54b1cb68e31c29eed822f
#: ../develop/plone/serving/webdav.rst:387
msgid ""
"This pseudo-file supports ``HEAD``, ``GET``, ``PUT``, ``LOCK``, ``UNLOCK``, "
"``PROPFIND`` and ``PROPPATCH`` requests (an error will be raised if the user"
" attempts to rename, copy, move or delete it). These operate on the "
"container object, obviously. For example, when the data object is updated "
"via a ``PUT`` request, the ``PUT()`` method on the container is called, by "
"default delegating to an ``IRawWriteFile`` adapter on the container."
msgstr ""

# 6e96db15fb954f6fa312482ded38d769
#: ../develop/plone/serving/xmlrpc.rst:3
msgid "XML-RPC"
msgstr ""

# 9280b2de921b41e0a3d4433f66b682d7
#: ../develop/plone/serving/xmlrpc.rst:9
msgid "Using XML-RPC remote call protocol to manipulate Plone site."
msgstr ""

# 958268ef792d4feaa3fab8f5a6773f8b
#: ../develop/plone/serving/xmlrpc.rst:14
msgid "Zope provides transparent XML-RPC support for any traversable object."
msgstr ""

# cae2dc19faa542abbad7faf9b13eb213
# b7289332141548f3aaf973c261f63bc7
#: ../develop/plone/serving/xmlrpc.rst:26
#: ../develop/plone/serving/xmlrpc.rst:61
msgid ""
"Zope object handles are not transferable across function call boundaries. "
"Thus, you can only call functions with primitive arguments. If you need to "
"call function with object arguments you need to create server side helper "
"code first."
msgstr ""

# be577ae9986148639a7b6fe57e14909a
#: ../develop/plone/serving/xmlrpc.rst:33
msgid "transmogrifier.ploneremote"
msgstr ""

# 829cbbec6a594e22b34e5d61f27db70d
#: ../develop/plone/serving/xmlrpc.rst:36
msgid "Authentication"
msgstr ""

# caaea869fbc9452ca6a68c337e0b480f
#: ../develop/plone/serving/xmlrpc.rst:38
msgid ""
"The simplest way to authenticate the user for XML-RPC calls is to embed HTTP"
" Basic Auth data to URL::"
msgstr ""

# 6572e5bf3a54476fac67955e4719f2f8
#: ../develop/plone/serving/xmlrpc.rst:49
msgid "ZPublisher client"
msgstr ""

# 2fffcee585214f7399a7b24e9f47a4a0
#: ../develop/plone/serving/xmlrpc.rst:51
msgid ""
"XML-RPC does not marshal objects reliable between remote calls. Getting the "
"real remote object can be done with ZPublisher.Client.Object."
msgstr ""

# 42640d8e9b624336b4a9f2493ab21993
#: ../develop/plone/serving/xmlrpc.rst:56
msgid ""
"This approach works only for Python clients and needs Zope libraries "
"available at the client side."
msgstr ""

# 4336e804dbdf4f4896a202b3580ed1b4
#: ../develop/plone/serving/xmlrpc.rst:66
msgid ""
"http://svn.zope.org/Zope/tags/ajung-final-zpt-integration-before-merge-"
"savepoint/utilities/load_site.py?rev=67269&view=auto"
msgstr ""

# db922354f3634b8da85bc544f6de0229
#: ../develop/plone/serving/xmlrpc.rst:68
msgid ""
"http://maurits.vanrees.org/weblog/archive/2009/10/lighting-talks-friday#id2"
msgstr ""

# 0c5d6d03a493420d89f3a617457dc3a5
#: ../develop/plone/serving/xmlrpc.rst:72
msgid "Web Services API for Plone (wsapi4plone)"
msgstr ""

# 655dbe6a690549e2a846609efd604cf5
#: ../develop/plone/serving/xmlrpc.rst:74
msgid ""
"This is an add-on product exposes more methods available through Zope's XML-"
"RPC api."
msgstr ""

# c207743d844b401b9dd883213eb40b02
#: ../develop/plone/serving/xmlrpc.rst:77
msgid "http://plone.org/products/wsapi4plone.core"
msgstr ""

# 0e4f034200ea4a11b4334c0d6cef7ea4
#: ../develop/plone/serving/xmlrpc.rst:80
msgid "Importing an Image Using WSAPI"
msgstr ""

# 55443bd2e1df4676b2350959c22e7c49
#: ../develop/plone/serving/xmlrpc.rst:82
msgid ""
"In the following example we retrieve, from the 'Pictures' folder, an image "
"called 'red-wine-glass.jpg', post it to a folder called 'ministries' and "
"give it the name 'theimage'."
msgstr ""

# 820b004cb67b4800a086794a91bd32ec
#: ../develop/plone/serving/xmlrpc.rst:100
msgid ""
"For more information see `wsapi4plone.core "
"<http://plone.org/products/wsapi4plone.core/>`_ add-on product adds XML-RPC "
"operations support for Plone."
msgstr ""

# 1da1bcd564fe4cdba3684cfe52b42769
#: ../develop/plone/serving/xmlrpc.rst:109
msgid "http://www.zope.org/Members/Amos/XML-RPC"
msgstr ""

# c0591a7a908b4b498eb534a0cf3041f1
#: ../develop/plone/sessions/cookies.rst:7
msgid "Handling session and other cookies in Plone"
msgstr ""

# 15c15ef50a4245a095c60c9c2327da76
#: ../develop/plone/sessions/cookies.rst:14
msgid "Setting and getting cookies"
msgstr ""

# 65906eb357eb46339a9e63cc50814270
#: ../develop/plone/sessions/cookies.rst:16
msgid "http://www.dieter.handshake.de/pyprojects/zope/book/chap3.html"
msgstr ""

# c9ba9bb339a14e6f96ff45c9d6f09749
#: ../develop/plone/sessions/cookies.rst:18
msgid ""
"http://stackoverflow.com/questions/1034252/how-do-you-get-and-set-cookies-"
"in-zope-and-plone"
msgstr ""

# d4b4632c326449d0ae8117c76c4f9f39
#: ../develop/plone/sessions/cookies.rst:21
msgid "Reading cookies"
msgstr ""

# 153e96e94701413186ac0200deed2d4a
#: ../develop/plone/sessions/cookies.rst:23
msgid "Usually you want to read incoming cookies sent by the browser."
msgstr ""

# bfe712c40cec49a998cc1f8069176019
#: ../develop/plone/sessions/cookies.rst:30
msgid "Setting cookies"
msgstr ""

# af056b026c6943e19db273a239759561
#: ../develop/plone/sessions/cookies.rst:32
msgid ""
"See `HTTPResponse.setCookie() "
"<https://github.com/zopefoundation/Zope/blob/master/src/ZPublisher/HTTPResponse.py#L241>`_."
msgstr ""

# 654a2b67a210438aba15b037379a9657
#: ../develop/plone/sessions/cookies.rst:35
msgid "Modifying HTTP response cookies"
msgstr ""

# c17a9853c5904d7484e9b08f591d6778
#: ../develop/plone/sessions/cookies.rst:37
msgid ""
"You might want to tune up or clean cookies after some other part of Plone "
"code has set them. You can do this in :doc:`post-publication event handler "
"</develop/plone/serving/http_request_and_response>`."
msgstr ""

# 598949f8310b4ea7bb34b58ca0334bbe
#: ../develop/plone/sessions/cookies.rst:40
msgid "Example ``cleancookies.py`` (needs ZCML subscriber registration too)::"
msgstr ""

# bcb0b2f09b094e0683bbed3b76966595
#: ../develop/plone/sessions/cookies.rst:74
msgid "Default Plone cookies"
msgstr ""

# ca5d2a59ca9b4f2290b64389031046ff
#: ../develop/plone/sessions/cookies.rst:76
msgid "Typical Plone cookies::"
msgstr ""

# 0cc581989d6d467e8a4daabca4fbcd6a
#: ../develop/plone/sessions/cookies.rst:97
msgid "Zope session cookie"
msgstr ""

# f862573f08fe482e85eed0752a9fdac5
#: ../develop/plone/sessions/cookies.rst:99
msgid "This cookie looks like::"
msgstr ""

# 0f1b5bd5c3af466bbc1d845ee5fd3165
#: ../develop/plone/sessions/cookies.rst:103
msgid "It is set first time when session data is written."
msgstr ""

# cf097d6d78af476cbbc51462b8ded79f
#: ../develop/plone/sessions/cookies.rst:106
msgid "Language cookie"
msgstr ""

# 70922de8b8544a7d98e9700275f79c3d
#: ../develop/plone/sessions/cookies.rst:108
msgid ""
"``I18N_LANGUAGE`` is set by ``portal_languages`` tool. Disable it by *Use "
"cookie for manual override* setting in ``portal_languages``."
msgstr ""

# 4388f84121e44a2ca6140a7e81319573
#: ../develop/plone/sessions/cookies.rst:112
msgid ""
"Also, language cookie has a special lifecycle when LinguaPlone is installed."
" This may affect your front-end web server caching. If configured "
"improperly, the language cookie gets set on images and static assets like "
"CSS HTTP responses."
msgstr ""

# d38f4e73951f4b80a315faf3cf011596
#: ../develop/plone/sessions/cookies.rst:116
msgid ""
"http://stackoverflow.com/questions/5715216/why-plone-3-sets-language-cookie-"
"to-css-js-registry-files-and-how-to-get-rid-o"
msgstr ""

# 1e1e8d31eb4640019a3c8f87a19d3285
#: ../develop/plone/sessions/cookies.rst:119
msgid "Session cookie lifetime"
msgstr ""

# 9e672de49e1a47faa0ef0a9d045d04a6
#: ../develop/plone/sessions/cookies.rst:121
msgid "Setting session cookie lifetime"
msgstr ""

# f62f5e178b73492bbfb5fad3fefaa989
#: ../develop/plone/sessions/cookies.rst:123
msgid "http://plone.org/documentation/kb/cookie-duration"
msgstr ""

# 1c3e9b1617664600b006c2b6c3b78479
#: ../develop/plone/sessions/cookies.rst:126
msgid "Sanitizing cookies for the cache"
msgstr ""

# 8d82ac4b5bd441acb565addd2e1fbd82
#: ../develop/plone/sessions/cookies.rst:128
msgid ""
"You don't want to store HTTP responses with cookies in a front end cache "
"server, because this would be a leak of other users' information."
msgstr ""

# 8b2f36b746bb4b0eb9803017c56c1688
#: ../develop/plone/sessions/cookies.rst:131
msgid ""
"Don't cache pages with cookies set. Also with multilingual sites it makes "
"sense to have unique URLs for different translations as this greatly "
"simplifies caching (you can ignore language cookie)."
msgstr ""

# 620696ac6b2348809eb8ca827cdb03ad
#: ../develop/plone/sessions/cookies.rst:135
msgid "Note that cookies can be set:"
msgstr ""

# c7be6ae5d6bd46d0add5227038aecb21
#: ../develop/plone/sessions/cookies.rst:137
msgid "by the server (Plone itself)"
msgstr ""

# a38e4842d0544ac2aedd41ab805413c6
#: ../develop/plone/sessions/cookies.rst:139
msgid "on the client side, by Javascript (Google Analytics)"
msgstr ""

# bae05005e21540f6bebba0e60aa550b9
#: ../develop/plone/sessions/cookies.rst:141
msgid ""
"... so you might need to clean cookies for both incoming HTTP requests and "
"HTTP responses."
msgstr ""

# deb1be10fb3846948e602e55e34a9f83
#: ../develop/plone/sessions/cookies.rst:147
msgid "Signing cookies"
msgstr ""

# 1f63344c2c7845a6ad80336df8ee5a00
#: ../develop/plone/sessions/cookies.rst:149
msgid "Kind of... crude example"
msgstr ""

# 73cb15a4fd47462a8f087f60b5ae970a
#: ../develop/plone/sessions/cookies.rst:151
msgid "https://gist.github.com/3951630"
msgstr ""

# c4c049ea9eea47f9a857225603de224a
#: ../develop/plone/sessions/index.rst:3
msgid "Sessions and cookies"
msgstr ""

# e93249e2afb440b1b3ed4c425955a892
#: ../develop/plone/sessions/login.rst:3
msgid "Login and logout"
msgstr ""

# 9e175c66b7c344d0b44903bf5ddf5ed1
#: ../develop/plone/sessions/login.rst:7
msgid "Login and logout related programming activities in Plone"
msgstr ""

# 6e14282de6394e1d848747f99c293c50
#: ../develop/plone/sessions/login.rst:14
msgid "This chapter contains login and logout related code snippets."
msgstr ""

# 47d9fb137e3445779b2f8209b0cb58d4
#: ../develop/plone/sessions/login.rst:17
msgid "Login entry points"
msgstr ""

# 127fca1c2c524585b75f24247d88cc26
#: ../develop/plone/sessions/login.rst:19
msgid "There are two login points in Plone"
msgstr ""

# 4191fd76415342ef8a299a2d8b7f3c0a
#: ../develop/plone/sessions/login.rst:21
msgid ""
"``/login`` view (appended to any content URL) directs you to the page where "
"you came from after the login."
msgstr ""

# 27e778d7c26545ab81db675c948e3306
#: ../develop/plone/sessions/login.rst:23
msgid ""
"``/login_form`` view does login without the redirect back to the original "
"page."
msgstr ""

# ac2bab8ae9bd4e26a572582a73189d6f
#: ../develop/plone/sessions/login.rst:25
msgid "In addition, the ``/logout`` action logs the user out."
msgstr ""

# 5cad794cb51f4ec8aad33de72e8c9596
#: ../develop/plone/sessions/login.rst:27
msgid ""
"The logic that drives the login process is implemented using the CMF form "
"controller framework (legacy). To customize it, you need to override one or "
"more of the ``login_*`` scripts. This can be accomplished in two ways: "
"register your own skin directory or use `z3c.jbot "
"<https://pypi.python.org/pypi/z3c.jbot>`_. Note that in both cases, you need"
" to copy the ``.metadata`` file as well."
msgstr ""

# 4dd617f19f5d42f18e0493b1be525603
#: ../develop/plone/sessions/login.rst:31
msgid "Extracting credentials"
msgstr ""

# ae9c55264eba4e4aa7a63c1147744237
#: ../develop/plone/sessions/login.rst:33
msgid ""
"Extracting credentials try to extract log-in (username, password) from HTTP "
"request."
msgstr ""

# 920412cb658c406889c9805f08d56084
#: ../develop/plone/sessions/login.rst:35
msgid ""
"Below is an example how to extract and authenticate the user manually. It is"
" mostly suitable for unit testing. Note that given login field isn't "
"necessarily the username. For example, `betahaus.emaillogin "
"<https://pypi.python.org/pypi/betahaus.emaillogin>`_ add-on authenticates "
"users by their email addresses."
msgstr ""

# 52a0f85bb3354e6f816b056959d240bc
#: ../develop/plone/sessions/login.rst:40
msgid ""
"Credential extraction will go through all plug-ins registered for `PlonePAS "
"<https://github.com/plone/Products.PlonePAS/blob/master/README.txt>`_ "
"system."
msgstr ""

# 774f76e9eed24f1a961cf59568daefe4
#: ../develop/plone/sessions/login.rst:43
msgid ""
"The first found login/password pair attempt will be used for user "
"authentication."
msgstr ""

# 21a1f50cc58b4d88bc73f5f9efb52a26
# fb6976cc5b2a442a8ef58c77c63b3b51
#: ../develop/plone/sessions/login.rst:45
#: ../develop/plone/sessions/login.rst:99
msgid "Unit test example::"
msgstr ""

# 1279fa4969714c20a7f7f765fcfe7ff7
#: ../develop/plone/sessions/login.rst:85
msgid "Authenticating the user"
msgstr ""

# 3dd139770e0d433dbf065f5c44bc347d
#: ../develop/plone/sessions/login.rst:88
msgid "Using username and password"
msgstr ""

# f04afcdafade4f4f9c9585c0c564bac2
#: ../develop/plone/sessions/login.rst:90
msgid ""
"Authenticating the user will check that username and password are correct."
msgstr ""

# c0c0df824da742438abebc20d26ae398
#: ../develop/plone/sessions/login.rst:92
msgid ""
"Pluggable Authentication Service (acl_users under site root) will go through"
" all authentication plug-ins and return the first successful authenticated "
"users."
msgstr ""

# 1a38fb59126b45db94c582d96a6ab441
#: ../develop/plone/sessions/login.rst:96
msgid ""
"Read more in `PlonePAS "
"<https://github.com/plone/Products.PlonePAS/blob/master/README.txt>`_."
msgstr ""

# 1e703595808742ff8016b5a58e9c3b6e
#: ../develop/plone/sessions/login.rst:111
msgid "Using username only"
msgstr ""

# 15a0dc9e7d10415685000160d20cd6cd
#: ../develop/plone/sessions/login.rst:113
msgid "Useful for sudo style logins."
msgstr ""

# 3b155204e99747f88aad671df72cd3f6
#: ../develop/plone/sessions/login.rst:126
msgid ""
"http://svn.plone.org/svn/collective/niteoweb.loginas/trunk/niteoweb/loginas/browser/login_as.py"
msgstr ""

# a7b974061a73455e83222ee2c4b9b1f3
#: ../develop/plone/sessions/login.rst:129
msgid "Post-login actions"
msgstr ""

# 5cfd75481a1342b292b99bafb2abf75d
#: ../develop/plone/sessions/login.rst:131
msgid ""
"Post-login actions are executed after a successful login. Post-login actions"
" which you could want to change are"
msgstr ""

# 17f73cb0acf5488e98c7acf92ed951a9
#: ../develop/plone/sessions/login.rst:133
msgid "Where to redirect the user after login"
msgstr ""

# 717c947f84904ed1a38b6e661ebf0b0c
#: ../develop/plone/sessions/login.rst:135
msgid "Setting the status message after login"
msgstr ""

# a342ad08200543eca135cef66f8cd484
#: ../develop/plone/sessions/login.rst:137
msgid ""
"Post-login code can be executd with :doc:`events "
"</develop/addons/components/events>` defined in PluggableAuthService "
"service."
msgstr ""

# 35d49f865ec549828a82fae57ddd49eb
#: ../develop/plone/sessions/login.rst:140
msgid "``IUserLoggedInEvent``"
msgstr ""

# 95d405b4f3b6482980cace86f03b0820
#: ../develop/plone/sessions/login.rst:142
msgid "``IUserInitialLoginInEvent`` (logs for the first time)"
msgstr ""

# 1662088142364f2a8d3a8879c14bb7f1
#: ../develop/plone/sessions/login.rst:144
msgid "``IUserLoggedOutEvent``"
msgstr ""

# 69c1428d49444dbc9a51c42d58707ed9
#: ../develop/plone/sessions/login.rst:146
msgid ""
"Here is an :doc:`Grok based </develop/addons/components/grok>` example how "
"to redirect a user to a custom folder after he/she logs in (overrides "
"standard Plone login behavior)"
msgstr ""

# a21ae8e6baac415aba664517255ec5ec
#: ../develop/plone/sessions/login.rst:149
msgid "``postlogin.py``::"
msgstr ""

# 30afbdfd945f44db8dece497ad6674bb
#: ../develop/plone/sessions/login.rst:246
msgid "Post-logout actions"
msgstr ""

# f66c17068b984098992484268fa8aeee
#: ../develop/plone/sessions/login.rst:248
msgid ""
"Products.PlonePAS.tools.membership fires "
"``Products.PlonePAS.events.UserLoggedOutEvent`` when the user logs out via "
"*Log out* menu item."
msgstr ""

# fbc78864ca7e47928a9c36d76ccd0f55
#: ../develop/plone/sessions/login.rst:253
msgid ""
"You cannot catch session timeout events this way... only explicit logout "
"action."
msgstr ""

# 28fc4d30d7ef4c25a9f70c2ec523412e
#: ../develop/plone/sessions/login.rst:256
msgid "Example ZCML"
msgstr ""

# d279861fd7404cf1a9673caf069c4aca
#: ../develop/plone/sessions/login.rst:264
msgid "Example Python::"
msgstr ""

# 274e3ae06dd2420aaed9579105406b65
#: ../develop/plone/sessions/login.rst:287
msgid ""
"https://github.com/plone/Products.PlonePAS/blob/master/Products/PlonePAS/tools/membership.py#L645"
msgstr ""

# df3c7dfb2e664b75b9cff56f849905e8
#: ../develop/plone/sessions/login.rst:290
msgid "Entry points to logged in member handling"
msgstr ""

# d5d159b9051c4d9cb1d30b4f56cb0112
#: ../develop/plone/sessions/login.rst:292
msgid ""
"See "
"``Products.PluggableAuthService.PluggableAuthService._extractUserIds()``. It"
" will try to extract credentials from incoming HTTP request, using different"
" \"extract\" plug-ins of PAS framework."
msgstr ""

# f27e3851467f46bf811ae651a4a84875
#: ../develop/plone/sessions/login.rst:296
msgid ""
"``PluggableAuthService`` is also known as ``acl_users`` persistent object in"
" the site root."
msgstr ""

# 9d4210a03d904dffa025c8fc9dc31c8b
#: ../develop/plone/sessions/login.rst:299
msgid ""
"For each set of extracted credentials, try to authenticate a user;  "
"accumulate a list of the IDs of such users over all our authentication and "
"extraction plugins."
msgstr ""

# 7c6c101976cd4c27a743531ac22f4608
#: ../develop/plone/sessions/login.rst:303
msgid ""
"``PluggableAuthService`` may use :doc:`ZCacheable "
"</manage/deploying/testing_tuning/performance/ramcache>` pattern to see if "
"the user data exists already in the cache, based on any extracted "
"credentials, instead of actually checking whether the credentials are valid "
"or not. PluggableAuthService must be set to have cache end. By default it is"
" not set, but installing LDAP sets it to RAM cache."
msgstr ""

# 45090e14d1f24b3ebd3cfb045fdbe8b3
#: ../develop/plone/sessions/login.rst:312
msgid ""
"https://github.com/plone/plone.app.ldap/blob/master/plone/app/ldap/ploneldap/util.py"
msgstr ""

# e8059730f0a94a2e98453e753bc7b062
#: ../develop/plone/sessions/login.rst:315
msgid "PAS cache settings"
msgstr ""

# 31ed6b68bba6412bbea8310e4600b46e
#: ../develop/plone/sessions/login.rst:317
msgid "Here is a short view snippet to set PAS cache state::"
msgstr ""

# 2ff9ff1d1fd54cfdbad11c0fca6933ca
#: ../develop/plone/sessions/login.rst:384
msgid "... and related ZCML"
msgstr ""

# 8bf2477418884ebb9f01b0b425ef2584
#: ../develop/plone/sessions/login.rst:397
msgid "Login as another user (\"sudo\")"
msgstr ""

# 8dbda227d34246dab114b0e7b0a8c44c
#: ../develop/plone/sessions/login.rst:399
msgid ""
"If you need to login to production system another user and you do not know "
"the password, there is an add-on product for it"
msgstr ""

# 11318357ca0144d9b1e6b9bcb4865767
#: ../develop/plone/sessions/login.rst:402
msgid "https://pypi.python.org/pypi/niteoweb.loginas"
msgstr ""

# a287b2b1453a4c66af7350da1fee5f87
#: ../develop/plone/sessions/login.rst:404
msgid "Another option"
msgstr ""

# 33d25db7e44f4e6296af5a14dcea8f56
#: ../develop/plone/sessions/login.rst:406
msgid "https://pypi.python.org/pypi/Products.OneTimeTokenPAS"
msgstr ""

# 15a454717c1942eeaceb5d43069deab0
#: ../develop/plone/sessions/login.rst:409
msgid "Getting logged in users"
msgstr ""

# 045c986a3c054cddabd3becf685cfc72
#: ../develop/plone/sessions/login.rst:411
msgid "Was somewhere, but can't find where."
msgstr ""

# cd5e68f0dfe74722a65fc327b94bbde2
#: ../develop/plone/sessions/login.rst:414
msgid "Locking user account after too many retries"
msgstr ""

# c45fa8fdf88343afbd9977ed62379eff
#: ../develop/plone/sessions/login.rst:416
msgid ""
"For security reasons, you might want to locking users after too many tries "
"of logins. This protects user accounts against brute force attacks."
msgstr ""

# a2837a38979f4c45a1e34284aebc77c8
#: ../develop/plone/sessions/login.rst:419
msgid ""
"https://svn.plone.org/svn/collective/PASPlugins/Products.LoginLockout/branches"
"/ajung-login-logging/"
msgstr ""

# dc982c487c1649dc81d5a60a985ef3fa
#: ../develop/plone/sessions/login.rst:422
msgid "Hyperlinks to authenticated Plone content in Microsoft Office"
msgstr ""

# 23affc9d48be40e383df608410ded8b0
#: ../develop/plone/sessions/login.rst:424
msgid ""
"Microsoft Office applications (in the first instance Word and Excel), have "
"been observed to attempt to resolve hyperlinks once clicked, prior to "
"sending the hyperlink to the user's browser.  So, if such a link points to "
"some Plone content that requires authentication, the Office application will"
" request the URL first, and receive a 302 Redirect to the ``require_login`` "
"Python script on the relevant Plone instance.  So, if your original "
"hyperlink was like so::"
msgstr ""

# 0087db41de5c40db9501960afcd77793
#: ../develop/plone/sessions/login.rst:434
msgid ""
"and this URL requires authentication, then the Office application will send "
"your browser to this URL::"
msgstr ""

# 728a25e9d40c40efbebd01c9b1da4970
#: ../develop/plone/sessions/login.rst:439
msgid ""
"Normally, this isn't a problem if a user is logged out at the time. They "
"will be presented with the relevant login form and upon login, they will be "
"redirected accordingly to the ``came_from=`` URL."
msgstr ""

# bd1391c07b614526a5f530fff06c35a1
#: ../develop/plone/sessions/login.rst:443
msgid ""
"However, if the user is *already* logged in on the site, visiting this URL "
"will result in an ``Insufficient Privileges`` page being displayed.  This is"
" to be expected of Plone (as this URL is normally only reached if the given "
"user has no access), but because of Microsoft Office's mangling of the URL, "
"may not necessarily be correct as the user may indeed have access."
msgstr ""

# 95341c7502e74c7f8b0f61f259e86e08
#: ../develop/plone/sessions/login.rst:449
msgid ""
"The following drop-in replacement for the ``require_login`` script has been "
"tested in Plone 4.1.3 (YMMV).  Upon a request coming into this script, it "
"attempts (a hack) to traverse to the given path. If permission is actually "
"allowed, Plone redirects the user back to the content. Otherwise, things "
"proceed normally and the user has no access (and is shown the appropriate "
"message)::"
msgstr ""

# e25181eea0754ef4ad8f2c6d66078aba
#: ../develop/plone/sessions/login.rst:485
msgid "For further reading see:"
msgstr ""

# ccbdc921bf2344ec9496bb29d3642208
#: ../develop/plone/sessions/login.rst:487
msgid ""
"http://plone.293351.n2.nabble.com/Linking-to-private-page-from-MS-Word-"
"redirect-to-login-form-td5495131.html"
msgstr ""

# fa5cf1f894ab4064b9eb456e5f8a1bbc
#: ../develop/plone/sessions/login.rst:488
msgid ""
"http://plone.293351.n2.nabble.com/Problem-with-links-to-files-stored-in-"
"Plone-td3055014.html"
msgstr ""

# 42e2a6f64a3c4b3e9646a3a7753819be
#: ../develop/plone/sessions/login.rst:489
msgid ""
"http://bytes.com/topic/asp-classic/answers/596062-hyperlinks-microsoft-"
"applications-access-word-excel-etc"
msgstr ""

# 411a035467b8475fa88dd001d666ccd4
#: ../develop/plone/sessions/login.rst:490
msgid "https://community.jivesoftware.com/docs/DOC-32157"
msgstr ""

# ceca5b9a2fea427e833a0ec41ecf1624
#: ../develop/plone/sessions/login.rst:493
msgid "Single Sign-On and Active Directory"
msgstr ""

# 2e04ed99c4834b84a3a1e1f1e23bcb2e
#: ../develop/plone/sessions/login.rst:495
msgid ""
"Plone can be used in a Microsoft Active Directory environment (or standard "
"Kerberos environment) such that users are automatically and transparently "
"authenticated to Plone without requesting credentials from the user."
msgstr ""

# f5a04b9bf3e04d96b810c9ed08aeee0d
#: ../develop/plone/sessions/login.rst:498
msgid ""
"This is quite an advanced topic and requires some set up on the server, but "
"can be achieved with Plone running on either Unix/Linux or Windows "
"environments."
msgstr ""

# 589051e109714902a8509a0ec8a630a2
#: ../develop/plone/sessions/login.rst:501
msgid ""
"More details can be found in this presentation from Plone Open Garden 2013:"
msgstr ""

# df462c47636942df953dc1bf1b864d58
#: ../develop/plone/sessions/login.rst:503
msgid ""
"http://www.slideshare.net/hammertoe/plone-and-singlesign-on-active-"
"directory-and-the-holy-grail"
msgstr ""

# 21825f337a684f9a884c41112b62c56e
#: ../develop/plone/sessions/login.rst:504
msgid "http://www.youtube.com/watch?v=-FLQxeD5_1M"
msgstr ""

# 042516296e034877b9c3d9ec19cbc7f2
#: ../develop/plone/sessions/login.rst:507
msgid "Preventing duplicate logins from different browsers"
msgstr ""

# 527af63e08494b5e8f1163e055efa272
#: ../develop/plone/sessions/login.rst:509
msgid ""
"http://stackoverflow.com/questions/2562385/limit-concurrent-user-logins-in-"
"plone-zope"
msgstr ""

# 517b8acd08894dcf90f21d376eba9031
#: ../develop/plone/sessions/session_variables.rst:3
msgid "Sessions"
msgstr ""

# f6448dfa02d14e4ca6f663166338fa23
#: ../develop/plone/sessions/session_variables.rst:7
msgid ""
"How Plone handles anonymous and logged-in user sessions. How to store and "
"retrieve session data variables programmatically."
msgstr ""

# 20c1ce438b2f4b398d588e5fda515fd1
#: ../develop/plone/sessions/session_variables.rst:15
msgid "Sessions are visitor sessions at the site."
msgstr ""

# 33bf8c05af5649b59677efde42fc511a
#: ../develop/plone/sessions/session_variables.rst:17
msgid "Sessions have features like:"
msgstr ""

# 013eb2e3cbc34a93ada8bc4822074c89
#: ../develop/plone/sessions/session_variables.rst:19
msgid "Login and logout, but also identified by a cookie"
msgstr ""

# cb0d54c6d4394845a29baa09b4a1b1e1
#: ../develop/plone/sessions/session_variables.rst:21
msgid "Timeout"
msgstr ""

# c9252e1720ce42fcb1fa85ad6f88ab18
#: ../develop/plone/sessions/session_variables.rst:23
msgid "Hold arbitrary per-user data on server side"
msgstr ""

# 6612d3f43e2a4c15b78dee612d118ece
#: ../develop/plone/sessions/session_variables.rst:25
msgid "Identified by cookies"
msgstr ""

# 186e68b331604b42b6a91b8374ac44bb
#: ../develop/plone/sessions/session_variables.rst:27
msgid ""
"In Plone, sessions are managed by Zope's session_data_manager tool. The "
"source code is in `Products.Sessions "
"<https://github.com/zopefoundation/Zope/blob/master/src/Products/Sessions/>`_."
msgstr ""

# 2bf975b5dcf1458ca1457c201e56b064
#: ../develop/plone/sessions/session_variables.rst:32
msgid "Setting a session parameter"
msgstr ""

# 8b01f47642744eabb07e621451b03039
#: ../develop/plone/sessions/session_variables.rst:34
msgid "Plone has a tool called ``session_data_manager``."
msgstr ""

# 36e30e5bf6d246ff85ee3c1011c511ab
#: ../develop/plone/sessions/session_variables.rst:44
msgid "Getting a session"
msgstr ""

# e359ecc4f8514031a2909aa9023b45f4
#: ../develop/plone/sessions/session_variables.rst:46
msgid ""
"Plone has a convenience method to get the session of the current user::"
msgstr ""

# 17e663a6c2ba4ef3b9225309a3062c12
#: ../develop/plone/sessions/session_variables.rst:52
msgid "Getting session id"
msgstr ""

# 5d7c8951f70a4115b68decbc4358e61c
#: ../develop/plone/sessions/session_variables.rst:54
msgid ""
"Each session has a unique id associated with it, for both both anonymous and"
" logged-in users."
msgstr ""

# 37eebdb84abf4195b2b1bf361564aa1a
#: ../develop/plone/sessions/session_variables.rst:57
msgid ""
"Session data is stored in browser cookies, so sessions are browser-specific."
" If the same user has multiple browsers open on your site, each browser will"
" have its own session."
msgstr ""

# b7557ab3913749bfabb4483dd21dfd9d
#: ../develop/plone/sessions/session_variables.rst:61
msgid "If you need to refer to the session id, you can query for it::"
msgstr ""

# 4fe94d05b89d422085f7f7664c5c55c6
#: ../develop/plone/sessions/session_variables.rst:69
msgid "Initial construction of session data"
msgstr ""

# ee44eb2cb15e403f9562baa30b54dd52
#: ../develop/plone/sessions/session_variables.rst:71
msgid ""
"The example below creates a session data variable when it is accessed for "
"the first time. For the subsequent accesses, the same object is returned. "
"The object changes are automatically persisted if it inherits from the "
"``persistent.Persistent`` class."
msgstr ""

# 6a97297f98fa4b8094086639dcd72a53
#: ../develop/plone/sessions/session_variables.rst:78
msgid "Session data stored this way does not survive Plone restart."
msgstr ""

# 893107ebc3d14207ab13a533a97e1d75
#: ../develop/plone/sessions/session_variables.rst:114
msgid "Deleting session data"
msgstr ""

# ea6dc38a267f4682afbf31ff47eec60b
#: ../develop/plone/sessions/session_variables.rst:134
msgid "Session data and unit testing"
msgstr ""

# 6543a77a4daf4ec598b04c33f9867faf
#: ../develop/plone/sessions/session_variables.rst:136
msgid ""
"Please see http://article.gmane.org/gmane.comp.web.zope.plone.user/104243"
msgstr ""

# 715a4a6fe4cd4e0b92852f3a2d672e52
#: ../develop/plone/sessions/session_variables.rst:139
msgid "Using Plone authentication cookie in other systems"
msgstr ""

# 840b9f2f41944bf3b312ea1a39efcaf3
#: ../develop/plone/sessions/session_variables.rst:141
msgid ""
"http://stackoverflow.com/questions/12167202/how-to-wrap-plone-"
"authentication-around-a-third-party-"
"servlet/12171528#comment16307483_12171528"
msgstr ""

# 0838454a414848beaee8e160a235a085
#: ../develop/plone/sessions/session_variables.rst:144
msgid "Exploring Plone session configuration"
msgstr ""

# 83e12ca4e6614bd2b6ad983f7e9f88d3
#: ../develop/plone/sessions/session_variables.rst:146
msgid ""
"http://stackoverflow.com/questions/12211682/how-to-export-plone-session-"
"configuration"
msgstr ""

# 3a7af981f2e44ecca68025ea96a43092
#: ../develop/plone/sessions/statusmessages.rst:3
msgid "Status messages"
msgstr ""

# ed745ea55aaf4c9f8e6697c7f86e0cd3
#: ../develop/plone/sessions/statusmessages.rst:5
msgid ""
"Status messages are session-bound information which allow the user to see "
"notifications when the page is rendered next time."
msgstr ""

# 6753533a2d5740d7be831ecea2b10cf7
#: ../develop/plone/sessions/statusmessages.rst:8
msgid ""
"Status messages are stored session in safely manner which prevents Cross-"
"Site Scripting attacks which might occur due to delivering message "
"information as HTTP GET query parameters."
msgstr ""

# 929332fb43a74fe29eefad738e609c75
#: ../develop/plone/sessions/statusmessages.rst:15
msgid "Setting a status message"
msgstr ""

# d749f79f1e26471494837e6f0f550bc8
#: ../develop/plone/sessions/statusmessages.rst:17
msgid ""
"Status messages have text (unicode) and type (str). All pending status "
"messages are shown to the user when the next page is rendered."
msgstr ""

# debc570ae5da48968dd449d99d6ce7f0
#: ../develop/plone/sessions/statusmessages.rst:28
msgid "Example which you can use in Python scripts::"
msgstr ""

# b325470d303d4bdda4bed1fdb96402bc
#: ../develop/plone/sessions/statusmessages.rst:34
msgid "Rendering status message style by hand-crafted HTML"
msgstr ""

# e5a33093053f43b8a3c46f4ab71ad26f
#: ../develop/plone/sessions/statusmessages.rst:36
msgid ""
"If you want to insert elements looking status messages on your page use the "
"following mark-up"
msgstr ""

# ba08632f912342e181a2ffb60454aa47
#: ../develop/plone/syndication.rst:3
msgid "Syndication"
msgstr ""

# f3bdbf293daf450ea2bab3a18b8c103e
#: ../develop/plone/syndication.rst:10
msgid ""
"In Plone 4.3, there is a new syndication framework that allows you to "
"customize how content in your site is syndicated."
msgstr ""

# 1028865c1dc74f869038196579271959
#: ../develop/plone/syndication.rst:15
msgid "Customize how a content type is syndicated"
msgstr ""

# 8486be86cab448d98992ed714b11bf24
#: ../develop/plone/syndication.rst:17
msgid ""
"In this example, we'll show how to customize how News items are syndicated "
"on your site."
msgstr ""

# 506d85cbbc6546fe9ebc6feff5eb8ab1
#: ../develop/plone/syndication.rst:22
msgid "Create adapter"
msgstr ""

# 85289a905f944cc38b430ec0ddbbaa01
#: ../develop/plone/syndication.rst:24
msgid "We'll create an adapter that overrides the body text::"
msgstr ""

# 2b18f249b8a742bd869717eb58517bb7
#: ../develop/plone/syndication.rst:40
msgid "Register Adapter"
msgstr ""

# be779352450e496b80108448a3abe9e2
#: ../develop/plone/syndication.rst:53
msgid "Dexterity type"
msgstr ""

# 98e532f53a204a5bb97f2dbdfe184cef
#: ../develop/plone/syndication.rst:55
msgid ""
"If the type you're customizing is a dexterity type then Plone will use the "
"Products.CMFPlone.browser.syndication.DexterityItem adapter by default for "
"adopting Dexterity content to syndication.IFeedItem. You can override the "
"default adapter by registering your own adapter this way:"
msgstr ""

# e0fe5caecbaf485fb89776e2eaf3a292
#: ../develop/plone/syndication.rst:88
msgid "Register your Folderish type as syndicatable"
msgstr ""

# 2f80d4135be24151a431c15b6ce7fae9
#: ../develop/plone/syndication.rst:90
msgid "Just make sure it implements the ISyndicatable interface::"
msgstr ""

# 07e97fbd288044b2b08e4e67f520240e
#: ../develop/plone/syndication.rst:101
msgid "Create your own feed type"
msgstr ""

# bf2fb317eea44f1b9a6afe23eee76155
#: ../develop/plone/syndication.rst:103
msgid "Example of creating your own simple feed type and registering it."
msgstr ""

# eb393e471e4f4e78ac17546cb65c5fa6
#: ../develop/plone/syndication.rst:105
msgid "Create your feed template:"
msgstr ""

# a95fe8745e864f048237187fd99cdf36
#: ../develop/plone/syndication.rst:136
msgid "Register the view in ZCML:"
msgstr ""

# 3bd63f9f3ec042c684d7baed1fbb36b9
# cbba267007cc43e9b602557e9d5c11c6
#: ../develop/plone/syndication.rst:149 ../develop/plone/syndication.rst:195
msgid ""
"Finally, register the feed view in the control panel `syndication-settings` "
"in the `Allowed Feed Types` setting. You should be able to append a new feed"
" type like this::"
msgstr ""

# 889c02f425ed4304954834b89f474378
#: ../develop/plone/syndication.rst:156
msgid ""
"Now, if the `My Feed Type` is enabled on a syndicatable item(you'll probably"
" also need to allow editing syndication settings), you'll be able to append "
"`myfeed.xml` onto the url to use the new syndication."
msgstr ""

# 88f6cf51748544729542116f226533ce
#: ../develop/plone/syndication.rst:162
msgid "Creating a json feed type"
msgstr ""

# a5d0bbbb9b104fdd80741acb46fc23ce
#: ../develop/plone/syndication.rst:164
msgid "First, we'll create the json feed view class::"
msgstr ""

# 6e51abcb6ac3496f8b96384b614d95a9
#: ../develop/plone/syndication.rst:183
msgid "Then register the adapter with ZCML:"
msgstr ""

# c6ef94cfe5764d5986b4daef9beb20a5
#: ../develop/plone/syndication.rst:202
msgid ""
"Now, if the `JSON` is enabled on a syndicatable item(you'll probably also "
"need to allow editing syndication settings), you'll be able to append `json`"
" onto the url to use the new syndication."
msgstr ""

# eba2b105170e4f6580b83a432184d42b
#: ../develop/plone/syndication.rst:208
msgid "Available FeedItem properties to override"
msgstr ""

# 337ec14effbd4bf8bb071dc6c01c9c15
#: ../develop/plone/syndication.rst:210
msgid ""
"If you're inheriting Products.CMFPlone.browser.syndication.adapters.BaseItem"
" or Products.CMFPlone.browser.syndication.adapters.DexterityItem in an "
"attempt to override the default feed item behavior, these are the properties"
" available to you to override:"
msgstr ""

# aeee6795305f415b875b5f6d28ccaa76
# 7d326a39856d424db52ea54ed8c4dce6
#: ../develop/plone/syndication.rst:215 ../develop/plone/syndication.rst:243
msgid "link"
msgstr ""

# b5a2fa6c216749ceb9ebdf7e80f68fed
# c630225f61e342bbb4013e31cffda277
#: ../develop/plone/syndication.rst:216 ../develop/plone/syndication.rst:244
msgid "title"
msgstr ""

# e2641e732d744f8dbd0914e26b465295
# a473e622693547b0b61e61a7717f2b86
#: ../develop/plone/syndication.rst:217 ../develop/plone/syndication.rst:245
msgid "description"
msgstr ""

# cc819dd27be34270bd6eafb49218738e
# 43780ee4c16243c5a9dedf3cb86b351d
#: ../develop/plone/syndication.rst:218 ../develop/plone/syndication.rst:246
msgid "categories"
msgstr ""

# a5c42922888c4e3aabf576ce723bfb2f
# e7598775986e4a1bb1dfd6803cbe1190
#: ../develop/plone/syndication.rst:219 ../develop/plone/syndication.rst:247
msgid "published"
msgstr ""

# 6eff842fe95d4ab7bacac45ec51de240
# c55f2456b73a45d28a69d3e8501f005a
#: ../develop/plone/syndication.rst:220 ../develop/plone/syndication.rst:248
msgid "modified"
msgstr ""

# a841c802bfc74c109679dcbdd32c783f
# 34724fcde8e74d91bba9f5c8d8305f7d
#: ../develop/plone/syndication.rst:221 ../develop/plone/syndication.rst:249
msgid "uid"
msgstr ""

# c633415c78c34ae2b2710ad608384bda
# 36756df7924841d693deca2554e9b843
#: ../develop/plone/syndication.rst:222 ../develop/plone/syndication.rst:250
msgid "rights"
msgstr ""

# bca2e84ac3cb433585cc6ca7115df0e8
# 51ac9a8111d14da1a6792709e622e6fb
#: ../develop/plone/syndication.rst:223 ../develop/plone/syndication.rst:251
msgid "publisher"
msgstr ""

# 090e75cb406b4726b507e93e0bfb234f
#: ../develop/plone/syndication.rst:224
msgid "author"
msgstr ""

# cb1274ee56c74048a31616a029f1ff0e
#: ../develop/plone/syndication.rst:225
msgid "author_name"
msgstr ""

# 1593eaaa0d8d410bb029bde65f94f023
#: ../develop/plone/syndication.rst:226
msgid "author_email"
msgstr ""

# ce05232f126a47a2ae6e04a109d8f944
#: ../develop/plone/syndication.rst:227
msgid "body"
msgstr ""

# 25ed83ac91284a3e83d7c556797c301f
#: ../develop/plone/syndication.rst:228
msgid "guid"
msgstr ""

# da0e081d8cff43b0852ddda978dd6f95
#: ../develop/plone/syndication.rst:229
msgid "has_enclosure"
msgstr ""

# 4f7034d3538e4810bf88194b580f254c
#: ../develop/plone/syndication.rst:230
msgid "file"
msgstr ""

# dbe91c587f634803ad9925a6cbf683d7
#: ../develop/plone/syndication.rst:231
msgid "file_url"
msgstr ""

# 9042084b8be84d28bae128b83e45363c
#: ../develop/plone/syndication.rst:232
msgid "file_length"
msgstr ""

# d03fbf25248c4ef587e958ba8fa07615
#: ../develop/plone/syndication.rst:233
msgid "file_type"
msgstr ""

# c160392fc59b44c98adc479f8646b7ae
#: ../develop/plone/syndication.rst:237
msgid "Available feed properties to override"
msgstr ""

# 5570fa5bae884b6daefb2a2f9bfbfe7c
#: ../develop/plone/syndication.rst:239
msgid ""
"If you're inheriting from "
"Products.CMFPlone.browser.syndiction.adapters.FolderFeed in an attempt to "
"override the functionality of a feed folder or collection, these are the "
"available properties to override:"
msgstr ""

# dd046862a9d14432b1caf30db076f844
#: ../develop/plone/syndication.rst:252
msgid "logo"
msgstr ""

# 0627a7d2e9da4297ae97e502471bfcda
#: ../develop/plone/syndication.rst:253
msgid "icon"
msgstr ""

# 88e32d6ac55340d2856b853dfb2ed9ef
#: ../develop/plone/syndication.rst:254
msgid "items"
msgstr ""

# 80f0eba163274d0fa6c54bf773779493
#: ../develop/plone/syndication.rst:255
msgid "limit"
msgstr ""

# d2a664704c774b26ab7b1bc7f087791a
#: ../develop/plone/syndication.rst:256
msgid "language"
msgstr ""

# c313ef618ef44936987a806a2e56b1be
#: ../develop/plone/views/browserviews.rst:7
msgid "Rendering HTML pages in Plone using the Zope 3 *view* pattern."
msgstr ""

# c6868ea2b07e45b7840329724ac0dfcd
#: ../develop/plone/views/browserviews.rst:14
msgid ""
"Plone/Zope uses a *view* pattern to output dynamically generated HTML pages."
msgstr ""

# 075f64dbafe842ea8b07271463b8c575
#: ../develop/plone/views/browserviews.rst:16
msgid ""
"*Views* are the basic elements of modern Python web frameworks. A view runs "
"code to setup Python variables for a rendering template. Output is not "
"limited to HTML pages and snippets, but may contain :term:`JSON`, file "
"download payloads, or other data formats."
msgstr ""

# eb4ed7cdcfcf45c89685480000747539
#: ../develop/plone/views/browserviews.rst:21
msgid "Views are usually a combination of:"
msgstr ""

# 15112053cf1848a6b62c9128a0268a3e
#: ../develop/plone/views/browserviews.rst:23
msgid "a Python class, which performs the user interface logic setup, and a"
msgstr ""

# 4876c2abde464f60b5176ace1db3a37f
#: ../develop/plone/views/browserviews.rst:24
msgid ""
"corresponding :term:`ZPT` page template, or direct Python string output."
msgstr ""

# a53190706c8641f8bb4f47b6ac8305c3
#: ../develop/plone/views/browserviews.rst:26
msgid ""
"By keeping as much of the view logic in a separate Python class as we can "
"and making the page template as simple as possible, better component "
"readability and reuse is achieved. You can override the Python logic or the "
"template file, or both."
msgstr ""

# df8652ab0930432c957bbcebbaa85993
#: ../develop/plone/views/browserviews.rst:31
msgid ""
"When you are working with Plone, the most usual view type is ``BrowserView``"
" from the `Products.Five`_ package, but there are others."
msgstr ""

# a4167c116eee43dea30859d6294eed57
#: ../develop/plone/views/browserviews.rst:34
msgid ""
"Each ``BrowserView`` class is a Python callable. The "
"``BrowserView.__call__()`` method acts as an entry point to executing the "
"view code. From Zope's point of view, even a function would be sufficient, "
"as it is a callable."
msgstr ""

# dd00cb477b35471198744f32d61e6e9f
#: ../develop/plone/views/browserviews.rst:40
msgid "Plain Zope 3 vs. Grok"
msgstr ""

# 3d6f7accb562444180133ef75a5cfaf0
#: ../develop/plone/views/browserviews.rst:42
msgid ""
"Views were introduced in Zope 3 and made available in Plone by way of the "
"`Products.Five`_ package, which provides some Plone/Zope 2 specific "
"adaptation hooks to the modern Zope 3 code base.  However, Zope 3's way of "
"XML-based configuration using :term:`ZCML` and separating things to three "
"different files (Python module, ZCML configuration, TAL template) was later "
"seen as cumbersome."
msgstr ""

# 052e0027bb44412c9d0fcd869ab5af61
#: ../develop/plone/views/browserviews.rst:49
msgid ""
"Later, a project called `Grok <http://grok.zope.org/>`_ was started to "
"introduce an easy API to Zope 3, including a way to set up and maintain "
"views. For more information about how to use Grok (found in the `five.grok`_"
" package) with Plone, please read the `Plone and Grok tutorial "
"<http://plone.org/products/dexterity/documentation/manual/five.grok>`_."
msgstr ""

# fb31683ffa744851934de10fa20b95af
#: ../develop/plone/views/browserviews.rst:56
msgid ""
"At the time of writing (Q1/2010), all project templates in Paster still use "
"old-style Zope views."
msgstr ""

# 6077c22a87cc4ec890787a62330e6610
#: ../develop/plone/views/browserviews.rst:62
msgid ""
"`Zope view tutorial "
"<http://plone.org/documentation/tutorial/borg/zope-3-views>`_."
msgstr ""

# f2dc3ecbafb2432796e799cac0a15494
#: ../develop/plone/views/browserviews.rst:66
msgid "View components"
msgstr ""

# 36720ea3825b4a1e9b247a00285e8cc2
#: ../develop/plone/views/browserviews.rst:68
msgid ""
"Views are Zope Component Architecture (:term:`ZCA`) *multi-adapter "
"registrations*."
msgstr ""

# 4f4cde6c364b486e93ac8c32135896ea
#: ../develop/plone/views/browserviews.rst:71
msgid ""
"Views are looked up by name. The Zope publisher always does a view lookup, "
"instead of traversing, if the name to be traversed is prefixed with ``@@``."
msgstr ""

# 3943eb0920ce4cdbbef30ae9c5407025
#: ../develop/plone/views/browserviews.rst:74
msgid "Views are resolved with three inputs:"
msgstr ""

# 070d5dabd65f4299ad516ea0a6ea1956
#: ../develop/plone/views/browserviews.rst:79
msgid "*context*"
msgstr ""

# 27fa84eaa7114de4b953fad9cbed8b19
#: ../develop/plone/views/browserviews.rst:77
msgid ""
"Any class/interface for which the view applies. If not given, "
"``zope.interface.Interface`` is used (corresponds to a registration "
"``for=\"*\"``). Usually this is a content item instance."
msgstr ""

# 0c0bd7c1f2184e5d93e1e3f0fa01b4ef
#: ../develop/plone/views/browserviews.rst:83
msgid "*request*"
msgstr ""

# 9bd3a81818854da389478b9428ac07fe
#: ../develop/plone/views/browserviews.rst:82
msgid ""
"The current HTTP request. Interface "
"``zope.publisher.interfaces.browser.IBrowserRequest`` is used."
msgstr ""

# 273d82f9d0224bda96e9391a8d079033
#: ../develop/plone/views/browserviews.rst:87
msgid "*layer*"
msgstr ""

# 389d5feda7e14a55a836eb1f84a2a2a1
#: ../develop/plone/views/browserviews.rst:86
msgid ""
"Theme layer and addon layer interface. If not given, "
"``zope.publisher.interfaces.browser.IDefaultBrowserLayer`` is used."
msgstr ""

# 362776eb0208457db02ba937f0dbd09a
#: ../develop/plone/views/browserviews.rst:89
msgid ""
"Views return HTTP request payload as the output. Returned strings are turned"
" to HTML page responses."
msgstr ""

# 218f9cbd1ff54c6ea4c239b70b0b58f1
#: ../develop/plone/views/browserviews.rst:92
msgid ""
"Views can be any Python class taking in (context, request) construction "
"parameters. Minimal view would be::"
msgstr ""

# 0c63becdbe084600a7586a4d6314ec3b
#: ../develop/plone/views/browserviews.rst:103
msgid "However, in the most of cases"
msgstr ""

# b81d190d05a143509a6839f64360dff5
#: ../develop/plone/views/browserviews.rst:105
msgid ""
"Full Plone page views are subclass of `Products.Five.browser.BrowserView "
"<https://github.com/zopefoundation/Zope/blob/master/src/Products/Five/browser/__init__.py#L23>`_"
" which is a wrapper class. It wraps `zope.publisher.browser.BrowserView "
"<https://github.com/zopefoundation/zope.publisher/blob/master/src/zope/publisher/browser.py#L896>`_"
" and adds an acquisition (parent traversal) support for it."
msgstr ""

# 74b1b8c91c44476d989a8dc9d1175f2d
#: ../develop/plone/views/browserviews.rst:109
msgid ""
"Views have ``index`` attribute which points to :doc:`TAL page template "
"</adapt-and-extend/theming/templates_css/template_basics>` responsible "
"rendering the HTML code. You get the HTML output by doing self.index() and "
"page template gets a context argument ``view`` pointing to the view class "
"instance. ``index`` value is usually instance of "
"`Products.Five.browser.pagetemplate.ViewPageTemplateFile "
"<https://github.com/zopefoundation/Zope/blob/master/src/Products/Five/browser/pagetemplatefile.py#L33>`_"
" (full Plone pages) or `zope.pagetemplate.pagetemplatefile.PageTemplateFile "
"<https://github.com/zopefoundation/zope.pagetemplate/blob/master/src/zope/pagetemplate/pagetemplatefile.py#L40>`_"
" (HTML snippets, no acquisition)"
msgstr ""

# a50a9f64099640f9a7fcc09e348609bf
#: ../develop/plone/views/browserviews.rst:116
msgid ""
"View classes should implement :doc:`interface "
"</develop/addons/components/interfaces>` "
"`zope.browser.interfaces.IBrowserView "
"<https://github.com/zopefoundation/zope.browser/blob/master/src/zope/browser/interfaces.py#L27>`_"
msgstr ""

# 17aa0487f69748fba857ea720fe474c5
#: ../develop/plone/views/browserviews.rst:119
msgid ""
"Views rendering page snippets and parts can be subclasses of "
"zope.publisher.browser.BrowserView directly as snippets might not need "
"acquisition support which adds some overhead to the rendering process."
msgstr ""

# 142640e6750c4d709f02a6c184afd112
#: ../develop/plone/views/browserviews.rst:123
msgid "Customizing views"
msgstr ""

# a1ba0cea39cb445a80305182f6a76313
#: ../develop/plone/views/browserviews.rst:125
msgid ""
"To customize existing Plone core or add-on views you have different options."
msgstr ""

# 756ffdd57ff540059b6b8d476ed3680e
#: ../develop/plone/views/browserviews.rst:127
msgid ""
"Usually you can simply override the related page template file (``.pt``)."
msgstr ""

# 3e1e8e53b3bb4331a7040feaa3d2cfeb
#: ../develop/plone/views/browserviews.rst:129
msgid ""
"Sometimes you need to change the related Python view class code also. In "
"this case, you override the Python class by using your own add-on which "
"installs a view class replacement using add-on layer."
msgstr ""

# 693ad9b47f864ef0bcb97dd59ed5f60d
#: ../develop/plone/views/browserviews.rst:134
msgid "Overriding view template"
msgstr ""

# 1d39e065ac79443b891f578d675fdf62
#: ../develop/plone/views/browserviews.rst:136
msgid ""
"Follow instructions how to :doc:`use z3c.jbot </adapt-and-"
"extend/theming/templates_css/template_basics>` to override templates."
msgstr ""

# e28a0ec913db4db6877656cdadfeb586
#: ../develop/plone/views/browserviews.rst:140
msgid "Overriding view class"
msgstr ""

# 1341ade76d874fcaa1a5765426e4d6e9
#: ../develop/plone/views/browserviews.rst:142
msgid ""
"Here is a short introduction on finding how existing views are defined."
msgstr ""

# 5973cedd75f44197964dd74e97af8046
#: ../develop/plone/views/browserviews.rst:144
msgid ""
"First, you go to ``portal_types`` to see what views have been registered for"
" a particular content type."
msgstr ""

# 93fe505eb0764b1bb6d64cde5230bffe
#: ../develop/plone/views/browserviews.rst:147
msgid ""
"For example, if you want to override the *Tabular* view of a *Folder*, you "
"find out that it is registered as the handler for ``/folder_tabular_view``."
msgstr ""

# 1bcccf6b38134db4a4ce21ab2b14096c
#: ../develop/plone/views/browserviews.rst:151
msgid ""
"So you look for both ``folder_tabular_view`` old-style page templates and "
"``@@folder_tabular_view`` BrowserView ZCML registrations in the Plone source"
" tree |---| it can be either."
msgstr ""

# ce824c2710ff4998bf760e0e66ddbcf4
#: ../develop/plone/views/browserviews.rst:155
msgid ""
"Example of how to search for this using UNIX tools (assuming that "
"`collective.recipe.omelette`_ is in use, to keep included code together):"
msgstr ""

# ee88d41a38f44089bd70a3592077536e
#: ../develop/plone/views/browserviews.rst:165
msgid ""
"The ``folder_tabular_view`` is found in the :doc:`skin layer </adapt-and-"
"extend/theming/templates_css/skin_layers>` called ``plone_content`` in the "
"CMFPlone product."
msgstr ""

# 2e0065604e704916bcbf8af02955ae27
#: ../develop/plone/views/browserviews.rst:171
msgid ""
":doc:`How to override old style page templates </adapt-and-"
"extend/theming/templates_css/skin_layers>`"
msgstr ""

# 7f9c686d510e423591bfae80668aadc2
#: ../develop/plone/views/browserviews.rst:174
msgid "Creating and registering a view"
msgstr ""

# 8174ad73a2ce40ddbbb39c51ca700891
#: ../develop/plone/views/browserviews.rst:176
msgid "This shows how to create and register view in a Zope 3 manner."
msgstr ""

# 69ffdbfe61a545b582086fe3a1cb423b
#: ../develop/plone/views/browserviews.rst:179
msgid "Creating a view using Grok"
msgstr ""

# 3ecdd9294d7045a7af4b8b37da5ae824
#: ../develop/plone/views/browserviews.rst:181
msgid "This is the simplest method and recommended for Plone 4.1+ onwards."
msgstr ""

# cd6f7327993d41db8953b5319c76f32f
#: ../develop/plone/views/browserviews.rst:183
msgid ""
"First, create your add-on product using :doc:`Dexterity project template "
"</develop/addons/paste>`. The most important thing in the add-on is that "
"your registers itself to :doc:`grok </develop/addons/components/grok>` which"
" allows Plone to scan all Python files for ``grok()`` directives and furter "
"automatically pick up your views (as opposite using old Zope 3 method where "
"you manually register views by typing them in to ZCML in ZCML)."
msgstr ""

# 1603a93c25c54c87881d87f20d761bdf
#: ../develop/plone/views/browserviews.rst:191
msgid "configure.zcml"
msgstr ""

# ef9f7024b2c04d949b8477d9ff3d464c
#: ../develop/plone/views/browserviews.rst:193
msgid ""
"First make sure the file ``configure.zcml`` in your add-on root folder "
"contains the following lines. These lines are needed only once, in the root "
"configuration ZCML file::"
msgstr ""

# 14f05666ea8545679b2dc88a12774f6d
#: ../develop/plone/views/browserviews.rst:215
msgid "setup.py and buildout"
msgstr ""

# 10acf6677c494c85afbf61aa565412be
#: ../develop/plone/views/browserviews.rst:217
msgid ""
"Either you need to have ``five.grok`` `registered in your buildout "
"<http://plone.org/documentation/kb/installing-add-ons-quick-how-to>`_ or "
"have :doc:`five.grok in your setup.py </develop/addons/components/grok>`. If"
" you didn't add it in this point and run buildout again to download and "
"install ``five.grok`` package."
msgstr ""

# 54ea37d40ea846e590021296a74d712d
#: ../develop/plone/views/browserviews.rst:223
msgid "Python logic code"
msgstr ""

# 27a74f658a894ad2b0a476909a1a921a
#: ../develop/plone/views/browserviews.rst:225
msgid "Add the file ``yourcompany.app/yourcompany/app/browser/views.py``::"
msgstr ""

# 7773aa5b312a4cd9a54d3f2def8afb5d
#: ../develop/plone/views/browserviews.rst:245
msgid ""
"The view in question is not registered against any :doc:`layer "
"</develop/plone/views/layers>`, so it is immediately available after restart"
" without need to run :doc:`Add/remove in Site setup "
"</develop/addons/components/genericsetup>`."
msgstr ""

# 9f79a1dc34a246fa866ae9f9fbdcf7b1
#: ../develop/plone/views/browserviews.rst:249
msgid ""
"The ``grok.context(Interface)`` statement makes the view available for every"
" content item and the site root: you can use it in URLs like "
"``http://yoursite/news/newsitem/@@yourviewname`` or "
"``http://yoursite/news/@@yourviewname``. In the first case, the incoming "
"``self.context`` parameter received by the view would be the ``newsitem`` "
"object, and in the second case, it would be the ``news`` container."
msgstr ""

# 8db61e2b345d411687b867e2a2fb961c
#: ../develop/plone/views/browserviews.rst:256
msgid ""
"Alternatively, you could use the :doc:`content interface "
"</develop/plone/content/types>` docs to make the view available only for "
"certain content types. Example ``grok.context()`` directives could be::"
msgstr ""

# 156ea8c4357a4a639fa1a19304591cdf
#: ../develop/plone/views/browserviews.rst:277
msgid "Page template"
msgstr ""

# 17678e488dce461eb431b3939025f85c
#: ../develop/plone/views/browserviews.rst:279
msgid ""
"Then create a :doc:`page template for your view. </adapt-and-"
"extend/theming/templates_css/template_basics>`. Create "
"``yourcompany.app/yourcompany/app/browser/templates`` and add the related "
"template:"
msgstr ""

# 2dd5dedd177f41079803211f1e3a83cf
#: ../develop/plone/views/browserviews.rst:297
msgid ""
"Now when you restart to Plone (or use :doc:`auto-restart add-on "
"</develop/plone/getstarted/index>`) the view should be available through "
"your browser. After enabled, grok will scan all Python files for available "
"files, so it doesn't matter what .py filename you use."
msgstr ""

# 0b1db95bccf24f01a4e3f83db1b90093
#: ../develop/plone/views/browserviews.rst:303
msgid "Content slots"
msgstr ""

# f1cb887ed7b5495399748f10de1f8f40
#: ../develop/plone/views/browserviews.rst:305
msgid ""
"Available :doc:`slot </adapt-and-"
"extend/theming/templates_css/template_basics>` options you can use for "
"``<metal fill-slot=\"\">`` in your template which inherits from ``<html "
"metal:use-macro=\"context/main_template/macros/master\">``:"
msgstr ""

# cdc70ffd519e4e96b546e49653d45ebc
#: ../develop/plone/views/browserviews.rst:310
msgid "``content``"
msgstr ""

# 0c11b98a063c4c11a9cb3b52971c838f
#: ../develop/plone/views/browserviews.rst:310
msgid "render edit border yourself"
msgstr ""

# 13ffb8fbcd1d436289489f882855ca8d
#: ../develop/plone/views/browserviews.rst:313
msgid "``main``"
msgstr ""

# 4ddb6a8db4d34a1e9dc7c76744f6a745
#: ../develop/plone/views/browserviews.rst:313
msgid ""
"overrides main slot in main template; you must render title and description "
"yourself"
msgstr ""

# 18cb5e4c20f44c08a7888dc4aab64b99
#: ../develop/plone/views/browserviews.rst:316
msgid "``content-title``"
msgstr ""

# 17771835041340feb9ff0fc78fa9ba08
#: ../develop/plone/views/browserviews.rst:316
msgid "title and description prerendered, Plone version > 4.x"
msgstr ""

# 213eca932ff64a7c83a6a0b16106cdd8
#: ../develop/plone/views/browserviews.rst:319
msgid "``content-core``"
msgstr ""

# 2e0580d734b14c18878b6a28f0df76e7
#: ../develop/plone/views/browserviews.rst:319
msgid "content body specific to your view, Plone version > 4.x"
msgstr ""

# 4b4691d352c54249951583790926dae4
#: ../develop/plone/views/browserviews.rst:324
msgid "``header``"
msgstr ""

# 6164052baa4446bf87ffb333d2b546ff
#: ../develop/plone/views/browserviews.rst:322
msgid ""
"A slot for inserting content above the title; may be useful in conjunction "
"with content-core slot if you wish to use the stock content-title provided "
"by the main template."
msgstr ""

# c582ae55acf74ee696a1c31ee9b69387
#: ../develop/plone/views/browserviews.rst:327
msgid "Accessing your newly created view"
msgstr ""

# 47a71a215e2641c99cee2271b35f9934
#: ../develop/plone/views/browserviews.rst:329
msgid "Now you can access your view within the news folder::"
msgstr ""

# f5c305f545f14819baf8e8d54ad5c7cf
#: ../develop/plone/views/browserviews.rst:333
msgid "... or on a site root::"
msgstr ""

# 7624883675df4d8c9b2c4ed12f579cfd
#: ../develop/plone/views/browserviews.rst:337
msgid "... or on any other content item."
msgstr ""

# 0df6b2a5835f47b18232e27dbf840538
#: ../develop/plone/views/browserviews.rst:339
msgid ""
"You can also use the ``@@`` notation at the front of the view name to make "
"sure that you are looking up a *view*, and not a content item that happens "
"to have the same id as a view::"
msgstr ""

# daed16777c274dc380f0208f72fc67ec
# db8b0bd0b610452090e2b3fc012f85f0
#: ../develop/plone/views/browserviews.rst:347
#: ../develop/plone/views/browserviews.rst:369
msgid ""
"http://plone.org/products/dexterity/documentation/manual/five.grok/browser-"
"components/views"
msgstr ""

# 9d9f4d85a0754229ac1e7f6e72524586
#: ../develop/plone/views/browserviews.rst:352
msgid "Setting view permissions"
msgstr ""

# 69c1eebba44e4744b04768dbaf034b8c
#: ../develop/plone/views/browserviews.rst:354
msgid ""
"Use `grok.require "
"<http://grok.zope.org/doc/current/reference/directives.html#grok-require>`_"
msgstr ""

# 600681404b094d7a81efc0f2291e71b4
#: ../develop/plone/views/browserviews.rst:365
msgid ""
"Use :doc:`available permissions in Zope 3 style strings "
"</develop/plone/security/permission_lists>`."
msgstr ""

# 0c38cd5129d64da988f7d17b78c1e5b0
#: ../develop/plone/views/browserviews.rst:372
msgid "Creating a view using ZCML"
msgstr ""

# 959f3391d9b64830b2d2ccda6a5ddf8c
#: ../develop/plone/views/browserviews.rst:399
msgid ""
"Do not attempt to run any code in the ``__init__()`` method of a view.  If "
"this code fails and an exception is raised, the ``zope.component`` machinery"
" remaps this to a \"View not found\" exception or traversal error."
msgstr ""

# d985e724d3ea44a7a91a70e05b0fa00d
#: ../develop/plone/views/browserviews.rst:404
msgid ""
"Instead, use a pattern where you have a ``setup()`` or similar method which "
"``__call__()`` or view users can explicitly call."
msgstr ""

# 675c816f47c7496fa2c821dca2abcbe2
#: ../develop/plone/views/browserviews.rst:408
msgid "Registering a view"
msgstr ""

# 3e915d7dfb5f4ff7ae554e96275c5a30
#: ../develop/plone/views/browserviews.rst:410
msgid ""
"Zope 3 views are registered in :term:`ZCML`, an XML-based configuration "
"language.  Usually, the configuration file, where the registration done, is "
"called ``yourapp.package/yourapp/package/browser/configure.zcml``."
msgstr ""

# 42bc07c1d5e74d178522afe0e4bcbb37
#: ../develop/plone/views/browserviews.rst:414
msgid "The following example registers a new view (see below for comments):"
msgstr ""

# 3586bb80d9c24a56bd68899f4f7d6c9c
#: ../develop/plone/views/browserviews.rst:436
msgid "``for``"
msgstr ""

# d4f01e4371a742d58d935d1a7149ec17
#: ../develop/plone/views/browserviews.rst:433
msgid ""
"specifies which content types receive this view. ``for=\"*\"`` means that "
"this view can be used for any content type. This is the same as registering "
"views to the ``zope.interface.Interface`` base class."
msgstr ""

# a8f8019069c5407e89f2e551eb9ffcff
#: ../develop/plone/views/browserviews.rst:442
msgid "``name``"
msgstr ""

# 9e63f8a71ac04ba7aa7b928372787234
#: ../develop/plone/views/browserviews.rst:439
msgid ""
"is the name by which the view is exposed to traversal and "
"``getMultiAdapter()`` look-ups. If your view's name is ``test``, then you "
"can render it in the browser by calling http://yourhost/site/page/@@test"
msgstr ""

# f52c9ce0e2744ab9aa2f913b80685834
#: ../develop/plone/views/browserviews.rst:451
msgid "``permission``"
msgstr ""

# 9eeadc16668b4872b48736c60f3a5d16
#: ../develop/plone/views/browserviews.rst:445
msgid ""
"is the permission needed to access the view. When an HTTP request comes in, "
"the currently logged in user's access rights in the current context are "
"checked against this permission. See :doc:`Security chapter "
"</develop/plone/security/permission_lists>` for Plone's out-of-the-box "
"permissions. Usually you want have ``zope2.View``, "
"``cmf.ModifyPortalContent``, ``cmf.ManagePortal`` or ``zope2.Public`` here."
msgstr ""

# f7ddb42bbe604cc38543ad01f8e377a7
#: ../develop/plone/views/browserviews.rst:456
msgid "``class``"
msgstr ""

# ffe94146b9b0458584ce0a4d713d522f
#: ../develop/plone/views/browserviews.rst:454
msgid ""
"is a Python dotted name for a class based on ``BrowserView``, which is "
"responsible for managing the view. The Class's ``__call__()`` method is the "
"entry point for view processing and rendering."
msgstr ""

# 5bf57ea49b7e402a9d474be79fa21ff0
#: ../develop/plone/views/browserviews.rst:458
msgid ""
"You need to declare the ``browser`` namespace in your ``configure.zcml`` to "
"use ``browser`` configuration directives."
msgstr ""

# 2806e2ac93014bd4867f4ca2ae6f34ce
#: ../develop/plone/views/browserviews.rst:462
msgid "Relationship between views and templates"
msgstr ""

# 6d8e237ba61b40dd9e8e26751d6159b7
#: ../develop/plone/views/browserviews.rst:464
msgid ""
"The ZCML ``<browser:view template=\"\">`` directive will set the ``index`` "
"class attribute."
msgstr ""

# c89380f54ff54e469920c55d1cd20afe
#: ../develop/plone/views/browserviews.rst:467
msgid ""
"The default view's ``__call__()`` method will return the value returned by a"
" call to ``self.index()``."
msgstr ""

# 5a1eaab17e11482883c53a03dbdd7cc2
#: ../develop/plone/views/browserviews.rst:470
msgid "Example: this ZCML configuration:"
msgstr ""

# d69188c5f43f47e0ba2a2af495bf30ff
# 7abf1154fe974f2aabb623800d0854b1
#: ../develop/plone/views/browserviews.rst:481
#: ../develop/plone/views/browserviews.rst:499
msgid "and this Python code::"
msgstr ""

# ed8c0c19127a4e4dabf61bd9e7b91b55
#: ../develop/plone/views/browserviews.rst:489
msgid "is equal to this ZCML configuration::"
msgstr ""

# 441efecf440c4c01a17e7009bca02399
#: ../develop/plone/views/browserviews.rst:504
msgid "Rendering of the view is done as follows::"
msgstr ""

# 0303a11cd16c4789a51dfd7f04cbfcee
#: ../develop/plone/views/browserviews.rst:520
msgid "Overriding a view template at run-time"
msgstr ""

# 0ee7f88966384fef9e0447a944c77dcb
#: ../develop/plone/views/browserviews.rst:522
msgid ""
"Below is a sample code snippet which allows you to override an already "
"constructed ``ViewPageTemplateFile`` with a chosen file at run-time::"
msgstr ""

# eb4796365b754600bb285d17cb8c7840
#: ../develop/plone/views/browserviews.rst:541
msgid "Several templates per view"
msgstr ""

# 1ddb217d643e4a5badf855307658dfb7
#: ../develop/plone/views/browserviews.rst:543
msgid ""
"You can bind several templates to one view and render them individually. "
"This is very useful for reusable templating, or when you subclass your "
"functional views."
msgstr ""

# 873e012027604bf9b0376abed135cdb9
#: ../develop/plone/views/browserviews.rst:547
msgid "Example using `five.grok`_::"
msgstr ""

# f0d3169ce46e4a7ca7cffc7946ba5a5d
#: ../develop/plone/views/browserviews.rst:557
msgid "And then call in the template:"
msgstr ""

# 557471a057054fa2bd63abe1ff83d35e
#: ../develop/plone/views/browserviews.rst:566
msgid "View ``__init__()`` method special cases"
msgstr ""

# f04c0f8118bf4fb3809a8fd4a2841738
#: ../develop/plone/views/browserviews.rst:568
msgid ""
"The Python constructor method of the view, ``__init__()``, is special. You "
"should never try to put your code there. Instead, use helper method or lazy "
"construction design pattern if you need to set-up view variables."
msgstr ""

# 7fd03b64bdad42468bb8ea931e6b2c4e
#: ../develop/plone/views/browserviews.rst:572
msgid ""
"The ``__init__()`` method of the view might not have an :doc:`acquisition "
"chain </develop/plone/serving/traversing>` available, meaning that it does "
"not know the parent or hierarchy where the view is. This information is set "
"after the constructor have been run. All Plone code which relies on "
"acquisition chain, which means almost all Plone helper code, does not work "
"in ``__init__()``. Thus, the called Plone API methods return ``None`` or "
"tend to throw exceptions."
msgstr ""

# 61cac75652fd41c3ab7f32e3884e81ae
# e257eb85c6974e7fae5c4a27ee59ec11
#: ../develop/plone/views/browserviews.rst:582
#: ../develop/plone/views/layers.rst:3
msgid "Layers"
msgstr ""

# 293d7439658d450aac85a4f86dfb6f47
#: ../develop/plone/views/browserviews.rst:584
msgid ""
"Views can be registered against a specific *layer* interface. This means "
"that views are only looked up if the specified layer is in use. Since one "
"Zope application server can contain multiple Plone sites, layers are used to"
" determine which Python code is in effect for a given Plone site."
msgstr ""

# 12c534f714d6406db84e5706405748ce
#: ../develop/plone/views/browserviews.rst:589
msgid "A layer is in use when:"
msgstr ""

# 7c01ec38acc14aa097d74d679cd08b94
#: ../develop/plone/views/browserviews.rst:591
msgid "a theme which defines that layer is active, or"
msgstr ""

# f8ccb627923742209df42b53494ab2b0
#: ../develop/plone/views/browserviews.rst:592
msgid "if a specific add-on product which defines that layer is installed."
msgstr ""

# 3e86bd5346f24a41946f67766c8076fb
#: ../develop/plone/views/browserviews.rst:594
msgid ""
"You should normally register your views against a certain layer in your own "
"code."
msgstr ""

# 06cef3cb934140c39eca397e3a90fb64
#: ../develop/plone/views/browserviews.rst:599
msgid ":doc:`browser layers </develop/plone/views/layers>`"
msgstr ""

# b68450fc63b4492382118d8dfb77f9f2
#: ../develop/plone/views/browserviews.rst:602
msgid ""
"Register and unregister view directly using zope.component architecture"
msgstr ""

# 567fd5e18196440bb87ecbda8425bd0a
#: ../develop/plone/views/browserviews.rst:604
msgid "Example how to register::"
msgstr ""

# 92820d49e37d4c1db96cc2fdce912e4d
#: ../develop/plone/views/browserviews.rst:621
msgid "Example how to unregister::"
msgstr ""

# 416d8df6195c4e3bb3b9235ee6038590
#: ../develop/plone/views/browserviews.rst:632
msgid "Content type, mimetype and Template start tag"
msgstr ""

# 829309be50af44eeb5fa4480b6a5e4a2
#: ../develop/plone/views/browserviews.rst:634
msgid "If you need to produce non-(X)HTML output, here are some resources:"
msgstr ""

# 67f3be90121f4d44b3645e2354ccada3
#: ../develop/plone/views/browserviews.rst:636
msgid ""
"http://plone.293351.n2.nabble.com/Setting-a-mime-type-on-a-Zope-3-browser-"
"view-td4442770.html"
msgstr ""

# 8dd87010eada4549a02ce58205626080
#: ../develop/plone/views/browserviews.rst:639
msgid "Zope ViewPageTemplateFile vs. Five ViewPageTemplateFile"
msgstr ""

# fd4b6aeec65044239fe541b7f8d86898
#: ../develop/plone/views/browserviews.rst:641
msgid ""
"There are two different classes that share the same ``ViewPageTemplateFile``"
" name."
msgstr ""

# 8636c2add18745519eddbcf375d9230f
#: ../develop/plone/views/browserviews.rst:644
msgid ""
"Zope  `BrowserView source code "
"<http://svn.zope.org/zope.publisher/trunk/src/zope/publisher/browser.py?rev=101538&view=auto>`_."
msgstr ""

# b9515a648fa64e608d047215615cbee8
#: ../develop/plone/views/browserviews.rst:646
msgid ""
"`Five version  "
"<http://svn.zope.org/Zope/trunk/src/Products/Five/browser/__init__.py?rev=96262&view=markup>`_."
" `Products.Five`_ is a way to access some Zope 3 technologies from the Zope "
"2 codebase, which is used by Plone."
msgstr ""

# 739b680d865b4ee4a5ee6507256ad75c
#: ../develop/plone/views/browserviews.rst:650
msgid "Difference in code::"
msgstr ""

# b42ab54e4afc4105b17065bc454659bc
#: ../develop/plone/views/browserviews.rst:654
msgid "vs.::"
msgstr ""

# 153e700308794199aa322f3ff3e9402e
#: ../develop/plone/views/browserviews.rst:659
msgid "The difference is that the *Five* version supports:"
msgstr ""

# 78aede219be34364ad31258b70efb6a0
#: ../develop/plone/views/browserviews.rst:661
msgid "Acquisition."
msgstr ""

# 26b9668d92814c71a26aaa9d4a48e811
#: ../develop/plone/views/browserviews.rst:662
msgid "The ``provider:`` TAL expression."
msgstr ""

# 90e3e9f4f9a947929e2fe4d3857eedac
#: ../develop/plone/views/browserviews.rst:663
msgid "Other Plone-specific TAL expression functions like ``test()``."
msgstr ""

# 034733367d3d41e384efb3648bc618db
#: ../develop/plone/views/browserviews.rst:664
msgid ""
"Usually, Plone code needs the Five version of ``ViewPageTemplateFile``."
msgstr ""

# 440bff016edf4e57a3589e084cfaeef1
#: ../develop/plone/views/browserviews.rst:665
msgid ""
"Some subsystems, notably the ``z3c.form`` package, expect the Zope 3 version"
" of ``ViewPageTemplateFile`` instances."
msgstr ""

# 2e2e1e968ab24957957b8e1c224618ef
#: ../develop/plone/views/browserviews.rst:670
msgid "Overriding a view class in a product"
msgstr ""

# 011d6a17c797486aa4214a7b9838d330
#: ../develop/plone/views/browserviews.rst:672
msgid ""
"Most of the code in this section is copied from a `tutorial by Martin Aspeli"
" (on slideshare.net) <http://www.slideshare.net/wooda/martin-aspeli-"
"extending-and-customising-plone-3>`_. The main change is that, at least for "
"Plone 4, the interface should subclass "
"``plone.theme.interfaces.IDefaultPloneLayer`` instead of "
"``zope.interface.Interface``."
msgstr ""

# 1c3352e9a3cf4677be232b30ec7c9d4f
#: ../develop/plone/views/browserviews.rst:679
msgid ""
"In this example we override the ``@@register`` form from the "
"``plone.app.users`` package, creating a custom form which subclasses the "
"original."
msgstr ""

# 53abf483aa8145e9a342bea3f769a396
#: ../develop/plone/views/browserviews.rst:683
msgid "Create an interface in ``interfaces.py``::"
msgstr ""

# 3e12604ce2974d04bd9baa9bb48fa2fc
#: ../develop/plone/views/browserviews.rst:691
msgid "Then create ``profiles/default/browserlayer.xml``:"
msgstr ""

# f6633d71a12848a2b362e188c5d6cb37
#: ../develop/plone/views/browserviews.rst:702
msgid "Create ``browser/configure.zcml``:"
msgstr ""

# fab53b9f2df0465a8fce1e3f22e2032d
#: ../develop/plone/views/browserviews.rst:718
msgid "Create ``browser/customregistration.py``::"
msgstr ""

# fb5ae214972a4ad38bab2455ec05fc10
#: ../develop/plone/views/browserviews.rst:727
msgid "Helper views"
msgstr ""

# d5f665628ea64f7bb5bc039ae1f832e1
#: ../develop/plone/views/browserviews.rst:729
msgid ""
"Not all views need to return HTML output, or output at all. Views can be "
"used as helpers in the code to provide APIs to objects. Since views can be "
"overridden using layers, a view is a natural plug-in point which an add-on "
"product can customize or override in a conflict-free manner."
msgstr ""

# 2501edce71154d1e8c84241323fab6a1
#: ../develop/plone/views/browserviews.rst:734
msgid ""
"View methods are exposed to page templates and such, so you can also call "
"view methods directly from a page template, not only from Python code."
msgstr ""

# 08b22e1ecd7d48a3961be4171e2e73cc
#: ../develop/plone/views/browserviews.rst:740
msgid ":doc:`Context helpers </develop/plone/misc/context>`"
msgstr ""

# 30eeb093f1664e1c9d340ef93a3162fb
#: ../develop/plone/views/browserviews.rst:742
msgid ":doc:`Expressions </develop/plone/functionality/expressions>`"
msgstr ""

# 11a53561254c468fa52cbf159806dda6
#: ../develop/plone/views/browserviews.rst:745
msgid "Historical perspective"
msgstr ""

# 8a73bd6c30bc4002bb801a614b1a3f18
#: ../develop/plone/views/browserviews.rst:747
msgid ""
"Often, the point of using helper views is that you can have reusable "
"functionality which can be plugged in as one-line code around the system. "
"Helper views also get around the following limitations:"
msgstr ""

# f44f3a70887443edb27b08bcf53a587a
#: ../develop/plone/views/browserviews.rst:751
msgid "TAL security."
msgstr ""

# 2f594b0907504a359dca3d24b84dffc6
#: ../develop/plone/views/browserviews.rst:752
msgid "Limiting Python expression to one line."
msgstr ""

# d8100d123d154115ae7c1ad1445930ce
#: ../develop/plone/views/browserviews.rst:753
msgid "Not being able to import Python modules."
msgstr ""

# 65058acc61c5448994657d2418d96072
#: ../develop/plone/views/browserviews.rst:757
msgid ""
"Using ``RestrictedPython`` scripts (creating Python through the :term:`ZMI`)"
" and Zope 2 Extension modules is discouraged. The same functionality can be "
"achieved with helper views, with less potential pitfalls."
msgstr ""

# 014fb0bd7e1d4ca9ba6bb2277b45fe06
#: ../develop/plone/views/browserviews.rst:763
msgid "Reusing view template snippets or embedding another view"
msgstr ""

# 68660515c8c84af8b0ca42cef27133b8
#: ../develop/plone/views/browserviews.rst:765
msgid "To use the same template code several times you can either:"
msgstr ""

# f2d3e1d8350040338baf91ef1a8d1a7f
#: ../develop/plone/views/browserviews.rst:767
msgid ""
"create a separate ``BrowserView`` for it and then call this view (see "
"`Accessing a view instance in code`_ below);"
msgstr ""

# 21e7e7d18d0b4c4fb78b4c8eb2bf250a
#: ../develop/plone/views/browserviews.rst:770
msgid ""
"share a ``ViewPageTemplate`` instance between views and using it several "
"times."
msgstr ""

# c60f5f983c9244969ec345e985dc15be
#: ../develop/plone/views/browserviews.rst:775
msgid ""
"The Plone 2.x way of doing this with TAL template language macros is "
"discouraged as a way to provide reusable functionality in your add-on "
"product. This is because macros are hardwired to the TAL template language, "
"and referring to them outside templates is difficult."
msgstr ""

# 2ecd7697eeee4625b53bb3489583c5d2
#: ../develop/plone/views/browserviews.rst:781
msgid ""
"Also, if you ever need to change the template language, or mix in other "
"template languages, you can do it much more easily when templates are a "
"feature of a pure Python based view, and not vice versa."
msgstr ""

# 13493677e0e6494d8eaf025cd9756d3a
#: ../develop/plone/views/browserviews.rst:785
msgid ""
"Here is an example of how to have a view snippet which can be used by "
"subclasses of a base view class. Subclasses can refer to this template at "
"any point of the view rendering, making it possible for subclasses to have "
"fine-tuned control over how the template snippet is represented."
msgstr ""

# 05e4e7acecf44b619c8de1ec9c73a509
#: ../develop/plone/views/browserviews.rst:791
msgid "Related Python code::"
msgstr ""

# 6c3d3eb6e82140c58b2891ff252b8dba
#: ../develop/plone/views/browserviews.rst:813
msgid ""
"Then you can render the summary template in the main template associated "
"with ``ProductCardView`` by calling the ``renderSummary()`` method and TAL "
"non-escaping HTML embedding."
msgstr ""

# b230852ee18b479988c11513bdd19f9d
#: ../develop/plone/views/browserviews.rst:827
msgid ""
"The ``summarybox.pt`` itself is just a piece of HTML code without the Plone "
"decoration frame (``main_template/master`` etc. macros).  Make sure that you"
" declare the ``i18n:domain`` again, or the strings in this template will not"
" be translated."
msgstr ""

# c8d456d542b4407aadd20be0478bfc40
#: ../develop/plone/views/browserviews.rst:839
msgid "Accessing a view instance in code"
msgstr ""

# 3ed8380e6c2c4791ab9b910414cc5ee6
#: ../develop/plone/views/browserviews.rst:841
msgid "You need to get access to the view in your code if you are:"
msgstr ""

# 6245ac29e8b44a04a782305b58c5d39b
#: ../develop/plone/views/browserviews.rst:843
msgid "calling a view from inside another view, or"
msgstr ""

# 67bc2051d1f9431da6209d4a0268fbe6
#: ../develop/plone/views/browserviews.rst:844
msgid "calling a view from your unit test code."
msgstr ""

# 8794966e84664c2e86929b39c545926a
#: ../develop/plone/views/browserviews.rst:846
msgid "Below are two different approaches for that."
msgstr ""

# 6d1a2439320a4c48af25ac69030b9c8a
#: ../develop/plone/views/browserviews.rst:850
msgid "By using ``getMultiAdapter()``"
msgstr ""

# b6e932063a304dd98fbcd5246560d3ad
#: ../develop/plone/views/browserviews.rst:852
msgid "This is the most efficient way in Python."
msgstr ""

# 6636f128df9440bf99c0cdc0c2cdde47
#: ../develop/plone/views/browserviews.rst:870
msgid "By using traversal"
msgstr ""

# e9befd8dc4da4675a92a2b084bd51642
#: ../develop/plone/views/browserviews.rst:872
msgid ""
"Traversal is slower than directly calling ``getMultiAdapter()``.  However, "
"traversal is readily available in templates and ``RestrictedPython`` "
"modules."
msgstr ""

# 00cc42c69a3b496386e0976157698dda
#: ../develop/plone/views/browserviews.rst:894
msgid ""
"You can also do direct view look-ups and method calls in your template by "
"using the ``@@``-notation in traversing."
msgstr ""

# d5c58c8b288f42f89de018c8733899a8
#: ../develop/plone/views/browserviews.rst:905
msgid "Use a skin-based template in a Five view"
msgstr ""

# b362f04454834bbab4308c4a32e9174a
#: ../develop/plone/views/browserviews.rst:907
msgid "Use ``aq_acquire(object, template_name)``."
msgstr ""

# deb7df6fa50a47588e314c4c3770f2f6
#: ../develop/plone/views/browserviews.rst:909
msgid ""
"Example: Get an object by its path and render it using its default template "
"in the current context."
msgstr ""

# e6d3080915a246b08faaa54907b65c77
#: ../develop/plone/views/browserviews.rst:933
msgid "Listing available views"
msgstr ""

# 1fd3e6eec44240c892062b76716cf0b6
#: ../develop/plone/views/browserviews.rst:935
msgid "This is useful for debugging purposes::"
msgstr ""

# d78c5a49d3694f55b2aa69a544d8bf5e
#: ../develop/plone/views/browserviews.rst:944
msgid "Listing all views of certain type"
msgstr ""

# 06e0c0665a8f4f3097a4087d271c1a68
#: ../develop/plone/views/browserviews.rst:946
msgid "How to filter out views which provide a certain interface::"
msgstr ""

# 51d79d08ec45447482dfe9187e491756
#: ../develop/plone/views/browserviews.rst:959
msgid "Default view of a content item"
msgstr ""

# db0077ff4c394919a8a9d57f2b3e693c
#: ../develop/plone/views/browserviews.rst:961
msgid "Objects have views for default, view, edit, and so on."
msgstr ""

# 39f4622fac594d43bb67f70d0c1f67ff
#: ../develop/plone/views/browserviews.rst:963
msgid ""
"The distinction between the *default* and *view* views are that for files, "
"the default can be *download*."
msgstr ""

# 231891d17afd436e83bd267ab0f6dfca
#: ../develop/plone/views/browserviews.rst:966
msgid "The default view ..."
msgstr ""

# 6946a7d34712472eb546e6ec7e87b372
#: ../develop/plone/views/browserviews.rst:968
msgid ""
"This view is configured in :doc:`portal_types "
"</develop/plone/content/types>`."
msgstr ""

# fffb177522b440feb2967d622f8ece9b
#: ../develop/plone/views/browserviews.rst:970
msgid ""
"This view is rendered when a content item is called |---| even though they "
"are objects, they have the ``__call__()`` Python method defined."
msgstr ""

# d5f3a0704c75495ca432f03a16e7db7e
#: ../develop/plone/views/browserviews.rst:974
msgid ""
"If you need to get a content item's view for page rendering explicitly, you "
"can do it as follows::"
msgstr ""

# 6d6bf06d08bc4796b2997a003d8f5d93
#: ../develop/plone/views/browserviews.rst:984
msgid ":doc:`Context helpers and utilities </develop/plone/misc/context>`"
msgstr ""

# 730082014c1a4190bd81881034de351c
#: ../develop/plone/views/browserviews.rst:986
msgid ""
"http://plone.293351.n2.nabble.com/URL-to-content-view-tp6028204p6028204.html"
msgstr ""

# 60f8213765454596a1c1fa18d1ac3f7b
#: ../develop/plone/views/browserviews.rst:990
msgid "Allowing the contentmenu on non-default views"
msgstr ""

# 5a4f2b8c87c3449ab1590ce126eb4449
#: ../develop/plone/views/browserviews.rst:992
msgid ""
"In general, the contentmenu (where the actions, display views, factory "
"types, workflow, and other dropdowns are) is not shown on non-default views."
" There are some exceptions, though."
msgstr ""

# f2cf155e03a44302919a3dfd4928ed07
#: ../develop/plone/views/browserviews.rst:996
msgid ""
"If you want to display the contentmenu in such non-default views, you have "
"to mark them with the IViewView interface from plone.app.layout either by "
"letting the class provide IViewView by declaring it with "
"zope.component.implements or by configuring it via ZCML like so::"
msgstr ""

# 77570399b91c4cbb8c565ffc046a4ea3
#: ../develop/plone/views/browserviews.rst:1007
msgid "Views and automatic member variable acquisition wrapping"
msgstr ""

# d6b6c74a258648b8b0ff71f1d5f6b624
#: ../develop/plone/views/browserviews.rst:1009
msgid ""
"View class instances will automatically assign themselves as a parent for "
"all member variables. This is because ``five`` package based views inherit "
"from ``Acquisition.Implicit`` base class."
msgstr ""

# 8f9d96dd3c8a4b0c8922abbdaf959ead
#: ../develop/plone/views/browserviews.rst:1012
msgid "E.g. you have a ``Basket`` content item with ``absolute_url()`` of::"
msgstr ""

# fcddc27d33354c8c9a0ee484459fc82b
#: ../develop/plone/views/browserviews.rst:1016
msgid ""
"Then if you use this object in a view code's member variable assignment in "
"e.g. ``Viewlet.update() method``::"
msgstr ""

# a9fa9e9692444fa08cc1b9992ce2df64
#: ../develop/plone/views/browserviews.rst:1020
msgid "... this will mess up the Basket content item's acquisition chain::"
msgstr ""

# 5277e17a05db446d899ef6744d4def55
#: ../develop/plone/views/browserviews.rst:1024
msgid ""
"This concerns views, viewlets and portlet renderers. It will, for example, "
"make the following code to fail::"
msgstr ""

# 770805f1f9484721942567e6db333d32
#: ../develop/plone/views/browserviews.rst:1029
msgid ""
"One workaround to avoid this mess is to use aq_inner when accessing self.obj"
" values:"
msgstr ""

# 6e03279750f146e18c13a41e81e08a56
#: ../develop/plone/views/browserviews.rst:1031
msgid "http://stackoverflow.com/a/11755348/315168"
msgstr ""

# 5855278b7d7b4491904634d77d794bf4
#: ../develop/plone/views/index.rst:3
msgid "Views, viewlets and layers"
msgstr ""

# c1118a2ace7b4243ae1e2f87606d30ff
#: ../develop/plone/views/index.rst:5
msgid "View and viewlet patterns used to create dynamic pages in plone."
msgstr ""

# ebf85e1a93534f8dadf02c130bced0e1
#: ../develop/plone/views/layers.rst:7
msgid ""
"Layers allow you to easily enable and disable views and other site "
"functionality based on installed add-ons and themes."
msgstr ""

# bc83eceb438541008dae403f7ad8690d
#: ../develop/plone/views/layers.rst:15
msgid ""
"Layers allow you to activate different code paths and modules depending on "
"the external configuration."
msgstr ""

# 2ad93628eb2946f1895ba236a6157b3d
#: ../develop/plone/views/layers.rst:20
msgid ""
"Code belonging to a theme is only active when that theme has been selected."
msgstr ""

# 427febcfe3484a85a60fe3828dfd1714
#: ../develop/plone/views/layers.rst:22
msgid ""
"Mobile browsing code is only active when the site is being browsed on a "
"mobile phone."
msgstr ""

# 0a2b210d56784a5a8982d0ba20c345ed
#: ../develop/plone/views/layers.rst:25
msgid ""
"Layers are marker interfaces applied to the HTTPRequest_ object. They are "
"usually used in conjunction with :term:`ZCML` directives to dynamically "
"activate various parts of the configuration (theme files, add-on product "
"functionality)."
msgstr ""

# 40856d6b47ef4c34b425c7507b74c615
#: ../develop/plone/views/layers.rst:30
msgid ""
"Layers ensure that only one add-on product can override the specific Plone "
"instance functionality in your site at a time, while still allowing you to "
"have possibly conflicting add-on products in your buildout and ZCML. "
"Remember that multiple Plone site instances can share the same ZCML and code"
" files."
msgstr ""

# 10e1f6fb53f042b39fe84bc5719802ee
#: ../develop/plone/views/layers.rst:36
msgid ""
"Many ZCML directives take the optional ``layer`` parameter. See example, "
"resourceDirectory_"
msgstr ""

# 133fa4c924a1423595c0dfd9a366d261
#: ../develop/plone/views/layers.rst:39
msgid ""
"Layers can be activated when an add-on product is installed or a certain "
"theme is picked."
msgstr ""

# 7a34ce07ae14488b82d891d786779e53
#: ../develop/plone/views/layers.rst:42
msgid "For more information, read"
msgstr ""

# ee8151a6d5e64e2c936af9b861e868b5
#: ../develop/plone/views/layers.rst:44
msgid ""
"`Making components theme specific <http://plone.org/documentation/manual"
"/theme-reference/buildingblocks/components/themespecific>`_"
msgstr ""

# d2436745d6784a5c8205b42d648865be
#: ../develop/plone/views/layers.rst:46
msgid ""
"`Browser Layer tutorial <http://plone.org/documentation/tutorial"
"/customization-for-developers/browser-layers>`_."
msgstr ""

# 859fe4693d634db3b7a67621435db26b
#: ../develop/plone/views/layers.rst:48
msgid ""
"`Zope 3 Developer Handbook, Skinning <http://zope3.xmu.me/skinning.html>`_"
msgstr ""

# d2e18a2a8b7e42b5abb388446d14230e
#: ../develop/plone/views/layers.rst:51
msgid "Using layers"
msgstr ""

# 037df0315146446cbdc805e6dbb928bd
#: ../develop/plone/views/layers.rst:53
msgid ""
"Some ZCML directives (for example: `browser:page "
"<http://apidoc.zope.org/++apidoc++/ZCML/http_co__sl__sl_namespaces.zope.org_sl_browser/page/index.html>`_)"
" take a ``layer`` attribute."
msgstr ""

# 4a17b7b47b0d4d9e926927f982a5ed39
#: ../develop/plone/views/layers.rst:57
msgid "If you have:"
msgstr ""

# 3e093cb53c3b40d6ac0736732575d507
#: ../develop/plone/views/layers.rst:60
msgid ""
"# ``plonetheme.yourthemename.interfaces.IThemeSpecific`` layer defined in"
msgstr ""

# dbdfa0ddf0214b199b29275d7838f078
#: ../develop/plone/views/layers.rst:63
msgid ""
"# ``YourTheme`` product installed through add-on product installer on your"
msgstr ""

# fb26a371f7d04f1a8de83a5ca3d808e1
#: ../develop/plone/views/layers.rst:63
msgid "site instance"
msgstr ""

# 8784ece6c1b04fbba9560cfe2c38c2cd
#: ../develop/plone/views/layers.rst:65
msgid ""
"then views and viewlets from your product can be enabled on the site "
"instance using the following ZCML::"
msgstr ""

# f8c5a151def04e3a813f7c95442f8be3
#: ../develop/plone/views/layers.rst:78
msgid "Unconditional overrides"
msgstr ""

# 30a3dc7bb28a49b7b9df91414d9f007f
#: ../develop/plone/views/layers.rst:80
msgid ""
"If you want to override a view or a viewlet unconditionally for all sites "
"without the add-on product installer support you need to use "
"``overrides.zcml``."
msgstr ""

# 4c0b922544234531abc0610b9b5a4bee
#: ../develop/plone/views/layers.rst:85
msgid "Creating a layer"
msgstr ""

# 0362cfedd6574a76bc73e6ba0f1649a2
#: ../develop/plone/views/layers.rst:88
msgid "Theme layer"
msgstr ""

# a5f641cd49c04b469c8eec5f59f2d947
#: ../develop/plone/views/layers.rst:90
msgid "Theme layers can be created via the following steps:"
msgstr ""

# 44bcc72d58fb4ff099ca799650d11846
#: ../develop/plone/views/layers.rst:92
msgid "Subclass an interface from ``IDefaultPloneLayer``::"
msgstr ""

# bb00c8f1dd89400f945fef0eba7c4fb2
#: ../develop/plone/views/layers.rst:104
msgid "Register it in ZCML. The name must match the theme name."
msgstr ""

# 94f53ac8915f4b87872d8cf5a1011c61
#: ../develop/plone/views/layers.rst:114
msgid ""
"Register and set your theme as the default theme in "
"``profiles/default/skins.xml``. Theme layers require that they are set as "
"the default theme and not just activated on your Plone site. Example:"
msgstr ""

# 17e2d8b5a65e485482eceb04924e4787
#: ../develop/plone/views/layers.rst:131
msgid "Add-on layer for clean extensions"
msgstr ""

# a5c8386afb354207987c46f29bdba2f9
#: ../develop/plone/views/layers.rst:133
msgid ""
"An add-on product layer is enabled when an add-on product is installed. "
"Since one Zope application server may contain several Plone sites, you need "
"to keep enabled code paths separate by using add-on layers - otherwise all "
"views and viewlets apply to all sites in one Zope application server."
msgstr ""

# 25c3e4845f834a6b8fc57fa1e8ca5255
#: ../develop/plone/views/layers.rst:138
msgid "You can enable views and viewlets specific to functional add-ons."
msgstr ""

# 096247abf9184f2a9c883e71142cb3a7
#: ../develop/plone/views/layers.rst:140
msgid ""
"Unlike theme layers, add-on layers depend on the activated add-on products, "
"not on the selected theme."
msgstr ""

# cde0c8ce822242fe93bc051ebeebfc69
#: ../develop/plone/views/layers.rst:143
msgid ""
"An add-on layer is a marker interface which is applied on the :doc:`HTTP "
"request object </develop/plone/serving/http_request_and_response>` by Plone "
"core logic."
msgstr ""

# 0e93ec2b4fd040ada4d6bb4b5036e59a
#: ../develop/plone/views/layers.rst:147
msgid ""
"First create an :doc:`interface </develop/addons/components/interfaces>` for"
" your layer in ``your.product.interfaces.py``::"
msgstr ""

# cd9106b7b13b444b9c86fd564a41e90b
#: ../develop/plone/views/layers.rst:164
msgid ""
"You then need to refer to this in the ``profile/default/browserlayer.xml`` "
"file of your add-on installer :doc:`setup profile "
"</develop/addons/components/genericsetup>`:"
msgstr ""

# c87ab978a3784cfabbca86c5c35fe44d
#: ../develop/plone/views/layers.rst:179
msgid ""
"The add-on layer registry is persistent and stored in the database. The "
"changes to add-on layers are applied only when add-ons are installed or "
"uninstalled."
msgstr ""

# b1b7b7090b8f47f5ada0281b4efba772
#: ../develop/plone/views/layers.rst:185
msgid "https://pypi.python.org/pypi/plone.browserlayer"
msgstr ""

# 777ebd6d46464b91b64c30a0aa546923
#: ../develop/plone/views/layers.rst:187
msgid ""
"See example in `LinguaPlone "
"<https://github.com/plone/Products.LinguaPlone/blob/master/Products/LinguaPlone/profiles/default/browserlayer.xml>`_."
msgstr ""

# 1bb295781ff74a388c19330469976e68
#: ../develop/plone/views/layers.rst:190
msgid "Add-on layer for changing existing behavior"
msgstr ""

# 57b77ef991e443ff9db6353587b2b604
#: ../develop/plone/views/layers.rst:192
msgid ""
"You can also use layers to modify the behavior of plone or another Add-on."
msgstr ""

# cb8b9013eca1461b9cc173e544b4bf9d
#: ../develop/plone/views/layers.rst:194
msgid ""
"To make sure that your own view is used, your Layer must be mor specific "
"than the layer where original view is registered."
msgstr ""

# 351a2b6d214648bb87a45cd7bb50b555
#: ../develop/plone/views/layers.rst:196
msgid ""
"For example, some z3cform things register their views on the "
"``IPloneFormLayer`` from plone.app.z3cform.interfaces."
msgstr ""

# e2b69d72276343589341cd91dabe2660
#: ../develop/plone/views/layers.rst:198
msgid ""
"If you want to override the ploneform-macros view that is registered on the "
"``IPloneFormLayer``, your own Layer must be a subclass of IPloneFormLayer."
msgstr ""

# bc572f1143c5498c9e6c4ca725d77010
#: ../develop/plone/views/layers.rst:200
msgid ""
"If a view does not declare a specific Layer,  it becomes registered on the "
"``IDefaultBrowserLayer`` from "
"zope.publisher.interfaces.browser.IDefaultBrowserLayer."
msgstr ""

# 38661f103c50468ab8718515e5eb5341
#: ../develop/plone/views/layers.rst:203
msgid "Manual layers"
msgstr ""

# 9eb1904965dd4c79b39ab1fa8bf0b70b
#: ../develop/plone/views/layers.rst:205
msgid ""
"Apply your layer to the HTTPRequest_ in the ``before_traverse`` hook or "
"before you call the code which looks up the interfaces."
msgstr ""

# c92d8636976b4e0ba5c6317805380f40
#: ../develop/plone/views/layers.rst:208
msgid ""
"Choosing skin layer dynamically 1: http://blog.fourdigits.nl/changing-your-"
"plone-theme-skin-based-on-the-objects-portal_type"
msgstr ""

# b055643a64a244459e52885491ebdeea
#: ../develop/plone/views/layers.rst:210
msgid ""
"Choosing skin layer dynamically 2: "
"http://code.google.com/p/plonegomobile/source/browse/trunk/gomobile/gomobile.mobile/gomobile/mobile/monkeypatch.py"
msgstr ""

# 05d753797b934dbe94200c5be50b0c4c
#: ../develop/plone/views/layers.rst:212
msgid ""
"See the `plone.app.z3cform.z2 "
"<http://svn.zope.org/plone.z3cform/trunk/plone/z3cform/z2.py?rev=88331&view=markup>`_"
" module."
msgstr ""

# 2c654d128f044ff88f4b138e9db974ac
#: ../develop/plone/views/layers.rst:214
msgid ""
"In the example below we turn on a layer for the request which is later "
"checked by the rendering code. This way some pages can ask for special "
"View/Viewlet rendering."
msgstr ""

# dddc55cf13494019a52a39e954dab9c1
#: ../develop/plone/views/layers.rst:250
msgid "Troubleshooting instructions for layers"
msgstr ""

# 555b1703f34641848e6a15b29b570ef3
#: ../develop/plone/views/layers.rst:252
msgid ""
"Check that your view or whatever is working without a layer assigned "
"(globally);"
msgstr ""

# 3b1b50932c664a0dad62388fedebd8e5
#: ../develop/plone/views/layers.rst:255
msgid ""
"Check that ``configure.zcml`` has a layer entry. Put some garbage to trigger"
" a syntax error in ``configure.zcml`` to make sure that it is being loaded;"
msgstr ""

# 4a916e93bea244b0952cabdcc5f16af6
#: ../develop/plone/views/layers.rst:259
msgid ""
"Add-on layer: check that ``profiles/default/browserlayer.xml`` has a "
"matching entry with a matching name;"
msgstr ""

# cacd96fbd0e74073bf9c9e0609476522
#: ../develop/plone/views/layers.rst:262
msgid ""
"Theme layer: if it's a theme layer, check that there is a matching "
"``skins.xml`` entry"
msgstr ""

# 331609fb8d70471eb218cc593b90fe74
#: ../develop/plone/views/layers.rst:265
msgid "Check that layer name is correctly spelt in the view declaration."
msgstr ""

# 7c18913856bd47a1911a5d490f3e1bc2
#: ../develop/plone/views/layers.rst:268
msgid "Checking active layers"
msgstr ""

# 4a602bcaffbb4974b55b9c16219dd7b2
#: ../develop/plone/views/layers.rst:271
msgid "Layers are activated on the current request object"
msgstr ""

# d95d29d131df4f358a4930df5889f030
#: ../develop/plone/views/layers.rst:280
msgid "Active themes and add-on products"
msgstr ""

# 420f1118e0784a00bb627d9a0b20efa0
#: ../develop/plone/views/layers.rst:282
msgid ""
"The ``registered_layers()`` method returns a list of all layers active on "
"the site. Note that this is different to the list of layers which are "
"applied on the current HTTP request object: the request object may contain "
"manually activated layers."
msgstr ""

# bd4ab2ab7b664702a07fca811cf1c879
#: ../develop/plone/views/layers.rst:301
msgid "Getting active theme layer"
msgstr ""

# bdffec001c574e599ad83559b0c5678f
#: ../develop/plone/views/layers.rst:303
msgid "Only one theme layer can be active at once."
msgstr ""

# cb998d1bb21541dbbc33d7520b8c5fbc
#: ../develop/plone/views/layers.rst:305
msgid ""
"The active theme name is defined in ``portal_skins`` properties. This name "
"can be resolved to a theme layer."
msgstr ""

# 87b209ceb1174546bc8315b492589ad2
#: ../develop/plone/views/layers.rst:309
msgid "Debugging active layers"
msgstr ""

# 8d54ba606b944a6f910d118ed7035900
#: ../develop/plone/views/layers.rst:311
msgid ""
"You can check the activated layers from HTTP request object by looking at "
"``self.request.__provides__.__iro__``. Layers are evaluated from zero index "
"(highest priority) the last index (lowest priority)."
msgstr ""

# 61b1561034d646f3ae07025528aac7a2
#: ../develop/plone/views/layers.rst:322
msgid "Testing Layers"
msgstr ""

# a4112b1f17984846baa537ae2f0d28c9
#: ../develop/plone/views/layers.rst:324
msgid ""
"Plone testing tool kits won't register layers for you, you have to do it "
"yourself somewhere in the boilerplate code::"
msgstr ""

# 833d8baf74684b168719301d8a3736be
#: ../develop/plone/views/more_view_examples.rst:3
msgid "Tutorial: Overriding Viewlets"
msgstr ""

# 744b347ccea94242a7a8f1caccc893fb
#: ../develop/plone/views/more_view_examples.rst:5
msgid ""
"This tutorial [1]_ describes two simple examples of overriding viewlets. To "
"learn more about views and viewlets, see the Developer Manual section on "
"`Views and Viewlets`_"
msgstr ""

# 4d13503597f74e7f91086bf46fb6fd84
#: ../develop/plone/views/more_view_examples.rst:9
msgid "Overriding the Logo"
msgstr ""

# 91624daa6ca7496f8a1054f3b09e06b3
#: ../develop/plone/views/more_view_examples.rst:11
msgid ""
"In this example, we override the logo for the site. I assume you have a "
"theme product named my.theme with an IThemeSpecific interface."
msgstr ""

# 8a825be7812d4002982ff7d2457a501a
#: ../develop/plone/views/more_view_examples.rst:13
msgid ""
"Create an entry in browser/configure.zcml of your theme to override the "
"viewlet.::"
msgstr ""

# 6ace4e055db04b428e7db9959a42a2c7
#: ../develop/plone/views/more_view_examples.rst:24
msgid ""
"Create a template file named logo.pt inside the browser directory that "
"displays your logo image. It could contain something as simple as this.::"
msgstr ""

# e9a9a7f7a552455e88c36fd8c6ec5cf6
#: ../develop/plone/views/more_view_examples.rst:34
msgid ""
"Add your logo image to the browser/images directory of your theme. In this "
"example, ++resource++my.theme.images/my_logo.png points to a file named "
"my_logo.png inside the theme's browser/images resource directory."
msgstr ""

# 93b7e838870941749314b2486db39adb
#: ../develop/plone/views/more_view_examples.rst:38
msgid "Overriding the Title"
msgstr ""

# 727f065658a64a5599364de52ce574e1
#: ../develop/plone/views/more_view_examples.rst:40
msgid ""
"In this example we override the view class associated with the title "
"viewlet. I assume you have a theme product with an IThemeSpecific interface."
msgstr ""

# 6707bce149714cbfb3602c3538e44c1a
#: ../develop/plone/views/more_view_examples.rst:42
msgid ""
"Create an entry in browser/configure.zcml of your theme to override the view"
" class.::"
msgstr ""

# d26a2054514e46b8b27d88e3038dadd9
#: ../develop/plone/views/more_view_examples.rst:52
msgid ""
"Create a class named TitleViewlet inside browser/common.py of your theme "
"containing code to return the appropriate title.::"
msgstr ""

# 40169798f8bc4f2188d9ce69c9d022ac
#: ../develop/plone/views/more_view_examples.rst:65
msgid "Discussion"
msgstr ""

# 2a11227084d24a1e97127f07183ef1b2
#: ../develop/plone/views/more_view_examples.rst:68
msgid "Overriding the logo"
msgstr ""

# 5ef540da433e4f1093ff881154dfeeaa
#: ../develop/plone/views/more_view_examples.rst:70
msgid ""
"To override a viewlet in Plone, you need to know which viewlet to override. "
"Using @@manage-viewlets is helpful here. It shows you all the viewlet "
"managers on a page and the viewlets they contain."
msgstr ""

# f92569deff6e4e849b6c8754dd67ce28
#: ../develop/plone/views/more_view_examples.rst:72
msgid ""
"You can add /@@manage-viewlets to any url in your site and see the active "
"viewlets there. Something like::"
msgstr ""

# 46a55a341ac84e26af59c394499afd32
#: ../develop/plone/views/more_view_examples.rst:76
msgid ""
"Using this shows us that the logo is in the plone.logo Viewlet within the "
"plone.portalheader ViewletManager"
msgstr ""

# 4e4fbcc69d214f8cadb4183b71a8d476
#: ../develop/plone/views/more_view_examples.rst:80
msgid ""
"Viewlets are defined in the plone/app/layout/viewlets/configure.zcml file "
"within the eggs area of your buildout. Looking inside that configure.zcml "
"file we see::"
msgstr ""

# 35be9c966fa94561aecdb00f1baa6cdf
#: ../develop/plone/views/more_view_examples.rst:90
msgid "Here's our overriding entry from above to compare::"
msgstr ""

# fb27e7472c324a6fbf7e8f667356089e
#: ../develop/plone/views/more_view_examples.rst:101
msgid ""
"The name is the same as the item we are overriding. Notice that we give the "
"full path to the manager, and that we are reusing the class. We also declare"
" the name and location of our overriding template file, use our theme's "
"interface, and set a permission."
msgstr ""

# fbb6297755254e11a1aec6d9a603d8b9
#: ../develop/plone/views/more_view_examples.rst:105
msgid "Overriding the title"
msgstr ""

# 273343a9baf24c1f803dbe7dcaacec7f
#: ../develop/plone/views/more_view_examples.rst:107
msgid ""
"Here is TitleViewlet from plone.app.layout. It has the page title on the "
"left and the portal title on the right, with an emdash in between.::"
msgstr ""

# 81d534ecb70147eea6cf5f6278bc97d7
#: ../develop/plone/views/more_view_examples.rst:124
msgid ""
"Here is an example for comparison that switches page title and portal title,"
" and separates them with a pipe. The only differences are on the last "
"line.::"
msgstr ""

# 4d9b65eb07ec4d3ab9f32d12a64281bb
#: ../develop/plone/views/more_view_examples.rst:141
msgid ""
"More information about the title tag can be found at the `HTML Head Title`_ "
"page which is part of the `Plone Theme Reference`_."
msgstr ""

# 593b487535f54cc18d0c8e30814a5368
#: ../develop/plone/views/more_view_examples.rst:144
msgid "http://plone.org/author/spanky"
msgstr ""

# 7b92c146aa7d4a00b61a1e80ae1164c4
#: ../develop/plone/views/viewlets.rst:7
msgid ""
"Viewlets are parts of the page in Plone page rendering process. You can "
"create, hide and shuffle them freely."
msgstr ""

# fe41759433ca4c8daa53872cafbed55f
#: ../develop/plone/views/viewlets.rst:15
msgid ""
"Viewlets are view snippets which will render a part of the HTML page. "
"Viewlets provide conflict-free way to contribute new user-interface actions "
"and HTML snippets to Plone pages."
msgstr ""

# d1b87ed8914b43ad84028fa5102b0063
#: ../develop/plone/views/viewlets.rst:19
msgid ""
"Each viewlet is associated with a viewlet manager. To add viewlets to your "
"HTML code you first need to add them to a viewlet manager, which allows you "
"to shuffle viewlets around through-the-web."
msgstr ""

# 255faa63ce9540afbaf16a68f41bf468
#: ../develop/plone/views/viewlets.rst:23
msgid "What viewlets do"
msgstr ""

# dfa1d5eb95da4603ba6245a98f9e746d
#: ../develop/plone/views/viewlets.rst:25
msgid "Viewlets are managed using /@@manage-viewlets page"
msgstr ""

# 2837fec9a59b4f51bbc20c5c86401679
#: ../develop/plone/views/viewlets.rst:27
msgid "Viewlets can shown and hidden through-the-web"
msgstr ""

# 336f52c7e0544a608372164c7af829c1
#: ../develop/plone/views/viewlets.rst:29
msgid ""
"Viewlets can be reordered (limited to reordering within container in Plone "
"3.x)"
msgstr ""

# 68d8d4445b554876b3ac510abc466b3a
#: ../develop/plone/views/viewlets.rst:31
msgid ""
"Viewlets can be registered and overridden in a theme specific manner "
":doc:`using layers </develop/plone/views/layers>`"
msgstr ""

# c830738d1b894c11bb2b88b05a5fe961
#: ../develop/plone/views/viewlets.rst:33
msgid "Viewlets have update() and render() methods"
msgstr ""

# e822a6396fde4160acf571be353fa505
#: ../develop/plone/views/viewlets.rst:35
msgid ""
"Viewlets should honour `zope.contentprovider.interfaces.IContentProvider "
"call contract "
"<http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto>`_."
msgstr ""

# 6a06e7a749ab4bac94e5d6e0d0631827
#: ../develop/plone/views/viewlets.rst:37
msgid "A viewlet can be configured so that it is only available for:"
msgstr ""

# fb96ba9bc0ee4008a9ec7d8418584b44
#: ../develop/plone/views/viewlets.rst:39
msgid "a certain interface, typically a content type (``for=`` in ZCML)"
msgstr ""

# 3c06591ea1e64b37a616a70c0f6ab169
#: ../develop/plone/views/viewlets.rst:41
msgid "a certain view (``view=`` in ZCML)"
msgstr ""

# aaad8b1d2ee24720a901e45550da1753
#: ../develop/plone/views/viewlets.rst:45
msgid ""
"`Plone 4 Viewlet and viewlet manager reference "
"<http://plone.org/documentation/manual/theme-"
"reference/elements/elementsindexsunburst4>`_"
msgstr ""

# c9980f051e384027997a49a7ee6d0358
#: ../develop/plone/views/viewlets.rst:47
msgid ""
"`ZCML viewlet definition "
"<http://apidoc.zope.org/++apidoc++/ZCML/http_co__sl__sl_namespaces.zope.org_sl_browser/viewlet/index.html>`_."
msgstr ""

# 8327c1d392814e00add0236ff8d2bccf
#: ../develop/plone/views/viewlets.rst:49
msgid "https://pypi.python.org/pypi/zope.viewlet/"
msgstr ""

# 19407691c4304a02951efc9af02de8cc
#: ../develop/plone/views/viewlets.rst:52
msgid "Finding viewlets"
msgstr ""

# cc796dd684bf40e59e88e26eb2c0a67d
#: ../develop/plone/views/viewlets.rst:54
msgid ""
"There are two through-the-web tools to start looking what viewlets are "
"available on your installation. The available viewlets may depend on "
"installed Plone version and installed add-ons."
msgstr ""

# 80cc60ca7f1c4a3e92bcd4489d0737f2
#: ../develop/plone/views/viewlets.rst:57
msgid ""
"The ``portal_view_customizations`` tool in ZMI will show you viewlet "
"registrations (and the viewlet managers they are registered for). As with "
"views, you can hover over the viewlet name to see where it is registered in "
"a tool tip."
msgstr ""

# 0d4933d5a3d9492e8b1348a1c64fe0d3
#: ../develop/plone/views/viewlets.rst:59
msgid ""
"To discover the name of a particular viewlet, you can use the @@manage-"
"viewlets view, e.g. http://localhost:8080/plone/@@manage-viewlets."
msgstr ""

# d8e36fe5492a4882b2681bbd12365f20
#: ../develop/plone/views/viewlets.rst:62
msgid "Creating a viewlet"
msgstr ""

# b1815923049c41db8ff27876d9a3da18
#: ../develop/plone/views/viewlets.rst:64
msgid "A viewlet consists of"
msgstr ""

# ed8eb015e0044df7844c3b6a0b881fb1
#: ../develop/plone/views/viewlets.rst:66
msgid "Python class"
msgstr ""

# b1efcc25c7634e70a472b069b35d595a
#: ../develop/plone/views/viewlets.rst:68
msgid "Page template (.pt) file"
msgstr ""

# df9e72c674a440ebacc19f6872cfd38d
#: ../develop/plone/views/viewlets.rst:70
msgid ""
"A :doc:`browser layer </develop/plone/views/layers>` defining which add-on "
"product must be installed, so that the viewlet is rendered"
msgstr ""

# 0171f25ec9444ae5af834ce88d64f78e
#: ../develop/plone/views/viewlets.rst:72
msgid ""
"A related Grok or ZCML directives to register the viewlet to a correct "
"viewlet manager with a correct layer"
msgstr ""

# df292a70c12a4ed8a6ecdd489472cb40
#: ../develop/plone/views/viewlets.rst:76
msgid "Re-using code from a View"
msgstr ""

# 3b52b69967204f7bb6b1eacd28db820b
#: ../develop/plone/views/viewlets.rst:78
msgid ""
"In the case where you might want a Viewlet and View to share the same code, "
"remember that the View instance is available in the Viewlet under the "
"``view`` attribute."
msgstr ""

# 8bfe616b327742aa9f44ceb5a10717c6
#: ../develop/plone/views/viewlets.rst:82
msgid ""
"Thus, you can use ``self.view`` to get the view, and then use its methods."
msgstr ""

# ca2b1aaa366640d89ee160b2bfe1435c
#: ../develop/plone/views/viewlets.rst:86
msgid "Stock viewlets"
msgstr ""

# d3780e1cfe524c40b0bbf7c99da2701a
#: ../develop/plone/views/viewlets.rst:88
msgid ""
"These can be found in `plone.app.layout.viewlet module "
"<https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/viewlets/configure.zcml>`_."
msgstr ""

# 0e7a97cd468541d58ba578273442cbe8
#: ../develop/plone/views/viewlets.rst:90
msgid ""
"The language selector lives in `plone.app.i18n.locales.browser "
"<https://github.com/plone/plone.app.i18n/blob/master/plone/app/i18n/locales/browser/configure.zcml>`_,"
" but it is a *view*. Don't know why."
msgstr ""

# 7fe00631096840b3afbf317ba13df941
#: ../develop/plone/views/viewlets.rst:94
msgid "Creating a viewlet using Grok"
msgstr ""

# 2133cdae41bc47af9f44f05577c9fc7a
#: ../develop/plone/views/viewlets.rst:96
msgid ""
":doc:`Grok framework </develop/addons/components/grok>` allows you to "
"register a viewlet easily using Python directives."
msgstr ""

# 6a8ab9d447d64b5692a4ed325e4736da
#: ../develop/plone/views/viewlets.rst:98
msgid ""
"It is recommended that you use :doc:`Dexterity ZopeSkel add-on product code "
"skeleton </develop/addons/paste>` where you add this code."
msgstr ""

# cef3665cc00948ed98bfd0d931e5c639
#: ../develop/plone/views/viewlets.rst:101
msgid "Create *yourcomponent.app/yourcomponent/app/browser/viewlets.py*::"
msgstr ""

# e5a517899245457f93a9e95dec0ecbb5
#: ../develop/plone/views/viewlets.rst:145
msgid ""
"Then create folder ``yourcomponent.app/yourcomponent/app/browser/templates``"
" where you add the related ``javascripthead.pt``:"
msgstr ""

# 9031a43be50e4463ad2777a9825c81cd
#: ../develop/plone/views/viewlets.rst:155
msgid ""
"http://vincentfretin.ecreall.com/articles/using-five.grok-to-add-viewlets"
msgstr ""

# 20b9b9ebf4a14896a12fc3db25be9768
#: ../develop/plone/views/viewlets.rst:158
msgid "Creating a viewlet manager"
msgstr ""

# 789ba8c6f2974f849a4200be97ad0f27
#: ../develop/plone/views/viewlets.rst:160
msgid ""
"Viewlet managers contain viewlets. A viewlet manager is itself a Zope 3 "
"interface which contains an OrdereredViewletManager implementation. "
"OrderedViewletManagers store the order of the viewlets in the site database "
"and provide the fancy /@@manage-viewlets output."
msgstr ""

# 86d34a6d868e4d09bfd7117dc0ae40a0
#: ../develop/plone/views/viewlets.rst:165
msgid ""
"A viewlet manager can be rendered in a page template code using the "
"following expression::"
msgstr ""

# 052a2f898e8f423e9b2d261719e09301
#: ../develop/plone/views/viewlets.rst:169
msgid ""
"Each viewlet manager allows you to shuffle viewlets inside a viewlet "
"manager. This is done by using ``/@@manage-viewlets`` view. These settings "
"are stored in the site database, so a good practice is to export "
"``viewlets.xml`` using ``portal_setup`` and then include the necessary bits "
"of this ``viewlets.xml`` with your add-on installer so that when your add-on"
" is installed, the viewlet configuration is changed accordingly."
msgstr ""

# 2867f2d0dc5e48cbb2cf5fd8a293a3c5
#: ../develop/plone/views/viewlets.rst:178
msgid ""
"You cannot move viewlets between viewlet managers. I know it sucks, but life"
" is hard and Plone is harder. Hide viewlets in one manager using /@@manage-"
"viewlets and viewlets.xml export, then re-register the same viewlet to a new"
" manager."
msgstr ""

# c1ccca5f1515462295db5d8b4b1cc1d2
#: ../develop/plone/views/viewlets.rst:183
msgid ""
"Viewlet managers are based on `zope.viewlet.manager.ViewletManager "
"<http://svn.zope.org/zope.viewlet/trunk/src/zope/viewlet/manager.py?rev=113069&view=auto>`_"
" and `plone.app.viewletmanager.manager.OrderedViewletManager "
"<https://github.com/plone/plone.app.viewletmanager/blob/master/plone/app/viewletmanager/manager.py>`_."
msgstr ""

# 2fa7be80df5e48f081abd903c6e4c896
#: ../develop/plone/views/viewlets.rst:188
msgid ""
"http://grok.zope.org/doc/current/reference/components.html?highlight=viewlet#grok.ViewletManager"
msgstr ""

# c0f62a0e77284dc0910349018f2871fe
#: ../develop/plone/views/viewlets.rst:190
msgid ""
"http://svn.zope.org/zope.viewlet/trunk/src/zope/viewlet/viewlet.py?rev=113069&view=auto"
msgstr ""

# bc643e4cd98f4b5aa89abe8b7745e879
#: ../develop/plone/views/viewlets.rst:192
msgid ""
"http://plone.org/documentation/manual/theme-"
"reference/elements/viewletmanager/anatomy/"
msgstr ""

# 7f3dddc694d5477786fe689b3c763008
#: ../develop/plone/views/viewlets.rst:197
msgid "Creating a viewlet manager: Grok way"
msgstr ""

# fce69109511f4784b087ee631b55ab59
#: ../develop/plone/views/viewlets.rst:199
msgid ""
"Recommended if you want to keep the number of files and lines of XML and "
"Python to a minimum."
msgstr ""

# ba833f7aa21b43e7b8e2517f6ef76666
#: ../develop/plone/views/viewlets.rst:201
msgid "An example here for related Python code::"
msgstr ""

# 7a3d07e1c9244a7e9bedd579f77ff95d
#: ../develop/plone/views/viewlets.rst:206
msgid "Creating a viewlet manager: ZCML way"
msgstr ""

# 6ec17afd6e1e432cac168878fb222a78
#: ../develop/plone/views/viewlets.rst:208
msgid "For those who want to write XML."
msgstr ""

# 439175ef70944ff2b621f9811eedf21a
#: ../develop/plone/views/viewlets.rst:210
msgid ""
"Usually viewlet managers are dummy interfaces and the actual implementation "
"comes from ``plone.app.viewletmanager.manager.OrderedViewletManager``."
msgstr ""

# 4fc9be2b65034ec8910f8f64233b3d37
#: ../develop/plone/views/viewlets.rst:213
msgid ""
"In this example we put two viewlets in a new viewlet manager so that we can "
"properly CSS float then and close this float."
msgstr ""

# b08a4b5363c44bd4a1979c2e78c5ebde
#: ../develop/plone/views/viewlets.rst:218
msgid ""
"This example uses extensive Python module nesting: "
"plonetheme.yourtheme.browser.viewlets is just too deep. You really don't "
"need to do some many levels, but the orignal plone3_theme paster templates "
"do it in bad way. One of Python golden rules is that flat is better than "
"nested. You can just dump everything to the root of your "
"plonetheme.yourtheme package."
msgstr ""

# c9d83f49fd484a3980283b580f55cb7f
#: ../develop/plone/views/viewlets.rst:224
msgid "In your ``browser/viewlets/manager.py`` or similar file add::"
msgstr ""

# 8f1bf39c22bf4c68a669ce88da6aa428
#: ../develop/plone/views/viewlets.rst:235
msgid "Then in ``browser/viewlets/configure.zcml``::"
msgstr ""

# 731f6aa4797941c080b121f817d84391
#: ../develop/plone/views/viewlets.rst:245
msgid ""
"Optionally you can include a template which renders some wrapping HTML "
"around viewlets. *browser/viewlets/headerbottomviewletmanager.pt*::"
msgstr ""

# dcc536dfe09347449991397bebcc5602
#: ../develop/plone/views/viewlets.rst:263
msgid ""
"And then re-register some stock viewlets against your new viewlet manager in"
" *browser/viewlets/configure.zcml*::"
msgstr ""

# 2c506667496b47c3a665c33c451f741c
#: ../develop/plone/views/viewlets.rst:288
msgid ""
"Now, we need to render our viewlet manager somehow. One place to do it is in"
" a ``main_template.pt``, but because we need to add this HTML output to a "
"header section which is produced by *another* viewlet manager, we need to "
"create a new viewlet just for rendering our viewlet manager. Yo dawg - we "
"put viewlets in your viewlets so you can render viewlets!"
msgstr ""

# cf3cd16631594e0886db5353be67444b
#: ../develop/plone/views/viewlets.rst:293
msgid "``browser/viewlets/headerbottom.pt``::"
msgstr ""

# b96d53ea7d5e4155877736874086ce21
#: ../develop/plone/views/viewlets.rst:300
msgid ""
"Only six files needed to change a bit of HTML code - welcome to the land of "
"productivity! On the top of this you also need to create a new "
"``viewlets.xml`` export for your theme."
msgstr ""

# 6cbccbc7089a4fd0a211e80fd0becec0
#: ../develop/plone/views/viewlets.rst:303
msgid ""
"After all this ZCML typing you probably should just look the grok example "
"above."
msgstr ""

# 13fcf31d170d476f9cab860cb08d6b09
#: ../develop/plone/views/viewlets.rst:307
msgid ""
"http://plone.org/documentation/manual/theme-"
"reference/elements/viewletmanager/override"
msgstr ""

# fe3e4bbfe0c24ef2b07230b60a052702
#: ../develop/plone/views/viewlets.rst:310
msgid "Viewlet behavior"
msgstr ""

# 9d49299473be464c890fe2ec7185c2fc
#: ../develop/plone/views/viewlets.rst:312
msgid "Viewlets have two important methods"
msgstr ""

# 26f6b5981d3d4766831f49dd5ded0cdc
#: ../develop/plone/views/viewlets.rst:314
msgid "update() - set up all variables"
msgstr ""

# 1a2ccb4d23174df7a56b54d268b725a3
#: ../develop/plone/views/viewlets.rst:316
msgid ""
"render() - generate the resulting HTML code by evaluating the template with "
"context variables set up in update()"
msgstr ""

# 8a43dccd0ba6449e97afaccf098aef37
#: ../develop/plone/views/viewlets.rst:322
msgid ""
"http://svn.zope.org/zope.contentprovider/trunk/src/zope/contentprovider/interfaces.py?rev=98212&view=auto"
msgstr ""

# 0a822d430bcd42b788b96868d5b8abff
#: ../develop/plone/views/viewlets.rst:324
msgid ""
"https://github.com/plone/plone.app.layout/blob/master/plone/app/layout/viewlets/common.py"
msgstr ""

# 003e078f223c49089a9cc282b63a3879
#: ../develop/plone/views/viewlets.rst:328
msgid "Creating a viewlet using Python code and ZCML"
msgstr ""

# 613a07c18cef4db8b1af7b851fd93b07
#: ../develop/plone/views/viewlets.rst:330
msgid ""
"Here is an example code which extends an existing Plone base viewlet (found "
"from plone.app.layout.viewlets.base package) and then puts this viewlet to a"
" one of viewlet managers using :doc:`ZCML "
"</develop/addons/components/zcml>`."
msgstr ""

# 4c7dfa2f62c24e77bc6a7e70b90671b7
#: ../develop/plone/views/viewlets.rst:333
msgid "Example Python code for viewlets.py::"
msgstr ""

# 301aeecbdca34f4da7d972f2a6ba5c8b
#: ../develop/plone/views/viewlets.rst:395
msgid ""
"Then a sample page template (like.pt). You can use TAL template variable "
"*view* to refer to your viewlet class instance::"
msgstr ""

# 92ab549e4bac4c189c937e855ea141a0
#: ../develop/plone/views/viewlets.rst:405
msgid "Registering a viewlet using ZCML"
msgstr ""

# 39ec78a0993d49c5bfdd4e234d789f03
#: ../develop/plone/views/viewlets.rst:407
msgid ""
"Example configuration ZCML snippets below. You usually <viewlet> to "
"*browser/configure.zcml* folder."
msgstr ""

# 5863b5c09ee4401e9401c34c4986c237
#: ../develop/plone/views/viewlets.rst:429
msgid "Conditionally rendering viewlets"
msgstr ""

# 66fcdb1e3751412e82cad9c3ded6e252
#: ../develop/plone/views/viewlets.rst:431
msgid "There are two primary methods to render viewlets only on some pages"
msgstr ""

# a23386f9a3c74326805137da8ff5d731
#: ../develop/plone/views/viewlets.rst:433
msgid ""
"Register viewlet against some marker interface or content type class - the "
"viewlet is rendered on this content type only. You can use :doc:`dynamic "
"marker interfaces </develop/addons/components/interfaces>` to toggle "
"interface on some individual pages through ZMI"
msgstr ""

# e45aa40098934f46a69f9723b0dad1c3
#: ../develop/plone/views/viewlets.rst:438
msgid "Hard-code a condition to your viewlet in Python code."
msgstr ""

# 59cca45998c94d0db15cab3a211b5b47
#: ../develop/plone/views/viewlets.rst:440
msgid ""
"Below is an example of overriding a render() method to conditionally render "
"your viewlet using Grok viewlets."
msgstr ""

# c2e1a414b65e400f8135acd83a342bc4
#: ../develop/plone/views/viewlets.rst:512
msgid ""
"Below is an example of overriding a render() method to conditionally render "
"your viewlet using Zope 3 viewlets::"
msgstr ""

# 99d262cccfad41769e92d4d608bd69a4
#: ../develop/plone/views/viewlets.rst:562
msgid "Rendering viewlet by name"
msgstr ""

# 77dc5311c14b4e66919ad05ecc1f300b
#: ../develop/plone/views/viewlets.rst:564
msgid ""
"Below is a complex example how to expose viewlets without going through a "
"viewlet manager."
msgstr ""

# e8b7a066858b49c6bbbbf4da8a17f56b
#: ../develop/plone/views/viewlets.rst:566
msgid ""
"See `collective.fastview "
"<http://svn.plone.org/svn/collective/collective.fastview/trunk/>`_ for "
"updates and more information."
msgstr ""

# 7ca550289f4643e9a154d5fb0c80ec7c
#: ../develop/plone/views/viewlets.rst:664
msgid "Rendering viewlets with accurate layout"
msgstr ""

# b61d6feadb664a4d837ea9cebc2c671e
#: ../develop/plone/views/viewlets.rst:666
msgid ""
"Default viewlet managers render viewlets as HTML code string concatenation, "
"in the order of appearance. This is unsuitable to build complex layouts."
msgstr ""

# 2d5073bd584e4cc9a67141225ceeeb69
#: ../develop/plone/views/viewlets.rst:669
msgid ""
"Below is an example which defines master viewlet *HeaderViewlet* which will "
"place other viewlets into the manually tuned HTML markup below."
msgstr ""

# 507521e2ac17475591a191abfb8cf38f
#: ../develop/plone/views/viewlets.rst:672
msgid "theme/browser/header.py::"
msgstr ""

# 6696b1da33fd4401a1737eb90156d568
#: ../develop/plone/views/viewlets.rst:744
msgid "theme/browser/header_items.pt"
msgstr ""

# 5d2f526c5b404768b3bb4152ff6a6423
#: ../develop/plone/views/viewlets.rst:765
msgid "theme/browser/configure.zcml"
msgstr ""

# 6615292c71e249db90c14f5c74b67448
#: ../develop/plone/views/viewlets.rst:839
msgid "theme/browser/templates/portal_header.pt"
msgstr ""

# 578784bcb57a4691b8106b0578d8a05a
#: ../develop/plone/views/viewlets.rst:847
msgid "theme/browser/interfaces.py code::"
msgstr ""

# 79a92691994b417e94f9beb8f65f5f3b
#: ../develop/plone/views/viewlets.rst:864
msgid ""
"We need to create this common.py file so we can tell Plone to render our "
"custom templates for these viewlets. Without this piece in place, our "
"viewlets will render with Plone defaults."
msgstr ""

# 4ce7f6bc31a14d749f57bbf94f75033a
#: ../develop/plone/views/viewlets.rst:867
msgid "theme/browser/common.py code::"
msgstr ""

# e3f4899fd9e147a0932338adc0264946
#: ../develop/plone/views/viewlets.rst:886
msgid "Viewlets for one page only"
msgstr ""

# c0fc34421e044a98be1a5f6e2ae293a3
#: ../develop/plone/views/viewlets.rst:888
msgid ""
"Viewlets can be registered to one special page only using a marker "
"interface. This allow loading a page specific CSS files."
msgstr ""

# b0f9eda396ed4c7ca4168bd399daa11e
#: ../develop/plone/views/viewlets.rst:892
msgid ""
"`How to get a different look for some pages of a plone-site "
"<http://www.starzel.de/blog/how-to-get-a-different-look-for-some-pages-of-a"
"-plone-site>`_"
msgstr ""

# 6baafc3754a94c8aac81c707fe7be965
#: ../develop/plone/views/viewlets.rst:896
msgid "<head> viewlets"
msgstr ""

# 9cf37a6606064f3b9bf34301f37361b1
#: ../develop/plone/views/viewlets.rst:898
msgid ""
"You can register custom Javascript or CSS files to HTML <head> section using"
" viewlets."
msgstr ""

# cff34ff86a3b4eaab321db12ad0b10aa
#: ../develop/plone/views/viewlets.rst:900
msgid ""
"Below is an head.pt which will be injected in <head>. This examples shows "
"how to dynamically generate ``<script>`` elements. Example is taken from "
"`mfabrik.like add-on "
"<https://svn.plone.org/svn/collective/mfabrik.like/trunk>`_."
msgstr ""

# 97a2eecdc16f475ea2a08877be6e5401
#: ../develop/plone/views/viewlets.rst:908
msgid ""
"Then you register it against viewlet manager "
"``plone.app.layout.viewlets.interfaces.IHtmlHead``  in ``configure.zcml``"
msgstr ""

# 75e4ac3b1071465aa8ee6c68f504232f
#: ../develop/plone/views/viewlets.rst:921
msgid "viewlet.py code::"
msgstr ""

# 0d42d48026c64ceabb824f69c467c691
#: ../develop/plone/views/viewlets.rst:961
msgid "Finding viewlets programmatically"
msgstr ""

# b774e906435f44b4befb5e474b6e4f73
#: ../develop/plone/views/viewlets.rst:963
msgid ""
"Occasionaly, you may need to get hold of your viewlets in python code, "
"perhaps in tests.  Since the availability of a viewlet is ultimately "
"controlled by the viewlet manager to which it has been registered, using "
"that manager is a good way to go"
msgstr ""

# 81a940b7a2174a1896cdb6ee2148c2c5
#: ../develop/plone/views/viewlets.rst:1005
msgid ""
"Since it is possible to register a viewlet for a specific content type and "
"for a browser layer, you may also need to use these elements in looking up "
"your viewlet"
msgstr ""

# 951754456101479c948ad6cb18833226
#: ../develop/plone/views/viewlets.rst:1045
msgid "Poking viewlet registrations programmatically"
msgstr ""

# 61df242be7c745e0970ba54f76a61ae1
#: ../develop/plone/views/viewlets.rst:1047
msgid ""
"Below is an example how one can poke viewlets registration for a Plone site."
msgstr ""
